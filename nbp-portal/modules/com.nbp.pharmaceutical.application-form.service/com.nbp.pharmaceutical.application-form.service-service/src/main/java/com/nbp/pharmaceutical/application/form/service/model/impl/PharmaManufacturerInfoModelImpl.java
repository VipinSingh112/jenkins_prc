/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.pharmaceutical.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.pharmaceutical.application.form.service.model.PharmaManufacturerInfo;
import com.nbp.pharmaceutical.application.form.service.model.PharmaManufacturerInfoModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the PharmaManufacturerInfo service. Represents a row in the &quot;nbp_pharma_manufacturer&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>PharmaManufacturerInfoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PharmaManufacturerInfoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PharmaManufacturerInfoImpl
 * @generated
 */
@JSON(strict = true)
public class PharmaManufacturerInfoModelImpl
	extends BaseModelImpl<PharmaManufacturerInfo>
	implements PharmaManufacturerInfoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a pharma manufacturer info model instance should use the <code>PharmaManufacturerInfo</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_pharma_manufacturer";

	public static final Object[][] TABLE_COLUMNS = {
		{"pharmaManufacturerInfoId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP},
		{"pharmaDrugManufacturerName", Types.VARCHAR},
		{"pharmaDrugManufacturerAdd", Types.VARCHAR},
		{"pharmaDrugDeisgnation", Types.VARCHAR},
		{"pharmaMarketAuthName", Types.VARCHAR},
		{"pharmaMarketAuthAddress", Types.VARCHAR},
		{"pharmaReguOfficerName", Types.VARCHAR},
		{"pharmaReguOfficerContact", Types.VARCHAR},
		{"pharmaDrugApplicName", Types.VARCHAR},
		{"pharmaDrugApplicAddress", Types.VARCHAR},
		{"pharmaLocalReprName", Types.VARCHAR},
		{"pharmaLocalReprContact", Types.VARCHAR},
		{"pharmaLocalReprAdd", Types.VARCHAR},
		{"pharmaLocalDistName", Types.VARCHAR},
		{"pharmaLocalDistAddress", Types.VARCHAR},
		{"pharmaLocalDistContact", Types.VARCHAR},
		{"pharmaApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("pharmaManufacturerInfoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("pharmaDrugManufacturerName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pharmaDrugManufacturerAdd", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pharmaDrugDeisgnation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pharmaMarketAuthName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pharmaMarketAuthAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pharmaReguOfficerName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pharmaReguOfficerContact", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pharmaDrugApplicName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pharmaDrugApplicAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pharmaLocalReprName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pharmaLocalReprContact", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pharmaLocalReprAdd", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pharmaLocalDistName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pharmaLocalDistAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pharmaLocalDistContact", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pharmaApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_pharma_manufacturer (pharmaManufacturerInfoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,pharmaDrugManufacturerName VARCHAR(200) null,pharmaDrugManufacturerAdd VARCHAR(500) null,pharmaDrugDeisgnation VARCHAR(75) null,pharmaMarketAuthName VARCHAR(200) null,pharmaMarketAuthAddress VARCHAR(500) null,pharmaReguOfficerName VARCHAR(200) null,pharmaReguOfficerContact VARCHAR(75) null,pharmaDrugApplicName VARCHAR(200) null,pharmaDrugApplicAddress VARCHAR(500) null,pharmaLocalReprName VARCHAR(200) null,pharmaLocalReprContact VARCHAR(75) null,pharmaLocalReprAdd VARCHAR(500) null,pharmaLocalDistName VARCHAR(200) null,pharmaLocalDistAddress VARCHAR(500) null,pharmaLocalDistContact VARCHAR(75) null,pharmaApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_pharma_manufacturer";

	public static final String ORDER_BY_JPQL =
		" ORDER BY pharmaManufacturerInfo.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_pharma_manufacturer.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PHARMAAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public PharmaManufacturerInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _pharmaManufacturerInfoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPharmaManufacturerInfoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _pharmaManufacturerInfoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PharmaManufacturerInfo.class;
	}

	@Override
	public String getModelClassName() {
		return PharmaManufacturerInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<PharmaManufacturerInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<PharmaManufacturerInfo, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<PharmaManufacturerInfo, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((PharmaManufacturerInfo)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<PharmaManufacturerInfo, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<PharmaManufacturerInfo, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(PharmaManufacturerInfo)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<PharmaManufacturerInfo, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<PharmaManufacturerInfo, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<PharmaManufacturerInfo, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<PharmaManufacturerInfo, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<PharmaManufacturerInfo, Object>>();

			attributeGetterFunctions.put(
				"pharmaManufacturerInfoId",
				PharmaManufacturerInfo::getPharmaManufacturerInfoId);
			attributeGetterFunctions.put(
				"groupId", PharmaManufacturerInfo::getGroupId);
			attributeGetterFunctions.put(
				"companyId", PharmaManufacturerInfo::getCompanyId);
			attributeGetterFunctions.put(
				"userId", PharmaManufacturerInfo::getUserId);
			attributeGetterFunctions.put(
				"userName", PharmaManufacturerInfo::getUserName);
			attributeGetterFunctions.put(
				"createDate", PharmaManufacturerInfo::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", PharmaManufacturerInfo::getModifiedDate);
			attributeGetterFunctions.put(
				"pharmaDrugManufacturerName",
				PharmaManufacturerInfo::getPharmaDrugManufacturerName);
			attributeGetterFunctions.put(
				"pharmaDrugManufacturerAdd",
				PharmaManufacturerInfo::getPharmaDrugManufacturerAdd);
			attributeGetterFunctions.put(
				"pharmaDrugDeisgnation",
				PharmaManufacturerInfo::getPharmaDrugDeisgnation);
			attributeGetterFunctions.put(
				"pharmaMarketAuthName",
				PharmaManufacturerInfo::getPharmaMarketAuthName);
			attributeGetterFunctions.put(
				"pharmaMarketAuthAddress",
				PharmaManufacturerInfo::getPharmaMarketAuthAddress);
			attributeGetterFunctions.put(
				"pharmaReguOfficerName",
				PharmaManufacturerInfo::getPharmaReguOfficerName);
			attributeGetterFunctions.put(
				"pharmaReguOfficerContact",
				PharmaManufacturerInfo::getPharmaReguOfficerContact);
			attributeGetterFunctions.put(
				"pharmaDrugApplicName",
				PharmaManufacturerInfo::getPharmaDrugApplicName);
			attributeGetterFunctions.put(
				"pharmaDrugApplicAddress",
				PharmaManufacturerInfo::getPharmaDrugApplicAddress);
			attributeGetterFunctions.put(
				"pharmaLocalReprName",
				PharmaManufacturerInfo::getPharmaLocalReprName);
			attributeGetterFunctions.put(
				"pharmaLocalReprContact",
				PharmaManufacturerInfo::getPharmaLocalReprContact);
			attributeGetterFunctions.put(
				"pharmaLocalReprAdd",
				PharmaManufacturerInfo::getPharmaLocalReprAdd);
			attributeGetterFunctions.put(
				"pharmaLocalDistName",
				PharmaManufacturerInfo::getPharmaLocalDistName);
			attributeGetterFunctions.put(
				"pharmaLocalDistAddress",
				PharmaManufacturerInfo::getPharmaLocalDistAddress);
			attributeGetterFunctions.put(
				"pharmaLocalDistContact",
				PharmaManufacturerInfo::getPharmaLocalDistContact);
			attributeGetterFunctions.put(
				"pharmaApplicationId",
				PharmaManufacturerInfo::getPharmaApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<PharmaManufacturerInfo, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<PharmaManufacturerInfo, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<PharmaManufacturerInfo, ?>>();

			attributeSetterBiConsumers.put(
				"pharmaManufacturerInfoId",
				(BiConsumer<PharmaManufacturerInfo, Long>)
					PharmaManufacturerInfo::setPharmaManufacturerInfoId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<PharmaManufacturerInfo, Long>)
					PharmaManufacturerInfo::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<PharmaManufacturerInfo, Long>)
					PharmaManufacturerInfo::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<PharmaManufacturerInfo, Long>)
					PharmaManufacturerInfo::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<PharmaManufacturerInfo, String>)
					PharmaManufacturerInfo::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<PharmaManufacturerInfo, Date>)
					PharmaManufacturerInfo::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<PharmaManufacturerInfo, Date>)
					PharmaManufacturerInfo::setModifiedDate);
			attributeSetterBiConsumers.put(
				"pharmaDrugManufacturerName",
				(BiConsumer<PharmaManufacturerInfo, String>)
					PharmaManufacturerInfo::setPharmaDrugManufacturerName);
			attributeSetterBiConsumers.put(
				"pharmaDrugManufacturerAdd",
				(BiConsumer<PharmaManufacturerInfo, String>)
					PharmaManufacturerInfo::setPharmaDrugManufacturerAdd);
			attributeSetterBiConsumers.put(
				"pharmaDrugDeisgnation",
				(BiConsumer<PharmaManufacturerInfo, String>)
					PharmaManufacturerInfo::setPharmaDrugDeisgnation);
			attributeSetterBiConsumers.put(
				"pharmaMarketAuthName",
				(BiConsumer<PharmaManufacturerInfo, String>)
					PharmaManufacturerInfo::setPharmaMarketAuthName);
			attributeSetterBiConsumers.put(
				"pharmaMarketAuthAddress",
				(BiConsumer<PharmaManufacturerInfo, String>)
					PharmaManufacturerInfo::setPharmaMarketAuthAddress);
			attributeSetterBiConsumers.put(
				"pharmaReguOfficerName",
				(BiConsumer<PharmaManufacturerInfo, String>)
					PharmaManufacturerInfo::setPharmaReguOfficerName);
			attributeSetterBiConsumers.put(
				"pharmaReguOfficerContact",
				(BiConsumer<PharmaManufacturerInfo, String>)
					PharmaManufacturerInfo::setPharmaReguOfficerContact);
			attributeSetterBiConsumers.put(
				"pharmaDrugApplicName",
				(BiConsumer<PharmaManufacturerInfo, String>)
					PharmaManufacturerInfo::setPharmaDrugApplicName);
			attributeSetterBiConsumers.put(
				"pharmaDrugApplicAddress",
				(BiConsumer<PharmaManufacturerInfo, String>)
					PharmaManufacturerInfo::setPharmaDrugApplicAddress);
			attributeSetterBiConsumers.put(
				"pharmaLocalReprName",
				(BiConsumer<PharmaManufacturerInfo, String>)
					PharmaManufacturerInfo::setPharmaLocalReprName);
			attributeSetterBiConsumers.put(
				"pharmaLocalReprContact",
				(BiConsumer<PharmaManufacturerInfo, String>)
					PharmaManufacturerInfo::setPharmaLocalReprContact);
			attributeSetterBiConsumers.put(
				"pharmaLocalReprAdd",
				(BiConsumer<PharmaManufacturerInfo, String>)
					PharmaManufacturerInfo::setPharmaLocalReprAdd);
			attributeSetterBiConsumers.put(
				"pharmaLocalDistName",
				(BiConsumer<PharmaManufacturerInfo, String>)
					PharmaManufacturerInfo::setPharmaLocalDistName);
			attributeSetterBiConsumers.put(
				"pharmaLocalDistAddress",
				(BiConsumer<PharmaManufacturerInfo, String>)
					PharmaManufacturerInfo::setPharmaLocalDistAddress);
			attributeSetterBiConsumers.put(
				"pharmaLocalDistContact",
				(BiConsumer<PharmaManufacturerInfo, String>)
					PharmaManufacturerInfo::setPharmaLocalDistContact);
			attributeSetterBiConsumers.put(
				"pharmaApplicationId",
				(BiConsumer<PharmaManufacturerInfo, Long>)
					PharmaManufacturerInfo::setPharmaApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getPharmaManufacturerInfoId() {
		return _pharmaManufacturerInfoId;
	}

	@Override
	public void setPharmaManufacturerInfoId(long pharmaManufacturerInfoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pharmaManufacturerInfoId = pharmaManufacturerInfoId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getPharmaDrugManufacturerName() {
		if (_pharmaDrugManufacturerName == null) {
			return "";
		}
		else {
			return _pharmaDrugManufacturerName;
		}
	}

	@Override
	public void setPharmaDrugManufacturerName(
		String pharmaDrugManufacturerName) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pharmaDrugManufacturerName = pharmaDrugManufacturerName;
	}

	@JSON
	@Override
	public String getPharmaDrugManufacturerAdd() {
		if (_pharmaDrugManufacturerAdd == null) {
			return "";
		}
		else {
			return _pharmaDrugManufacturerAdd;
		}
	}

	@Override
	public void setPharmaDrugManufacturerAdd(String pharmaDrugManufacturerAdd) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pharmaDrugManufacturerAdd = pharmaDrugManufacturerAdd;
	}

	@JSON
	@Override
	public String getPharmaDrugDeisgnation() {
		if (_pharmaDrugDeisgnation == null) {
			return "";
		}
		else {
			return _pharmaDrugDeisgnation;
		}
	}

	@Override
	public void setPharmaDrugDeisgnation(String pharmaDrugDeisgnation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pharmaDrugDeisgnation = pharmaDrugDeisgnation;
	}

	@JSON
	@Override
	public String getPharmaMarketAuthName() {
		if (_pharmaMarketAuthName == null) {
			return "";
		}
		else {
			return _pharmaMarketAuthName;
		}
	}

	@Override
	public void setPharmaMarketAuthName(String pharmaMarketAuthName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pharmaMarketAuthName = pharmaMarketAuthName;
	}

	@JSON
	@Override
	public String getPharmaMarketAuthAddress() {
		if (_pharmaMarketAuthAddress == null) {
			return "";
		}
		else {
			return _pharmaMarketAuthAddress;
		}
	}

	@Override
	public void setPharmaMarketAuthAddress(String pharmaMarketAuthAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pharmaMarketAuthAddress = pharmaMarketAuthAddress;
	}

	@JSON
	@Override
	public String getPharmaReguOfficerName() {
		if (_pharmaReguOfficerName == null) {
			return "";
		}
		else {
			return _pharmaReguOfficerName;
		}
	}

	@Override
	public void setPharmaReguOfficerName(String pharmaReguOfficerName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pharmaReguOfficerName = pharmaReguOfficerName;
	}

	@JSON
	@Override
	public String getPharmaReguOfficerContact() {
		if (_pharmaReguOfficerContact == null) {
			return "";
		}
		else {
			return _pharmaReguOfficerContact;
		}
	}

	@Override
	public void setPharmaReguOfficerContact(String pharmaReguOfficerContact) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pharmaReguOfficerContact = pharmaReguOfficerContact;
	}

	@JSON
	@Override
	public String getPharmaDrugApplicName() {
		if (_pharmaDrugApplicName == null) {
			return "";
		}
		else {
			return _pharmaDrugApplicName;
		}
	}

	@Override
	public void setPharmaDrugApplicName(String pharmaDrugApplicName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pharmaDrugApplicName = pharmaDrugApplicName;
	}

	@JSON
	@Override
	public String getPharmaDrugApplicAddress() {
		if (_pharmaDrugApplicAddress == null) {
			return "";
		}
		else {
			return _pharmaDrugApplicAddress;
		}
	}

	@Override
	public void setPharmaDrugApplicAddress(String pharmaDrugApplicAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pharmaDrugApplicAddress = pharmaDrugApplicAddress;
	}

	@JSON
	@Override
	public String getPharmaLocalReprName() {
		if (_pharmaLocalReprName == null) {
			return "";
		}
		else {
			return _pharmaLocalReprName;
		}
	}

	@Override
	public void setPharmaLocalReprName(String pharmaLocalReprName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pharmaLocalReprName = pharmaLocalReprName;
	}

	@JSON
	@Override
	public String getPharmaLocalReprContact() {
		if (_pharmaLocalReprContact == null) {
			return "";
		}
		else {
			return _pharmaLocalReprContact;
		}
	}

	@Override
	public void setPharmaLocalReprContact(String pharmaLocalReprContact) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pharmaLocalReprContact = pharmaLocalReprContact;
	}

	@JSON
	@Override
	public String getPharmaLocalReprAdd() {
		if (_pharmaLocalReprAdd == null) {
			return "";
		}
		else {
			return _pharmaLocalReprAdd;
		}
	}

	@Override
	public void setPharmaLocalReprAdd(String pharmaLocalReprAdd) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pharmaLocalReprAdd = pharmaLocalReprAdd;
	}

	@JSON
	@Override
	public String getPharmaLocalDistName() {
		if (_pharmaLocalDistName == null) {
			return "";
		}
		else {
			return _pharmaLocalDistName;
		}
	}

	@Override
	public void setPharmaLocalDistName(String pharmaLocalDistName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pharmaLocalDistName = pharmaLocalDistName;
	}

	@JSON
	@Override
	public String getPharmaLocalDistAddress() {
		if (_pharmaLocalDistAddress == null) {
			return "";
		}
		else {
			return _pharmaLocalDistAddress;
		}
	}

	@Override
	public void setPharmaLocalDistAddress(String pharmaLocalDistAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pharmaLocalDistAddress = pharmaLocalDistAddress;
	}

	@JSON
	@Override
	public String getPharmaLocalDistContact() {
		if (_pharmaLocalDistContact == null) {
			return "";
		}
		else {
			return _pharmaLocalDistContact;
		}
	}

	@Override
	public void setPharmaLocalDistContact(String pharmaLocalDistContact) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pharmaLocalDistContact = pharmaLocalDistContact;
	}

	@JSON
	@Override
	public long getPharmaApplicationId() {
		return _pharmaApplicationId;
	}

	@Override
	public void setPharmaApplicationId(long pharmaApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pharmaApplicationId = pharmaApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalPharmaApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("pharmaApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), PharmaManufacturerInfo.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PharmaManufacturerInfo toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, PharmaManufacturerInfo>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PharmaManufacturerInfoImpl pharmaManufacturerInfoImpl =
			new PharmaManufacturerInfoImpl();

		pharmaManufacturerInfoImpl.setPharmaManufacturerInfoId(
			getPharmaManufacturerInfoId());
		pharmaManufacturerInfoImpl.setGroupId(getGroupId());
		pharmaManufacturerInfoImpl.setCompanyId(getCompanyId());
		pharmaManufacturerInfoImpl.setUserId(getUserId());
		pharmaManufacturerInfoImpl.setUserName(getUserName());
		pharmaManufacturerInfoImpl.setCreateDate(getCreateDate());
		pharmaManufacturerInfoImpl.setModifiedDate(getModifiedDate());
		pharmaManufacturerInfoImpl.setPharmaDrugManufacturerName(
			getPharmaDrugManufacturerName());
		pharmaManufacturerInfoImpl.setPharmaDrugManufacturerAdd(
			getPharmaDrugManufacturerAdd());
		pharmaManufacturerInfoImpl.setPharmaDrugDeisgnation(
			getPharmaDrugDeisgnation());
		pharmaManufacturerInfoImpl.setPharmaMarketAuthName(
			getPharmaMarketAuthName());
		pharmaManufacturerInfoImpl.setPharmaMarketAuthAddress(
			getPharmaMarketAuthAddress());
		pharmaManufacturerInfoImpl.setPharmaReguOfficerName(
			getPharmaReguOfficerName());
		pharmaManufacturerInfoImpl.setPharmaReguOfficerContact(
			getPharmaReguOfficerContact());
		pharmaManufacturerInfoImpl.setPharmaDrugApplicName(
			getPharmaDrugApplicName());
		pharmaManufacturerInfoImpl.setPharmaDrugApplicAddress(
			getPharmaDrugApplicAddress());
		pharmaManufacturerInfoImpl.setPharmaLocalReprName(
			getPharmaLocalReprName());
		pharmaManufacturerInfoImpl.setPharmaLocalReprContact(
			getPharmaLocalReprContact());
		pharmaManufacturerInfoImpl.setPharmaLocalReprAdd(
			getPharmaLocalReprAdd());
		pharmaManufacturerInfoImpl.setPharmaLocalDistName(
			getPharmaLocalDistName());
		pharmaManufacturerInfoImpl.setPharmaLocalDistAddress(
			getPharmaLocalDistAddress());
		pharmaManufacturerInfoImpl.setPharmaLocalDistContact(
			getPharmaLocalDistContact());
		pharmaManufacturerInfoImpl.setPharmaApplicationId(
			getPharmaApplicationId());

		pharmaManufacturerInfoImpl.resetOriginalValues();

		return pharmaManufacturerInfoImpl;
	}

	@Override
	public PharmaManufacturerInfo cloneWithOriginalValues() {
		PharmaManufacturerInfoImpl pharmaManufacturerInfoImpl =
			new PharmaManufacturerInfoImpl();

		pharmaManufacturerInfoImpl.setPharmaManufacturerInfoId(
			this.<Long>getColumnOriginalValue("pharmaManufacturerInfoId"));
		pharmaManufacturerInfoImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		pharmaManufacturerInfoImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		pharmaManufacturerInfoImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		pharmaManufacturerInfoImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		pharmaManufacturerInfoImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		pharmaManufacturerInfoImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		pharmaManufacturerInfoImpl.setPharmaDrugManufacturerName(
			this.<String>getColumnOriginalValue("pharmaDrugManufacturerName"));
		pharmaManufacturerInfoImpl.setPharmaDrugManufacturerAdd(
			this.<String>getColumnOriginalValue("pharmaDrugManufacturerAdd"));
		pharmaManufacturerInfoImpl.setPharmaDrugDeisgnation(
			this.<String>getColumnOriginalValue("pharmaDrugDeisgnation"));
		pharmaManufacturerInfoImpl.setPharmaMarketAuthName(
			this.<String>getColumnOriginalValue("pharmaMarketAuthName"));
		pharmaManufacturerInfoImpl.setPharmaMarketAuthAddress(
			this.<String>getColumnOriginalValue("pharmaMarketAuthAddress"));
		pharmaManufacturerInfoImpl.setPharmaReguOfficerName(
			this.<String>getColumnOriginalValue("pharmaReguOfficerName"));
		pharmaManufacturerInfoImpl.setPharmaReguOfficerContact(
			this.<String>getColumnOriginalValue("pharmaReguOfficerContact"));
		pharmaManufacturerInfoImpl.setPharmaDrugApplicName(
			this.<String>getColumnOriginalValue("pharmaDrugApplicName"));
		pharmaManufacturerInfoImpl.setPharmaDrugApplicAddress(
			this.<String>getColumnOriginalValue("pharmaDrugApplicAddress"));
		pharmaManufacturerInfoImpl.setPharmaLocalReprName(
			this.<String>getColumnOriginalValue("pharmaLocalReprName"));
		pharmaManufacturerInfoImpl.setPharmaLocalReprContact(
			this.<String>getColumnOriginalValue("pharmaLocalReprContact"));
		pharmaManufacturerInfoImpl.setPharmaLocalReprAdd(
			this.<String>getColumnOriginalValue("pharmaLocalReprAdd"));
		pharmaManufacturerInfoImpl.setPharmaLocalDistName(
			this.<String>getColumnOriginalValue("pharmaLocalDistName"));
		pharmaManufacturerInfoImpl.setPharmaLocalDistAddress(
			this.<String>getColumnOriginalValue("pharmaLocalDistAddress"));
		pharmaManufacturerInfoImpl.setPharmaLocalDistContact(
			this.<String>getColumnOriginalValue("pharmaLocalDistContact"));
		pharmaManufacturerInfoImpl.setPharmaApplicationId(
			this.<Long>getColumnOriginalValue("pharmaApplicationId"));

		return pharmaManufacturerInfoImpl;
	}

	@Override
	public int compareTo(PharmaManufacturerInfo pharmaManufacturerInfo) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), pharmaManufacturerInfo.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof PharmaManufacturerInfo)) {
			return false;
		}

		PharmaManufacturerInfo pharmaManufacturerInfo =
			(PharmaManufacturerInfo)object;

		long primaryKey = pharmaManufacturerInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<PharmaManufacturerInfo> toCacheModel() {
		PharmaManufacturerInfoCacheModel pharmaManufacturerInfoCacheModel =
			new PharmaManufacturerInfoCacheModel();

		pharmaManufacturerInfoCacheModel.pharmaManufacturerInfoId =
			getPharmaManufacturerInfoId();

		pharmaManufacturerInfoCacheModel.groupId = getGroupId();

		pharmaManufacturerInfoCacheModel.companyId = getCompanyId();

		pharmaManufacturerInfoCacheModel.userId = getUserId();

		pharmaManufacturerInfoCacheModel.userName = getUserName();

		String userName = pharmaManufacturerInfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			pharmaManufacturerInfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			pharmaManufacturerInfoCacheModel.createDate = createDate.getTime();
		}
		else {
			pharmaManufacturerInfoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			pharmaManufacturerInfoCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			pharmaManufacturerInfoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		pharmaManufacturerInfoCacheModel.pharmaDrugManufacturerName =
			getPharmaDrugManufacturerName();

		String pharmaDrugManufacturerName =
			pharmaManufacturerInfoCacheModel.pharmaDrugManufacturerName;

		if ((pharmaDrugManufacturerName != null) &&
			(pharmaDrugManufacturerName.length() == 0)) {

			pharmaManufacturerInfoCacheModel.pharmaDrugManufacturerName = null;
		}

		pharmaManufacturerInfoCacheModel.pharmaDrugManufacturerAdd =
			getPharmaDrugManufacturerAdd();

		String pharmaDrugManufacturerAdd =
			pharmaManufacturerInfoCacheModel.pharmaDrugManufacturerAdd;

		if ((pharmaDrugManufacturerAdd != null) &&
			(pharmaDrugManufacturerAdd.length() == 0)) {

			pharmaManufacturerInfoCacheModel.pharmaDrugManufacturerAdd = null;
		}

		pharmaManufacturerInfoCacheModel.pharmaDrugDeisgnation =
			getPharmaDrugDeisgnation();

		String pharmaDrugDeisgnation =
			pharmaManufacturerInfoCacheModel.pharmaDrugDeisgnation;

		if ((pharmaDrugDeisgnation != null) &&
			(pharmaDrugDeisgnation.length() == 0)) {

			pharmaManufacturerInfoCacheModel.pharmaDrugDeisgnation = null;
		}

		pharmaManufacturerInfoCacheModel.pharmaMarketAuthName =
			getPharmaMarketAuthName();

		String pharmaMarketAuthName =
			pharmaManufacturerInfoCacheModel.pharmaMarketAuthName;

		if ((pharmaMarketAuthName != null) &&
			(pharmaMarketAuthName.length() == 0)) {

			pharmaManufacturerInfoCacheModel.pharmaMarketAuthName = null;
		}

		pharmaManufacturerInfoCacheModel.pharmaMarketAuthAddress =
			getPharmaMarketAuthAddress();

		String pharmaMarketAuthAddress =
			pharmaManufacturerInfoCacheModel.pharmaMarketAuthAddress;

		if ((pharmaMarketAuthAddress != null) &&
			(pharmaMarketAuthAddress.length() == 0)) {

			pharmaManufacturerInfoCacheModel.pharmaMarketAuthAddress = null;
		}

		pharmaManufacturerInfoCacheModel.pharmaReguOfficerName =
			getPharmaReguOfficerName();

		String pharmaReguOfficerName =
			pharmaManufacturerInfoCacheModel.pharmaReguOfficerName;

		if ((pharmaReguOfficerName != null) &&
			(pharmaReguOfficerName.length() == 0)) {

			pharmaManufacturerInfoCacheModel.pharmaReguOfficerName = null;
		}

		pharmaManufacturerInfoCacheModel.pharmaReguOfficerContact =
			getPharmaReguOfficerContact();

		String pharmaReguOfficerContact =
			pharmaManufacturerInfoCacheModel.pharmaReguOfficerContact;

		if ((pharmaReguOfficerContact != null) &&
			(pharmaReguOfficerContact.length() == 0)) {

			pharmaManufacturerInfoCacheModel.pharmaReguOfficerContact = null;
		}

		pharmaManufacturerInfoCacheModel.pharmaDrugApplicName =
			getPharmaDrugApplicName();

		String pharmaDrugApplicName =
			pharmaManufacturerInfoCacheModel.pharmaDrugApplicName;

		if ((pharmaDrugApplicName != null) &&
			(pharmaDrugApplicName.length() == 0)) {

			pharmaManufacturerInfoCacheModel.pharmaDrugApplicName = null;
		}

		pharmaManufacturerInfoCacheModel.pharmaDrugApplicAddress =
			getPharmaDrugApplicAddress();

		String pharmaDrugApplicAddress =
			pharmaManufacturerInfoCacheModel.pharmaDrugApplicAddress;

		if ((pharmaDrugApplicAddress != null) &&
			(pharmaDrugApplicAddress.length() == 0)) {

			pharmaManufacturerInfoCacheModel.pharmaDrugApplicAddress = null;
		}

		pharmaManufacturerInfoCacheModel.pharmaLocalReprName =
			getPharmaLocalReprName();

		String pharmaLocalReprName =
			pharmaManufacturerInfoCacheModel.pharmaLocalReprName;

		if ((pharmaLocalReprName != null) &&
			(pharmaLocalReprName.length() == 0)) {

			pharmaManufacturerInfoCacheModel.pharmaLocalReprName = null;
		}

		pharmaManufacturerInfoCacheModel.pharmaLocalReprContact =
			getPharmaLocalReprContact();

		String pharmaLocalReprContact =
			pharmaManufacturerInfoCacheModel.pharmaLocalReprContact;

		if ((pharmaLocalReprContact != null) &&
			(pharmaLocalReprContact.length() == 0)) {

			pharmaManufacturerInfoCacheModel.pharmaLocalReprContact = null;
		}

		pharmaManufacturerInfoCacheModel.pharmaLocalReprAdd =
			getPharmaLocalReprAdd();

		String pharmaLocalReprAdd =
			pharmaManufacturerInfoCacheModel.pharmaLocalReprAdd;

		if ((pharmaLocalReprAdd != null) &&
			(pharmaLocalReprAdd.length() == 0)) {

			pharmaManufacturerInfoCacheModel.pharmaLocalReprAdd = null;
		}

		pharmaManufacturerInfoCacheModel.pharmaLocalDistName =
			getPharmaLocalDistName();

		String pharmaLocalDistName =
			pharmaManufacturerInfoCacheModel.pharmaLocalDistName;

		if ((pharmaLocalDistName != null) &&
			(pharmaLocalDistName.length() == 0)) {

			pharmaManufacturerInfoCacheModel.pharmaLocalDistName = null;
		}

		pharmaManufacturerInfoCacheModel.pharmaLocalDistAddress =
			getPharmaLocalDistAddress();

		String pharmaLocalDistAddress =
			pharmaManufacturerInfoCacheModel.pharmaLocalDistAddress;

		if ((pharmaLocalDistAddress != null) &&
			(pharmaLocalDistAddress.length() == 0)) {

			pharmaManufacturerInfoCacheModel.pharmaLocalDistAddress = null;
		}

		pharmaManufacturerInfoCacheModel.pharmaLocalDistContact =
			getPharmaLocalDistContact();

		String pharmaLocalDistContact =
			pharmaManufacturerInfoCacheModel.pharmaLocalDistContact;

		if ((pharmaLocalDistContact != null) &&
			(pharmaLocalDistContact.length() == 0)) {

			pharmaManufacturerInfoCacheModel.pharmaLocalDistContact = null;
		}

		pharmaManufacturerInfoCacheModel.pharmaApplicationId =
			getPharmaApplicationId();

		return pharmaManufacturerInfoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<PharmaManufacturerInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<PharmaManufacturerInfo, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<PharmaManufacturerInfo, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(PharmaManufacturerInfo)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, PharmaManufacturerInfo>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					PharmaManufacturerInfo.class, ModelWrapper.class);

	}

	private long _pharmaManufacturerInfoId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _pharmaDrugManufacturerName;
	private String _pharmaDrugManufacturerAdd;
	private String _pharmaDrugDeisgnation;
	private String _pharmaMarketAuthName;
	private String _pharmaMarketAuthAddress;
	private String _pharmaReguOfficerName;
	private String _pharmaReguOfficerContact;
	private String _pharmaDrugApplicName;
	private String _pharmaDrugApplicAddress;
	private String _pharmaLocalReprName;
	private String _pharmaLocalReprContact;
	private String _pharmaLocalReprAdd;
	private String _pharmaLocalDistName;
	private String _pharmaLocalDistAddress;
	private String _pharmaLocalDistContact;
	private long _pharmaApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<PharmaManufacturerInfo, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((PharmaManufacturerInfo)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"pharmaManufacturerInfoId", _pharmaManufacturerInfoId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"pharmaDrugManufacturerName", _pharmaDrugManufacturerName);
		_columnOriginalValues.put(
			"pharmaDrugManufacturerAdd", _pharmaDrugManufacturerAdd);
		_columnOriginalValues.put(
			"pharmaDrugDeisgnation", _pharmaDrugDeisgnation);
		_columnOriginalValues.put(
			"pharmaMarketAuthName", _pharmaMarketAuthName);
		_columnOriginalValues.put(
			"pharmaMarketAuthAddress", _pharmaMarketAuthAddress);
		_columnOriginalValues.put(
			"pharmaReguOfficerName", _pharmaReguOfficerName);
		_columnOriginalValues.put(
			"pharmaReguOfficerContact", _pharmaReguOfficerContact);
		_columnOriginalValues.put(
			"pharmaDrugApplicName", _pharmaDrugApplicName);
		_columnOriginalValues.put(
			"pharmaDrugApplicAddress", _pharmaDrugApplicAddress);
		_columnOriginalValues.put("pharmaLocalReprName", _pharmaLocalReprName);
		_columnOriginalValues.put(
			"pharmaLocalReprContact", _pharmaLocalReprContact);
		_columnOriginalValues.put("pharmaLocalReprAdd", _pharmaLocalReprAdd);
		_columnOriginalValues.put("pharmaLocalDistName", _pharmaLocalDistName);
		_columnOriginalValues.put(
			"pharmaLocalDistAddress", _pharmaLocalDistAddress);
		_columnOriginalValues.put(
			"pharmaLocalDistContact", _pharmaLocalDistContact);
		_columnOriginalValues.put("pharmaApplicationId", _pharmaApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("pharmaManufacturerInfoId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("pharmaDrugManufacturerName", 128L);

		columnBitmasks.put("pharmaDrugManufacturerAdd", 256L);

		columnBitmasks.put("pharmaDrugDeisgnation", 512L);

		columnBitmasks.put("pharmaMarketAuthName", 1024L);

		columnBitmasks.put("pharmaMarketAuthAddress", 2048L);

		columnBitmasks.put("pharmaReguOfficerName", 4096L);

		columnBitmasks.put("pharmaReguOfficerContact", 8192L);

		columnBitmasks.put("pharmaDrugApplicName", 16384L);

		columnBitmasks.put("pharmaDrugApplicAddress", 32768L);

		columnBitmasks.put("pharmaLocalReprName", 65536L);

		columnBitmasks.put("pharmaLocalReprContact", 131072L);

		columnBitmasks.put("pharmaLocalReprAdd", 262144L);

		columnBitmasks.put("pharmaLocalDistName", 524288L);

		columnBitmasks.put("pharmaLocalDistAddress", 1048576L);

		columnBitmasks.put("pharmaLocalDistContact", 2097152L);

		columnBitmasks.put("pharmaApplicationId", 4194304L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private PharmaManufacturerInfo _escapedModel;

}