/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.fire.brigade.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.fire.brigade.application.form.service.model.FireBrigadeProEquipmentInfo;
import com.nbp.fire.brigade.application.form.service.model.FireBrigadeProEquipmentInfoModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the FireBrigadeProEquipmentInfo service. Represents a row in the &quot;nbp_fire_pro_equipment_info&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>FireBrigadeProEquipmentInfoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FireBrigadeProEquipmentInfoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see FireBrigadeProEquipmentInfoImpl
 * @generated
 */
@JSON(strict = true)
public class FireBrigadeProEquipmentInfoModelImpl
	extends BaseModelImpl<FireBrigadeProEquipmentInfo>
	implements FireBrigadeProEquipmentInfoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a fire brigade pro equipment info model instance should use the <code>FireBrigadeProEquipmentInfo</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_fire_pro_equipment_info";

	public static final Object[][] TABLE_COLUMNS = {
		{"fireBrigadeProEquipmentInfoId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"equipmentProtectionPre", Types.VARCHAR},
		{"equipmentProtectionOne", Types.VARCHAR},
		{"equipmentProtectionTwo", Types.VARCHAR},
		{"equipmentProtectionThree", Types.VARCHAR},
		{"equipmentProtectionFour", Types.VARCHAR},
		{"equipmentProtectionFive", Types.VARCHAR},
		{"equipmentProtectionSix", Types.VARCHAR},
		{"otherEquipment", Types.VARCHAR},
		{"fireBrigadeApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("fireBrigadeProEquipmentInfoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("equipmentProtectionPre", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("equipmentProtectionOne", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("equipmentProtectionTwo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("equipmentProtectionThree", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("equipmentProtectionFour", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("equipmentProtectionFive", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("equipmentProtectionSix", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("otherEquipment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fireBrigadeApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_fire_pro_equipment_info (fireBrigadeProEquipmentInfoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,equipmentProtectionPre VARCHAR(1000) null,equipmentProtectionOne VARCHAR(75) null,equipmentProtectionTwo VARCHAR(75) null,equipmentProtectionThree VARCHAR(75) null,equipmentProtectionFour VARCHAR(75) null,equipmentProtectionFive VARCHAR(75) null,equipmentProtectionSix VARCHAR(75) null,otherEquipment VARCHAR(75) null,fireBrigadeApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_fire_pro_equipment_info";

	public static final String ORDER_BY_JPQL =
		" ORDER BY fireBrigadeProEquipmentInfo.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_fire_pro_equipment_info.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long FIREBRIGADEAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public FireBrigadeProEquipmentInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _fireBrigadeProEquipmentInfoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setFireBrigadeProEquipmentInfoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _fireBrigadeProEquipmentInfoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return FireBrigadeProEquipmentInfo.class;
	}

	@Override
	public String getModelClassName() {
		return FireBrigadeProEquipmentInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<FireBrigadeProEquipmentInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<FireBrigadeProEquipmentInfo, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<FireBrigadeProEquipmentInfo, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(FireBrigadeProEquipmentInfo)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<FireBrigadeProEquipmentInfo, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<FireBrigadeProEquipmentInfo, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(FireBrigadeProEquipmentInfo)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<FireBrigadeProEquipmentInfo, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<FireBrigadeProEquipmentInfo, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<FireBrigadeProEquipmentInfo, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<FireBrigadeProEquipmentInfo, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String,
						 Function<FireBrigadeProEquipmentInfo, Object>>();

			attributeGetterFunctions.put(
				"fireBrigadeProEquipmentInfoId",
				FireBrigadeProEquipmentInfo::getFireBrigadeProEquipmentInfoId);
			attributeGetterFunctions.put(
				"groupId", FireBrigadeProEquipmentInfo::getGroupId);
			attributeGetterFunctions.put(
				"companyId", FireBrigadeProEquipmentInfo::getCompanyId);
			attributeGetterFunctions.put(
				"userId", FireBrigadeProEquipmentInfo::getUserId);
			attributeGetterFunctions.put(
				"userName", FireBrigadeProEquipmentInfo::getUserName);
			attributeGetterFunctions.put(
				"createDate", FireBrigadeProEquipmentInfo::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", FireBrigadeProEquipmentInfo::getModifiedDate);
			attributeGetterFunctions.put(
				"equipmentProtectionPre",
				FireBrigadeProEquipmentInfo::getEquipmentProtectionPre);
			attributeGetterFunctions.put(
				"equipmentProtectionOne",
				FireBrigadeProEquipmentInfo::getEquipmentProtectionOne);
			attributeGetterFunctions.put(
				"equipmentProtectionTwo",
				FireBrigadeProEquipmentInfo::getEquipmentProtectionTwo);
			attributeGetterFunctions.put(
				"equipmentProtectionThree",
				FireBrigadeProEquipmentInfo::getEquipmentProtectionThree);
			attributeGetterFunctions.put(
				"equipmentProtectionFour",
				FireBrigadeProEquipmentInfo::getEquipmentProtectionFour);
			attributeGetterFunctions.put(
				"equipmentProtectionFive",
				FireBrigadeProEquipmentInfo::getEquipmentProtectionFive);
			attributeGetterFunctions.put(
				"equipmentProtectionSix",
				FireBrigadeProEquipmentInfo::getEquipmentProtectionSix);
			attributeGetterFunctions.put(
				"otherEquipment",
				FireBrigadeProEquipmentInfo::getOtherEquipment);
			attributeGetterFunctions.put(
				"fireBrigadeApplicationId",
				FireBrigadeProEquipmentInfo::getFireBrigadeApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<FireBrigadeProEquipmentInfo, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<FireBrigadeProEquipmentInfo, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<FireBrigadeProEquipmentInfo, ?>>();

			attributeSetterBiConsumers.put(
				"fireBrigadeProEquipmentInfoId",
				(BiConsumer<FireBrigadeProEquipmentInfo, Long>)
					FireBrigadeProEquipmentInfo::
						setFireBrigadeProEquipmentInfoId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<FireBrigadeProEquipmentInfo, Long>)
					FireBrigadeProEquipmentInfo::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<FireBrigadeProEquipmentInfo, Long>)
					FireBrigadeProEquipmentInfo::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<FireBrigadeProEquipmentInfo, Long>)
					FireBrigadeProEquipmentInfo::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<FireBrigadeProEquipmentInfo, String>)
					FireBrigadeProEquipmentInfo::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<FireBrigadeProEquipmentInfo, Date>)
					FireBrigadeProEquipmentInfo::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<FireBrigadeProEquipmentInfo, Date>)
					FireBrigadeProEquipmentInfo::setModifiedDate);
			attributeSetterBiConsumers.put(
				"equipmentProtectionPre",
				(BiConsumer<FireBrigadeProEquipmentInfo, String>)
					FireBrigadeProEquipmentInfo::setEquipmentProtectionPre);
			attributeSetterBiConsumers.put(
				"equipmentProtectionOne",
				(BiConsumer<FireBrigadeProEquipmentInfo, String>)
					FireBrigadeProEquipmentInfo::setEquipmentProtectionOne);
			attributeSetterBiConsumers.put(
				"equipmentProtectionTwo",
				(BiConsumer<FireBrigadeProEquipmentInfo, String>)
					FireBrigadeProEquipmentInfo::setEquipmentProtectionTwo);
			attributeSetterBiConsumers.put(
				"equipmentProtectionThree",
				(BiConsumer<FireBrigadeProEquipmentInfo, String>)
					FireBrigadeProEquipmentInfo::setEquipmentProtectionThree);
			attributeSetterBiConsumers.put(
				"equipmentProtectionFour",
				(BiConsumer<FireBrigadeProEquipmentInfo, String>)
					FireBrigadeProEquipmentInfo::setEquipmentProtectionFour);
			attributeSetterBiConsumers.put(
				"equipmentProtectionFive",
				(BiConsumer<FireBrigadeProEquipmentInfo, String>)
					FireBrigadeProEquipmentInfo::setEquipmentProtectionFive);
			attributeSetterBiConsumers.put(
				"equipmentProtectionSix",
				(BiConsumer<FireBrigadeProEquipmentInfo, String>)
					FireBrigadeProEquipmentInfo::setEquipmentProtectionSix);
			attributeSetterBiConsumers.put(
				"otherEquipment",
				(BiConsumer<FireBrigadeProEquipmentInfo, String>)
					FireBrigadeProEquipmentInfo::setOtherEquipment);
			attributeSetterBiConsumers.put(
				"fireBrigadeApplicationId",
				(BiConsumer<FireBrigadeProEquipmentInfo, Long>)
					FireBrigadeProEquipmentInfo::setFireBrigadeApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getFireBrigadeProEquipmentInfoId() {
		return _fireBrigadeProEquipmentInfoId;
	}

	@Override
	public void setFireBrigadeProEquipmentInfoId(
		long fireBrigadeProEquipmentInfoId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fireBrigadeProEquipmentInfoId = fireBrigadeProEquipmentInfoId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getEquipmentProtectionPre() {
		if (_equipmentProtectionPre == null) {
			return "";
		}
		else {
			return _equipmentProtectionPre;
		}
	}

	@Override
	public void setEquipmentProtectionPre(String equipmentProtectionPre) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_equipmentProtectionPre = equipmentProtectionPre;
	}

	@JSON
	@Override
	public String getEquipmentProtectionOne() {
		if (_equipmentProtectionOne == null) {
			return "";
		}
		else {
			return _equipmentProtectionOne;
		}
	}

	@Override
	public void setEquipmentProtectionOne(String equipmentProtectionOne) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_equipmentProtectionOne = equipmentProtectionOne;
	}

	@JSON
	@Override
	public String getEquipmentProtectionTwo() {
		if (_equipmentProtectionTwo == null) {
			return "";
		}
		else {
			return _equipmentProtectionTwo;
		}
	}

	@Override
	public void setEquipmentProtectionTwo(String equipmentProtectionTwo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_equipmentProtectionTwo = equipmentProtectionTwo;
	}

	@JSON
	@Override
	public String getEquipmentProtectionThree() {
		if (_equipmentProtectionThree == null) {
			return "";
		}
		else {
			return _equipmentProtectionThree;
		}
	}

	@Override
	public void setEquipmentProtectionThree(String equipmentProtectionThree) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_equipmentProtectionThree = equipmentProtectionThree;
	}

	@JSON
	@Override
	public String getEquipmentProtectionFour() {
		if (_equipmentProtectionFour == null) {
			return "";
		}
		else {
			return _equipmentProtectionFour;
		}
	}

	@Override
	public void setEquipmentProtectionFour(String equipmentProtectionFour) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_equipmentProtectionFour = equipmentProtectionFour;
	}

	@JSON
	@Override
	public String getEquipmentProtectionFive() {
		if (_equipmentProtectionFive == null) {
			return "";
		}
		else {
			return _equipmentProtectionFive;
		}
	}

	@Override
	public void setEquipmentProtectionFive(String equipmentProtectionFive) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_equipmentProtectionFive = equipmentProtectionFive;
	}

	@JSON
	@Override
	public String getEquipmentProtectionSix() {
		if (_equipmentProtectionSix == null) {
			return "";
		}
		else {
			return _equipmentProtectionSix;
		}
	}

	@Override
	public void setEquipmentProtectionSix(String equipmentProtectionSix) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_equipmentProtectionSix = equipmentProtectionSix;
	}

	@JSON
	@Override
	public String getOtherEquipment() {
		if (_otherEquipment == null) {
			return "";
		}
		else {
			return _otherEquipment;
		}
	}

	@Override
	public void setOtherEquipment(String otherEquipment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_otherEquipment = otherEquipment;
	}

	@JSON
	@Override
	public long getFireBrigadeApplicationId() {
		return _fireBrigadeApplicationId;
	}

	@Override
	public void setFireBrigadeApplicationId(long fireBrigadeApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fireBrigadeApplicationId = fireBrigadeApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalFireBrigadeApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("fireBrigadeApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), FireBrigadeProEquipmentInfo.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public FireBrigadeProEquipmentInfo toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, FireBrigadeProEquipmentInfo>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		FireBrigadeProEquipmentInfoImpl fireBrigadeProEquipmentInfoImpl =
			new FireBrigadeProEquipmentInfoImpl();

		fireBrigadeProEquipmentInfoImpl.setFireBrigadeProEquipmentInfoId(
			getFireBrigadeProEquipmentInfoId());
		fireBrigadeProEquipmentInfoImpl.setGroupId(getGroupId());
		fireBrigadeProEquipmentInfoImpl.setCompanyId(getCompanyId());
		fireBrigadeProEquipmentInfoImpl.setUserId(getUserId());
		fireBrigadeProEquipmentInfoImpl.setUserName(getUserName());
		fireBrigadeProEquipmentInfoImpl.setCreateDate(getCreateDate());
		fireBrigadeProEquipmentInfoImpl.setModifiedDate(getModifiedDate());
		fireBrigadeProEquipmentInfoImpl.setEquipmentProtectionPre(
			getEquipmentProtectionPre());
		fireBrigadeProEquipmentInfoImpl.setEquipmentProtectionOne(
			getEquipmentProtectionOne());
		fireBrigadeProEquipmentInfoImpl.setEquipmentProtectionTwo(
			getEquipmentProtectionTwo());
		fireBrigadeProEquipmentInfoImpl.setEquipmentProtectionThree(
			getEquipmentProtectionThree());
		fireBrigadeProEquipmentInfoImpl.setEquipmentProtectionFour(
			getEquipmentProtectionFour());
		fireBrigadeProEquipmentInfoImpl.setEquipmentProtectionFive(
			getEquipmentProtectionFive());
		fireBrigadeProEquipmentInfoImpl.setEquipmentProtectionSix(
			getEquipmentProtectionSix());
		fireBrigadeProEquipmentInfoImpl.setOtherEquipment(getOtherEquipment());
		fireBrigadeProEquipmentInfoImpl.setFireBrigadeApplicationId(
			getFireBrigadeApplicationId());

		fireBrigadeProEquipmentInfoImpl.resetOriginalValues();

		return fireBrigadeProEquipmentInfoImpl;
	}

	@Override
	public FireBrigadeProEquipmentInfo cloneWithOriginalValues() {
		FireBrigadeProEquipmentInfoImpl fireBrigadeProEquipmentInfoImpl =
			new FireBrigadeProEquipmentInfoImpl();

		fireBrigadeProEquipmentInfoImpl.setFireBrigadeProEquipmentInfoId(
			this.<Long>getColumnOriginalValue("fireBrigadeProEquipmentInfoId"));
		fireBrigadeProEquipmentInfoImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		fireBrigadeProEquipmentInfoImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		fireBrigadeProEquipmentInfoImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		fireBrigadeProEquipmentInfoImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		fireBrigadeProEquipmentInfoImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		fireBrigadeProEquipmentInfoImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		fireBrigadeProEquipmentInfoImpl.setEquipmentProtectionPre(
			this.<String>getColumnOriginalValue("equipmentProtectionPre"));
		fireBrigadeProEquipmentInfoImpl.setEquipmentProtectionOne(
			this.<String>getColumnOriginalValue("equipmentProtectionOne"));
		fireBrigadeProEquipmentInfoImpl.setEquipmentProtectionTwo(
			this.<String>getColumnOriginalValue("equipmentProtectionTwo"));
		fireBrigadeProEquipmentInfoImpl.setEquipmentProtectionThree(
			this.<String>getColumnOriginalValue("equipmentProtectionThree"));
		fireBrigadeProEquipmentInfoImpl.setEquipmentProtectionFour(
			this.<String>getColumnOriginalValue("equipmentProtectionFour"));
		fireBrigadeProEquipmentInfoImpl.setEquipmentProtectionFive(
			this.<String>getColumnOriginalValue("equipmentProtectionFive"));
		fireBrigadeProEquipmentInfoImpl.setEquipmentProtectionSix(
			this.<String>getColumnOriginalValue("equipmentProtectionSix"));
		fireBrigadeProEquipmentInfoImpl.setOtherEquipment(
			this.<String>getColumnOriginalValue("otherEquipment"));
		fireBrigadeProEquipmentInfoImpl.setFireBrigadeApplicationId(
			this.<Long>getColumnOriginalValue("fireBrigadeApplicationId"));

		return fireBrigadeProEquipmentInfoImpl;
	}

	@Override
	public int compareTo(
		FireBrigadeProEquipmentInfo fireBrigadeProEquipmentInfo) {

		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), fireBrigadeProEquipmentInfo.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof FireBrigadeProEquipmentInfo)) {
			return false;
		}

		FireBrigadeProEquipmentInfo fireBrigadeProEquipmentInfo =
			(FireBrigadeProEquipmentInfo)object;

		long primaryKey = fireBrigadeProEquipmentInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<FireBrigadeProEquipmentInfo> toCacheModel() {
		FireBrigadeProEquipmentInfoCacheModel
			fireBrigadeProEquipmentInfoCacheModel =
				new FireBrigadeProEquipmentInfoCacheModel();

		fireBrigadeProEquipmentInfoCacheModel.fireBrigadeProEquipmentInfoId =
			getFireBrigadeProEquipmentInfoId();

		fireBrigadeProEquipmentInfoCacheModel.groupId = getGroupId();

		fireBrigadeProEquipmentInfoCacheModel.companyId = getCompanyId();

		fireBrigadeProEquipmentInfoCacheModel.userId = getUserId();

		fireBrigadeProEquipmentInfoCacheModel.userName = getUserName();

		String userName = fireBrigadeProEquipmentInfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			fireBrigadeProEquipmentInfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			fireBrigadeProEquipmentInfoCacheModel.createDate =
				createDate.getTime();
		}
		else {
			fireBrigadeProEquipmentInfoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			fireBrigadeProEquipmentInfoCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			fireBrigadeProEquipmentInfoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionPre =
			getEquipmentProtectionPre();

		String equipmentProtectionPre =
			fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionPre;

		if ((equipmentProtectionPre != null) &&
			(equipmentProtectionPre.length() == 0)) {

			fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionPre = null;
		}

		fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionOne =
			getEquipmentProtectionOne();

		String equipmentProtectionOne =
			fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionOne;

		if ((equipmentProtectionOne != null) &&
			(equipmentProtectionOne.length() == 0)) {

			fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionOne = null;
		}

		fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionTwo =
			getEquipmentProtectionTwo();

		String equipmentProtectionTwo =
			fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionTwo;

		if ((equipmentProtectionTwo != null) &&
			(equipmentProtectionTwo.length() == 0)) {

			fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionTwo = null;
		}

		fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionThree =
			getEquipmentProtectionThree();

		String equipmentProtectionThree =
			fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionThree;

		if ((equipmentProtectionThree != null) &&
			(equipmentProtectionThree.length() == 0)) {

			fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionThree =
				null;
		}

		fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionFour =
			getEquipmentProtectionFour();

		String equipmentProtectionFour =
			fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionFour;

		if ((equipmentProtectionFour != null) &&
			(equipmentProtectionFour.length() == 0)) {

			fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionFour =
				null;
		}

		fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionFive =
			getEquipmentProtectionFive();

		String equipmentProtectionFive =
			fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionFive;

		if ((equipmentProtectionFive != null) &&
			(equipmentProtectionFive.length() == 0)) {

			fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionFive =
				null;
		}

		fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionSix =
			getEquipmentProtectionSix();

		String equipmentProtectionSix =
			fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionSix;

		if ((equipmentProtectionSix != null) &&
			(equipmentProtectionSix.length() == 0)) {

			fireBrigadeProEquipmentInfoCacheModel.equipmentProtectionSix = null;
		}

		fireBrigadeProEquipmentInfoCacheModel.otherEquipment =
			getOtherEquipment();

		String otherEquipment =
			fireBrigadeProEquipmentInfoCacheModel.otherEquipment;

		if ((otherEquipment != null) && (otherEquipment.length() == 0)) {
			fireBrigadeProEquipmentInfoCacheModel.otherEquipment = null;
		}

		fireBrigadeProEquipmentInfoCacheModel.fireBrigadeApplicationId =
			getFireBrigadeApplicationId();

		return fireBrigadeProEquipmentInfoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<FireBrigadeProEquipmentInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<FireBrigadeProEquipmentInfo, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<FireBrigadeProEquipmentInfo, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(FireBrigadeProEquipmentInfo)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, FireBrigadeProEquipmentInfo>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						FireBrigadeProEquipmentInfo.class, ModelWrapper.class);

	}

	private long _fireBrigadeProEquipmentInfoId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _equipmentProtectionPre;
	private String _equipmentProtectionOne;
	private String _equipmentProtectionTwo;
	private String _equipmentProtectionThree;
	private String _equipmentProtectionFour;
	private String _equipmentProtectionFive;
	private String _equipmentProtectionSix;
	private String _otherEquipment;
	private long _fireBrigadeApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<FireBrigadeProEquipmentInfo, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((FireBrigadeProEquipmentInfo)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"fireBrigadeProEquipmentInfoId", _fireBrigadeProEquipmentInfoId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"equipmentProtectionPre", _equipmentProtectionPre);
		_columnOriginalValues.put(
			"equipmentProtectionOne", _equipmentProtectionOne);
		_columnOriginalValues.put(
			"equipmentProtectionTwo", _equipmentProtectionTwo);
		_columnOriginalValues.put(
			"equipmentProtectionThree", _equipmentProtectionThree);
		_columnOriginalValues.put(
			"equipmentProtectionFour", _equipmentProtectionFour);
		_columnOriginalValues.put(
			"equipmentProtectionFive", _equipmentProtectionFive);
		_columnOriginalValues.put(
			"equipmentProtectionSix", _equipmentProtectionSix);
		_columnOriginalValues.put("otherEquipment", _otherEquipment);
		_columnOriginalValues.put(
			"fireBrigadeApplicationId", _fireBrigadeApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("fireBrigadeProEquipmentInfoId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("equipmentProtectionPre", 128L);

		columnBitmasks.put("equipmentProtectionOne", 256L);

		columnBitmasks.put("equipmentProtectionTwo", 512L);

		columnBitmasks.put("equipmentProtectionThree", 1024L);

		columnBitmasks.put("equipmentProtectionFour", 2048L);

		columnBitmasks.put("equipmentProtectionFive", 4096L);

		columnBitmasks.put("equipmentProtectionSix", 8192L);

		columnBitmasks.put("otherEquipment", 16384L);

		columnBitmasks.put("fireBrigadeApplicationId", 32768L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private FireBrigadeProEquipmentInfo _escapedModel;

}