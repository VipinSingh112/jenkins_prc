/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.tourism.application.form.services.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.tourism.application.form.services.model.TourismBonaGroundTransportatioCarRental;
import com.nbp.tourism.application.form.services.model.TourismBonaGroundTransportatioCarRentalModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the TourismBonaGroundTransportatioCarRental service. Represents a row in the &quot;nbp_tourism_bona_ground_tcr&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>TourismBonaGroundTransportatioCarRentalModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TourismBonaGroundTransportatioCarRentalImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TourismBonaGroundTransportatioCarRentalImpl
 * @generated
 */
@JSON(strict = true)
public class TourismBonaGroundTransportatioCarRentalModelImpl
	extends BaseModelImpl<TourismBonaGroundTransportatioCarRental>
	implements TourismBonaGroundTransportatioCarRentalModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tourism bona ground transportatio car rental model instance should use the <code>TourismBonaGroundTransportatioCarRental</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_tourism_bona_ground_tcr";

	public static final Object[][] TABLE_COLUMNS = {
		{"tourismBonaGroundTransportCRId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"TypeOfGroundTransportation", Types.VARCHAR},
		{"bonaGroundDateOfApplication", Types.TIMESTAMP},
		{"bonaGroundNameOfCompany", Types.VARCHAR},
		{"bonaGroundTradingName", Types.VARCHAR},
		{"bonaGroundCompanyRegisNo", Types.VARCHAR},
		{"bonaGroundTelephonNo", Types.VARCHAR},
		{"bonaGroundAddress", Types.VARCHAR},
		{"bonaGroundEmailAddress", Types.VARCHAR},
		{"bonaGroundContactPerson", Types.VARCHAR},
		{"bonaGroundEntityType", Types.VARCHAR},
		{"bonaGroundTccNo", Types.VARCHAR},
		{"bonaGroundExpiryDate", Types.TIMESTAMP},
		{"bonaGroundCopyAttached", Types.VARCHAR},
		{"bonaGroundJtbLicense", Types.VARCHAR},
		{"bonaGroundExpiryDateTwo", Types.TIMESTAMP},
		{"bonaGroundCopyAttachedTwo", Types.VARCHAR},
		{"bonaGroundTrnNo ", Types.VARCHAR},
		{"bonaGroundYearInBusiness", Types.VARCHAR},
		{"bonaGroundCopyOfRegAttached ", Types.VARCHAR},
		{"bonaGroundExistingFleetAmount", Types.VARCHAR},
		{"bonaGroundTotalVehicles", Types.VARCHAR},
		{"bonaGroundHowAdditionToFleet", Types.VARCHAR},
		{"bonaGroundReplacement", Types.VARCHAR},
		{"bonaGroundSummaryDealer", Types.VARCHAR},
		{"bonaGroundSummaryNumOfVechicle", Types.VARCHAR},
		{"bonaGroundSummarYear", Types.VARCHAR},
		{"bonaGroundSummaryType", Types.VARCHAR},
		{"bonaGroundSummaryCCRating", Types.VARCHAR},
		{"bonaGroundSummaryCommentary", Types.VARCHAR},
		{"bonaGroundDescription", Types.VARCHAR},
		{"tourismApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("tourismBonaGroundTransportCRId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("TypeOfGroundTransportation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundDateOfApplication", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("bonaGroundNameOfCompany", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundTradingName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundCompanyRegisNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundTelephonNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundEmailAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundContactPerson", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundEntityType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundTccNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundExpiryDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("bonaGroundCopyAttached", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundJtbLicense", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundExpiryDateTwo", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("bonaGroundCopyAttachedTwo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundTrnNo ", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundYearInBusiness", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundCopyOfRegAttached ", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundExistingFleetAmount", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundTotalVehicles", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundHowAdditionToFleet", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundReplacement", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundSummaryDealer", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundSummaryNumOfVechicle", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundSummarYear", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundSummaryType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundSummaryCCRating", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundSummaryCommentary", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundDescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tourismApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_tourism_bona_ground_tcr (tourismBonaGroundTransportCRId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,TypeOfGroundTransportation VARCHAR(75) null,bonaGroundDateOfApplication DATE null,bonaGroundNameOfCompany VARCHAR(75) null,bonaGroundTradingName VARCHAR(75) null,bonaGroundCompanyRegisNo VARCHAR(75) null,bonaGroundTelephonNo VARCHAR(75) null,bonaGroundAddress VARCHAR(500) null,bonaGroundEmailAddress VARCHAR(75) null,bonaGroundContactPerson VARCHAR(75) null,bonaGroundEntityType VARCHAR(75) null,bonaGroundTccNo VARCHAR(75) null,bonaGroundExpiryDate DATE null,bonaGroundCopyAttached VARCHAR(75) null,bonaGroundJtbLicense VARCHAR(75) null,bonaGroundExpiryDateTwo DATE null,bonaGroundCopyAttachedTwo VARCHAR(75) null,bonaGroundTrnNo  VARCHAR(75) null,bonaGroundYearInBusiness VARCHAR(75) null,bonaGroundCopyOfRegAttached  VARCHAR(75) null,bonaGroundExistingFleetAmount VARCHAR(75) null,bonaGroundTotalVehicles VARCHAR(75) null,bonaGroundHowAdditionToFleet VARCHAR(75) null,bonaGroundReplacement VARCHAR(75) null,bonaGroundSummaryDealer VARCHAR(75) null,bonaGroundSummaryNumOfVechicle VARCHAR(75) null,bonaGroundSummarYear VARCHAR(75) null,bonaGroundSummaryType VARCHAR(75) null,bonaGroundSummaryCCRating VARCHAR(75) null,bonaGroundSummaryCommentary VARCHAR(75) null,bonaGroundDescription VARCHAR(500) null,tourismApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_tourism_bona_ground_tcr";

	public static final String ORDER_BY_JPQL =
		" ORDER BY tourismBonaGroundTransportatioCarRental.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_tourism_bona_ground_tcr.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TOURISMAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public TourismBonaGroundTransportatioCarRentalModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _tourismBonaGroundTransportCRId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTourismBonaGroundTransportCRId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _tourismBonaGroundTransportCRId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TourismBonaGroundTransportatioCarRental.class;
	}

	@Override
	public String getModelClassName() {
		return TourismBonaGroundTransportatioCarRental.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<TourismBonaGroundTransportatioCarRental, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry
				<String,
				 Function<TourismBonaGroundTransportatioCarRental, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismBonaGroundTransportatioCarRental, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(TourismBonaGroundTransportatioCarRental)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<TourismBonaGroundTransportatioCarRental, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<TourismBonaGroundTransportatioCarRental, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(TourismBonaGroundTransportatioCarRental)this,
					entry.getValue());
			}
		}
	}

	public Map
		<String, Function<TourismBonaGroundTransportatioCarRental, Object>>
			getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map
		<String, BiConsumer<TourismBonaGroundTransportatioCarRental, Object>>
			getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<TourismBonaGroundTransportatioCarRental, Object>>
				_attributeGetterFunctions;

		static {
			Map
				<String,
				 Function<TourismBonaGroundTransportatioCarRental, Object>>
					attributeGetterFunctions =
						new LinkedHashMap
							<String,
							 Function
								 <TourismBonaGroundTransportatioCarRental,
								  Object>>();

			attributeGetterFunctions.put(
				"tourismBonaGroundTransportCRId",
				TourismBonaGroundTransportatioCarRental::
					getTourismBonaGroundTransportCRId);
			attributeGetterFunctions.put(
				"groupId", TourismBonaGroundTransportatioCarRental::getGroupId);
			attributeGetterFunctions.put(
				"companyId",
				TourismBonaGroundTransportatioCarRental::getCompanyId);
			attributeGetterFunctions.put(
				"userId", TourismBonaGroundTransportatioCarRental::getUserId);
			attributeGetterFunctions.put(
				"userName",
				TourismBonaGroundTransportatioCarRental::getUserName);
			attributeGetterFunctions.put(
				"createDate",
				TourismBonaGroundTransportatioCarRental::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate",
				TourismBonaGroundTransportatioCarRental::getModifiedDate);
			attributeGetterFunctions.put(
				"TypeOfGroundTransportation",
				TourismBonaGroundTransportatioCarRental::
					getTypeOfGroundTransportation);
			attributeGetterFunctions.put(
				"bonaGroundDateOfApplication",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundDateOfApplication);
			attributeGetterFunctions.put(
				"bonaGroundNameOfCompany",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundNameOfCompany);
			attributeGetterFunctions.put(
				"bonaGroundTradingName",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundTradingName);
			attributeGetterFunctions.put(
				"bonaGroundCompanyRegisNo",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundCompanyRegisNo);
			attributeGetterFunctions.put(
				"bonaGroundTelephonNo",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundTelephonNo);
			attributeGetterFunctions.put(
				"bonaGroundAddress",
				TourismBonaGroundTransportatioCarRental::getBonaGroundAddress);
			attributeGetterFunctions.put(
				"bonaGroundEmailAddress",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundEmailAddress);
			attributeGetterFunctions.put(
				"bonaGroundContactPerson",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundContactPerson);
			attributeGetterFunctions.put(
				"bonaGroundEntityType",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundEntityType);
			attributeGetterFunctions.put(
				"bonaGroundTccNo",
				TourismBonaGroundTransportatioCarRental::getBonaGroundTccNo);
			attributeGetterFunctions.put(
				"bonaGroundExpiryDate",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundExpiryDate);
			attributeGetterFunctions.put(
				"bonaGroundCopyAttached",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundCopyAttached);
			attributeGetterFunctions.put(
				"bonaGroundJtbLicense",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundJtbLicense);
			attributeGetterFunctions.put(
				"bonaGroundExpiryDateTwo",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundExpiryDateTwo);
			attributeGetterFunctions.put(
				"bonaGroundCopyAttachedTwo",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundCopyAttachedTwo);
			attributeGetterFunctions.put(
				"bonaGroundTrnNo ",
				TourismBonaGroundTransportatioCarRental::getBonaGroundTrnNo);
			attributeGetterFunctions.put(
				"bonaGroundYearInBusiness",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundYearInBusiness);
			attributeGetterFunctions.put(
				"bonaGroundCopyOfRegAttached ",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundCopyOfRegAttached);
			attributeGetterFunctions.put(
				"bonaGroundExistingFleetAmount",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundExistingFleetAmount);
			attributeGetterFunctions.put(
				"bonaGroundTotalVehicles",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundTotalVehicles);
			attributeGetterFunctions.put(
				"bonaGroundHowAdditionToFleet",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundHowAdditionToFleet);
			attributeGetterFunctions.put(
				"bonaGroundReplacement",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundReplacement);
			attributeGetterFunctions.put(
				"bonaGroundSummaryDealer",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundSummaryDealer);
			attributeGetterFunctions.put(
				"bonaGroundSummaryNumOfVechicle",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundSummaryNumOfVechicle);
			attributeGetterFunctions.put(
				"bonaGroundSummarYear",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundSummarYear);
			attributeGetterFunctions.put(
				"bonaGroundSummaryType",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundSummaryType);
			attributeGetterFunctions.put(
				"bonaGroundSummaryCCRating",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundSummaryCCRating);
			attributeGetterFunctions.put(
				"bonaGroundSummaryCommentary",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundSummaryCommentary);
			attributeGetterFunctions.put(
				"bonaGroundDescription",
				TourismBonaGroundTransportatioCarRental::
					getBonaGroundDescription);
			attributeGetterFunctions.put(
				"tourismApplicationId",
				TourismBonaGroundTransportatioCarRental::
					getTourismApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String,
			 BiConsumer<TourismBonaGroundTransportatioCarRental, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<TourismBonaGroundTransportatioCarRental, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String,
						 BiConsumer
							 <TourismBonaGroundTransportatioCarRental, ?>>();

			attributeSetterBiConsumers.put(
				"tourismBonaGroundTransportCRId",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, Long>)
					TourismBonaGroundTransportatioCarRental::
						setTourismBonaGroundTransportCRId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, Long>)
					TourismBonaGroundTransportatioCarRental::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, Long>)
					TourismBonaGroundTransportatioCarRental::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, Long>)
					TourismBonaGroundTransportatioCarRental::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, Date>)
					TourismBonaGroundTransportatioCarRental::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, Date>)
					TourismBonaGroundTransportatioCarRental::setModifiedDate);
			attributeSetterBiConsumers.put(
				"TypeOfGroundTransportation",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setTypeOfGroundTransportation);
			attributeSetterBiConsumers.put(
				"bonaGroundDateOfApplication",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, Date>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundDateOfApplication);
			attributeSetterBiConsumers.put(
				"bonaGroundNameOfCompany",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundNameOfCompany);
			attributeSetterBiConsumers.put(
				"bonaGroundTradingName",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundTradingName);
			attributeSetterBiConsumers.put(
				"bonaGroundCompanyRegisNo",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundCompanyRegisNo);
			attributeSetterBiConsumers.put(
				"bonaGroundTelephonNo",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundTelephonNo);
			attributeSetterBiConsumers.put(
				"bonaGroundAddress",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundAddress);
			attributeSetterBiConsumers.put(
				"bonaGroundEmailAddress",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundEmailAddress);
			attributeSetterBiConsumers.put(
				"bonaGroundContactPerson",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundContactPerson);
			attributeSetterBiConsumers.put(
				"bonaGroundEntityType",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundEntityType);
			attributeSetterBiConsumers.put(
				"bonaGroundTccNo",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundTccNo);
			attributeSetterBiConsumers.put(
				"bonaGroundExpiryDate",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, Date>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundExpiryDate);
			attributeSetterBiConsumers.put(
				"bonaGroundCopyAttached",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundCopyAttached);
			attributeSetterBiConsumers.put(
				"bonaGroundJtbLicense",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundJtbLicense);
			attributeSetterBiConsumers.put(
				"bonaGroundExpiryDateTwo",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, Date>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundExpiryDateTwo);
			attributeSetterBiConsumers.put(
				"bonaGroundCopyAttachedTwo",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundCopyAttachedTwo);
			attributeSetterBiConsumers.put(
				"bonaGroundTrnNo ",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundTrnNo);
			attributeSetterBiConsumers.put(
				"bonaGroundYearInBusiness",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundYearInBusiness);
			attributeSetterBiConsumers.put(
				"bonaGroundCopyOfRegAttached ",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundCopyOfRegAttached);
			attributeSetterBiConsumers.put(
				"bonaGroundExistingFleetAmount",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundExistingFleetAmount);
			attributeSetterBiConsumers.put(
				"bonaGroundTotalVehicles",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundTotalVehicles);
			attributeSetterBiConsumers.put(
				"bonaGroundHowAdditionToFleet",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundHowAdditionToFleet);
			attributeSetterBiConsumers.put(
				"bonaGroundReplacement",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundReplacement);
			attributeSetterBiConsumers.put(
				"bonaGroundSummaryDealer",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundSummaryDealer);
			attributeSetterBiConsumers.put(
				"bonaGroundSummaryNumOfVechicle",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundSummaryNumOfVechicle);
			attributeSetterBiConsumers.put(
				"bonaGroundSummarYear",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundSummarYear);
			attributeSetterBiConsumers.put(
				"bonaGroundSummaryType",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundSummaryType);
			attributeSetterBiConsumers.put(
				"bonaGroundSummaryCCRating",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundSummaryCCRating);
			attributeSetterBiConsumers.put(
				"bonaGroundSummaryCommentary",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundSummaryCommentary);
			attributeSetterBiConsumers.put(
				"bonaGroundDescription",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, String>)
					TourismBonaGroundTransportatioCarRental::
						setBonaGroundDescription);
			attributeSetterBiConsumers.put(
				"tourismApplicationId",
				(BiConsumer<TourismBonaGroundTransportatioCarRental, Long>)
					TourismBonaGroundTransportatioCarRental::
						setTourismApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getTourismBonaGroundTransportCRId() {
		return _tourismBonaGroundTransportCRId;
	}

	@Override
	public void setTourismBonaGroundTransportCRId(
		long tourismBonaGroundTransportCRId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismBonaGroundTransportCRId = tourismBonaGroundTransportCRId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getTypeOfGroundTransportation() {
		if (_TypeOfGroundTransportation == null) {
			return "";
		}
		else {
			return _TypeOfGroundTransportation;
		}
	}

	@Override
	public void setTypeOfGroundTransportation(
		String TypeOfGroundTransportation) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_TypeOfGroundTransportation = TypeOfGroundTransportation;
	}

	@JSON
	@Override
	public Date getBonaGroundDateOfApplication() {
		return _bonaGroundDateOfApplication;
	}

	@Override
	public void setBonaGroundDateOfApplication(
		Date bonaGroundDateOfApplication) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundDateOfApplication = bonaGroundDateOfApplication;
	}

	@JSON
	@Override
	public String getBonaGroundNameOfCompany() {
		if (_bonaGroundNameOfCompany == null) {
			return "";
		}
		else {
			return _bonaGroundNameOfCompany;
		}
	}

	@Override
	public void setBonaGroundNameOfCompany(String bonaGroundNameOfCompany) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundNameOfCompany = bonaGroundNameOfCompany;
	}

	@JSON
	@Override
	public String getBonaGroundTradingName() {
		if (_bonaGroundTradingName == null) {
			return "";
		}
		else {
			return _bonaGroundTradingName;
		}
	}

	@Override
	public void setBonaGroundTradingName(String bonaGroundTradingName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundTradingName = bonaGroundTradingName;
	}

	@JSON
	@Override
	public String getBonaGroundCompanyRegisNo() {
		if (_bonaGroundCompanyRegisNo == null) {
			return "";
		}
		else {
			return _bonaGroundCompanyRegisNo;
		}
	}

	@Override
	public void setBonaGroundCompanyRegisNo(String bonaGroundCompanyRegisNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundCompanyRegisNo = bonaGroundCompanyRegisNo;
	}

	@JSON
	@Override
	public String getBonaGroundTelephonNo() {
		if (_bonaGroundTelephonNo == null) {
			return "";
		}
		else {
			return _bonaGroundTelephonNo;
		}
	}

	@Override
	public void setBonaGroundTelephonNo(String bonaGroundTelephonNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundTelephonNo = bonaGroundTelephonNo;
	}

	@JSON
	@Override
	public String getBonaGroundAddress() {
		if (_bonaGroundAddress == null) {
			return "";
		}
		else {
			return _bonaGroundAddress;
		}
	}

	@Override
	public void setBonaGroundAddress(String bonaGroundAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundAddress = bonaGroundAddress;
	}

	@JSON
	@Override
	public String getBonaGroundEmailAddress() {
		if (_bonaGroundEmailAddress == null) {
			return "";
		}
		else {
			return _bonaGroundEmailAddress;
		}
	}

	@Override
	public void setBonaGroundEmailAddress(String bonaGroundEmailAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundEmailAddress = bonaGroundEmailAddress;
	}

	@JSON
	@Override
	public String getBonaGroundContactPerson() {
		if (_bonaGroundContactPerson == null) {
			return "";
		}
		else {
			return _bonaGroundContactPerson;
		}
	}

	@Override
	public void setBonaGroundContactPerson(String bonaGroundContactPerson) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundContactPerson = bonaGroundContactPerson;
	}

	@JSON
	@Override
	public String getBonaGroundEntityType() {
		if (_bonaGroundEntityType == null) {
			return "";
		}
		else {
			return _bonaGroundEntityType;
		}
	}

	@Override
	public void setBonaGroundEntityType(String bonaGroundEntityType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundEntityType = bonaGroundEntityType;
	}

	@JSON
	@Override
	public String getBonaGroundTccNo() {
		if (_bonaGroundTccNo == null) {
			return "";
		}
		else {
			return _bonaGroundTccNo;
		}
	}

	@Override
	public void setBonaGroundTccNo(String bonaGroundTccNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundTccNo = bonaGroundTccNo;
	}

	@JSON
	@Override
	public Date getBonaGroundExpiryDate() {
		return _bonaGroundExpiryDate;
	}

	@Override
	public void setBonaGroundExpiryDate(Date bonaGroundExpiryDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundExpiryDate = bonaGroundExpiryDate;
	}

	@JSON
	@Override
	public String getBonaGroundCopyAttached() {
		if (_bonaGroundCopyAttached == null) {
			return "";
		}
		else {
			return _bonaGroundCopyAttached;
		}
	}

	@Override
	public void setBonaGroundCopyAttached(String bonaGroundCopyAttached) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundCopyAttached = bonaGroundCopyAttached;
	}

	@JSON
	@Override
	public String getBonaGroundJtbLicense() {
		if (_bonaGroundJtbLicense == null) {
			return "";
		}
		else {
			return _bonaGroundJtbLicense;
		}
	}

	@Override
	public void setBonaGroundJtbLicense(String bonaGroundJtbLicense) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundJtbLicense = bonaGroundJtbLicense;
	}

	@JSON
	@Override
	public Date getBonaGroundExpiryDateTwo() {
		return _bonaGroundExpiryDateTwo;
	}

	@Override
	public void setBonaGroundExpiryDateTwo(Date bonaGroundExpiryDateTwo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundExpiryDateTwo = bonaGroundExpiryDateTwo;
	}

	@JSON
	@Override
	public String getBonaGroundCopyAttachedTwo() {
		if (_bonaGroundCopyAttachedTwo == null) {
			return "";
		}
		else {
			return _bonaGroundCopyAttachedTwo;
		}
	}

	@Override
	public void setBonaGroundCopyAttachedTwo(String bonaGroundCopyAttachedTwo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundCopyAttachedTwo = bonaGroundCopyAttachedTwo;
	}

	@JSON
	@Override
	public String getBonaGroundTrnNo() {
		if (_bonaGroundTrnNo == null) {
			return "";
		}
		else {
			return _bonaGroundTrnNo;
		}
	}

	@Override
	public void setBonaGroundTrnNo(String bonaGroundTrnNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundTrnNo = bonaGroundTrnNo;
	}

	@JSON
	@Override
	public String getBonaGroundYearInBusiness() {
		if (_bonaGroundYearInBusiness == null) {
			return "";
		}
		else {
			return _bonaGroundYearInBusiness;
		}
	}

	@Override
	public void setBonaGroundYearInBusiness(String bonaGroundYearInBusiness) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundYearInBusiness = bonaGroundYearInBusiness;
	}

	@JSON
	@Override
	public String getBonaGroundCopyOfRegAttached() {
		if (_bonaGroundCopyOfRegAttached == null) {
			return "";
		}
		else {
			return _bonaGroundCopyOfRegAttached;
		}
	}

	@Override
	public void setBonaGroundCopyOfRegAttached(
		String bonaGroundCopyOfRegAttached) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundCopyOfRegAttached = bonaGroundCopyOfRegAttached;
	}

	@JSON
	@Override
	public String getBonaGroundExistingFleetAmount() {
		if (_bonaGroundExistingFleetAmount == null) {
			return "";
		}
		else {
			return _bonaGroundExistingFleetAmount;
		}
	}

	@Override
	public void setBonaGroundExistingFleetAmount(
		String bonaGroundExistingFleetAmount) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundExistingFleetAmount = bonaGroundExistingFleetAmount;
	}

	@JSON
	@Override
	public String getBonaGroundTotalVehicles() {
		if (_bonaGroundTotalVehicles == null) {
			return "";
		}
		else {
			return _bonaGroundTotalVehicles;
		}
	}

	@Override
	public void setBonaGroundTotalVehicles(String bonaGroundTotalVehicles) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundTotalVehicles = bonaGroundTotalVehicles;
	}

	@JSON
	@Override
	public String getBonaGroundHowAdditionToFleet() {
		if (_bonaGroundHowAdditionToFleet == null) {
			return "";
		}
		else {
			return _bonaGroundHowAdditionToFleet;
		}
	}

	@Override
	public void setBonaGroundHowAdditionToFleet(
		String bonaGroundHowAdditionToFleet) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundHowAdditionToFleet = bonaGroundHowAdditionToFleet;
	}

	@JSON
	@Override
	public String getBonaGroundReplacement() {
		if (_bonaGroundReplacement == null) {
			return "";
		}
		else {
			return _bonaGroundReplacement;
		}
	}

	@Override
	public void setBonaGroundReplacement(String bonaGroundReplacement) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundReplacement = bonaGroundReplacement;
	}

	@JSON
	@Override
	public String getBonaGroundSummaryDealer() {
		if (_bonaGroundSummaryDealer == null) {
			return "";
		}
		else {
			return _bonaGroundSummaryDealer;
		}
	}

	@Override
	public void setBonaGroundSummaryDealer(String bonaGroundSummaryDealer) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundSummaryDealer = bonaGroundSummaryDealer;
	}

	@JSON
	@Override
	public String getBonaGroundSummaryNumOfVechicle() {
		if (_bonaGroundSummaryNumOfVechicle == null) {
			return "";
		}
		else {
			return _bonaGroundSummaryNumOfVechicle;
		}
	}

	@Override
	public void setBonaGroundSummaryNumOfVechicle(
		String bonaGroundSummaryNumOfVechicle) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundSummaryNumOfVechicle = bonaGroundSummaryNumOfVechicle;
	}

	@JSON
	@Override
	public String getBonaGroundSummarYear() {
		if (_bonaGroundSummarYear == null) {
			return "";
		}
		else {
			return _bonaGroundSummarYear;
		}
	}

	@Override
	public void setBonaGroundSummarYear(String bonaGroundSummarYear) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundSummarYear = bonaGroundSummarYear;
	}

	@JSON
	@Override
	public String getBonaGroundSummaryType() {
		if (_bonaGroundSummaryType == null) {
			return "";
		}
		else {
			return _bonaGroundSummaryType;
		}
	}

	@Override
	public void setBonaGroundSummaryType(String bonaGroundSummaryType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundSummaryType = bonaGroundSummaryType;
	}

	@JSON
	@Override
	public String getBonaGroundSummaryCCRating() {
		if (_bonaGroundSummaryCCRating == null) {
			return "";
		}
		else {
			return _bonaGroundSummaryCCRating;
		}
	}

	@Override
	public void setBonaGroundSummaryCCRating(String bonaGroundSummaryCCRating) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundSummaryCCRating = bonaGroundSummaryCCRating;
	}

	@JSON
	@Override
	public String getBonaGroundSummaryCommentary() {
		if (_bonaGroundSummaryCommentary == null) {
			return "";
		}
		else {
			return _bonaGroundSummaryCommentary;
		}
	}

	@Override
	public void setBonaGroundSummaryCommentary(
		String bonaGroundSummaryCommentary) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundSummaryCommentary = bonaGroundSummaryCommentary;
	}

	@JSON
	@Override
	public String getBonaGroundDescription() {
		if (_bonaGroundDescription == null) {
			return "";
		}
		else {
			return _bonaGroundDescription;
		}
	}

	@Override
	public void setBonaGroundDescription(String bonaGroundDescription) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundDescription = bonaGroundDescription;
	}

	@JSON
	@Override
	public long getTourismApplicationId() {
		return _tourismApplicationId;
	}

	@Override
	public void setTourismApplicationId(long tourismApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismApplicationId = tourismApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalTourismApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(),
			TourismBonaGroundTransportatioCarRental.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TourismBonaGroundTransportatioCarRental toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, TourismBonaGroundTransportatioCarRental>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TourismBonaGroundTransportatioCarRentalImpl
			tourismBonaGroundTransportatioCarRentalImpl =
				new TourismBonaGroundTransportatioCarRentalImpl();

		tourismBonaGroundTransportatioCarRentalImpl.
			setTourismBonaGroundTransportCRId(
				getTourismBonaGroundTransportCRId());
		tourismBonaGroundTransportatioCarRentalImpl.setGroupId(getGroupId());
		tourismBonaGroundTransportatioCarRentalImpl.setCompanyId(
			getCompanyId());
		tourismBonaGroundTransportatioCarRentalImpl.setUserId(getUserId());
		tourismBonaGroundTransportatioCarRentalImpl.setUserName(getUserName());
		tourismBonaGroundTransportatioCarRentalImpl.setCreateDate(
			getCreateDate());
		tourismBonaGroundTransportatioCarRentalImpl.setModifiedDate(
			getModifiedDate());
		tourismBonaGroundTransportatioCarRentalImpl.
			setTypeOfGroundTransportation(getTypeOfGroundTransportation());
		tourismBonaGroundTransportatioCarRentalImpl.
			setBonaGroundDateOfApplication(getBonaGroundDateOfApplication());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundNameOfCompany(
			getBonaGroundNameOfCompany());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundTradingName(
			getBonaGroundTradingName());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundCompanyRegisNo(
			getBonaGroundCompanyRegisNo());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundTelephonNo(
			getBonaGroundTelephonNo());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundAddress(
			getBonaGroundAddress());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundEmailAddress(
			getBonaGroundEmailAddress());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundContactPerson(
			getBonaGroundContactPerson());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundEntityType(
			getBonaGroundEntityType());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundTccNo(
			getBonaGroundTccNo());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundExpiryDate(
			getBonaGroundExpiryDate());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundCopyAttached(
			getBonaGroundCopyAttached());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundJtbLicense(
			getBonaGroundJtbLicense());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundExpiryDateTwo(
			getBonaGroundExpiryDateTwo());
		tourismBonaGroundTransportatioCarRentalImpl.
			setBonaGroundCopyAttachedTwo(getBonaGroundCopyAttachedTwo());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundTrnNo(
			getBonaGroundTrnNo());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundYearInBusiness(
			getBonaGroundYearInBusiness());
		tourismBonaGroundTransportatioCarRentalImpl.
			setBonaGroundCopyOfRegAttached(getBonaGroundCopyOfRegAttached());
		tourismBonaGroundTransportatioCarRentalImpl.
			setBonaGroundExistingFleetAmount(
				getBonaGroundExistingFleetAmount());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundTotalVehicles(
			getBonaGroundTotalVehicles());
		tourismBonaGroundTransportatioCarRentalImpl.
			setBonaGroundHowAdditionToFleet(getBonaGroundHowAdditionToFleet());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundReplacement(
			getBonaGroundReplacement());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundSummaryDealer(
			getBonaGroundSummaryDealer());
		tourismBonaGroundTransportatioCarRentalImpl.
			setBonaGroundSummaryNumOfVechicle(
				getBonaGroundSummaryNumOfVechicle());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundSummarYear(
			getBonaGroundSummarYear());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundSummaryType(
			getBonaGroundSummaryType());
		tourismBonaGroundTransportatioCarRentalImpl.
			setBonaGroundSummaryCCRating(getBonaGroundSummaryCCRating());
		tourismBonaGroundTransportatioCarRentalImpl.
			setBonaGroundSummaryCommentary(getBonaGroundSummaryCommentary());
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundDescription(
			getBonaGroundDescription());
		tourismBonaGroundTransportatioCarRentalImpl.setTourismApplicationId(
			getTourismApplicationId());

		tourismBonaGroundTransportatioCarRentalImpl.resetOriginalValues();

		return tourismBonaGroundTransportatioCarRentalImpl;
	}

	@Override
	public TourismBonaGroundTransportatioCarRental cloneWithOriginalValues() {
		TourismBonaGroundTransportatioCarRentalImpl
			tourismBonaGroundTransportatioCarRentalImpl =
				new TourismBonaGroundTransportatioCarRentalImpl();

		tourismBonaGroundTransportatioCarRentalImpl.
			setTourismBonaGroundTransportCRId(
				this.<Long>getColumnOriginalValue(
					"tourismBonaGroundTransportCRId"));
		tourismBonaGroundTransportatioCarRentalImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		tourismBonaGroundTransportatioCarRentalImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		tourismBonaGroundTransportatioCarRentalImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		tourismBonaGroundTransportatioCarRentalImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		tourismBonaGroundTransportatioCarRentalImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		tourismBonaGroundTransportatioCarRentalImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		tourismBonaGroundTransportatioCarRentalImpl.
			setTypeOfGroundTransportation(
				this.<String>getColumnOriginalValue(
					"TypeOfGroundTransportation"));
		tourismBonaGroundTransportatioCarRentalImpl.
			setBonaGroundDateOfApplication(
				this.<Date>getColumnOriginalValue(
					"bonaGroundDateOfApplication"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundNameOfCompany(
			this.<String>getColumnOriginalValue("bonaGroundNameOfCompany"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundTradingName(
			this.<String>getColumnOriginalValue("bonaGroundTradingName"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundCompanyRegisNo(
			this.<String>getColumnOriginalValue("bonaGroundCompanyRegisNo"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundTelephonNo(
			this.<String>getColumnOriginalValue("bonaGroundTelephonNo"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundAddress(
			this.<String>getColumnOriginalValue("bonaGroundAddress"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundEmailAddress(
			this.<String>getColumnOriginalValue("bonaGroundEmailAddress"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundContactPerson(
			this.<String>getColumnOriginalValue("bonaGroundContactPerson"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundEntityType(
			this.<String>getColumnOriginalValue("bonaGroundEntityType"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundTccNo(
			this.<String>getColumnOriginalValue("bonaGroundTccNo"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundExpiryDate(
			this.<Date>getColumnOriginalValue("bonaGroundExpiryDate"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundCopyAttached(
			this.<String>getColumnOriginalValue("bonaGroundCopyAttached"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundJtbLicense(
			this.<String>getColumnOriginalValue("bonaGroundJtbLicense"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundExpiryDateTwo(
			this.<Date>getColumnOriginalValue("bonaGroundExpiryDateTwo"));
		tourismBonaGroundTransportatioCarRentalImpl.
			setBonaGroundCopyAttachedTwo(
				this.<String>getColumnOriginalValue(
					"bonaGroundCopyAttachedTwo"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundTrnNo(
			this.<String>getColumnOriginalValue("bonaGroundTrnNo "));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundYearInBusiness(
			this.<String>getColumnOriginalValue("bonaGroundYearInBusiness"));
		tourismBonaGroundTransportatioCarRentalImpl.
			setBonaGroundCopyOfRegAttached(
				this.<String>getColumnOriginalValue(
					"bonaGroundCopyOfRegAttached "));
		tourismBonaGroundTransportatioCarRentalImpl.
			setBonaGroundExistingFleetAmount(
				this.<String>getColumnOriginalValue(
					"bonaGroundExistingFleetAmount"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundTotalVehicles(
			this.<String>getColumnOriginalValue("bonaGroundTotalVehicles"));
		tourismBonaGroundTransportatioCarRentalImpl.
			setBonaGroundHowAdditionToFleet(
				this.<String>getColumnOriginalValue(
					"bonaGroundHowAdditionToFleet"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundReplacement(
			this.<String>getColumnOriginalValue("bonaGroundReplacement"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundSummaryDealer(
			this.<String>getColumnOriginalValue("bonaGroundSummaryDealer"));
		tourismBonaGroundTransportatioCarRentalImpl.
			setBonaGroundSummaryNumOfVechicle(
				this.<String>getColumnOriginalValue(
					"bonaGroundSummaryNumOfVechicle"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundSummarYear(
			this.<String>getColumnOriginalValue("bonaGroundSummarYear"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundSummaryType(
			this.<String>getColumnOriginalValue("bonaGroundSummaryType"));
		tourismBonaGroundTransportatioCarRentalImpl.
			setBonaGroundSummaryCCRating(
				this.<String>getColumnOriginalValue(
					"bonaGroundSummaryCCRating"));
		tourismBonaGroundTransportatioCarRentalImpl.
			setBonaGroundSummaryCommentary(
				this.<String>getColumnOriginalValue(
					"bonaGroundSummaryCommentary"));
		tourismBonaGroundTransportatioCarRentalImpl.setBonaGroundDescription(
			this.<String>getColumnOriginalValue("bonaGroundDescription"));
		tourismBonaGroundTransportatioCarRentalImpl.setTourismApplicationId(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));

		return tourismBonaGroundTransportatioCarRentalImpl;
	}

	@Override
	public int compareTo(
		TourismBonaGroundTransportatioCarRental
			tourismBonaGroundTransportatioCarRental) {

		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(),
			tourismBonaGroundTransportatioCarRental.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof TourismBonaGroundTransportatioCarRental)) {
			return false;
		}

		TourismBonaGroundTransportatioCarRental
			tourismBonaGroundTransportatioCarRental =
				(TourismBonaGroundTransportatioCarRental)object;

		long primaryKey =
			tourismBonaGroundTransportatioCarRental.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<TourismBonaGroundTransportatioCarRental> toCacheModel() {
		TourismBonaGroundTransportatioCarRentalCacheModel
			tourismBonaGroundTransportatioCarRentalCacheModel =
				new TourismBonaGroundTransportatioCarRentalCacheModel();

		tourismBonaGroundTransportatioCarRentalCacheModel.
			tourismBonaGroundTransportCRId =
				getTourismBonaGroundTransportCRId();

		tourismBonaGroundTransportatioCarRentalCacheModel.groupId =
			getGroupId();

		tourismBonaGroundTransportatioCarRentalCacheModel.companyId =
			getCompanyId();

		tourismBonaGroundTransportatioCarRentalCacheModel.userId = getUserId();

		tourismBonaGroundTransportatioCarRentalCacheModel.userName =
			getUserName();

		String userName =
			tourismBonaGroundTransportatioCarRentalCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			tourismBonaGroundTransportatioCarRentalCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			tourismBonaGroundTransportatioCarRentalCacheModel.createDate =
				createDate.getTime();
		}
		else {
			tourismBonaGroundTransportatioCarRentalCacheModel.createDate =
				Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			tourismBonaGroundTransportatioCarRentalCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			tourismBonaGroundTransportatioCarRentalCacheModel.modifiedDate =
				Long.MIN_VALUE;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			TypeOfGroundTransportation = getTypeOfGroundTransportation();

		String TypeOfGroundTransportation =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				TypeOfGroundTransportation;

		if ((TypeOfGroundTransportation != null) &&
			(TypeOfGroundTransportation.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				TypeOfGroundTransportation = null;
		}

		Date bonaGroundDateOfApplication = getBonaGroundDateOfApplication();

		if (bonaGroundDateOfApplication != null) {
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundDateOfApplication =
					bonaGroundDateOfApplication.getTime();
		}
		else {
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundDateOfApplication = Long.MIN_VALUE;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundNameOfCompany = getBonaGroundNameOfCompany();

		String bonaGroundNameOfCompany =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundNameOfCompany;

		if ((bonaGroundNameOfCompany != null) &&
			(bonaGroundNameOfCompany.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundNameOfCompany = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundTradingName = getBonaGroundTradingName();

		String bonaGroundTradingName =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundTradingName;

		if ((bonaGroundTradingName != null) &&
			(bonaGroundTradingName.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundTradingName = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundCompanyRegisNo = getBonaGroundCompanyRegisNo();

		String bonaGroundCompanyRegisNo =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundCompanyRegisNo;

		if ((bonaGroundCompanyRegisNo != null) &&
			(bonaGroundCompanyRegisNo.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundCompanyRegisNo = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.bonaGroundTelephonNo =
			getBonaGroundTelephonNo();

		String bonaGroundTelephonNo =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundTelephonNo;

		if ((bonaGroundTelephonNo != null) &&
			(bonaGroundTelephonNo.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundTelephonNo = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.bonaGroundAddress =
			getBonaGroundAddress();

		String bonaGroundAddress =
			tourismBonaGroundTransportatioCarRentalCacheModel.bonaGroundAddress;

		if ((bonaGroundAddress != null) && (bonaGroundAddress.length() == 0)) {
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundAddress = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundEmailAddress = getBonaGroundEmailAddress();

		String bonaGroundEmailAddress =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundEmailAddress;

		if ((bonaGroundEmailAddress != null) &&
			(bonaGroundEmailAddress.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundEmailAddress = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundContactPerson = getBonaGroundContactPerson();

		String bonaGroundContactPerson =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundContactPerson;

		if ((bonaGroundContactPerson != null) &&
			(bonaGroundContactPerson.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundContactPerson = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.bonaGroundEntityType =
			getBonaGroundEntityType();

		String bonaGroundEntityType =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundEntityType;

		if ((bonaGroundEntityType != null) &&
			(bonaGroundEntityType.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundEntityType = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.bonaGroundTccNo =
			getBonaGroundTccNo();

		String bonaGroundTccNo =
			tourismBonaGroundTransportatioCarRentalCacheModel.bonaGroundTccNo;

		if ((bonaGroundTccNo != null) && (bonaGroundTccNo.length() == 0)) {
			tourismBonaGroundTransportatioCarRentalCacheModel.bonaGroundTccNo =
				null;
		}

		Date bonaGroundExpiryDate = getBonaGroundExpiryDate();

		if (bonaGroundExpiryDate != null) {
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundExpiryDate = bonaGroundExpiryDate.getTime();
		}
		else {
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundExpiryDate = Long.MIN_VALUE;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundCopyAttached = getBonaGroundCopyAttached();

		String bonaGroundCopyAttached =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundCopyAttached;

		if ((bonaGroundCopyAttached != null) &&
			(bonaGroundCopyAttached.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundCopyAttached = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.bonaGroundJtbLicense =
			getBonaGroundJtbLicense();

		String bonaGroundJtbLicense =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundJtbLicense;

		if ((bonaGroundJtbLicense != null) &&
			(bonaGroundJtbLicense.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundJtbLicense = null;
		}

		Date bonaGroundExpiryDateTwo = getBonaGroundExpiryDateTwo();

		if (bonaGroundExpiryDateTwo != null) {
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundExpiryDateTwo = bonaGroundExpiryDateTwo.getTime();
		}
		else {
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundExpiryDateTwo = Long.MIN_VALUE;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundCopyAttachedTwo = getBonaGroundCopyAttachedTwo();

		String bonaGroundCopyAttachedTwo =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundCopyAttachedTwo;

		if ((bonaGroundCopyAttachedTwo != null) &&
			(bonaGroundCopyAttachedTwo.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundCopyAttachedTwo = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.bonaGroundTrnNo =
			getBonaGroundTrnNo();

		String bonaGroundTrnNo =
			tourismBonaGroundTransportatioCarRentalCacheModel.bonaGroundTrnNo;

		if ((bonaGroundTrnNo != null) && (bonaGroundTrnNo.length() == 0)) {
			tourismBonaGroundTransportatioCarRentalCacheModel.bonaGroundTrnNo =
				null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundYearInBusiness = getBonaGroundYearInBusiness();

		String bonaGroundYearInBusiness =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundYearInBusiness;

		if ((bonaGroundYearInBusiness != null) &&
			(bonaGroundYearInBusiness.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundYearInBusiness = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundCopyOfRegAttached = getBonaGroundCopyOfRegAttached();

		String bonaGroundCopyOfRegAttached =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundCopyOfRegAttached;

		if ((bonaGroundCopyOfRegAttached != null) &&
			(bonaGroundCopyOfRegAttached.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundCopyOfRegAttached = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundExistingFleetAmount = getBonaGroundExistingFleetAmount();

		String bonaGroundExistingFleetAmount =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundExistingFleetAmount;

		if ((bonaGroundExistingFleetAmount != null) &&
			(bonaGroundExistingFleetAmount.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundExistingFleetAmount = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundTotalVehicles = getBonaGroundTotalVehicles();

		String bonaGroundTotalVehicles =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundTotalVehicles;

		if ((bonaGroundTotalVehicles != null) &&
			(bonaGroundTotalVehicles.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundTotalVehicles = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundHowAdditionToFleet = getBonaGroundHowAdditionToFleet();

		String bonaGroundHowAdditionToFleet =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundHowAdditionToFleet;

		if ((bonaGroundHowAdditionToFleet != null) &&
			(bonaGroundHowAdditionToFleet.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundHowAdditionToFleet = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundReplacement = getBonaGroundReplacement();

		String bonaGroundReplacement =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundReplacement;

		if ((bonaGroundReplacement != null) &&
			(bonaGroundReplacement.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundReplacement = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundSummaryDealer = getBonaGroundSummaryDealer();

		String bonaGroundSummaryDealer =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundSummaryDealer;

		if ((bonaGroundSummaryDealer != null) &&
			(bonaGroundSummaryDealer.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundSummaryDealer = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundSummaryNumOfVechicle =
				getBonaGroundSummaryNumOfVechicle();

		String bonaGroundSummaryNumOfVechicle =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundSummaryNumOfVechicle;

		if ((bonaGroundSummaryNumOfVechicle != null) &&
			(bonaGroundSummaryNumOfVechicle.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundSummaryNumOfVechicle = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.bonaGroundSummarYear =
			getBonaGroundSummarYear();

		String bonaGroundSummarYear =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundSummarYear;

		if ((bonaGroundSummarYear != null) &&
			(bonaGroundSummarYear.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundSummarYear = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundSummaryType = getBonaGroundSummaryType();

		String bonaGroundSummaryType =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundSummaryType;

		if ((bonaGroundSummaryType != null) &&
			(bonaGroundSummaryType.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundSummaryType = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundSummaryCCRating = getBonaGroundSummaryCCRating();

		String bonaGroundSummaryCCRating =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundSummaryCCRating;

		if ((bonaGroundSummaryCCRating != null) &&
			(bonaGroundSummaryCCRating.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundSummaryCCRating = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundSummaryCommentary = getBonaGroundSummaryCommentary();

		String bonaGroundSummaryCommentary =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundSummaryCommentary;

		if ((bonaGroundSummaryCommentary != null) &&
			(bonaGroundSummaryCommentary.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundSummaryCommentary = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.
			bonaGroundDescription = getBonaGroundDescription();

		String bonaGroundDescription =
			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundDescription;

		if ((bonaGroundDescription != null) &&
			(bonaGroundDescription.length() == 0)) {

			tourismBonaGroundTransportatioCarRentalCacheModel.
				bonaGroundDescription = null;
		}

		tourismBonaGroundTransportatioCarRentalCacheModel.tourismApplicationId =
			getTourismApplicationId();

		return tourismBonaGroundTransportatioCarRentalCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<TourismBonaGroundTransportatioCarRental, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry
				<String,
				 Function<TourismBonaGroundTransportatioCarRental, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismBonaGroundTransportatioCarRental, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(TourismBonaGroundTransportatioCarRental)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, TourismBonaGroundTransportatioCarRental>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						TourismBonaGroundTransportatioCarRental.class,
						ModelWrapper.class);

	}

	private long _tourismBonaGroundTransportCRId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _TypeOfGroundTransportation;
	private Date _bonaGroundDateOfApplication;
	private String _bonaGroundNameOfCompany;
	private String _bonaGroundTradingName;
	private String _bonaGroundCompanyRegisNo;
	private String _bonaGroundTelephonNo;
	private String _bonaGroundAddress;
	private String _bonaGroundEmailAddress;
	private String _bonaGroundContactPerson;
	private String _bonaGroundEntityType;
	private String _bonaGroundTccNo;
	private Date _bonaGroundExpiryDate;
	private String _bonaGroundCopyAttached;
	private String _bonaGroundJtbLicense;
	private Date _bonaGroundExpiryDateTwo;
	private String _bonaGroundCopyAttachedTwo;
	private String _bonaGroundTrnNo;
	private String _bonaGroundYearInBusiness;
	private String _bonaGroundCopyOfRegAttached;
	private String _bonaGroundExistingFleetAmount;
	private String _bonaGroundTotalVehicles;
	private String _bonaGroundHowAdditionToFleet;
	private String _bonaGroundReplacement;
	private String _bonaGroundSummaryDealer;
	private String _bonaGroundSummaryNumOfVechicle;
	private String _bonaGroundSummarYear;
	private String _bonaGroundSummaryType;
	private String _bonaGroundSummaryCCRating;
	private String _bonaGroundSummaryCommentary;
	private String _bonaGroundDescription;
	private long _tourismApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<TourismBonaGroundTransportatioCarRental, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((TourismBonaGroundTransportatioCarRental)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"tourismBonaGroundTransportCRId", _tourismBonaGroundTransportCRId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"TypeOfGroundTransportation", _TypeOfGroundTransportation);
		_columnOriginalValues.put(
			"bonaGroundDateOfApplication", _bonaGroundDateOfApplication);
		_columnOriginalValues.put(
			"bonaGroundNameOfCompany", _bonaGroundNameOfCompany);
		_columnOriginalValues.put(
			"bonaGroundTradingName", _bonaGroundTradingName);
		_columnOriginalValues.put(
			"bonaGroundCompanyRegisNo", _bonaGroundCompanyRegisNo);
		_columnOriginalValues.put(
			"bonaGroundTelephonNo", _bonaGroundTelephonNo);
		_columnOriginalValues.put("bonaGroundAddress", _bonaGroundAddress);
		_columnOriginalValues.put(
			"bonaGroundEmailAddress", _bonaGroundEmailAddress);
		_columnOriginalValues.put(
			"bonaGroundContactPerson", _bonaGroundContactPerson);
		_columnOriginalValues.put(
			"bonaGroundEntityType", _bonaGroundEntityType);
		_columnOriginalValues.put("bonaGroundTccNo", _bonaGroundTccNo);
		_columnOriginalValues.put(
			"bonaGroundExpiryDate", _bonaGroundExpiryDate);
		_columnOriginalValues.put(
			"bonaGroundCopyAttached", _bonaGroundCopyAttached);
		_columnOriginalValues.put(
			"bonaGroundJtbLicense", _bonaGroundJtbLicense);
		_columnOriginalValues.put(
			"bonaGroundExpiryDateTwo", _bonaGroundExpiryDateTwo);
		_columnOriginalValues.put(
			"bonaGroundCopyAttachedTwo", _bonaGroundCopyAttachedTwo);
		_columnOriginalValues.put("bonaGroundTrnNo ", _bonaGroundTrnNo);
		_columnOriginalValues.put(
			"bonaGroundYearInBusiness", _bonaGroundYearInBusiness);
		_columnOriginalValues.put(
			"bonaGroundCopyOfRegAttached ", _bonaGroundCopyOfRegAttached);
		_columnOriginalValues.put(
			"bonaGroundExistingFleetAmount", _bonaGroundExistingFleetAmount);
		_columnOriginalValues.put(
			"bonaGroundTotalVehicles", _bonaGroundTotalVehicles);
		_columnOriginalValues.put(
			"bonaGroundHowAdditionToFleet", _bonaGroundHowAdditionToFleet);
		_columnOriginalValues.put(
			"bonaGroundReplacement", _bonaGroundReplacement);
		_columnOriginalValues.put(
			"bonaGroundSummaryDealer", _bonaGroundSummaryDealer);
		_columnOriginalValues.put(
			"bonaGroundSummaryNumOfVechicle", _bonaGroundSummaryNumOfVechicle);
		_columnOriginalValues.put(
			"bonaGroundSummarYear", _bonaGroundSummarYear);
		_columnOriginalValues.put(
			"bonaGroundSummaryType", _bonaGroundSummaryType);
		_columnOriginalValues.put(
			"bonaGroundSummaryCCRating", _bonaGroundSummaryCCRating);
		_columnOriginalValues.put(
			"bonaGroundSummaryCommentary", _bonaGroundSummaryCommentary);
		_columnOriginalValues.put(
			"bonaGroundDescription", _bonaGroundDescription);
		_columnOriginalValues.put(
			"tourismApplicationId", _tourismApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("tourismBonaGroundTransportCRId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("TypeOfGroundTransportation", 128L);

		columnBitmasks.put("bonaGroundDateOfApplication", 256L);

		columnBitmasks.put("bonaGroundNameOfCompany", 512L);

		columnBitmasks.put("bonaGroundTradingName", 1024L);

		columnBitmasks.put("bonaGroundCompanyRegisNo", 2048L);

		columnBitmasks.put("bonaGroundTelephonNo", 4096L);

		columnBitmasks.put("bonaGroundAddress", 8192L);

		columnBitmasks.put("bonaGroundEmailAddress", 16384L);

		columnBitmasks.put("bonaGroundContactPerson", 32768L);

		columnBitmasks.put("bonaGroundEntityType", 65536L);

		columnBitmasks.put("bonaGroundTccNo", 131072L);

		columnBitmasks.put("bonaGroundExpiryDate", 262144L);

		columnBitmasks.put("bonaGroundCopyAttached", 524288L);

		columnBitmasks.put("bonaGroundJtbLicense", 1048576L);

		columnBitmasks.put("bonaGroundExpiryDateTwo", 2097152L);

		columnBitmasks.put("bonaGroundCopyAttachedTwo", 4194304L);

		columnBitmasks.put("bonaGroundTrnNo ", 8388608L);

		columnBitmasks.put("bonaGroundYearInBusiness", 16777216L);

		columnBitmasks.put("bonaGroundCopyOfRegAttached ", 33554432L);

		columnBitmasks.put("bonaGroundExistingFleetAmount", 67108864L);

		columnBitmasks.put("bonaGroundTotalVehicles", 134217728L);

		columnBitmasks.put("bonaGroundHowAdditionToFleet", 268435456L);

		columnBitmasks.put("bonaGroundReplacement", 536870912L);

		columnBitmasks.put("bonaGroundSummaryDealer", 1073741824L);

		columnBitmasks.put("bonaGroundSummaryNumOfVechicle", 2147483648L);

		columnBitmasks.put("bonaGroundSummarYear", 4294967296L);

		columnBitmasks.put("bonaGroundSummaryType", 8589934592L);

		columnBitmasks.put("bonaGroundSummaryCCRating", 17179869184L);

		columnBitmasks.put("bonaGroundSummaryCommentary", 34359738368L);

		columnBitmasks.put("bonaGroundDescription", 68719476736L);

		columnBitmasks.put("tourismApplicationId", 137438953472L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private TourismBonaGroundTransportatioCarRental _escapedModel;

}