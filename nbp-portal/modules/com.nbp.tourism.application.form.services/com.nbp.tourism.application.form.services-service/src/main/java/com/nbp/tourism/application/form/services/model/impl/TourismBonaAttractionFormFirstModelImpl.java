/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.tourism.application.form.services.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.tourism.application.form.services.model.TourismBonaAttractionFormFirst;
import com.nbp.tourism.application.form.services.model.TourismBonaAttractionFormFirstModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the TourismBonaAttractionFormFirst service. Represents a row in the &quot;nbp_tourism_bona_attraction_ff&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>TourismBonaAttractionFormFirstModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TourismBonaAttractionFormFirstImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TourismBonaAttractionFormFirstImpl
 * @generated
 */
@JSON(strict = true)
public class TourismBonaAttractionFormFirstModelImpl
	extends BaseModelImpl<TourismBonaAttractionFormFirst>
	implements TourismBonaAttractionFormFirstModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tourism bona attraction form first model instance should use the <code>TourismBonaAttractionFormFirst</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_tourism_bona_attraction_ff";

	public static final Object[][] TABLE_COLUMNS = {
		{"tourismBonaAttractFormFirstId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"bonaAttractDateOfApplication", Types.TIMESTAMP},
		{"bonaTypeOfAttrcation", Types.VARCHAR},
		{"bonaAttractPurposeOfIncentives", Types.VARCHAR},
		{"bonaAttractOtherIncPurpose", Types.VARCHAR},
		{"bonaAttractionNameOfProperty", Types.VARCHAR},
		{"bonaAttractionNameOfOwner", Types.VARCHAR},
		{"bonaAttractionLocation", Types.VARCHAR},
		{"bonaAttractionCompanyNumber", Types.VARCHAR},
		{"bonaAttractionBusinessRegisNo", Types.VARCHAR},
		{"bonaAttractionDateOfRegis", Types.TIMESTAMP},
		{"bonaAttractionOwnerTrnNumber", Types.VARCHAR},
		{"bonaAttractionTccNumber", Types.VARCHAR},
		{"bonaAttractionExpiryDate", Types.TIMESTAMP},
		{"bonaAttractionNameOfOperator", Types.VARCHAR},
		{"bonaAttractionoperatorTrnNo", Types.VARCHAR},
		{"bonattractionOperatorTccNO", Types.VARCHAR},
		{"bonaAttractOperatorExpiryDate", Types.TIMESTAMP},
		{"bonaAttractContactPerson", Types.VARCHAR},
		{"bonaAttractPositionHeld", Types.VARCHAR},
		{"bonaAttractEntityId", Types.VARCHAR},
		{"bonaAttractionBriefdescription", Types.VARCHAR},
		{"tourismApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("tourismBonaAttractFormFirstId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("bonaAttractDateOfApplication", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("bonaTypeOfAttrcation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractPurposeOfIncentives", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractOtherIncPurpose", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractionNameOfProperty", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractionNameOfOwner", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractionLocation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractionCompanyNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractionBusinessRegisNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractionDateOfRegis", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("bonaAttractionOwnerTrnNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractionTccNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractionExpiryDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("bonaAttractionNameOfOperator", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractionoperatorTrnNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonattractionOperatorTccNO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractOperatorExpiryDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("bonaAttractContactPerson", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractPositionHeld", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractEntityId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractionBriefdescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tourismApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_tourism_bona_attraction_ff (tourismBonaAttractFormFirstId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,bonaAttractDateOfApplication DATE null,bonaTypeOfAttrcation VARCHAR(75) null,bonaAttractPurposeOfIncentives VARCHAR(75) null,bonaAttractOtherIncPurpose VARCHAR(75) null,bonaAttractionNameOfProperty VARCHAR(75) null,bonaAttractionNameOfOwner VARCHAR(75) null,bonaAttractionLocation VARCHAR(75) null,bonaAttractionCompanyNumber VARCHAR(75) null,bonaAttractionBusinessRegisNo VARCHAR(75) null,bonaAttractionDateOfRegis DATE null,bonaAttractionOwnerTrnNumber VARCHAR(75) null,bonaAttractionTccNumber VARCHAR(75) null,bonaAttractionExpiryDate DATE null,bonaAttractionNameOfOperator VARCHAR(75) null,bonaAttractionoperatorTrnNo VARCHAR(75) null,bonattractionOperatorTccNO VARCHAR(75) null,bonaAttractOperatorExpiryDate DATE null,bonaAttractContactPerson VARCHAR(75) null,bonaAttractPositionHeld VARCHAR(75) null,bonaAttractEntityId VARCHAR(75) null,bonaAttractionBriefdescription VARCHAR(500) null,tourismApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_tourism_bona_attraction_ff";

	public static final String ORDER_BY_JPQL =
		" ORDER BY tourismBonaAttractionFormFirst.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_tourism_bona_attraction_ff.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TOURISMAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public TourismBonaAttractionFormFirstModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _tourismBonaAttractFormFirstId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTourismBonaAttractFormFirstId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _tourismBonaAttractFormFirstId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TourismBonaAttractionFormFirst.class;
	}

	@Override
	public String getModelClassName() {
		return TourismBonaAttractionFormFirst.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<TourismBonaAttractionFormFirst, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<TourismBonaAttractionFormFirst, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismBonaAttractionFormFirst, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(TourismBonaAttractionFormFirst)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<TourismBonaAttractionFormFirst, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<TourismBonaAttractionFormFirst, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(TourismBonaAttractionFormFirst)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<TourismBonaAttractionFormFirst, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<TourismBonaAttractionFormFirst, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<TourismBonaAttractionFormFirst, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<TourismBonaAttractionFormFirst, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String,
						 Function<TourismBonaAttractionFormFirst, Object>>();

			attributeGetterFunctions.put(
				"tourismBonaAttractFormFirstId",
				TourismBonaAttractionFormFirst::
					getTourismBonaAttractFormFirstId);
			attributeGetterFunctions.put(
				"groupId", TourismBonaAttractionFormFirst::getGroupId);
			attributeGetterFunctions.put(
				"companyId", TourismBonaAttractionFormFirst::getCompanyId);
			attributeGetterFunctions.put(
				"userId", TourismBonaAttractionFormFirst::getUserId);
			attributeGetterFunctions.put(
				"userName", TourismBonaAttractionFormFirst::getUserName);
			attributeGetterFunctions.put(
				"createDate", TourismBonaAttractionFormFirst::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate",
				TourismBonaAttractionFormFirst::getModifiedDate);
			attributeGetterFunctions.put(
				"bonaAttractDateOfApplication",
				TourismBonaAttractionFormFirst::
					getBonaAttractDateOfApplication);
			attributeGetterFunctions.put(
				"bonaTypeOfAttrcation",
				TourismBonaAttractionFormFirst::getBonaTypeOfAttrcation);
			attributeGetterFunctions.put(
				"bonaAttractPurposeOfIncentives",
				TourismBonaAttractionFormFirst::
					getBonaAttractPurposeOfIncentives);
			attributeGetterFunctions.put(
				"bonaAttractOtherIncPurpose",
				TourismBonaAttractionFormFirst::getBonaAttractOtherIncPurpose);
			attributeGetterFunctions.put(
				"bonaAttractionNameOfProperty",
				TourismBonaAttractionFormFirst::
					getBonaAttractionNameOfProperty);
			attributeGetterFunctions.put(
				"bonaAttractionNameOfOwner",
				TourismBonaAttractionFormFirst::getBonaAttractionNameOfOwner);
			attributeGetterFunctions.put(
				"bonaAttractionLocation",
				TourismBonaAttractionFormFirst::getBonaAttractionLocation);
			attributeGetterFunctions.put(
				"bonaAttractionCompanyNumber",
				TourismBonaAttractionFormFirst::getBonaAttractionCompanyNumber);
			attributeGetterFunctions.put(
				"bonaAttractionBusinessRegisNo",
				TourismBonaAttractionFormFirst::
					getBonaAttractionBusinessRegisNo);
			attributeGetterFunctions.put(
				"bonaAttractionDateOfRegis",
				TourismBonaAttractionFormFirst::getBonaAttractionDateOfRegis);
			attributeGetterFunctions.put(
				"bonaAttractionOwnerTrnNumber",
				TourismBonaAttractionFormFirst::
					getBonaAttractionOwnerTrnNumber);
			attributeGetterFunctions.put(
				"bonaAttractionTccNumber",
				TourismBonaAttractionFormFirst::getBonaAttractionTccNumber);
			attributeGetterFunctions.put(
				"bonaAttractionExpiryDate",
				TourismBonaAttractionFormFirst::getBonaAttractionExpiryDate);
			attributeGetterFunctions.put(
				"bonaAttractionNameOfOperator",
				TourismBonaAttractionFormFirst::
					getBonaAttractionNameOfOperator);
			attributeGetterFunctions.put(
				"bonaAttractionoperatorTrnNo",
				TourismBonaAttractionFormFirst::getBonaAttractionoperatorTrnNo);
			attributeGetterFunctions.put(
				"bonattractionOperatorTccNO",
				TourismBonaAttractionFormFirst::getBonattractionOperatorTccNO);
			attributeGetterFunctions.put(
				"bonaAttractOperatorExpiryDate",
				TourismBonaAttractionFormFirst::
					getBonaAttractOperatorExpiryDate);
			attributeGetterFunctions.put(
				"bonaAttractContactPerson",
				TourismBonaAttractionFormFirst::getBonaAttractContactPerson);
			attributeGetterFunctions.put(
				"bonaAttractPositionHeld",
				TourismBonaAttractionFormFirst::getBonaAttractPositionHeld);
			attributeGetterFunctions.put(
				"bonaAttractEntityId",
				TourismBonaAttractionFormFirst::getBonaAttractEntityId);
			attributeGetterFunctions.put(
				"bonaAttractionBriefdescription",
				TourismBonaAttractionFormFirst::
					getBonaAttractionBriefdescription);
			attributeGetterFunctions.put(
				"tourismApplicationId",
				TourismBonaAttractionFormFirst::getTourismApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<TourismBonaAttractionFormFirst, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<TourismBonaAttractionFormFirst, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String,
						 BiConsumer<TourismBonaAttractionFormFirst, ?>>();

			attributeSetterBiConsumers.put(
				"tourismBonaAttractFormFirstId",
				(BiConsumer<TourismBonaAttractionFormFirst, Long>)
					TourismBonaAttractionFormFirst::
						setTourismBonaAttractFormFirstId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<TourismBonaAttractionFormFirst, Long>)
					TourismBonaAttractionFormFirst::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<TourismBonaAttractionFormFirst, Long>)
					TourismBonaAttractionFormFirst::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<TourismBonaAttractionFormFirst, Long>)
					TourismBonaAttractionFormFirst::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<TourismBonaAttractionFormFirst, String>)
					TourismBonaAttractionFormFirst::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<TourismBonaAttractionFormFirst, Date>)
					TourismBonaAttractionFormFirst::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<TourismBonaAttractionFormFirst, Date>)
					TourismBonaAttractionFormFirst::setModifiedDate);
			attributeSetterBiConsumers.put(
				"bonaAttractDateOfApplication",
				(BiConsumer<TourismBonaAttractionFormFirst, Date>)
					TourismBonaAttractionFormFirst::
						setBonaAttractDateOfApplication);
			attributeSetterBiConsumers.put(
				"bonaTypeOfAttrcation",
				(BiConsumer<TourismBonaAttractionFormFirst, String>)
					TourismBonaAttractionFormFirst::setBonaTypeOfAttrcation);
			attributeSetterBiConsumers.put(
				"bonaAttractPurposeOfIncentives",
				(BiConsumer<TourismBonaAttractionFormFirst, String>)
					TourismBonaAttractionFormFirst::
						setBonaAttractPurposeOfIncentives);
			attributeSetterBiConsumers.put(
				"bonaAttractOtherIncPurpose",
				(BiConsumer<TourismBonaAttractionFormFirst, String>)
					TourismBonaAttractionFormFirst::
						setBonaAttractOtherIncPurpose);
			attributeSetterBiConsumers.put(
				"bonaAttractionNameOfProperty",
				(BiConsumer<TourismBonaAttractionFormFirst, String>)
					TourismBonaAttractionFormFirst::
						setBonaAttractionNameOfProperty);
			attributeSetterBiConsumers.put(
				"bonaAttractionNameOfOwner",
				(BiConsumer<TourismBonaAttractionFormFirst, String>)
					TourismBonaAttractionFormFirst::
						setBonaAttractionNameOfOwner);
			attributeSetterBiConsumers.put(
				"bonaAttractionLocation",
				(BiConsumer<TourismBonaAttractionFormFirst, String>)
					TourismBonaAttractionFormFirst::setBonaAttractionLocation);
			attributeSetterBiConsumers.put(
				"bonaAttractionCompanyNumber",
				(BiConsumer<TourismBonaAttractionFormFirst, String>)
					TourismBonaAttractionFormFirst::
						setBonaAttractionCompanyNumber);
			attributeSetterBiConsumers.put(
				"bonaAttractionBusinessRegisNo",
				(BiConsumer<TourismBonaAttractionFormFirst, String>)
					TourismBonaAttractionFormFirst::
						setBonaAttractionBusinessRegisNo);
			attributeSetterBiConsumers.put(
				"bonaAttractionDateOfRegis",
				(BiConsumer<TourismBonaAttractionFormFirst, Date>)
					TourismBonaAttractionFormFirst::
						setBonaAttractionDateOfRegis);
			attributeSetterBiConsumers.put(
				"bonaAttractionOwnerTrnNumber",
				(BiConsumer<TourismBonaAttractionFormFirst, String>)
					TourismBonaAttractionFormFirst::
						setBonaAttractionOwnerTrnNumber);
			attributeSetterBiConsumers.put(
				"bonaAttractionTccNumber",
				(BiConsumer<TourismBonaAttractionFormFirst, String>)
					TourismBonaAttractionFormFirst::setBonaAttractionTccNumber);
			attributeSetterBiConsumers.put(
				"bonaAttractionExpiryDate",
				(BiConsumer<TourismBonaAttractionFormFirst, Date>)
					TourismBonaAttractionFormFirst::
						setBonaAttractionExpiryDate);
			attributeSetterBiConsumers.put(
				"bonaAttractionNameOfOperator",
				(BiConsumer<TourismBonaAttractionFormFirst, String>)
					TourismBonaAttractionFormFirst::
						setBonaAttractionNameOfOperator);
			attributeSetterBiConsumers.put(
				"bonaAttractionoperatorTrnNo",
				(BiConsumer<TourismBonaAttractionFormFirst, String>)
					TourismBonaAttractionFormFirst::
						setBonaAttractionoperatorTrnNo);
			attributeSetterBiConsumers.put(
				"bonattractionOperatorTccNO",
				(BiConsumer<TourismBonaAttractionFormFirst, String>)
					TourismBonaAttractionFormFirst::
						setBonattractionOperatorTccNO);
			attributeSetterBiConsumers.put(
				"bonaAttractOperatorExpiryDate",
				(BiConsumer<TourismBonaAttractionFormFirst, Date>)
					TourismBonaAttractionFormFirst::
						setBonaAttractOperatorExpiryDate);
			attributeSetterBiConsumers.put(
				"bonaAttractContactPerson",
				(BiConsumer<TourismBonaAttractionFormFirst, String>)
					TourismBonaAttractionFormFirst::
						setBonaAttractContactPerson);
			attributeSetterBiConsumers.put(
				"bonaAttractPositionHeld",
				(BiConsumer<TourismBonaAttractionFormFirst, String>)
					TourismBonaAttractionFormFirst::setBonaAttractPositionHeld);
			attributeSetterBiConsumers.put(
				"bonaAttractEntityId",
				(BiConsumer<TourismBonaAttractionFormFirst, String>)
					TourismBonaAttractionFormFirst::setBonaAttractEntityId);
			attributeSetterBiConsumers.put(
				"bonaAttractionBriefdescription",
				(BiConsumer<TourismBonaAttractionFormFirst, String>)
					TourismBonaAttractionFormFirst::
						setBonaAttractionBriefdescription);
			attributeSetterBiConsumers.put(
				"tourismApplicationId",
				(BiConsumer<TourismBonaAttractionFormFirst, Long>)
					TourismBonaAttractionFormFirst::setTourismApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getTourismBonaAttractFormFirstId() {
		return _tourismBonaAttractFormFirstId;
	}

	@Override
	public void setTourismBonaAttractFormFirstId(
		long tourismBonaAttractFormFirstId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismBonaAttractFormFirstId = tourismBonaAttractFormFirstId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public Date getBonaAttractDateOfApplication() {
		return _bonaAttractDateOfApplication;
	}

	@Override
	public void setBonaAttractDateOfApplication(
		Date bonaAttractDateOfApplication) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractDateOfApplication = bonaAttractDateOfApplication;
	}

	@JSON
	@Override
	public String getBonaTypeOfAttrcation() {
		if (_bonaTypeOfAttrcation == null) {
			return "";
		}
		else {
			return _bonaTypeOfAttrcation;
		}
	}

	@Override
	public void setBonaTypeOfAttrcation(String bonaTypeOfAttrcation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaTypeOfAttrcation = bonaTypeOfAttrcation;
	}

	@JSON
	@Override
	public String getBonaAttractPurposeOfIncentives() {
		if (_bonaAttractPurposeOfIncentives == null) {
			return "";
		}
		else {
			return _bonaAttractPurposeOfIncentives;
		}
	}

	@Override
	public void setBonaAttractPurposeOfIncentives(
		String bonaAttractPurposeOfIncentives) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractPurposeOfIncentives = bonaAttractPurposeOfIncentives;
	}

	@JSON
	@Override
	public String getBonaAttractOtherIncPurpose() {
		if (_bonaAttractOtherIncPurpose == null) {
			return "";
		}
		else {
			return _bonaAttractOtherIncPurpose;
		}
	}

	@Override
	public void setBonaAttractOtherIncPurpose(
		String bonaAttractOtherIncPurpose) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractOtherIncPurpose = bonaAttractOtherIncPurpose;
	}

	@JSON
	@Override
	public String getBonaAttractionNameOfProperty() {
		if (_bonaAttractionNameOfProperty == null) {
			return "";
		}
		else {
			return _bonaAttractionNameOfProperty;
		}
	}

	@Override
	public void setBonaAttractionNameOfProperty(
		String bonaAttractionNameOfProperty) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractionNameOfProperty = bonaAttractionNameOfProperty;
	}

	@JSON
	@Override
	public String getBonaAttractionNameOfOwner() {
		if (_bonaAttractionNameOfOwner == null) {
			return "";
		}
		else {
			return _bonaAttractionNameOfOwner;
		}
	}

	@Override
	public void setBonaAttractionNameOfOwner(String bonaAttractionNameOfOwner) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractionNameOfOwner = bonaAttractionNameOfOwner;
	}

	@JSON
	@Override
	public String getBonaAttractionLocation() {
		if (_bonaAttractionLocation == null) {
			return "";
		}
		else {
			return _bonaAttractionLocation;
		}
	}

	@Override
	public void setBonaAttractionLocation(String bonaAttractionLocation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractionLocation = bonaAttractionLocation;
	}

	@JSON
	@Override
	public String getBonaAttractionCompanyNumber() {
		if (_bonaAttractionCompanyNumber == null) {
			return "";
		}
		else {
			return _bonaAttractionCompanyNumber;
		}
	}

	@Override
	public void setBonaAttractionCompanyNumber(
		String bonaAttractionCompanyNumber) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractionCompanyNumber = bonaAttractionCompanyNumber;
	}

	@JSON
	@Override
	public String getBonaAttractionBusinessRegisNo() {
		if (_bonaAttractionBusinessRegisNo == null) {
			return "";
		}
		else {
			return _bonaAttractionBusinessRegisNo;
		}
	}

	@Override
	public void setBonaAttractionBusinessRegisNo(
		String bonaAttractionBusinessRegisNo) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractionBusinessRegisNo = bonaAttractionBusinessRegisNo;
	}

	@JSON
	@Override
	public Date getBonaAttractionDateOfRegis() {
		return _bonaAttractionDateOfRegis;
	}

	@Override
	public void setBonaAttractionDateOfRegis(Date bonaAttractionDateOfRegis) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractionDateOfRegis = bonaAttractionDateOfRegis;
	}

	@JSON
	@Override
	public String getBonaAttractionOwnerTrnNumber() {
		if (_bonaAttractionOwnerTrnNumber == null) {
			return "";
		}
		else {
			return _bonaAttractionOwnerTrnNumber;
		}
	}

	@Override
	public void setBonaAttractionOwnerTrnNumber(
		String bonaAttractionOwnerTrnNumber) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractionOwnerTrnNumber = bonaAttractionOwnerTrnNumber;
	}

	@JSON
	@Override
	public String getBonaAttractionTccNumber() {
		if (_bonaAttractionTccNumber == null) {
			return "";
		}
		else {
			return _bonaAttractionTccNumber;
		}
	}

	@Override
	public void setBonaAttractionTccNumber(String bonaAttractionTccNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractionTccNumber = bonaAttractionTccNumber;
	}

	@JSON
	@Override
	public Date getBonaAttractionExpiryDate() {
		return _bonaAttractionExpiryDate;
	}

	@Override
	public void setBonaAttractionExpiryDate(Date bonaAttractionExpiryDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractionExpiryDate = bonaAttractionExpiryDate;
	}

	@JSON
	@Override
	public String getBonaAttractionNameOfOperator() {
		if (_bonaAttractionNameOfOperator == null) {
			return "";
		}
		else {
			return _bonaAttractionNameOfOperator;
		}
	}

	@Override
	public void setBonaAttractionNameOfOperator(
		String bonaAttractionNameOfOperator) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractionNameOfOperator = bonaAttractionNameOfOperator;
	}

	@JSON
	@Override
	public String getBonaAttractionoperatorTrnNo() {
		if (_bonaAttractionoperatorTrnNo == null) {
			return "";
		}
		else {
			return _bonaAttractionoperatorTrnNo;
		}
	}

	@Override
	public void setBonaAttractionoperatorTrnNo(
		String bonaAttractionoperatorTrnNo) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractionoperatorTrnNo = bonaAttractionoperatorTrnNo;
	}

	@JSON
	@Override
	public String getBonattractionOperatorTccNO() {
		if (_bonattractionOperatorTccNO == null) {
			return "";
		}
		else {
			return _bonattractionOperatorTccNO;
		}
	}

	@Override
	public void setBonattractionOperatorTccNO(
		String bonattractionOperatorTccNO) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonattractionOperatorTccNO = bonattractionOperatorTccNO;
	}

	@JSON
	@Override
	public Date getBonaAttractOperatorExpiryDate() {
		return _bonaAttractOperatorExpiryDate;
	}

	@Override
	public void setBonaAttractOperatorExpiryDate(
		Date bonaAttractOperatorExpiryDate) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractOperatorExpiryDate = bonaAttractOperatorExpiryDate;
	}

	@JSON
	@Override
	public String getBonaAttractContactPerson() {
		if (_bonaAttractContactPerson == null) {
			return "";
		}
		else {
			return _bonaAttractContactPerson;
		}
	}

	@Override
	public void setBonaAttractContactPerson(String bonaAttractContactPerson) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractContactPerson = bonaAttractContactPerson;
	}

	@JSON
	@Override
	public String getBonaAttractPositionHeld() {
		if (_bonaAttractPositionHeld == null) {
			return "";
		}
		else {
			return _bonaAttractPositionHeld;
		}
	}

	@Override
	public void setBonaAttractPositionHeld(String bonaAttractPositionHeld) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractPositionHeld = bonaAttractPositionHeld;
	}

	@JSON
	@Override
	public String getBonaAttractEntityId() {
		if (_bonaAttractEntityId == null) {
			return "";
		}
		else {
			return _bonaAttractEntityId;
		}
	}

	@Override
	public void setBonaAttractEntityId(String bonaAttractEntityId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractEntityId = bonaAttractEntityId;
	}

	@JSON
	@Override
	public String getBonaAttractionBriefdescription() {
		if (_bonaAttractionBriefdescription == null) {
			return "";
		}
		else {
			return _bonaAttractionBriefdescription;
		}
	}

	@Override
	public void setBonaAttractionBriefdescription(
		String bonaAttractionBriefdescription) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractionBriefdescription = bonaAttractionBriefdescription;
	}

	@JSON
	@Override
	public long getTourismApplicationId() {
		return _tourismApplicationId;
	}

	@Override
	public void setTourismApplicationId(long tourismApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismApplicationId = tourismApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalTourismApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), TourismBonaAttractionFormFirst.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TourismBonaAttractionFormFirst toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, TourismBonaAttractionFormFirst>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TourismBonaAttractionFormFirstImpl tourismBonaAttractionFormFirstImpl =
			new TourismBonaAttractionFormFirstImpl();

		tourismBonaAttractionFormFirstImpl.setTourismBonaAttractFormFirstId(
			getTourismBonaAttractFormFirstId());
		tourismBonaAttractionFormFirstImpl.setGroupId(getGroupId());
		tourismBonaAttractionFormFirstImpl.setCompanyId(getCompanyId());
		tourismBonaAttractionFormFirstImpl.setUserId(getUserId());
		tourismBonaAttractionFormFirstImpl.setUserName(getUserName());
		tourismBonaAttractionFormFirstImpl.setCreateDate(getCreateDate());
		tourismBonaAttractionFormFirstImpl.setModifiedDate(getModifiedDate());
		tourismBonaAttractionFormFirstImpl.setBonaAttractDateOfApplication(
			getBonaAttractDateOfApplication());
		tourismBonaAttractionFormFirstImpl.setBonaTypeOfAttrcation(
			getBonaTypeOfAttrcation());
		tourismBonaAttractionFormFirstImpl.setBonaAttractPurposeOfIncentives(
			getBonaAttractPurposeOfIncentives());
		tourismBonaAttractionFormFirstImpl.setBonaAttractOtherIncPurpose(
			getBonaAttractOtherIncPurpose());
		tourismBonaAttractionFormFirstImpl.setBonaAttractionNameOfProperty(
			getBonaAttractionNameOfProperty());
		tourismBonaAttractionFormFirstImpl.setBonaAttractionNameOfOwner(
			getBonaAttractionNameOfOwner());
		tourismBonaAttractionFormFirstImpl.setBonaAttractionLocation(
			getBonaAttractionLocation());
		tourismBonaAttractionFormFirstImpl.setBonaAttractionCompanyNumber(
			getBonaAttractionCompanyNumber());
		tourismBonaAttractionFormFirstImpl.setBonaAttractionBusinessRegisNo(
			getBonaAttractionBusinessRegisNo());
		tourismBonaAttractionFormFirstImpl.setBonaAttractionDateOfRegis(
			getBonaAttractionDateOfRegis());
		tourismBonaAttractionFormFirstImpl.setBonaAttractionOwnerTrnNumber(
			getBonaAttractionOwnerTrnNumber());
		tourismBonaAttractionFormFirstImpl.setBonaAttractionTccNumber(
			getBonaAttractionTccNumber());
		tourismBonaAttractionFormFirstImpl.setBonaAttractionExpiryDate(
			getBonaAttractionExpiryDate());
		tourismBonaAttractionFormFirstImpl.setBonaAttractionNameOfOperator(
			getBonaAttractionNameOfOperator());
		tourismBonaAttractionFormFirstImpl.setBonaAttractionoperatorTrnNo(
			getBonaAttractionoperatorTrnNo());
		tourismBonaAttractionFormFirstImpl.setBonattractionOperatorTccNO(
			getBonattractionOperatorTccNO());
		tourismBonaAttractionFormFirstImpl.setBonaAttractOperatorExpiryDate(
			getBonaAttractOperatorExpiryDate());
		tourismBonaAttractionFormFirstImpl.setBonaAttractContactPerson(
			getBonaAttractContactPerson());
		tourismBonaAttractionFormFirstImpl.setBonaAttractPositionHeld(
			getBonaAttractPositionHeld());
		tourismBonaAttractionFormFirstImpl.setBonaAttractEntityId(
			getBonaAttractEntityId());
		tourismBonaAttractionFormFirstImpl.setBonaAttractionBriefdescription(
			getBonaAttractionBriefdescription());
		tourismBonaAttractionFormFirstImpl.setTourismApplicationId(
			getTourismApplicationId());

		tourismBonaAttractionFormFirstImpl.resetOriginalValues();

		return tourismBonaAttractionFormFirstImpl;
	}

	@Override
	public TourismBonaAttractionFormFirst cloneWithOriginalValues() {
		TourismBonaAttractionFormFirstImpl tourismBonaAttractionFormFirstImpl =
			new TourismBonaAttractionFormFirstImpl();

		tourismBonaAttractionFormFirstImpl.setTourismBonaAttractFormFirstId(
			this.<Long>getColumnOriginalValue("tourismBonaAttractFormFirstId"));
		tourismBonaAttractionFormFirstImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		tourismBonaAttractionFormFirstImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		tourismBonaAttractionFormFirstImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		tourismBonaAttractionFormFirstImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		tourismBonaAttractionFormFirstImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		tourismBonaAttractionFormFirstImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractDateOfApplication(
			this.<Date>getColumnOriginalValue("bonaAttractDateOfApplication"));
		tourismBonaAttractionFormFirstImpl.setBonaTypeOfAttrcation(
			this.<String>getColumnOriginalValue("bonaTypeOfAttrcation"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractPurposeOfIncentives(
			this.<String>getColumnOriginalValue(
				"bonaAttractPurposeOfIncentives"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractOtherIncPurpose(
			this.<String>getColumnOriginalValue("bonaAttractOtherIncPurpose"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractionNameOfProperty(
			this.<String>getColumnOriginalValue(
				"bonaAttractionNameOfProperty"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractionNameOfOwner(
			this.<String>getColumnOriginalValue("bonaAttractionNameOfOwner"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractionLocation(
			this.<String>getColumnOriginalValue("bonaAttractionLocation"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractionCompanyNumber(
			this.<String>getColumnOriginalValue("bonaAttractionCompanyNumber"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractionBusinessRegisNo(
			this.<String>getColumnOriginalValue(
				"bonaAttractionBusinessRegisNo"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractionDateOfRegis(
			this.<Date>getColumnOriginalValue("bonaAttractionDateOfRegis"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractionOwnerTrnNumber(
			this.<String>getColumnOriginalValue(
				"bonaAttractionOwnerTrnNumber"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractionTccNumber(
			this.<String>getColumnOriginalValue("bonaAttractionTccNumber"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractionExpiryDate(
			this.<Date>getColumnOriginalValue("bonaAttractionExpiryDate"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractionNameOfOperator(
			this.<String>getColumnOriginalValue(
				"bonaAttractionNameOfOperator"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractionoperatorTrnNo(
			this.<String>getColumnOriginalValue("bonaAttractionoperatorTrnNo"));
		tourismBonaAttractionFormFirstImpl.setBonattractionOperatorTccNO(
			this.<String>getColumnOriginalValue("bonattractionOperatorTccNO"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractOperatorExpiryDate(
			this.<Date>getColumnOriginalValue("bonaAttractOperatorExpiryDate"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractContactPerson(
			this.<String>getColumnOriginalValue("bonaAttractContactPerson"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractPositionHeld(
			this.<String>getColumnOriginalValue("bonaAttractPositionHeld"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractEntityId(
			this.<String>getColumnOriginalValue("bonaAttractEntityId"));
		tourismBonaAttractionFormFirstImpl.setBonaAttractionBriefdescription(
			this.<String>getColumnOriginalValue(
				"bonaAttractionBriefdescription"));
		tourismBonaAttractionFormFirstImpl.setTourismApplicationId(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));

		return tourismBonaAttractionFormFirstImpl;
	}

	@Override
	public int compareTo(
		TourismBonaAttractionFormFirst tourismBonaAttractionFormFirst) {

		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), tourismBonaAttractionFormFirst.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof TourismBonaAttractionFormFirst)) {
			return false;
		}

		TourismBonaAttractionFormFirst tourismBonaAttractionFormFirst =
			(TourismBonaAttractionFormFirst)object;

		long primaryKey = tourismBonaAttractionFormFirst.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<TourismBonaAttractionFormFirst> toCacheModel() {
		TourismBonaAttractionFormFirstCacheModel
			tourismBonaAttractionFormFirstCacheModel =
				new TourismBonaAttractionFormFirstCacheModel();

		tourismBonaAttractionFormFirstCacheModel.tourismBonaAttractFormFirstId =
			getTourismBonaAttractFormFirstId();

		tourismBonaAttractionFormFirstCacheModel.groupId = getGroupId();

		tourismBonaAttractionFormFirstCacheModel.companyId = getCompanyId();

		tourismBonaAttractionFormFirstCacheModel.userId = getUserId();

		tourismBonaAttractionFormFirstCacheModel.userName = getUserName();

		String userName = tourismBonaAttractionFormFirstCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			tourismBonaAttractionFormFirstCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			tourismBonaAttractionFormFirstCacheModel.createDate =
				createDate.getTime();
		}
		else {
			tourismBonaAttractionFormFirstCacheModel.createDate =
				Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			tourismBonaAttractionFormFirstCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			tourismBonaAttractionFormFirstCacheModel.modifiedDate =
				Long.MIN_VALUE;
		}

		Date bonaAttractDateOfApplication = getBonaAttractDateOfApplication();

		if (bonaAttractDateOfApplication != null) {
			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractDateOfApplication =
					bonaAttractDateOfApplication.getTime();
		}
		else {
			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractDateOfApplication = Long.MIN_VALUE;
		}

		tourismBonaAttractionFormFirstCacheModel.bonaTypeOfAttrcation =
			getBonaTypeOfAttrcation();

		String bonaTypeOfAttrcation =
			tourismBonaAttractionFormFirstCacheModel.bonaTypeOfAttrcation;

		if ((bonaTypeOfAttrcation != null) &&
			(bonaTypeOfAttrcation.length() == 0)) {

			tourismBonaAttractionFormFirstCacheModel.bonaTypeOfAttrcation =
				null;
		}

		tourismBonaAttractionFormFirstCacheModel.
			bonaAttractPurposeOfIncentives =
				getBonaAttractPurposeOfIncentives();

		String bonaAttractPurposeOfIncentives =
			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractPurposeOfIncentives;

		if ((bonaAttractPurposeOfIncentives != null) &&
			(bonaAttractPurposeOfIncentives.length() == 0)) {

			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractPurposeOfIncentives = null;
		}

		tourismBonaAttractionFormFirstCacheModel.bonaAttractOtherIncPurpose =
			getBonaAttractOtherIncPurpose();

		String bonaAttractOtherIncPurpose =
			tourismBonaAttractionFormFirstCacheModel.bonaAttractOtherIncPurpose;

		if ((bonaAttractOtherIncPurpose != null) &&
			(bonaAttractOtherIncPurpose.length() == 0)) {

			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractOtherIncPurpose = null;
		}

		tourismBonaAttractionFormFirstCacheModel.bonaAttractionNameOfProperty =
			getBonaAttractionNameOfProperty();

		String bonaAttractionNameOfProperty =
			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractionNameOfProperty;

		if ((bonaAttractionNameOfProperty != null) &&
			(bonaAttractionNameOfProperty.length() == 0)) {

			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractionNameOfProperty = null;
		}

		tourismBonaAttractionFormFirstCacheModel.bonaAttractionNameOfOwner =
			getBonaAttractionNameOfOwner();

		String bonaAttractionNameOfOwner =
			tourismBonaAttractionFormFirstCacheModel.bonaAttractionNameOfOwner;

		if ((bonaAttractionNameOfOwner != null) &&
			(bonaAttractionNameOfOwner.length() == 0)) {

			tourismBonaAttractionFormFirstCacheModel.bonaAttractionNameOfOwner =
				null;
		}

		tourismBonaAttractionFormFirstCacheModel.bonaAttractionLocation =
			getBonaAttractionLocation();

		String bonaAttractionLocation =
			tourismBonaAttractionFormFirstCacheModel.bonaAttractionLocation;

		if ((bonaAttractionLocation != null) &&
			(bonaAttractionLocation.length() == 0)) {

			tourismBonaAttractionFormFirstCacheModel.bonaAttractionLocation =
				null;
		}

		tourismBonaAttractionFormFirstCacheModel.bonaAttractionCompanyNumber =
			getBonaAttractionCompanyNumber();

		String bonaAttractionCompanyNumber =
			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractionCompanyNumber;

		if ((bonaAttractionCompanyNumber != null) &&
			(bonaAttractionCompanyNumber.length() == 0)) {

			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractionCompanyNumber = null;
		}

		tourismBonaAttractionFormFirstCacheModel.bonaAttractionBusinessRegisNo =
			getBonaAttractionBusinessRegisNo();

		String bonaAttractionBusinessRegisNo =
			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractionBusinessRegisNo;

		if ((bonaAttractionBusinessRegisNo != null) &&
			(bonaAttractionBusinessRegisNo.length() == 0)) {

			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractionBusinessRegisNo = null;
		}

		Date bonaAttractionDateOfRegis = getBonaAttractionDateOfRegis();

		if (bonaAttractionDateOfRegis != null) {
			tourismBonaAttractionFormFirstCacheModel.bonaAttractionDateOfRegis =
				bonaAttractionDateOfRegis.getTime();
		}
		else {
			tourismBonaAttractionFormFirstCacheModel.bonaAttractionDateOfRegis =
				Long.MIN_VALUE;
		}

		tourismBonaAttractionFormFirstCacheModel.bonaAttractionOwnerTrnNumber =
			getBonaAttractionOwnerTrnNumber();

		String bonaAttractionOwnerTrnNumber =
			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractionOwnerTrnNumber;

		if ((bonaAttractionOwnerTrnNumber != null) &&
			(bonaAttractionOwnerTrnNumber.length() == 0)) {

			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractionOwnerTrnNumber = null;
		}

		tourismBonaAttractionFormFirstCacheModel.bonaAttractionTccNumber =
			getBonaAttractionTccNumber();

		String bonaAttractionTccNumber =
			tourismBonaAttractionFormFirstCacheModel.bonaAttractionTccNumber;

		if ((bonaAttractionTccNumber != null) &&
			(bonaAttractionTccNumber.length() == 0)) {

			tourismBonaAttractionFormFirstCacheModel.bonaAttractionTccNumber =
				null;
		}

		Date bonaAttractionExpiryDate = getBonaAttractionExpiryDate();

		if (bonaAttractionExpiryDate != null) {
			tourismBonaAttractionFormFirstCacheModel.bonaAttractionExpiryDate =
				bonaAttractionExpiryDate.getTime();
		}
		else {
			tourismBonaAttractionFormFirstCacheModel.bonaAttractionExpiryDate =
				Long.MIN_VALUE;
		}

		tourismBonaAttractionFormFirstCacheModel.bonaAttractionNameOfOperator =
			getBonaAttractionNameOfOperator();

		String bonaAttractionNameOfOperator =
			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractionNameOfOperator;

		if ((bonaAttractionNameOfOperator != null) &&
			(bonaAttractionNameOfOperator.length() == 0)) {

			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractionNameOfOperator = null;
		}

		tourismBonaAttractionFormFirstCacheModel.bonaAttractionoperatorTrnNo =
			getBonaAttractionoperatorTrnNo();

		String bonaAttractionoperatorTrnNo =
			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractionoperatorTrnNo;

		if ((bonaAttractionoperatorTrnNo != null) &&
			(bonaAttractionoperatorTrnNo.length() == 0)) {

			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractionoperatorTrnNo = null;
		}

		tourismBonaAttractionFormFirstCacheModel.bonattractionOperatorTccNO =
			getBonattractionOperatorTccNO();

		String bonattractionOperatorTccNO =
			tourismBonaAttractionFormFirstCacheModel.bonattractionOperatorTccNO;

		if ((bonattractionOperatorTccNO != null) &&
			(bonattractionOperatorTccNO.length() == 0)) {

			tourismBonaAttractionFormFirstCacheModel.
				bonattractionOperatorTccNO = null;
		}

		Date bonaAttractOperatorExpiryDate = getBonaAttractOperatorExpiryDate();

		if (bonaAttractOperatorExpiryDate != null) {
			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractOperatorExpiryDate =
					bonaAttractOperatorExpiryDate.getTime();
		}
		else {
			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractOperatorExpiryDate = Long.MIN_VALUE;
		}

		tourismBonaAttractionFormFirstCacheModel.bonaAttractContactPerson =
			getBonaAttractContactPerson();

		String bonaAttractContactPerson =
			tourismBonaAttractionFormFirstCacheModel.bonaAttractContactPerson;

		if ((bonaAttractContactPerson != null) &&
			(bonaAttractContactPerson.length() == 0)) {

			tourismBonaAttractionFormFirstCacheModel.bonaAttractContactPerson =
				null;
		}

		tourismBonaAttractionFormFirstCacheModel.bonaAttractPositionHeld =
			getBonaAttractPositionHeld();

		String bonaAttractPositionHeld =
			tourismBonaAttractionFormFirstCacheModel.bonaAttractPositionHeld;

		if ((bonaAttractPositionHeld != null) &&
			(bonaAttractPositionHeld.length() == 0)) {

			tourismBonaAttractionFormFirstCacheModel.bonaAttractPositionHeld =
				null;
		}

		tourismBonaAttractionFormFirstCacheModel.bonaAttractEntityId =
			getBonaAttractEntityId();

		String bonaAttractEntityId =
			tourismBonaAttractionFormFirstCacheModel.bonaAttractEntityId;

		if ((bonaAttractEntityId != null) &&
			(bonaAttractEntityId.length() == 0)) {

			tourismBonaAttractionFormFirstCacheModel.bonaAttractEntityId = null;
		}

		tourismBonaAttractionFormFirstCacheModel.
			bonaAttractionBriefdescription =
				getBonaAttractionBriefdescription();

		String bonaAttractionBriefdescription =
			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractionBriefdescription;

		if ((bonaAttractionBriefdescription != null) &&
			(bonaAttractionBriefdescription.length() == 0)) {

			tourismBonaAttractionFormFirstCacheModel.
				bonaAttractionBriefdescription = null;
		}

		tourismBonaAttractionFormFirstCacheModel.tourismApplicationId =
			getTourismApplicationId();

		return tourismBonaAttractionFormFirstCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<TourismBonaAttractionFormFirst, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<TourismBonaAttractionFormFirst, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismBonaAttractionFormFirst, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(TourismBonaAttractionFormFirst)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, TourismBonaAttractionFormFirst>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						TourismBonaAttractionFormFirst.class,
						ModelWrapper.class);

	}

	private long _tourismBonaAttractFormFirstId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private Date _bonaAttractDateOfApplication;
	private String _bonaTypeOfAttrcation;
	private String _bonaAttractPurposeOfIncentives;
	private String _bonaAttractOtherIncPurpose;
	private String _bonaAttractionNameOfProperty;
	private String _bonaAttractionNameOfOwner;
	private String _bonaAttractionLocation;
	private String _bonaAttractionCompanyNumber;
	private String _bonaAttractionBusinessRegisNo;
	private Date _bonaAttractionDateOfRegis;
	private String _bonaAttractionOwnerTrnNumber;
	private String _bonaAttractionTccNumber;
	private Date _bonaAttractionExpiryDate;
	private String _bonaAttractionNameOfOperator;
	private String _bonaAttractionoperatorTrnNo;
	private String _bonattractionOperatorTccNO;
	private Date _bonaAttractOperatorExpiryDate;
	private String _bonaAttractContactPerson;
	private String _bonaAttractPositionHeld;
	private String _bonaAttractEntityId;
	private String _bonaAttractionBriefdescription;
	private long _tourismApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<TourismBonaAttractionFormFirst, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((TourismBonaAttractionFormFirst)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"tourismBonaAttractFormFirstId", _tourismBonaAttractFormFirstId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"bonaAttractDateOfApplication", _bonaAttractDateOfApplication);
		_columnOriginalValues.put(
			"bonaTypeOfAttrcation", _bonaTypeOfAttrcation);
		_columnOriginalValues.put(
			"bonaAttractPurposeOfIncentives", _bonaAttractPurposeOfIncentives);
		_columnOriginalValues.put(
			"bonaAttractOtherIncPurpose", _bonaAttractOtherIncPurpose);
		_columnOriginalValues.put(
			"bonaAttractionNameOfProperty", _bonaAttractionNameOfProperty);
		_columnOriginalValues.put(
			"bonaAttractionNameOfOwner", _bonaAttractionNameOfOwner);
		_columnOriginalValues.put(
			"bonaAttractionLocation", _bonaAttractionLocation);
		_columnOriginalValues.put(
			"bonaAttractionCompanyNumber", _bonaAttractionCompanyNumber);
		_columnOriginalValues.put(
			"bonaAttractionBusinessRegisNo", _bonaAttractionBusinessRegisNo);
		_columnOriginalValues.put(
			"bonaAttractionDateOfRegis", _bonaAttractionDateOfRegis);
		_columnOriginalValues.put(
			"bonaAttractionOwnerTrnNumber", _bonaAttractionOwnerTrnNumber);
		_columnOriginalValues.put(
			"bonaAttractionTccNumber", _bonaAttractionTccNumber);
		_columnOriginalValues.put(
			"bonaAttractionExpiryDate", _bonaAttractionExpiryDate);
		_columnOriginalValues.put(
			"bonaAttractionNameOfOperator", _bonaAttractionNameOfOperator);
		_columnOriginalValues.put(
			"bonaAttractionoperatorTrnNo", _bonaAttractionoperatorTrnNo);
		_columnOriginalValues.put(
			"bonattractionOperatorTccNO", _bonattractionOperatorTccNO);
		_columnOriginalValues.put(
			"bonaAttractOperatorExpiryDate", _bonaAttractOperatorExpiryDate);
		_columnOriginalValues.put(
			"bonaAttractContactPerson", _bonaAttractContactPerson);
		_columnOriginalValues.put(
			"bonaAttractPositionHeld", _bonaAttractPositionHeld);
		_columnOriginalValues.put("bonaAttractEntityId", _bonaAttractEntityId);
		_columnOriginalValues.put(
			"bonaAttractionBriefdescription", _bonaAttractionBriefdescription);
		_columnOriginalValues.put(
			"tourismApplicationId", _tourismApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("tourismBonaAttractFormFirstId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("bonaAttractDateOfApplication", 128L);

		columnBitmasks.put("bonaTypeOfAttrcation", 256L);

		columnBitmasks.put("bonaAttractPurposeOfIncentives", 512L);

		columnBitmasks.put("bonaAttractOtherIncPurpose", 1024L);

		columnBitmasks.put("bonaAttractionNameOfProperty", 2048L);

		columnBitmasks.put("bonaAttractionNameOfOwner", 4096L);

		columnBitmasks.put("bonaAttractionLocation", 8192L);

		columnBitmasks.put("bonaAttractionCompanyNumber", 16384L);

		columnBitmasks.put("bonaAttractionBusinessRegisNo", 32768L);

		columnBitmasks.put("bonaAttractionDateOfRegis", 65536L);

		columnBitmasks.put("bonaAttractionOwnerTrnNumber", 131072L);

		columnBitmasks.put("bonaAttractionTccNumber", 262144L);

		columnBitmasks.put("bonaAttractionExpiryDate", 524288L);

		columnBitmasks.put("bonaAttractionNameOfOperator", 1048576L);

		columnBitmasks.put("bonaAttractionoperatorTrnNo", 2097152L);

		columnBitmasks.put("bonattractionOperatorTccNO", 4194304L);

		columnBitmasks.put("bonaAttractOperatorExpiryDate", 8388608L);

		columnBitmasks.put("bonaAttractContactPerson", 16777216L);

		columnBitmasks.put("bonaAttractPositionHeld", 33554432L);

		columnBitmasks.put("bonaAttractEntityId", 67108864L);

		columnBitmasks.put("bonaAttractionBriefdescription", 134217728L);

		columnBitmasks.put("tourismApplicationId", 268435456L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private TourismBonaAttractionFormFirst _escapedModel;

}