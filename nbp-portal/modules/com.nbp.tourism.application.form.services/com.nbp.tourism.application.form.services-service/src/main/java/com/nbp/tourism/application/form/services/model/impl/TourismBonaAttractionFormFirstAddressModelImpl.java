/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.tourism.application.form.services.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.tourism.application.form.services.model.TourismBonaAttractionFormFirstAddress;
import com.nbp.tourism.application.form.services.model.TourismBonaAttractionFormFirstAddressModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the TourismBonaAttractionFormFirstAddress service. Represents a row in the &quot;nbp_tourism_bona_attract_ffa&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>TourismBonaAttractionFormFirstAddressModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TourismBonaAttractionFormFirstAddressImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TourismBonaAttractionFormFirstAddressImpl
 * @generated
 */
@JSON(strict = true)
public class TourismBonaAttractionFormFirstAddressModelImpl
	extends BaseModelImpl<TourismBonaAttractionFormFirstAddress>
	implements TourismBonaAttractionFormFirstAddressModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tourism bona attraction form first address model instance should use the <code>TourismBonaAttractionFormFirstAddress</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_tourism_bona_attract_ffa";

	public static final Object[][] TABLE_COLUMNS = {
		{"tourismBonaAttractionFFAOOId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"addressType", Types.VARCHAR}, {"bonaAttractAddress", Types.VARCHAR},
		{"bonaAttractionTelephoneNo", Types.VARCHAR},
		{"bonaAttractionFaxNumber", Types.VARCHAR},
		{"bonaAttractionEmail", Types.VARCHAR},
		{"tourismApplicationId", Types.BIGINT},
		{"tourismBonaAttractFormFirstId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("tourismBonaAttractionFFAOOId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("addressType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractionTelephoneNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractionFaxNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAttractionEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tourismApplicationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("tourismBonaAttractFormFirstId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_tourism_bona_attract_ffa (tourismBonaAttractionFFAOOId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,addressType VARCHAR(75) null,bonaAttractAddress VARCHAR(500) null,bonaAttractionTelephoneNo VARCHAR(75) null,bonaAttractionFaxNumber VARCHAR(75) null,bonaAttractionEmail VARCHAR(75) null,tourismApplicationId LONG,tourismBonaAttractFormFirstId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_tourism_bona_attract_ffa";

	public static final String ORDER_BY_JPQL =
		" ORDER BY tourismBonaAttractionFormFirstAddress.tourismBonaAttractionFFAOOId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_tourism_bona_attract_ffa.tourismBonaAttractionFFAOOId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ADDRESSTYPE_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TOURISMAPPLICATIONID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TOURISMBONAATTRACTFORMFIRSTID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TOURISMBONAATTRACTIONFFAOOID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public TourismBonaAttractionFormFirstAddressModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _tourismBonaAttractionFFAOOId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTourismBonaAttractionFFAOOId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _tourismBonaAttractionFFAOOId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TourismBonaAttractionFormFirstAddress.class;
	}

	@Override
	public String getModelClassName() {
		return TourismBonaAttractionFormFirstAddress.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<TourismBonaAttractionFormFirstAddress, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry
				<String,
				 Function<TourismBonaAttractionFormFirstAddress, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismBonaAttractionFormFirstAddress, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(TourismBonaAttractionFormFirstAddress)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<TourismBonaAttractionFormFirstAddress, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<TourismBonaAttractionFormFirstAddress, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(TourismBonaAttractionFormFirstAddress)this,
					entry.getValue());
			}
		}
	}

	public Map<String, Function<TourismBonaAttractionFormFirstAddress, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map
		<String, BiConsumer<TourismBonaAttractionFormFirstAddress, Object>>
			getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<TourismBonaAttractionFormFirstAddress, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<TourismBonaAttractionFormFirstAddress, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String,
						 Function
							 <TourismBonaAttractionFormFirstAddress, Object>>();

			attributeGetterFunctions.put(
				"tourismBonaAttractionFFAOOId",
				TourismBonaAttractionFormFirstAddress::
					getTourismBonaAttractionFFAOOId);
			attributeGetterFunctions.put(
				"groupId", TourismBonaAttractionFormFirstAddress::getGroupId);
			attributeGetterFunctions.put(
				"companyId",
				TourismBonaAttractionFormFirstAddress::getCompanyId);
			attributeGetterFunctions.put(
				"userId", TourismBonaAttractionFormFirstAddress::getUserId);
			attributeGetterFunctions.put(
				"userName", TourismBonaAttractionFormFirstAddress::getUserName);
			attributeGetterFunctions.put(
				"createDate",
				TourismBonaAttractionFormFirstAddress::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate",
				TourismBonaAttractionFormFirstAddress::getModifiedDate);
			attributeGetterFunctions.put(
				"addressType",
				TourismBonaAttractionFormFirstAddress::getAddressType);
			attributeGetterFunctions.put(
				"bonaAttractAddress",
				TourismBonaAttractionFormFirstAddress::getBonaAttractAddress);
			attributeGetterFunctions.put(
				"bonaAttractionTelephoneNo",
				TourismBonaAttractionFormFirstAddress::
					getBonaAttractionTelephoneNo);
			attributeGetterFunctions.put(
				"bonaAttractionFaxNumber",
				TourismBonaAttractionFormFirstAddress::
					getBonaAttractionFaxNumber);
			attributeGetterFunctions.put(
				"bonaAttractionEmail",
				TourismBonaAttractionFormFirstAddress::getBonaAttractionEmail);
			attributeGetterFunctions.put(
				"tourismApplicationId",
				TourismBonaAttractionFormFirstAddress::getTourismApplicationId);
			attributeGetterFunctions.put(
				"tourismBonaAttractFormFirstId",
				TourismBonaAttractionFormFirstAddress::
					getTourismBonaAttractFormFirstId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<TourismBonaAttractionFormFirstAddress, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<TourismBonaAttractionFormFirstAddress, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String,
						 BiConsumer
							 <TourismBonaAttractionFormFirstAddress, ?>>();

			attributeSetterBiConsumers.put(
				"tourismBonaAttractionFFAOOId",
				(BiConsumer<TourismBonaAttractionFormFirstAddress, Long>)
					TourismBonaAttractionFormFirstAddress::
						setTourismBonaAttractionFFAOOId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<TourismBonaAttractionFormFirstAddress, Long>)
					TourismBonaAttractionFormFirstAddress::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<TourismBonaAttractionFormFirstAddress, Long>)
					TourismBonaAttractionFormFirstAddress::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<TourismBonaAttractionFormFirstAddress, Long>)
					TourismBonaAttractionFormFirstAddress::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<TourismBonaAttractionFormFirstAddress, String>)
					TourismBonaAttractionFormFirstAddress::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<TourismBonaAttractionFormFirstAddress, Date>)
					TourismBonaAttractionFormFirstAddress::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<TourismBonaAttractionFormFirstAddress, Date>)
					TourismBonaAttractionFormFirstAddress::setModifiedDate);
			attributeSetterBiConsumers.put(
				"addressType",
				(BiConsumer<TourismBonaAttractionFormFirstAddress, String>)
					TourismBonaAttractionFormFirstAddress::setAddressType);
			attributeSetterBiConsumers.put(
				"bonaAttractAddress",
				(BiConsumer<TourismBonaAttractionFormFirstAddress, String>)
					TourismBonaAttractionFormFirstAddress::
						setBonaAttractAddress);
			attributeSetterBiConsumers.put(
				"bonaAttractionTelephoneNo",
				(BiConsumer<TourismBonaAttractionFormFirstAddress, String>)
					TourismBonaAttractionFormFirstAddress::
						setBonaAttractionTelephoneNo);
			attributeSetterBiConsumers.put(
				"bonaAttractionFaxNumber",
				(BiConsumer<TourismBonaAttractionFormFirstAddress, String>)
					TourismBonaAttractionFormFirstAddress::
						setBonaAttractionFaxNumber);
			attributeSetterBiConsumers.put(
				"bonaAttractionEmail",
				(BiConsumer<TourismBonaAttractionFormFirstAddress, String>)
					TourismBonaAttractionFormFirstAddress::
						setBonaAttractionEmail);
			attributeSetterBiConsumers.put(
				"tourismApplicationId",
				(BiConsumer<TourismBonaAttractionFormFirstAddress, Long>)
					TourismBonaAttractionFormFirstAddress::
						setTourismApplicationId);
			attributeSetterBiConsumers.put(
				"tourismBonaAttractFormFirstId",
				(BiConsumer<TourismBonaAttractionFormFirstAddress, Long>)
					TourismBonaAttractionFormFirstAddress::
						setTourismBonaAttractFormFirstId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getTourismBonaAttractionFFAOOId() {
		return _tourismBonaAttractionFFAOOId;
	}

	@Override
	public void setTourismBonaAttractionFFAOOId(
		long tourismBonaAttractionFFAOOId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismBonaAttractionFFAOOId = tourismBonaAttractionFFAOOId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getAddressType() {
		if (_addressType == null) {
			return "";
		}
		else {
			return _addressType;
		}
	}

	@Override
	public void setAddressType(String addressType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_addressType = addressType;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalAddressType() {
		return getColumnOriginalValue("addressType");
	}

	@JSON
	@Override
	public String getBonaAttractAddress() {
		if (_bonaAttractAddress == null) {
			return "";
		}
		else {
			return _bonaAttractAddress;
		}
	}

	@Override
	public void setBonaAttractAddress(String bonaAttractAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractAddress = bonaAttractAddress;
	}

	@JSON
	@Override
	public String getBonaAttractionTelephoneNo() {
		if (_bonaAttractionTelephoneNo == null) {
			return "";
		}
		else {
			return _bonaAttractionTelephoneNo;
		}
	}

	@Override
	public void setBonaAttractionTelephoneNo(String bonaAttractionTelephoneNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractionTelephoneNo = bonaAttractionTelephoneNo;
	}

	@JSON
	@Override
	public String getBonaAttractionFaxNumber() {
		if (_bonaAttractionFaxNumber == null) {
			return "";
		}
		else {
			return _bonaAttractionFaxNumber;
		}
	}

	@Override
	public void setBonaAttractionFaxNumber(String bonaAttractionFaxNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractionFaxNumber = bonaAttractionFaxNumber;
	}

	@JSON
	@Override
	public String getBonaAttractionEmail() {
		if (_bonaAttractionEmail == null) {
			return "";
		}
		else {
			return _bonaAttractionEmail;
		}
	}

	@Override
	public void setBonaAttractionEmail(String bonaAttractionEmail) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAttractionEmail = bonaAttractionEmail;
	}

	@JSON
	@Override
	public long getTourismApplicationId() {
		return _tourismApplicationId;
	}

	@Override
	public void setTourismApplicationId(long tourismApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismApplicationId = tourismApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalTourismApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));
	}

	@JSON
	@Override
	public long getTourismBonaAttractFormFirstId() {
		return _tourismBonaAttractFormFirstId;
	}

	@Override
	public void setTourismBonaAttractFormFirstId(
		long tourismBonaAttractFormFirstId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismBonaAttractFormFirstId = tourismBonaAttractFormFirstId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalTourismBonaAttractFormFirstId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("tourismBonaAttractFormFirstId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(),
			TourismBonaAttractionFormFirstAddress.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TourismBonaAttractionFormFirstAddress toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, TourismBonaAttractionFormFirstAddress>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TourismBonaAttractionFormFirstAddressImpl
			tourismBonaAttractionFormFirstAddressImpl =
				new TourismBonaAttractionFormFirstAddressImpl();

		tourismBonaAttractionFormFirstAddressImpl.
			setTourismBonaAttractionFFAOOId(getTourismBonaAttractionFFAOOId());
		tourismBonaAttractionFormFirstAddressImpl.setGroupId(getGroupId());
		tourismBonaAttractionFormFirstAddressImpl.setCompanyId(getCompanyId());
		tourismBonaAttractionFormFirstAddressImpl.setUserId(getUserId());
		tourismBonaAttractionFormFirstAddressImpl.setUserName(getUserName());
		tourismBonaAttractionFormFirstAddressImpl.setCreateDate(
			getCreateDate());
		tourismBonaAttractionFormFirstAddressImpl.setModifiedDate(
			getModifiedDate());
		tourismBonaAttractionFormFirstAddressImpl.setAddressType(
			getAddressType());
		tourismBonaAttractionFormFirstAddressImpl.setBonaAttractAddress(
			getBonaAttractAddress());
		tourismBonaAttractionFormFirstAddressImpl.setBonaAttractionTelephoneNo(
			getBonaAttractionTelephoneNo());
		tourismBonaAttractionFormFirstAddressImpl.setBonaAttractionFaxNumber(
			getBonaAttractionFaxNumber());
		tourismBonaAttractionFormFirstAddressImpl.setBonaAttractionEmail(
			getBonaAttractionEmail());
		tourismBonaAttractionFormFirstAddressImpl.setTourismApplicationId(
			getTourismApplicationId());
		tourismBonaAttractionFormFirstAddressImpl.
			setTourismBonaAttractFormFirstId(
				getTourismBonaAttractFormFirstId());

		tourismBonaAttractionFormFirstAddressImpl.resetOriginalValues();

		return tourismBonaAttractionFormFirstAddressImpl;
	}

	@Override
	public TourismBonaAttractionFormFirstAddress cloneWithOriginalValues() {
		TourismBonaAttractionFormFirstAddressImpl
			tourismBonaAttractionFormFirstAddressImpl =
				new TourismBonaAttractionFormFirstAddressImpl();

		tourismBonaAttractionFormFirstAddressImpl.
			setTourismBonaAttractionFFAOOId(
				this.<Long>getColumnOriginalValue(
					"tourismBonaAttractionFFAOOId"));
		tourismBonaAttractionFormFirstAddressImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		tourismBonaAttractionFormFirstAddressImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		tourismBonaAttractionFormFirstAddressImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		tourismBonaAttractionFormFirstAddressImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		tourismBonaAttractionFormFirstAddressImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		tourismBonaAttractionFormFirstAddressImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		tourismBonaAttractionFormFirstAddressImpl.setAddressType(
			this.<String>getColumnOriginalValue("addressType"));
		tourismBonaAttractionFormFirstAddressImpl.setBonaAttractAddress(
			this.<String>getColumnOriginalValue("bonaAttractAddress"));
		tourismBonaAttractionFormFirstAddressImpl.setBonaAttractionTelephoneNo(
			this.<String>getColumnOriginalValue("bonaAttractionTelephoneNo"));
		tourismBonaAttractionFormFirstAddressImpl.setBonaAttractionFaxNumber(
			this.<String>getColumnOriginalValue("bonaAttractionFaxNumber"));
		tourismBonaAttractionFormFirstAddressImpl.setBonaAttractionEmail(
			this.<String>getColumnOriginalValue("bonaAttractionEmail"));
		tourismBonaAttractionFormFirstAddressImpl.setTourismApplicationId(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));
		tourismBonaAttractionFormFirstAddressImpl.
			setTourismBonaAttractFormFirstId(
				this.<Long>getColumnOriginalValue(
					"tourismBonaAttractFormFirstId"));

		return tourismBonaAttractionFormFirstAddressImpl;
	}

	@Override
	public int compareTo(
		TourismBonaAttractionFormFirstAddress
			tourismBonaAttractionFormFirstAddress) {

		long primaryKey = tourismBonaAttractionFormFirstAddress.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof TourismBonaAttractionFormFirstAddress)) {
			return false;
		}

		TourismBonaAttractionFormFirstAddress
			tourismBonaAttractionFormFirstAddress =
				(TourismBonaAttractionFormFirstAddress)object;

		long primaryKey = tourismBonaAttractionFormFirstAddress.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<TourismBonaAttractionFormFirstAddress> toCacheModel() {
		TourismBonaAttractionFormFirstAddressCacheModel
			tourismBonaAttractionFormFirstAddressCacheModel =
				new TourismBonaAttractionFormFirstAddressCacheModel();

		tourismBonaAttractionFormFirstAddressCacheModel.
			tourismBonaAttractionFFAOOId = getTourismBonaAttractionFFAOOId();

		tourismBonaAttractionFormFirstAddressCacheModel.groupId = getGroupId();

		tourismBonaAttractionFormFirstAddressCacheModel.companyId =
			getCompanyId();

		tourismBonaAttractionFormFirstAddressCacheModel.userId = getUserId();

		tourismBonaAttractionFormFirstAddressCacheModel.userName =
			getUserName();

		String userName =
			tourismBonaAttractionFormFirstAddressCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			tourismBonaAttractionFormFirstAddressCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			tourismBonaAttractionFormFirstAddressCacheModel.createDate =
				createDate.getTime();
		}
		else {
			tourismBonaAttractionFormFirstAddressCacheModel.createDate =
				Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			tourismBonaAttractionFormFirstAddressCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			tourismBonaAttractionFormFirstAddressCacheModel.modifiedDate =
				Long.MIN_VALUE;
		}

		tourismBonaAttractionFormFirstAddressCacheModel.addressType =
			getAddressType();

		String addressType =
			tourismBonaAttractionFormFirstAddressCacheModel.addressType;

		if ((addressType != null) && (addressType.length() == 0)) {
			tourismBonaAttractionFormFirstAddressCacheModel.addressType = null;
		}

		tourismBonaAttractionFormFirstAddressCacheModel.bonaAttractAddress =
			getBonaAttractAddress();

		String bonaAttractAddress =
			tourismBonaAttractionFormFirstAddressCacheModel.bonaAttractAddress;

		if ((bonaAttractAddress != null) &&
			(bonaAttractAddress.length() == 0)) {

			tourismBonaAttractionFormFirstAddressCacheModel.bonaAttractAddress =
				null;
		}

		tourismBonaAttractionFormFirstAddressCacheModel.
			bonaAttractionTelephoneNo = getBonaAttractionTelephoneNo();

		String bonaAttractionTelephoneNo =
			tourismBonaAttractionFormFirstAddressCacheModel.
				bonaAttractionTelephoneNo;

		if ((bonaAttractionTelephoneNo != null) &&
			(bonaAttractionTelephoneNo.length() == 0)) {

			tourismBonaAttractionFormFirstAddressCacheModel.
				bonaAttractionTelephoneNo = null;
		}

		tourismBonaAttractionFormFirstAddressCacheModel.
			bonaAttractionFaxNumber = getBonaAttractionFaxNumber();

		String bonaAttractionFaxNumber =
			tourismBonaAttractionFormFirstAddressCacheModel.
				bonaAttractionFaxNumber;

		if ((bonaAttractionFaxNumber != null) &&
			(bonaAttractionFaxNumber.length() == 0)) {

			tourismBonaAttractionFormFirstAddressCacheModel.
				bonaAttractionFaxNumber = null;
		}

		tourismBonaAttractionFormFirstAddressCacheModel.bonaAttractionEmail =
			getBonaAttractionEmail();

		String bonaAttractionEmail =
			tourismBonaAttractionFormFirstAddressCacheModel.bonaAttractionEmail;

		if ((bonaAttractionEmail != null) &&
			(bonaAttractionEmail.length() == 0)) {

			tourismBonaAttractionFormFirstAddressCacheModel.
				bonaAttractionEmail = null;
		}

		tourismBonaAttractionFormFirstAddressCacheModel.tourismApplicationId =
			getTourismApplicationId();

		tourismBonaAttractionFormFirstAddressCacheModel.
			tourismBonaAttractFormFirstId = getTourismBonaAttractFormFirstId();

		return tourismBonaAttractionFormFirstAddressCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<TourismBonaAttractionFormFirstAddress, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry
				<String,
				 Function<TourismBonaAttractionFormFirstAddress, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismBonaAttractionFormFirstAddress, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(TourismBonaAttractionFormFirstAddress)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, TourismBonaAttractionFormFirstAddress>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						TourismBonaAttractionFormFirstAddress.class,
						ModelWrapper.class);

	}

	private long _tourismBonaAttractionFFAOOId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _addressType;
	private String _bonaAttractAddress;
	private String _bonaAttractionTelephoneNo;
	private String _bonaAttractionFaxNumber;
	private String _bonaAttractionEmail;
	private long _tourismApplicationId;
	private long _tourismBonaAttractFormFirstId;

	public <T> T getColumnValue(String columnName) {
		Function<TourismBonaAttractionFormFirstAddress, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((TourismBonaAttractionFormFirstAddress)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"tourismBonaAttractionFFAOOId", _tourismBonaAttractionFFAOOId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("addressType", _addressType);
		_columnOriginalValues.put("bonaAttractAddress", _bonaAttractAddress);
		_columnOriginalValues.put(
			"bonaAttractionTelephoneNo", _bonaAttractionTelephoneNo);
		_columnOriginalValues.put(
			"bonaAttractionFaxNumber", _bonaAttractionFaxNumber);
		_columnOriginalValues.put("bonaAttractionEmail", _bonaAttractionEmail);
		_columnOriginalValues.put(
			"tourismApplicationId", _tourismApplicationId);
		_columnOriginalValues.put(
			"tourismBonaAttractFormFirstId", _tourismBonaAttractFormFirstId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("tourismBonaAttractionFFAOOId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("addressType", 128L);

		columnBitmasks.put("bonaAttractAddress", 256L);

		columnBitmasks.put("bonaAttractionTelephoneNo", 512L);

		columnBitmasks.put("bonaAttractionFaxNumber", 1024L);

		columnBitmasks.put("bonaAttractionEmail", 2048L);

		columnBitmasks.put("tourismApplicationId", 4096L);

		columnBitmasks.put("tourismBonaAttractFormFirstId", 8192L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private TourismBonaAttractionFormFirstAddress _escapedModel;

}