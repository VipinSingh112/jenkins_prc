/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.tourism.application.form.services.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.tourism.application.form.services.model.TourismSummaryAddBox;
import com.nbp.tourism.application.form.services.model.TourismSummaryAddBoxModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the TourismSummaryAddBox service. Represents a row in the &quot;nbp_tourism_summary_box&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>TourismSummaryAddBoxModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TourismSummaryAddBoxImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TourismSummaryAddBoxImpl
 * @generated
 */
@JSON(strict = true)
public class TourismSummaryAddBoxModelImpl
	extends BaseModelImpl<TourismSummaryAddBox>
	implements TourismSummaryAddBoxModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tourism summary add box model instance should use the <code>TourismSummaryAddBox</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_tourism_summary_box";

	public static final Object[][] TABLE_COLUMNS = {
		{"tourismSummaryBoxId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"dealer", Types.VARCHAR},
		{"numberOfvehicles", Types.VARCHAR}, {"year", Types.VARCHAR},
		{"type_", Types.VARCHAR}, {"ccRating", Types.VARCHAR},
		{"counterSummary", Types.VARCHAR},
		{"tourismApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("tourismSummaryBoxId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dealer", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("numberOfvehicles", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("year", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("type_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ccRating", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("counterSummary", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tourismApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_tourism_summary_box (tourismSummaryBoxId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,dealer VARCHAR(75) null,numberOfvehicles VARCHAR(75) null,year VARCHAR(75) null,type_ VARCHAR(75) null,ccRating VARCHAR(75) null,counterSummary VARCHAR(75) null,tourismApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_tourism_summary_box";

	public static final String ORDER_BY_JPQL =
		" ORDER BY tourismSummaryAddBox.createDate ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_tourism_summary_box.createDate ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TOURISMAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public TourismSummaryAddBoxModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _tourismSummaryBoxId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTourismSummaryBoxId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _tourismSummaryBoxId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TourismSummaryAddBox.class;
	}

	@Override
	public String getModelClassName() {
		return TourismSummaryAddBox.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<TourismSummaryAddBox, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<TourismSummaryAddBox, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismSummaryAddBox, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((TourismSummaryAddBox)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<TourismSummaryAddBox, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<TourismSummaryAddBox, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(TourismSummaryAddBox)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<TourismSummaryAddBox, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<TourismSummaryAddBox, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<TourismSummaryAddBox, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<TourismSummaryAddBox, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<TourismSummaryAddBox, Object>>();

			attributeGetterFunctions.put(
				"tourismSummaryBoxId",
				TourismSummaryAddBox::getTourismSummaryBoxId);
			attributeGetterFunctions.put(
				"groupId", TourismSummaryAddBox::getGroupId);
			attributeGetterFunctions.put(
				"companyId", TourismSummaryAddBox::getCompanyId);
			attributeGetterFunctions.put(
				"userId", TourismSummaryAddBox::getUserId);
			attributeGetterFunctions.put(
				"userName", TourismSummaryAddBox::getUserName);
			attributeGetterFunctions.put(
				"createDate", TourismSummaryAddBox::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", TourismSummaryAddBox::getModifiedDate);
			attributeGetterFunctions.put(
				"dealer", TourismSummaryAddBox::getDealer);
			attributeGetterFunctions.put(
				"numberOfvehicles", TourismSummaryAddBox::getNumberOfvehicles);
			attributeGetterFunctions.put("year", TourismSummaryAddBox::getYear);
			attributeGetterFunctions.put("type", TourismSummaryAddBox::getType);
			attributeGetterFunctions.put(
				"ccRating", TourismSummaryAddBox::getCcRating);
			attributeGetterFunctions.put(
				"counterSummary", TourismSummaryAddBox::getCounterSummary);
			attributeGetterFunctions.put(
				"tourismApplicationId",
				TourismSummaryAddBox::getTourismApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<TourismSummaryAddBox, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<TourismSummaryAddBox, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<TourismSummaryAddBox, ?>>();

			attributeSetterBiConsumers.put(
				"tourismSummaryBoxId",
				(BiConsumer<TourismSummaryAddBox, Long>)
					TourismSummaryAddBox::setTourismSummaryBoxId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<TourismSummaryAddBox, Long>)
					TourismSummaryAddBox::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<TourismSummaryAddBox, Long>)
					TourismSummaryAddBox::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<TourismSummaryAddBox, Long>)
					TourismSummaryAddBox::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<TourismSummaryAddBox, String>)
					TourismSummaryAddBox::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<TourismSummaryAddBox, Date>)
					TourismSummaryAddBox::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<TourismSummaryAddBox, Date>)
					TourismSummaryAddBox::setModifiedDate);
			attributeSetterBiConsumers.put(
				"dealer",
				(BiConsumer<TourismSummaryAddBox, String>)
					TourismSummaryAddBox::setDealer);
			attributeSetterBiConsumers.put(
				"numberOfvehicles",
				(BiConsumer<TourismSummaryAddBox, String>)
					TourismSummaryAddBox::setNumberOfvehicles);
			attributeSetterBiConsumers.put(
				"year",
				(BiConsumer<TourismSummaryAddBox, String>)
					TourismSummaryAddBox::setYear);
			attributeSetterBiConsumers.put(
				"type",
				(BiConsumer<TourismSummaryAddBox, String>)
					TourismSummaryAddBox::setType);
			attributeSetterBiConsumers.put(
				"ccRating",
				(BiConsumer<TourismSummaryAddBox, String>)
					TourismSummaryAddBox::setCcRating);
			attributeSetterBiConsumers.put(
				"counterSummary",
				(BiConsumer<TourismSummaryAddBox, String>)
					TourismSummaryAddBox::setCounterSummary);
			attributeSetterBiConsumers.put(
				"tourismApplicationId",
				(BiConsumer<TourismSummaryAddBox, Long>)
					TourismSummaryAddBox::setTourismApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getTourismSummaryBoxId() {
		return _tourismSummaryBoxId;
	}

	@Override
	public void setTourismSummaryBoxId(long tourismSummaryBoxId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismSummaryBoxId = tourismSummaryBoxId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getDealer() {
		if (_dealer == null) {
			return "";
		}
		else {
			return _dealer;
		}
	}

	@Override
	public void setDealer(String dealer) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dealer = dealer;
	}

	@JSON
	@Override
	public String getNumberOfvehicles() {
		if (_numberOfvehicles == null) {
			return "";
		}
		else {
			return _numberOfvehicles;
		}
	}

	@Override
	public void setNumberOfvehicles(String numberOfvehicles) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_numberOfvehicles = numberOfvehicles;
	}

	@JSON
	@Override
	public String getYear() {
		if (_year == null) {
			return "";
		}
		else {
			return _year;
		}
	}

	@Override
	public void setYear(String year) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_year = year;
	}

	@JSON
	@Override
	public String getType() {
		if (_type == null) {
			return "";
		}
		else {
			return _type;
		}
	}

	@Override
	public void setType(String type) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_type = type;
	}

	@JSON
	@Override
	public String getCcRating() {
		if (_ccRating == null) {
			return "";
		}
		else {
			return _ccRating;
		}
	}

	@Override
	public void setCcRating(String ccRating) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ccRating = ccRating;
	}

	@JSON
	@Override
	public String getCounterSummary() {
		if (_counterSummary == null) {
			return "";
		}
		else {
			return _counterSummary;
		}
	}

	@Override
	public void setCounterSummary(String counterSummary) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_counterSummary = counterSummary;
	}

	@JSON
	@Override
	public long getTourismApplicationId() {
		return _tourismApplicationId;
	}

	@Override
	public void setTourismApplicationId(long tourismApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismApplicationId = tourismApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalTourismApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), TourismSummaryAddBox.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TourismSummaryAddBox toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, TourismSummaryAddBox>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TourismSummaryAddBoxImpl tourismSummaryAddBoxImpl =
			new TourismSummaryAddBoxImpl();

		tourismSummaryAddBoxImpl.setTourismSummaryBoxId(
			getTourismSummaryBoxId());
		tourismSummaryAddBoxImpl.setGroupId(getGroupId());
		tourismSummaryAddBoxImpl.setCompanyId(getCompanyId());
		tourismSummaryAddBoxImpl.setUserId(getUserId());
		tourismSummaryAddBoxImpl.setUserName(getUserName());
		tourismSummaryAddBoxImpl.setCreateDate(getCreateDate());
		tourismSummaryAddBoxImpl.setModifiedDate(getModifiedDate());
		tourismSummaryAddBoxImpl.setDealer(getDealer());
		tourismSummaryAddBoxImpl.setNumberOfvehicles(getNumberOfvehicles());
		tourismSummaryAddBoxImpl.setYear(getYear());
		tourismSummaryAddBoxImpl.setType(getType());
		tourismSummaryAddBoxImpl.setCcRating(getCcRating());
		tourismSummaryAddBoxImpl.setCounterSummary(getCounterSummary());
		tourismSummaryAddBoxImpl.setTourismApplicationId(
			getTourismApplicationId());

		tourismSummaryAddBoxImpl.resetOriginalValues();

		return tourismSummaryAddBoxImpl;
	}

	@Override
	public TourismSummaryAddBox cloneWithOriginalValues() {
		TourismSummaryAddBoxImpl tourismSummaryAddBoxImpl =
			new TourismSummaryAddBoxImpl();

		tourismSummaryAddBoxImpl.setTourismSummaryBoxId(
			this.<Long>getColumnOriginalValue("tourismSummaryBoxId"));
		tourismSummaryAddBoxImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		tourismSummaryAddBoxImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		tourismSummaryAddBoxImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		tourismSummaryAddBoxImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		tourismSummaryAddBoxImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		tourismSummaryAddBoxImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		tourismSummaryAddBoxImpl.setDealer(
			this.<String>getColumnOriginalValue("dealer"));
		tourismSummaryAddBoxImpl.setNumberOfvehicles(
			this.<String>getColumnOriginalValue("numberOfvehicles"));
		tourismSummaryAddBoxImpl.setYear(
			this.<String>getColumnOriginalValue("year"));
		tourismSummaryAddBoxImpl.setType(
			this.<String>getColumnOriginalValue("type_"));
		tourismSummaryAddBoxImpl.setCcRating(
			this.<String>getColumnOriginalValue("ccRating"));
		tourismSummaryAddBoxImpl.setCounterSummary(
			this.<String>getColumnOriginalValue("counterSummary"));
		tourismSummaryAddBoxImpl.setTourismApplicationId(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));

		return tourismSummaryAddBoxImpl;
	}

	@Override
	public int compareTo(TourismSummaryAddBox tourismSummaryAddBox) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), tourismSummaryAddBox.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof TourismSummaryAddBox)) {
			return false;
		}

		TourismSummaryAddBox tourismSummaryAddBox =
			(TourismSummaryAddBox)object;

		long primaryKey = tourismSummaryAddBox.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<TourismSummaryAddBox> toCacheModel() {
		TourismSummaryAddBoxCacheModel tourismSummaryAddBoxCacheModel =
			new TourismSummaryAddBoxCacheModel();

		tourismSummaryAddBoxCacheModel.tourismSummaryBoxId =
			getTourismSummaryBoxId();

		tourismSummaryAddBoxCacheModel.groupId = getGroupId();

		tourismSummaryAddBoxCacheModel.companyId = getCompanyId();

		tourismSummaryAddBoxCacheModel.userId = getUserId();

		tourismSummaryAddBoxCacheModel.userName = getUserName();

		String userName = tourismSummaryAddBoxCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			tourismSummaryAddBoxCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			tourismSummaryAddBoxCacheModel.createDate = createDate.getTime();
		}
		else {
			tourismSummaryAddBoxCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			tourismSummaryAddBoxCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			tourismSummaryAddBoxCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		tourismSummaryAddBoxCacheModel.dealer = getDealer();

		String dealer = tourismSummaryAddBoxCacheModel.dealer;

		if ((dealer != null) && (dealer.length() == 0)) {
			tourismSummaryAddBoxCacheModel.dealer = null;
		}

		tourismSummaryAddBoxCacheModel.numberOfvehicles = getNumberOfvehicles();

		String numberOfvehicles =
			tourismSummaryAddBoxCacheModel.numberOfvehicles;

		if ((numberOfvehicles != null) && (numberOfvehicles.length() == 0)) {
			tourismSummaryAddBoxCacheModel.numberOfvehicles = null;
		}

		tourismSummaryAddBoxCacheModel.year = getYear();

		String year = tourismSummaryAddBoxCacheModel.year;

		if ((year != null) && (year.length() == 0)) {
			tourismSummaryAddBoxCacheModel.year = null;
		}

		tourismSummaryAddBoxCacheModel.type = getType();

		String type = tourismSummaryAddBoxCacheModel.type;

		if ((type != null) && (type.length() == 0)) {
			tourismSummaryAddBoxCacheModel.type = null;
		}

		tourismSummaryAddBoxCacheModel.ccRating = getCcRating();

		String ccRating = tourismSummaryAddBoxCacheModel.ccRating;

		if ((ccRating != null) && (ccRating.length() == 0)) {
			tourismSummaryAddBoxCacheModel.ccRating = null;
		}

		tourismSummaryAddBoxCacheModel.counterSummary = getCounterSummary();

		String counterSummary = tourismSummaryAddBoxCacheModel.counterSummary;

		if ((counterSummary != null) && (counterSummary.length() == 0)) {
			tourismSummaryAddBoxCacheModel.counterSummary = null;
		}

		tourismSummaryAddBoxCacheModel.tourismApplicationId =
			getTourismApplicationId();

		return tourismSummaryAddBoxCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<TourismSummaryAddBox, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<TourismSummaryAddBox, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismSummaryAddBox, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(TourismSummaryAddBox)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, TourismSummaryAddBox>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					TourismSummaryAddBox.class, ModelWrapper.class);

	}

	private long _tourismSummaryBoxId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _dealer;
	private String _numberOfvehicles;
	private String _year;
	private String _type;
	private String _ccRating;
	private String _counterSummary;
	private long _tourismApplicationId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<TourismSummaryAddBox, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((TourismSummaryAddBox)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("tourismSummaryBoxId", _tourismSummaryBoxId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("dealer", _dealer);
		_columnOriginalValues.put("numberOfvehicles", _numberOfvehicles);
		_columnOriginalValues.put("year", _year);
		_columnOriginalValues.put("type_", _type);
		_columnOriginalValues.put("ccRating", _ccRating);
		_columnOriginalValues.put("counterSummary", _counterSummary);
		_columnOriginalValues.put(
			"tourismApplicationId", _tourismApplicationId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("type_", "type");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("tourismSummaryBoxId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("dealer", 128L);

		columnBitmasks.put("numberOfvehicles", 256L);

		columnBitmasks.put("year", 512L);

		columnBitmasks.put("type_", 1024L);

		columnBitmasks.put("ccRating", 2048L);

		columnBitmasks.put("counterSummary", 4096L);

		columnBitmasks.put("tourismApplicationId", 8192L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private TourismSummaryAddBox _escapedModel;

}