/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.tourism.application.form.services.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.tourism.application.form.services.model.TourismBonaAccoAssesment;
import com.nbp.tourism.application.form.services.model.TourismBonaAccoAssesmentModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the TourismBonaAccoAssesment service. Represents a row in the &quot;nbp_tourism_bona_aco_asses&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>TourismBonaAccoAssesmentModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TourismBonaAccoAssesmentImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TourismBonaAccoAssesmentImpl
 * @generated
 */
@JSON(strict = true)
public class TourismBonaAccoAssesmentModelImpl
	extends BaseModelImpl<TourismBonaAccoAssesment>
	implements TourismBonaAccoAssesmentModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tourism bona acco assesment model instance should use the <code>TourismBonaAccoAssesment</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_tourism_bona_aco_asses";

	public static final Object[][] TABLE_COLUMNS = {
		{"tourismBonaAccoAssesmentId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"countryOrigin", Types.VARCHAR},
		{"jointVenture", Types.VARCHAR}, {"localPer", Types.VARCHAR},
		{"foreignPer", Types.VARCHAR}, {"capitalInvest", Types.VARCHAR},
		{"sourceAttach", Types.VARCHAR}, {"shareCapital", Types.VARCHAR},
		{"loanCapital", Types.VARCHAR}, {"other", Types.VARCHAR},
		{"permanentLocalMale", Types.VARCHAR},
		{"permanentLocalFemale", Types.VARCHAR},
		{"permanentForeignMale", Types.VARCHAR},
		{"permanentForeignFemale", Types.VARCHAR},
		{"temporaryLocalMale", Types.VARCHAR},
		{"temporaryLocalFemale", Types.VARCHAR},
		{"temporaryForeignMale", Types.VARCHAR},
		{"temporaryForeignFemale", Types.VARCHAR},
		{"totalLocalMale", Types.VARCHAR}, {"totalLocalFemale", Types.VARCHAR},
		{"totalForeignMale", Types.VARCHAR},
		{"totalForeignFemale", Types.VARCHAR}, {"salaryWages", Types.VARCHAR},
		{"estimatedExpenditure", Types.VARCHAR},
		{"otherExpenditure", Types.VARCHAR},
		{"staffPermanentLocalMale", Types.VARCHAR},
		{"staffPermanentLocalFemale", Types.VARCHAR},
		{"staffForeignLocalMale", Types.VARCHAR},
		{"staffForeignLocalFemale", Types.VARCHAR},
		{"staffTemporaryLocalMale", Types.VARCHAR},
		{"staffTemporaryLocalFemale", Types.VARCHAR},
		{"staffTemporaryForeignMale", Types.VARCHAR},
		{"staffTemporaryForeignFemale", Types.VARCHAR},
		{"staffTotalForeignMale", Types.VARCHAR},
		{"staffTotalForeignFemale", Types.VARCHAR},
		{"staffTotalLocalMale", Types.VARCHAR},
		{"staffTotalLocalFemale", Types.VARCHAR},
		{"tourismApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("tourismBonaAccoAssesmentId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("countryOrigin", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("jointVenture", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("localPer", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("foreignPer", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("capitalInvest", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sourceAttach", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("shareCapital", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("loanCapital", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("other", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("permanentLocalMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("permanentLocalFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("permanentForeignMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("permanentForeignFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("temporaryLocalMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("temporaryLocalFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("temporaryForeignMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("temporaryForeignFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("totalLocalMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("totalLocalFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("totalForeignMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("totalForeignFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("salaryWages", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("estimatedExpenditure", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("otherExpenditure", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffPermanentLocalMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffPermanentLocalFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffForeignLocalMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffForeignLocalFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffTemporaryLocalMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffTemporaryLocalFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffTemporaryForeignMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffTemporaryForeignFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffTotalForeignMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffTotalForeignFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffTotalLocalMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffTotalLocalFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tourismApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_tourism_bona_aco_asses (tourismBonaAccoAssesmentId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,countryOrigin VARCHAR(75) null,jointVenture VARCHAR(75) null,localPer VARCHAR(75) null,foreignPer VARCHAR(75) null,capitalInvest VARCHAR(75) null,sourceAttach VARCHAR(75) null,shareCapital VARCHAR(75) null,loanCapital VARCHAR(75) null,other VARCHAR(75) null,permanentLocalMale VARCHAR(75) null,permanentLocalFemale VARCHAR(75) null,permanentForeignMale VARCHAR(75) null,permanentForeignFemale VARCHAR(75) null,temporaryLocalMale VARCHAR(75) null,temporaryLocalFemale VARCHAR(75) null,temporaryForeignMale VARCHAR(75) null,temporaryForeignFemale VARCHAR(75) null,totalLocalMale VARCHAR(75) null,totalLocalFemale VARCHAR(75) null,totalForeignMale VARCHAR(75) null,totalForeignFemale VARCHAR(75) null,salaryWages VARCHAR(75) null,estimatedExpenditure VARCHAR(75) null,otherExpenditure VARCHAR(75) null,staffPermanentLocalMale VARCHAR(75) null,staffPermanentLocalFemale VARCHAR(75) null,staffForeignLocalMale VARCHAR(75) null,staffForeignLocalFemale VARCHAR(75) null,staffTemporaryLocalMale VARCHAR(75) null,staffTemporaryLocalFemale VARCHAR(75) null,staffTemporaryForeignMale VARCHAR(75) null,staffTemporaryForeignFemale VARCHAR(75) null,staffTotalForeignMale VARCHAR(75) null,staffTotalForeignFemale VARCHAR(75) null,staffTotalLocalMale VARCHAR(75) null,staffTotalLocalFemale VARCHAR(75) null,tourismApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_tourism_bona_aco_asses";

	public static final String ORDER_BY_JPQL =
		" ORDER BY tourismBonaAccoAssesment.tourismBonaAccoAssesmentId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_tourism_bona_aco_asses.tourismBonaAccoAssesmentId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TOURISMAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TOURISMBONAACCOASSESMENTID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public TourismBonaAccoAssesmentModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _tourismBonaAccoAssesmentId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTourismBonaAccoAssesmentId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _tourismBonaAccoAssesmentId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TourismBonaAccoAssesment.class;
	}

	@Override
	public String getModelClassName() {
		return TourismBonaAccoAssesment.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<TourismBonaAccoAssesment, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<TourismBonaAccoAssesment, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismBonaAccoAssesment, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((TourismBonaAccoAssesment)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<TourismBonaAccoAssesment, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<TourismBonaAccoAssesment, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(TourismBonaAccoAssesment)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<TourismBonaAccoAssesment, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<TourismBonaAccoAssesment, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<TourismBonaAccoAssesment, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<TourismBonaAccoAssesment, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<TourismBonaAccoAssesment, Object>>();

			attributeGetterFunctions.put(
				"tourismBonaAccoAssesmentId",
				TourismBonaAccoAssesment::getTourismBonaAccoAssesmentId);
			attributeGetterFunctions.put(
				"groupId", TourismBonaAccoAssesment::getGroupId);
			attributeGetterFunctions.put(
				"companyId", TourismBonaAccoAssesment::getCompanyId);
			attributeGetterFunctions.put(
				"userId", TourismBonaAccoAssesment::getUserId);
			attributeGetterFunctions.put(
				"userName", TourismBonaAccoAssesment::getUserName);
			attributeGetterFunctions.put(
				"createDate", TourismBonaAccoAssesment::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", TourismBonaAccoAssesment::getModifiedDate);
			attributeGetterFunctions.put(
				"countryOrigin", TourismBonaAccoAssesment::getCountryOrigin);
			attributeGetterFunctions.put(
				"jointVenture", TourismBonaAccoAssesment::getJointVenture);
			attributeGetterFunctions.put(
				"localPer", TourismBonaAccoAssesment::getLocalPer);
			attributeGetterFunctions.put(
				"foreignPer", TourismBonaAccoAssesment::getForeignPer);
			attributeGetterFunctions.put(
				"capitalInvest", TourismBonaAccoAssesment::getCapitalInvest);
			attributeGetterFunctions.put(
				"sourceAttach", TourismBonaAccoAssesment::getSourceAttach);
			attributeGetterFunctions.put(
				"shareCapital", TourismBonaAccoAssesment::getShareCapital);
			attributeGetterFunctions.put(
				"loanCapital", TourismBonaAccoAssesment::getLoanCapital);
			attributeGetterFunctions.put(
				"other", TourismBonaAccoAssesment::getOther);
			attributeGetterFunctions.put(
				"permanentLocalMale",
				TourismBonaAccoAssesment::getPermanentLocalMale);
			attributeGetterFunctions.put(
				"permanentLocalFemale",
				TourismBonaAccoAssesment::getPermanentLocalFemale);
			attributeGetterFunctions.put(
				"permanentForeignMale",
				TourismBonaAccoAssesment::getPermanentForeignMale);
			attributeGetterFunctions.put(
				"permanentForeignFemale",
				TourismBonaAccoAssesment::getPermanentForeignFemale);
			attributeGetterFunctions.put(
				"temporaryLocalMale",
				TourismBonaAccoAssesment::getTemporaryLocalMale);
			attributeGetterFunctions.put(
				"temporaryLocalFemale",
				TourismBonaAccoAssesment::getTemporaryLocalFemale);
			attributeGetterFunctions.put(
				"temporaryForeignMale",
				TourismBonaAccoAssesment::getTemporaryForeignMale);
			attributeGetterFunctions.put(
				"temporaryForeignFemale",
				TourismBonaAccoAssesment::getTemporaryForeignFemale);
			attributeGetterFunctions.put(
				"totalLocalMale", TourismBonaAccoAssesment::getTotalLocalMale);
			attributeGetterFunctions.put(
				"totalLocalFemale",
				TourismBonaAccoAssesment::getTotalLocalFemale);
			attributeGetterFunctions.put(
				"totalForeignMale",
				TourismBonaAccoAssesment::getTotalForeignMale);
			attributeGetterFunctions.put(
				"totalForeignFemale",
				TourismBonaAccoAssesment::getTotalForeignFemale);
			attributeGetterFunctions.put(
				"salaryWages", TourismBonaAccoAssesment::getSalaryWages);
			attributeGetterFunctions.put(
				"estimatedExpenditure",
				TourismBonaAccoAssesment::getEstimatedExpenditure);
			attributeGetterFunctions.put(
				"otherExpenditure",
				TourismBonaAccoAssesment::getOtherExpenditure);
			attributeGetterFunctions.put(
				"staffPermanentLocalMale",
				TourismBonaAccoAssesment::getStaffPermanentLocalMale);
			attributeGetterFunctions.put(
				"staffPermanentLocalFemale",
				TourismBonaAccoAssesment::getStaffPermanentLocalFemale);
			attributeGetterFunctions.put(
				"staffForeignLocalMale",
				TourismBonaAccoAssesment::getStaffForeignLocalMale);
			attributeGetterFunctions.put(
				"staffForeignLocalFemale",
				TourismBonaAccoAssesment::getStaffForeignLocalFemale);
			attributeGetterFunctions.put(
				"staffTemporaryLocalMale",
				TourismBonaAccoAssesment::getStaffTemporaryLocalMale);
			attributeGetterFunctions.put(
				"staffTemporaryLocalFemale",
				TourismBonaAccoAssesment::getStaffTemporaryLocalFemale);
			attributeGetterFunctions.put(
				"staffTemporaryForeignMale",
				TourismBonaAccoAssesment::getStaffTemporaryForeignMale);
			attributeGetterFunctions.put(
				"staffTemporaryForeignFemale",
				TourismBonaAccoAssesment::getStaffTemporaryForeignFemale);
			attributeGetterFunctions.put(
				"staffTotalForeignMale",
				TourismBonaAccoAssesment::getStaffTotalForeignMale);
			attributeGetterFunctions.put(
				"staffTotalForeignFemale",
				TourismBonaAccoAssesment::getStaffTotalForeignFemale);
			attributeGetterFunctions.put(
				"staffTotalLocalMale",
				TourismBonaAccoAssesment::getStaffTotalLocalMale);
			attributeGetterFunctions.put(
				"staffTotalLocalFemale",
				TourismBonaAccoAssesment::getStaffTotalLocalFemale);
			attributeGetterFunctions.put(
				"tourismApplicationId",
				TourismBonaAccoAssesment::getTourismApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<TourismBonaAccoAssesment, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<TourismBonaAccoAssesment, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<TourismBonaAccoAssesment, ?>>();

			attributeSetterBiConsumers.put(
				"tourismBonaAccoAssesmentId",
				(BiConsumer<TourismBonaAccoAssesment, Long>)
					TourismBonaAccoAssesment::setTourismBonaAccoAssesmentId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<TourismBonaAccoAssesment, Long>)
					TourismBonaAccoAssesment::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<TourismBonaAccoAssesment, Long>)
					TourismBonaAccoAssesment::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<TourismBonaAccoAssesment, Long>)
					TourismBonaAccoAssesment::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<TourismBonaAccoAssesment, Date>)
					TourismBonaAccoAssesment::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<TourismBonaAccoAssesment, Date>)
					TourismBonaAccoAssesment::setModifiedDate);
			attributeSetterBiConsumers.put(
				"countryOrigin",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setCountryOrigin);
			attributeSetterBiConsumers.put(
				"jointVenture",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setJointVenture);
			attributeSetterBiConsumers.put(
				"localPer",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setLocalPer);
			attributeSetterBiConsumers.put(
				"foreignPer",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setForeignPer);
			attributeSetterBiConsumers.put(
				"capitalInvest",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setCapitalInvest);
			attributeSetterBiConsumers.put(
				"sourceAttach",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setSourceAttach);
			attributeSetterBiConsumers.put(
				"shareCapital",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setShareCapital);
			attributeSetterBiConsumers.put(
				"loanCapital",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setLoanCapital);
			attributeSetterBiConsumers.put(
				"other",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setOther);
			attributeSetterBiConsumers.put(
				"permanentLocalMale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setPermanentLocalMale);
			attributeSetterBiConsumers.put(
				"permanentLocalFemale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setPermanentLocalFemale);
			attributeSetterBiConsumers.put(
				"permanentForeignMale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setPermanentForeignMale);
			attributeSetterBiConsumers.put(
				"permanentForeignFemale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setPermanentForeignFemale);
			attributeSetterBiConsumers.put(
				"temporaryLocalMale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setTemporaryLocalMale);
			attributeSetterBiConsumers.put(
				"temporaryLocalFemale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setTemporaryLocalFemale);
			attributeSetterBiConsumers.put(
				"temporaryForeignMale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setTemporaryForeignMale);
			attributeSetterBiConsumers.put(
				"temporaryForeignFemale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setTemporaryForeignFemale);
			attributeSetterBiConsumers.put(
				"totalLocalMale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setTotalLocalMale);
			attributeSetterBiConsumers.put(
				"totalLocalFemale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setTotalLocalFemale);
			attributeSetterBiConsumers.put(
				"totalForeignMale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setTotalForeignMale);
			attributeSetterBiConsumers.put(
				"totalForeignFemale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setTotalForeignFemale);
			attributeSetterBiConsumers.put(
				"salaryWages",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setSalaryWages);
			attributeSetterBiConsumers.put(
				"estimatedExpenditure",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setEstimatedExpenditure);
			attributeSetterBiConsumers.put(
				"otherExpenditure",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setOtherExpenditure);
			attributeSetterBiConsumers.put(
				"staffPermanentLocalMale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setStaffPermanentLocalMale);
			attributeSetterBiConsumers.put(
				"staffPermanentLocalFemale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setStaffPermanentLocalFemale);
			attributeSetterBiConsumers.put(
				"staffForeignLocalMale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setStaffForeignLocalMale);
			attributeSetterBiConsumers.put(
				"staffForeignLocalFemale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setStaffForeignLocalFemale);
			attributeSetterBiConsumers.put(
				"staffTemporaryLocalMale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setStaffTemporaryLocalMale);
			attributeSetterBiConsumers.put(
				"staffTemporaryLocalFemale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setStaffTemporaryLocalFemale);
			attributeSetterBiConsumers.put(
				"staffTemporaryForeignMale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setStaffTemporaryForeignMale);
			attributeSetterBiConsumers.put(
				"staffTemporaryForeignFemale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setStaffTemporaryForeignFemale);
			attributeSetterBiConsumers.put(
				"staffTotalForeignMale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setStaffTotalForeignMale);
			attributeSetterBiConsumers.put(
				"staffTotalForeignFemale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setStaffTotalForeignFemale);
			attributeSetterBiConsumers.put(
				"staffTotalLocalMale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setStaffTotalLocalMale);
			attributeSetterBiConsumers.put(
				"staffTotalLocalFemale",
				(BiConsumer<TourismBonaAccoAssesment, String>)
					TourismBonaAccoAssesment::setStaffTotalLocalFemale);
			attributeSetterBiConsumers.put(
				"tourismApplicationId",
				(BiConsumer<TourismBonaAccoAssesment, Long>)
					TourismBonaAccoAssesment::setTourismApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getTourismBonaAccoAssesmentId() {
		return _tourismBonaAccoAssesmentId;
	}

	@Override
	public void setTourismBonaAccoAssesmentId(long tourismBonaAccoAssesmentId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismBonaAccoAssesmentId = tourismBonaAccoAssesmentId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getCountryOrigin() {
		if (_countryOrigin == null) {
			return "";
		}
		else {
			return _countryOrigin;
		}
	}

	@Override
	public void setCountryOrigin(String countryOrigin) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_countryOrigin = countryOrigin;
	}

	@JSON
	@Override
	public String getJointVenture() {
		if (_jointVenture == null) {
			return "";
		}
		else {
			return _jointVenture;
		}
	}

	@Override
	public void setJointVenture(String jointVenture) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_jointVenture = jointVenture;
	}

	@JSON
	@Override
	public String getLocalPer() {
		if (_localPer == null) {
			return "";
		}
		else {
			return _localPer;
		}
	}

	@Override
	public void setLocalPer(String localPer) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_localPer = localPer;
	}

	@JSON
	@Override
	public String getForeignPer() {
		if (_foreignPer == null) {
			return "";
		}
		else {
			return _foreignPer;
		}
	}

	@Override
	public void setForeignPer(String foreignPer) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_foreignPer = foreignPer;
	}

	@JSON
	@Override
	public String getCapitalInvest() {
		if (_capitalInvest == null) {
			return "";
		}
		else {
			return _capitalInvest;
		}
	}

	@Override
	public void setCapitalInvest(String capitalInvest) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_capitalInvest = capitalInvest;
	}

	@JSON
	@Override
	public String getSourceAttach() {
		if (_sourceAttach == null) {
			return "";
		}
		else {
			return _sourceAttach;
		}
	}

	@Override
	public void setSourceAttach(String sourceAttach) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sourceAttach = sourceAttach;
	}

	@JSON
	@Override
	public String getShareCapital() {
		if (_shareCapital == null) {
			return "";
		}
		else {
			return _shareCapital;
		}
	}

	@Override
	public void setShareCapital(String shareCapital) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_shareCapital = shareCapital;
	}

	@JSON
	@Override
	public String getLoanCapital() {
		if (_loanCapital == null) {
			return "";
		}
		else {
			return _loanCapital;
		}
	}

	@Override
	public void setLoanCapital(String loanCapital) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_loanCapital = loanCapital;
	}

	@JSON
	@Override
	public String getOther() {
		if (_other == null) {
			return "";
		}
		else {
			return _other;
		}
	}

	@Override
	public void setOther(String other) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_other = other;
	}

	@JSON
	@Override
	public String getPermanentLocalMale() {
		if (_permanentLocalMale == null) {
			return "";
		}
		else {
			return _permanentLocalMale;
		}
	}

	@Override
	public void setPermanentLocalMale(String permanentLocalMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_permanentLocalMale = permanentLocalMale;
	}

	@JSON
	@Override
	public String getPermanentLocalFemale() {
		if (_permanentLocalFemale == null) {
			return "";
		}
		else {
			return _permanentLocalFemale;
		}
	}

	@Override
	public void setPermanentLocalFemale(String permanentLocalFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_permanentLocalFemale = permanentLocalFemale;
	}

	@JSON
	@Override
	public String getPermanentForeignMale() {
		if (_permanentForeignMale == null) {
			return "";
		}
		else {
			return _permanentForeignMale;
		}
	}

	@Override
	public void setPermanentForeignMale(String permanentForeignMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_permanentForeignMale = permanentForeignMale;
	}

	@JSON
	@Override
	public String getPermanentForeignFemale() {
		if (_permanentForeignFemale == null) {
			return "";
		}
		else {
			return _permanentForeignFemale;
		}
	}

	@Override
	public void setPermanentForeignFemale(String permanentForeignFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_permanentForeignFemale = permanentForeignFemale;
	}

	@JSON
	@Override
	public String getTemporaryLocalMale() {
		if (_temporaryLocalMale == null) {
			return "";
		}
		else {
			return _temporaryLocalMale;
		}
	}

	@Override
	public void setTemporaryLocalMale(String temporaryLocalMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_temporaryLocalMale = temporaryLocalMale;
	}

	@JSON
	@Override
	public String getTemporaryLocalFemale() {
		if (_temporaryLocalFemale == null) {
			return "";
		}
		else {
			return _temporaryLocalFemale;
		}
	}

	@Override
	public void setTemporaryLocalFemale(String temporaryLocalFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_temporaryLocalFemale = temporaryLocalFemale;
	}

	@JSON
	@Override
	public String getTemporaryForeignMale() {
		if (_temporaryForeignMale == null) {
			return "";
		}
		else {
			return _temporaryForeignMale;
		}
	}

	@Override
	public void setTemporaryForeignMale(String temporaryForeignMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_temporaryForeignMale = temporaryForeignMale;
	}

	@JSON
	@Override
	public String getTemporaryForeignFemale() {
		if (_temporaryForeignFemale == null) {
			return "";
		}
		else {
			return _temporaryForeignFemale;
		}
	}

	@Override
	public void setTemporaryForeignFemale(String temporaryForeignFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_temporaryForeignFemale = temporaryForeignFemale;
	}

	@JSON
	@Override
	public String getTotalLocalMale() {
		if (_totalLocalMale == null) {
			return "";
		}
		else {
			return _totalLocalMale;
		}
	}

	@Override
	public void setTotalLocalMale(String totalLocalMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_totalLocalMale = totalLocalMale;
	}

	@JSON
	@Override
	public String getTotalLocalFemale() {
		if (_totalLocalFemale == null) {
			return "";
		}
		else {
			return _totalLocalFemale;
		}
	}

	@Override
	public void setTotalLocalFemale(String totalLocalFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_totalLocalFemale = totalLocalFemale;
	}

	@JSON
	@Override
	public String getTotalForeignMale() {
		if (_totalForeignMale == null) {
			return "";
		}
		else {
			return _totalForeignMale;
		}
	}

	@Override
	public void setTotalForeignMale(String totalForeignMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_totalForeignMale = totalForeignMale;
	}

	@JSON
	@Override
	public String getTotalForeignFemale() {
		if (_totalForeignFemale == null) {
			return "";
		}
		else {
			return _totalForeignFemale;
		}
	}

	@Override
	public void setTotalForeignFemale(String totalForeignFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_totalForeignFemale = totalForeignFemale;
	}

	@JSON
	@Override
	public String getSalaryWages() {
		if (_salaryWages == null) {
			return "";
		}
		else {
			return _salaryWages;
		}
	}

	@Override
	public void setSalaryWages(String salaryWages) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_salaryWages = salaryWages;
	}

	@JSON
	@Override
	public String getEstimatedExpenditure() {
		if (_estimatedExpenditure == null) {
			return "";
		}
		else {
			return _estimatedExpenditure;
		}
	}

	@Override
	public void setEstimatedExpenditure(String estimatedExpenditure) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_estimatedExpenditure = estimatedExpenditure;
	}

	@JSON
	@Override
	public String getOtherExpenditure() {
		if (_otherExpenditure == null) {
			return "";
		}
		else {
			return _otherExpenditure;
		}
	}

	@Override
	public void setOtherExpenditure(String otherExpenditure) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_otherExpenditure = otherExpenditure;
	}

	@JSON
	@Override
	public String getStaffPermanentLocalMale() {
		if (_staffPermanentLocalMale == null) {
			return "";
		}
		else {
			return _staffPermanentLocalMale;
		}
	}

	@Override
	public void setStaffPermanentLocalMale(String staffPermanentLocalMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffPermanentLocalMale = staffPermanentLocalMale;
	}

	@JSON
	@Override
	public String getStaffPermanentLocalFemale() {
		if (_staffPermanentLocalFemale == null) {
			return "";
		}
		else {
			return _staffPermanentLocalFemale;
		}
	}

	@Override
	public void setStaffPermanentLocalFemale(String staffPermanentLocalFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffPermanentLocalFemale = staffPermanentLocalFemale;
	}

	@JSON
	@Override
	public String getStaffForeignLocalMale() {
		if (_staffForeignLocalMale == null) {
			return "";
		}
		else {
			return _staffForeignLocalMale;
		}
	}

	@Override
	public void setStaffForeignLocalMale(String staffForeignLocalMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffForeignLocalMale = staffForeignLocalMale;
	}

	@JSON
	@Override
	public String getStaffForeignLocalFemale() {
		if (_staffForeignLocalFemale == null) {
			return "";
		}
		else {
			return _staffForeignLocalFemale;
		}
	}

	@Override
	public void setStaffForeignLocalFemale(String staffForeignLocalFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffForeignLocalFemale = staffForeignLocalFemale;
	}

	@JSON
	@Override
	public String getStaffTemporaryLocalMale() {
		if (_staffTemporaryLocalMale == null) {
			return "";
		}
		else {
			return _staffTemporaryLocalMale;
		}
	}

	@Override
	public void setStaffTemporaryLocalMale(String staffTemporaryLocalMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffTemporaryLocalMale = staffTemporaryLocalMale;
	}

	@JSON
	@Override
	public String getStaffTemporaryLocalFemale() {
		if (_staffTemporaryLocalFemale == null) {
			return "";
		}
		else {
			return _staffTemporaryLocalFemale;
		}
	}

	@Override
	public void setStaffTemporaryLocalFemale(String staffTemporaryLocalFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffTemporaryLocalFemale = staffTemporaryLocalFemale;
	}

	@JSON
	@Override
	public String getStaffTemporaryForeignMale() {
		if (_staffTemporaryForeignMale == null) {
			return "";
		}
		else {
			return _staffTemporaryForeignMale;
		}
	}

	@Override
	public void setStaffTemporaryForeignMale(String staffTemporaryForeignMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffTemporaryForeignMale = staffTemporaryForeignMale;
	}

	@JSON
	@Override
	public String getStaffTemporaryForeignFemale() {
		if (_staffTemporaryForeignFemale == null) {
			return "";
		}
		else {
			return _staffTemporaryForeignFemale;
		}
	}

	@Override
	public void setStaffTemporaryForeignFemale(
		String staffTemporaryForeignFemale) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffTemporaryForeignFemale = staffTemporaryForeignFemale;
	}

	@JSON
	@Override
	public String getStaffTotalForeignMale() {
		if (_staffTotalForeignMale == null) {
			return "";
		}
		else {
			return _staffTotalForeignMale;
		}
	}

	@Override
	public void setStaffTotalForeignMale(String staffTotalForeignMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffTotalForeignMale = staffTotalForeignMale;
	}

	@JSON
	@Override
	public String getStaffTotalForeignFemale() {
		if (_staffTotalForeignFemale == null) {
			return "";
		}
		else {
			return _staffTotalForeignFemale;
		}
	}

	@Override
	public void setStaffTotalForeignFemale(String staffTotalForeignFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffTotalForeignFemale = staffTotalForeignFemale;
	}

	@JSON
	@Override
	public String getStaffTotalLocalMale() {
		if (_staffTotalLocalMale == null) {
			return "";
		}
		else {
			return _staffTotalLocalMale;
		}
	}

	@Override
	public void setStaffTotalLocalMale(String staffTotalLocalMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffTotalLocalMale = staffTotalLocalMale;
	}

	@JSON
	@Override
	public String getStaffTotalLocalFemale() {
		if (_staffTotalLocalFemale == null) {
			return "";
		}
		else {
			return _staffTotalLocalFemale;
		}
	}

	@Override
	public void setStaffTotalLocalFemale(String staffTotalLocalFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffTotalLocalFemale = staffTotalLocalFemale;
	}

	@JSON
	@Override
	public long getTourismApplicationId() {
		return _tourismApplicationId;
	}

	@Override
	public void setTourismApplicationId(long tourismApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismApplicationId = tourismApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalTourismApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), TourismBonaAccoAssesment.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TourismBonaAccoAssesment toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, TourismBonaAccoAssesment>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TourismBonaAccoAssesmentImpl tourismBonaAccoAssesmentImpl =
			new TourismBonaAccoAssesmentImpl();

		tourismBonaAccoAssesmentImpl.setTourismBonaAccoAssesmentId(
			getTourismBonaAccoAssesmentId());
		tourismBonaAccoAssesmentImpl.setGroupId(getGroupId());
		tourismBonaAccoAssesmentImpl.setCompanyId(getCompanyId());
		tourismBonaAccoAssesmentImpl.setUserId(getUserId());
		tourismBonaAccoAssesmentImpl.setUserName(getUserName());
		tourismBonaAccoAssesmentImpl.setCreateDate(getCreateDate());
		tourismBonaAccoAssesmentImpl.setModifiedDate(getModifiedDate());
		tourismBonaAccoAssesmentImpl.setCountryOrigin(getCountryOrigin());
		tourismBonaAccoAssesmentImpl.setJointVenture(getJointVenture());
		tourismBonaAccoAssesmentImpl.setLocalPer(getLocalPer());
		tourismBonaAccoAssesmentImpl.setForeignPer(getForeignPer());
		tourismBonaAccoAssesmentImpl.setCapitalInvest(getCapitalInvest());
		tourismBonaAccoAssesmentImpl.setSourceAttach(getSourceAttach());
		tourismBonaAccoAssesmentImpl.setShareCapital(getShareCapital());
		tourismBonaAccoAssesmentImpl.setLoanCapital(getLoanCapital());
		tourismBonaAccoAssesmentImpl.setOther(getOther());
		tourismBonaAccoAssesmentImpl.setPermanentLocalMale(
			getPermanentLocalMale());
		tourismBonaAccoAssesmentImpl.setPermanentLocalFemale(
			getPermanentLocalFemale());
		tourismBonaAccoAssesmentImpl.setPermanentForeignMale(
			getPermanentForeignMale());
		tourismBonaAccoAssesmentImpl.setPermanentForeignFemale(
			getPermanentForeignFemale());
		tourismBonaAccoAssesmentImpl.setTemporaryLocalMale(
			getTemporaryLocalMale());
		tourismBonaAccoAssesmentImpl.setTemporaryLocalFemale(
			getTemporaryLocalFemale());
		tourismBonaAccoAssesmentImpl.setTemporaryForeignMale(
			getTemporaryForeignMale());
		tourismBonaAccoAssesmentImpl.setTemporaryForeignFemale(
			getTemporaryForeignFemale());
		tourismBonaAccoAssesmentImpl.setTotalLocalMale(getTotalLocalMale());
		tourismBonaAccoAssesmentImpl.setTotalLocalFemale(getTotalLocalFemale());
		tourismBonaAccoAssesmentImpl.setTotalForeignMale(getTotalForeignMale());
		tourismBonaAccoAssesmentImpl.setTotalForeignFemale(
			getTotalForeignFemale());
		tourismBonaAccoAssesmentImpl.setSalaryWages(getSalaryWages());
		tourismBonaAccoAssesmentImpl.setEstimatedExpenditure(
			getEstimatedExpenditure());
		tourismBonaAccoAssesmentImpl.setOtherExpenditure(getOtherExpenditure());
		tourismBonaAccoAssesmentImpl.setStaffPermanentLocalMale(
			getStaffPermanentLocalMale());
		tourismBonaAccoAssesmentImpl.setStaffPermanentLocalFemale(
			getStaffPermanentLocalFemale());
		tourismBonaAccoAssesmentImpl.setStaffForeignLocalMale(
			getStaffForeignLocalMale());
		tourismBonaAccoAssesmentImpl.setStaffForeignLocalFemale(
			getStaffForeignLocalFemale());
		tourismBonaAccoAssesmentImpl.setStaffTemporaryLocalMale(
			getStaffTemporaryLocalMale());
		tourismBonaAccoAssesmentImpl.setStaffTemporaryLocalFemale(
			getStaffTemporaryLocalFemale());
		tourismBonaAccoAssesmentImpl.setStaffTemporaryForeignMale(
			getStaffTemporaryForeignMale());
		tourismBonaAccoAssesmentImpl.setStaffTemporaryForeignFemale(
			getStaffTemporaryForeignFemale());
		tourismBonaAccoAssesmentImpl.setStaffTotalForeignMale(
			getStaffTotalForeignMale());
		tourismBonaAccoAssesmentImpl.setStaffTotalForeignFemale(
			getStaffTotalForeignFemale());
		tourismBonaAccoAssesmentImpl.setStaffTotalLocalMale(
			getStaffTotalLocalMale());
		tourismBonaAccoAssesmentImpl.setStaffTotalLocalFemale(
			getStaffTotalLocalFemale());
		tourismBonaAccoAssesmentImpl.setTourismApplicationId(
			getTourismApplicationId());

		tourismBonaAccoAssesmentImpl.resetOriginalValues();

		return tourismBonaAccoAssesmentImpl;
	}

	@Override
	public TourismBonaAccoAssesment cloneWithOriginalValues() {
		TourismBonaAccoAssesmentImpl tourismBonaAccoAssesmentImpl =
			new TourismBonaAccoAssesmentImpl();

		tourismBonaAccoAssesmentImpl.setTourismBonaAccoAssesmentId(
			this.<Long>getColumnOriginalValue("tourismBonaAccoAssesmentId"));
		tourismBonaAccoAssesmentImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		tourismBonaAccoAssesmentImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		tourismBonaAccoAssesmentImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		tourismBonaAccoAssesmentImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		tourismBonaAccoAssesmentImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		tourismBonaAccoAssesmentImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		tourismBonaAccoAssesmentImpl.setCountryOrigin(
			this.<String>getColumnOriginalValue("countryOrigin"));
		tourismBonaAccoAssesmentImpl.setJointVenture(
			this.<String>getColumnOriginalValue("jointVenture"));
		tourismBonaAccoAssesmentImpl.setLocalPer(
			this.<String>getColumnOriginalValue("localPer"));
		tourismBonaAccoAssesmentImpl.setForeignPer(
			this.<String>getColumnOriginalValue("foreignPer"));
		tourismBonaAccoAssesmentImpl.setCapitalInvest(
			this.<String>getColumnOriginalValue("capitalInvest"));
		tourismBonaAccoAssesmentImpl.setSourceAttach(
			this.<String>getColumnOriginalValue("sourceAttach"));
		tourismBonaAccoAssesmentImpl.setShareCapital(
			this.<String>getColumnOriginalValue("shareCapital"));
		tourismBonaAccoAssesmentImpl.setLoanCapital(
			this.<String>getColumnOriginalValue("loanCapital"));
		tourismBonaAccoAssesmentImpl.setOther(
			this.<String>getColumnOriginalValue("other"));
		tourismBonaAccoAssesmentImpl.setPermanentLocalMale(
			this.<String>getColumnOriginalValue("permanentLocalMale"));
		tourismBonaAccoAssesmentImpl.setPermanentLocalFemale(
			this.<String>getColumnOriginalValue("permanentLocalFemale"));
		tourismBonaAccoAssesmentImpl.setPermanentForeignMale(
			this.<String>getColumnOriginalValue("permanentForeignMale"));
		tourismBonaAccoAssesmentImpl.setPermanentForeignFemale(
			this.<String>getColumnOriginalValue("permanentForeignFemale"));
		tourismBonaAccoAssesmentImpl.setTemporaryLocalMale(
			this.<String>getColumnOriginalValue("temporaryLocalMale"));
		tourismBonaAccoAssesmentImpl.setTemporaryLocalFemale(
			this.<String>getColumnOriginalValue("temporaryLocalFemale"));
		tourismBonaAccoAssesmentImpl.setTemporaryForeignMale(
			this.<String>getColumnOriginalValue("temporaryForeignMale"));
		tourismBonaAccoAssesmentImpl.setTemporaryForeignFemale(
			this.<String>getColumnOriginalValue("temporaryForeignFemale"));
		tourismBonaAccoAssesmentImpl.setTotalLocalMale(
			this.<String>getColumnOriginalValue("totalLocalMale"));
		tourismBonaAccoAssesmentImpl.setTotalLocalFemale(
			this.<String>getColumnOriginalValue("totalLocalFemale"));
		tourismBonaAccoAssesmentImpl.setTotalForeignMale(
			this.<String>getColumnOriginalValue("totalForeignMale"));
		tourismBonaAccoAssesmentImpl.setTotalForeignFemale(
			this.<String>getColumnOriginalValue("totalForeignFemale"));
		tourismBonaAccoAssesmentImpl.setSalaryWages(
			this.<String>getColumnOriginalValue("salaryWages"));
		tourismBonaAccoAssesmentImpl.setEstimatedExpenditure(
			this.<String>getColumnOriginalValue("estimatedExpenditure"));
		tourismBonaAccoAssesmentImpl.setOtherExpenditure(
			this.<String>getColumnOriginalValue("otherExpenditure"));
		tourismBonaAccoAssesmentImpl.setStaffPermanentLocalMale(
			this.<String>getColumnOriginalValue("staffPermanentLocalMale"));
		tourismBonaAccoAssesmentImpl.setStaffPermanentLocalFemale(
			this.<String>getColumnOriginalValue("staffPermanentLocalFemale"));
		tourismBonaAccoAssesmentImpl.setStaffForeignLocalMale(
			this.<String>getColumnOriginalValue("staffForeignLocalMale"));
		tourismBonaAccoAssesmentImpl.setStaffForeignLocalFemale(
			this.<String>getColumnOriginalValue("staffForeignLocalFemale"));
		tourismBonaAccoAssesmentImpl.setStaffTemporaryLocalMale(
			this.<String>getColumnOriginalValue("staffTemporaryLocalMale"));
		tourismBonaAccoAssesmentImpl.setStaffTemporaryLocalFemale(
			this.<String>getColumnOriginalValue("staffTemporaryLocalFemale"));
		tourismBonaAccoAssesmentImpl.setStaffTemporaryForeignMale(
			this.<String>getColumnOriginalValue("staffTemporaryForeignMale"));
		tourismBonaAccoAssesmentImpl.setStaffTemporaryForeignFemale(
			this.<String>getColumnOriginalValue("staffTemporaryForeignFemale"));
		tourismBonaAccoAssesmentImpl.setStaffTotalForeignMale(
			this.<String>getColumnOriginalValue("staffTotalForeignMale"));
		tourismBonaAccoAssesmentImpl.setStaffTotalForeignFemale(
			this.<String>getColumnOriginalValue("staffTotalForeignFemale"));
		tourismBonaAccoAssesmentImpl.setStaffTotalLocalMale(
			this.<String>getColumnOriginalValue("staffTotalLocalMale"));
		tourismBonaAccoAssesmentImpl.setStaffTotalLocalFemale(
			this.<String>getColumnOriginalValue("staffTotalLocalFemale"));
		tourismBonaAccoAssesmentImpl.setTourismApplicationId(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));

		return tourismBonaAccoAssesmentImpl;
	}

	@Override
	public int compareTo(TourismBonaAccoAssesment tourismBonaAccoAssesment) {
		long primaryKey = tourismBonaAccoAssesment.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof TourismBonaAccoAssesment)) {
			return false;
		}

		TourismBonaAccoAssesment tourismBonaAccoAssesment =
			(TourismBonaAccoAssesment)object;

		long primaryKey = tourismBonaAccoAssesment.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<TourismBonaAccoAssesment> toCacheModel() {
		TourismBonaAccoAssesmentCacheModel tourismBonaAccoAssesmentCacheModel =
			new TourismBonaAccoAssesmentCacheModel();

		tourismBonaAccoAssesmentCacheModel.tourismBonaAccoAssesmentId =
			getTourismBonaAccoAssesmentId();

		tourismBonaAccoAssesmentCacheModel.groupId = getGroupId();

		tourismBonaAccoAssesmentCacheModel.companyId = getCompanyId();

		tourismBonaAccoAssesmentCacheModel.userId = getUserId();

		tourismBonaAccoAssesmentCacheModel.userName = getUserName();

		String userName = tourismBonaAccoAssesmentCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			tourismBonaAccoAssesmentCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			tourismBonaAccoAssesmentCacheModel.createDate =
				createDate.getTime();
		}
		else {
			tourismBonaAccoAssesmentCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			tourismBonaAccoAssesmentCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			tourismBonaAccoAssesmentCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		tourismBonaAccoAssesmentCacheModel.countryOrigin = getCountryOrigin();

		String countryOrigin = tourismBonaAccoAssesmentCacheModel.countryOrigin;

		if ((countryOrigin != null) && (countryOrigin.length() == 0)) {
			tourismBonaAccoAssesmentCacheModel.countryOrigin = null;
		}

		tourismBonaAccoAssesmentCacheModel.jointVenture = getJointVenture();

		String jointVenture = tourismBonaAccoAssesmentCacheModel.jointVenture;

		if ((jointVenture != null) && (jointVenture.length() == 0)) {
			tourismBonaAccoAssesmentCacheModel.jointVenture = null;
		}

		tourismBonaAccoAssesmentCacheModel.localPer = getLocalPer();

		String localPer = tourismBonaAccoAssesmentCacheModel.localPer;

		if ((localPer != null) && (localPer.length() == 0)) {
			tourismBonaAccoAssesmentCacheModel.localPer = null;
		}

		tourismBonaAccoAssesmentCacheModel.foreignPer = getForeignPer();

		String foreignPer = tourismBonaAccoAssesmentCacheModel.foreignPer;

		if ((foreignPer != null) && (foreignPer.length() == 0)) {
			tourismBonaAccoAssesmentCacheModel.foreignPer = null;
		}

		tourismBonaAccoAssesmentCacheModel.capitalInvest = getCapitalInvest();

		String capitalInvest = tourismBonaAccoAssesmentCacheModel.capitalInvest;

		if ((capitalInvest != null) && (capitalInvest.length() == 0)) {
			tourismBonaAccoAssesmentCacheModel.capitalInvest = null;
		}

		tourismBonaAccoAssesmentCacheModel.sourceAttach = getSourceAttach();

		String sourceAttach = tourismBonaAccoAssesmentCacheModel.sourceAttach;

		if ((sourceAttach != null) && (sourceAttach.length() == 0)) {
			tourismBonaAccoAssesmentCacheModel.sourceAttach = null;
		}

		tourismBonaAccoAssesmentCacheModel.shareCapital = getShareCapital();

		String shareCapital = tourismBonaAccoAssesmentCacheModel.shareCapital;

		if ((shareCapital != null) && (shareCapital.length() == 0)) {
			tourismBonaAccoAssesmentCacheModel.shareCapital = null;
		}

		tourismBonaAccoAssesmentCacheModel.loanCapital = getLoanCapital();

		String loanCapital = tourismBonaAccoAssesmentCacheModel.loanCapital;

		if ((loanCapital != null) && (loanCapital.length() == 0)) {
			tourismBonaAccoAssesmentCacheModel.loanCapital = null;
		}

		tourismBonaAccoAssesmentCacheModel.other = getOther();

		String other = tourismBonaAccoAssesmentCacheModel.other;

		if ((other != null) && (other.length() == 0)) {
			tourismBonaAccoAssesmentCacheModel.other = null;
		}

		tourismBonaAccoAssesmentCacheModel.permanentLocalMale =
			getPermanentLocalMale();

		String permanentLocalMale =
			tourismBonaAccoAssesmentCacheModel.permanentLocalMale;

		if ((permanentLocalMale != null) &&
			(permanentLocalMale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.permanentLocalMale = null;
		}

		tourismBonaAccoAssesmentCacheModel.permanentLocalFemale =
			getPermanentLocalFemale();

		String permanentLocalFemale =
			tourismBonaAccoAssesmentCacheModel.permanentLocalFemale;

		if ((permanentLocalFemale != null) &&
			(permanentLocalFemale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.permanentLocalFemale = null;
		}

		tourismBonaAccoAssesmentCacheModel.permanentForeignMale =
			getPermanentForeignMale();

		String permanentForeignMale =
			tourismBonaAccoAssesmentCacheModel.permanentForeignMale;

		if ((permanentForeignMale != null) &&
			(permanentForeignMale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.permanentForeignMale = null;
		}

		tourismBonaAccoAssesmentCacheModel.permanentForeignFemale =
			getPermanentForeignFemale();

		String permanentForeignFemale =
			tourismBonaAccoAssesmentCacheModel.permanentForeignFemale;

		if ((permanentForeignFemale != null) &&
			(permanentForeignFemale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.permanentForeignFemale = null;
		}

		tourismBonaAccoAssesmentCacheModel.temporaryLocalMale =
			getTemporaryLocalMale();

		String temporaryLocalMale =
			tourismBonaAccoAssesmentCacheModel.temporaryLocalMale;

		if ((temporaryLocalMale != null) &&
			(temporaryLocalMale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.temporaryLocalMale = null;
		}

		tourismBonaAccoAssesmentCacheModel.temporaryLocalFemale =
			getTemporaryLocalFemale();

		String temporaryLocalFemale =
			tourismBonaAccoAssesmentCacheModel.temporaryLocalFemale;

		if ((temporaryLocalFemale != null) &&
			(temporaryLocalFemale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.temporaryLocalFemale = null;
		}

		tourismBonaAccoAssesmentCacheModel.temporaryForeignMale =
			getTemporaryForeignMale();

		String temporaryForeignMale =
			tourismBonaAccoAssesmentCacheModel.temporaryForeignMale;

		if ((temporaryForeignMale != null) &&
			(temporaryForeignMale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.temporaryForeignMale = null;
		}

		tourismBonaAccoAssesmentCacheModel.temporaryForeignFemale =
			getTemporaryForeignFemale();

		String temporaryForeignFemale =
			tourismBonaAccoAssesmentCacheModel.temporaryForeignFemale;

		if ((temporaryForeignFemale != null) &&
			(temporaryForeignFemale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.temporaryForeignFemale = null;
		}

		tourismBonaAccoAssesmentCacheModel.totalLocalMale = getTotalLocalMale();

		String totalLocalMale =
			tourismBonaAccoAssesmentCacheModel.totalLocalMale;

		if ((totalLocalMale != null) && (totalLocalMale.length() == 0)) {
			tourismBonaAccoAssesmentCacheModel.totalLocalMale = null;
		}

		tourismBonaAccoAssesmentCacheModel.totalLocalFemale =
			getTotalLocalFemale();

		String totalLocalFemale =
			tourismBonaAccoAssesmentCacheModel.totalLocalFemale;

		if ((totalLocalFemale != null) && (totalLocalFemale.length() == 0)) {
			tourismBonaAccoAssesmentCacheModel.totalLocalFemale = null;
		}

		tourismBonaAccoAssesmentCacheModel.totalForeignMale =
			getTotalForeignMale();

		String totalForeignMale =
			tourismBonaAccoAssesmentCacheModel.totalForeignMale;

		if ((totalForeignMale != null) && (totalForeignMale.length() == 0)) {
			tourismBonaAccoAssesmentCacheModel.totalForeignMale = null;
		}

		tourismBonaAccoAssesmentCacheModel.totalForeignFemale =
			getTotalForeignFemale();

		String totalForeignFemale =
			tourismBonaAccoAssesmentCacheModel.totalForeignFemale;

		if ((totalForeignFemale != null) &&
			(totalForeignFemale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.totalForeignFemale = null;
		}

		tourismBonaAccoAssesmentCacheModel.salaryWages = getSalaryWages();

		String salaryWages = tourismBonaAccoAssesmentCacheModel.salaryWages;

		if ((salaryWages != null) && (salaryWages.length() == 0)) {
			tourismBonaAccoAssesmentCacheModel.salaryWages = null;
		}

		tourismBonaAccoAssesmentCacheModel.estimatedExpenditure =
			getEstimatedExpenditure();

		String estimatedExpenditure =
			tourismBonaAccoAssesmentCacheModel.estimatedExpenditure;

		if ((estimatedExpenditure != null) &&
			(estimatedExpenditure.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.estimatedExpenditure = null;
		}

		tourismBonaAccoAssesmentCacheModel.otherExpenditure =
			getOtherExpenditure();

		String otherExpenditure =
			tourismBonaAccoAssesmentCacheModel.otherExpenditure;

		if ((otherExpenditure != null) && (otherExpenditure.length() == 0)) {
			tourismBonaAccoAssesmentCacheModel.otherExpenditure = null;
		}

		tourismBonaAccoAssesmentCacheModel.staffPermanentLocalMale =
			getStaffPermanentLocalMale();

		String staffPermanentLocalMale =
			tourismBonaAccoAssesmentCacheModel.staffPermanentLocalMale;

		if ((staffPermanentLocalMale != null) &&
			(staffPermanentLocalMale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.staffPermanentLocalMale = null;
		}

		tourismBonaAccoAssesmentCacheModel.staffPermanentLocalFemale =
			getStaffPermanentLocalFemale();

		String staffPermanentLocalFemale =
			tourismBonaAccoAssesmentCacheModel.staffPermanentLocalFemale;

		if ((staffPermanentLocalFemale != null) &&
			(staffPermanentLocalFemale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.staffPermanentLocalFemale = null;
		}

		tourismBonaAccoAssesmentCacheModel.staffForeignLocalMale =
			getStaffForeignLocalMale();

		String staffForeignLocalMale =
			tourismBonaAccoAssesmentCacheModel.staffForeignLocalMale;

		if ((staffForeignLocalMale != null) &&
			(staffForeignLocalMale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.staffForeignLocalMale = null;
		}

		tourismBonaAccoAssesmentCacheModel.staffForeignLocalFemale =
			getStaffForeignLocalFemale();

		String staffForeignLocalFemale =
			tourismBonaAccoAssesmentCacheModel.staffForeignLocalFemale;

		if ((staffForeignLocalFemale != null) &&
			(staffForeignLocalFemale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.staffForeignLocalFemale = null;
		}

		tourismBonaAccoAssesmentCacheModel.staffTemporaryLocalMale =
			getStaffTemporaryLocalMale();

		String staffTemporaryLocalMale =
			tourismBonaAccoAssesmentCacheModel.staffTemporaryLocalMale;

		if ((staffTemporaryLocalMale != null) &&
			(staffTemporaryLocalMale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.staffTemporaryLocalMale = null;
		}

		tourismBonaAccoAssesmentCacheModel.staffTemporaryLocalFemale =
			getStaffTemporaryLocalFemale();

		String staffTemporaryLocalFemale =
			tourismBonaAccoAssesmentCacheModel.staffTemporaryLocalFemale;

		if ((staffTemporaryLocalFemale != null) &&
			(staffTemporaryLocalFemale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.staffTemporaryLocalFemale = null;
		}

		tourismBonaAccoAssesmentCacheModel.staffTemporaryForeignMale =
			getStaffTemporaryForeignMale();

		String staffTemporaryForeignMale =
			tourismBonaAccoAssesmentCacheModel.staffTemporaryForeignMale;

		if ((staffTemporaryForeignMale != null) &&
			(staffTemporaryForeignMale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.staffTemporaryForeignMale = null;
		}

		tourismBonaAccoAssesmentCacheModel.staffTemporaryForeignFemale =
			getStaffTemporaryForeignFemale();

		String staffTemporaryForeignFemale =
			tourismBonaAccoAssesmentCacheModel.staffTemporaryForeignFemale;

		if ((staffTemporaryForeignFemale != null) &&
			(staffTemporaryForeignFemale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.staffTemporaryForeignFemale =
				null;
		}

		tourismBonaAccoAssesmentCacheModel.staffTotalForeignMale =
			getStaffTotalForeignMale();

		String staffTotalForeignMale =
			tourismBonaAccoAssesmentCacheModel.staffTotalForeignMale;

		if ((staffTotalForeignMale != null) &&
			(staffTotalForeignMale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.staffTotalForeignMale = null;
		}

		tourismBonaAccoAssesmentCacheModel.staffTotalForeignFemale =
			getStaffTotalForeignFemale();

		String staffTotalForeignFemale =
			tourismBonaAccoAssesmentCacheModel.staffTotalForeignFemale;

		if ((staffTotalForeignFemale != null) &&
			(staffTotalForeignFemale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.staffTotalForeignFemale = null;
		}

		tourismBonaAccoAssesmentCacheModel.staffTotalLocalMale =
			getStaffTotalLocalMale();

		String staffTotalLocalMale =
			tourismBonaAccoAssesmentCacheModel.staffTotalLocalMale;

		if ((staffTotalLocalMale != null) &&
			(staffTotalLocalMale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.staffTotalLocalMale = null;
		}

		tourismBonaAccoAssesmentCacheModel.staffTotalLocalFemale =
			getStaffTotalLocalFemale();

		String staffTotalLocalFemale =
			tourismBonaAccoAssesmentCacheModel.staffTotalLocalFemale;

		if ((staffTotalLocalFemale != null) &&
			(staffTotalLocalFemale.length() == 0)) {

			tourismBonaAccoAssesmentCacheModel.staffTotalLocalFemale = null;
		}

		tourismBonaAccoAssesmentCacheModel.tourismApplicationId =
			getTourismApplicationId();

		return tourismBonaAccoAssesmentCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<TourismBonaAccoAssesment, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<TourismBonaAccoAssesment, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismBonaAccoAssesment, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(TourismBonaAccoAssesment)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, TourismBonaAccoAssesment>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						TourismBonaAccoAssesment.class, ModelWrapper.class);

	}

	private long _tourismBonaAccoAssesmentId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _countryOrigin;
	private String _jointVenture;
	private String _localPer;
	private String _foreignPer;
	private String _capitalInvest;
	private String _sourceAttach;
	private String _shareCapital;
	private String _loanCapital;
	private String _other;
	private String _permanentLocalMale;
	private String _permanentLocalFemale;
	private String _permanentForeignMale;
	private String _permanentForeignFemale;
	private String _temporaryLocalMale;
	private String _temporaryLocalFemale;
	private String _temporaryForeignMale;
	private String _temporaryForeignFemale;
	private String _totalLocalMale;
	private String _totalLocalFemale;
	private String _totalForeignMale;
	private String _totalForeignFemale;
	private String _salaryWages;
	private String _estimatedExpenditure;
	private String _otherExpenditure;
	private String _staffPermanentLocalMale;
	private String _staffPermanentLocalFemale;
	private String _staffForeignLocalMale;
	private String _staffForeignLocalFemale;
	private String _staffTemporaryLocalMale;
	private String _staffTemporaryLocalFemale;
	private String _staffTemporaryForeignMale;
	private String _staffTemporaryForeignFemale;
	private String _staffTotalForeignMale;
	private String _staffTotalForeignFemale;
	private String _staffTotalLocalMale;
	private String _staffTotalLocalFemale;
	private long _tourismApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<TourismBonaAccoAssesment, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((TourismBonaAccoAssesment)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"tourismBonaAccoAssesmentId", _tourismBonaAccoAssesmentId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("countryOrigin", _countryOrigin);
		_columnOriginalValues.put("jointVenture", _jointVenture);
		_columnOriginalValues.put("localPer", _localPer);
		_columnOriginalValues.put("foreignPer", _foreignPer);
		_columnOriginalValues.put("capitalInvest", _capitalInvest);
		_columnOriginalValues.put("sourceAttach", _sourceAttach);
		_columnOriginalValues.put("shareCapital", _shareCapital);
		_columnOriginalValues.put("loanCapital", _loanCapital);
		_columnOriginalValues.put("other", _other);
		_columnOriginalValues.put("permanentLocalMale", _permanentLocalMale);
		_columnOriginalValues.put(
			"permanentLocalFemale", _permanentLocalFemale);
		_columnOriginalValues.put(
			"permanentForeignMale", _permanentForeignMale);
		_columnOriginalValues.put(
			"permanentForeignFemale", _permanentForeignFemale);
		_columnOriginalValues.put("temporaryLocalMale", _temporaryLocalMale);
		_columnOriginalValues.put(
			"temporaryLocalFemale", _temporaryLocalFemale);
		_columnOriginalValues.put(
			"temporaryForeignMale", _temporaryForeignMale);
		_columnOriginalValues.put(
			"temporaryForeignFemale", _temporaryForeignFemale);
		_columnOriginalValues.put("totalLocalMale", _totalLocalMale);
		_columnOriginalValues.put("totalLocalFemale", _totalLocalFemale);
		_columnOriginalValues.put("totalForeignMale", _totalForeignMale);
		_columnOriginalValues.put("totalForeignFemale", _totalForeignFemale);
		_columnOriginalValues.put("salaryWages", _salaryWages);
		_columnOriginalValues.put(
			"estimatedExpenditure", _estimatedExpenditure);
		_columnOriginalValues.put("otherExpenditure", _otherExpenditure);
		_columnOriginalValues.put(
			"staffPermanentLocalMale", _staffPermanentLocalMale);
		_columnOriginalValues.put(
			"staffPermanentLocalFemale", _staffPermanentLocalFemale);
		_columnOriginalValues.put(
			"staffForeignLocalMale", _staffForeignLocalMale);
		_columnOriginalValues.put(
			"staffForeignLocalFemale", _staffForeignLocalFemale);
		_columnOriginalValues.put(
			"staffTemporaryLocalMale", _staffTemporaryLocalMale);
		_columnOriginalValues.put(
			"staffTemporaryLocalFemale", _staffTemporaryLocalFemale);
		_columnOriginalValues.put(
			"staffTemporaryForeignMale", _staffTemporaryForeignMale);
		_columnOriginalValues.put(
			"staffTemporaryForeignFemale", _staffTemporaryForeignFemale);
		_columnOriginalValues.put(
			"staffTotalForeignMale", _staffTotalForeignMale);
		_columnOriginalValues.put(
			"staffTotalForeignFemale", _staffTotalForeignFemale);
		_columnOriginalValues.put("staffTotalLocalMale", _staffTotalLocalMale);
		_columnOriginalValues.put(
			"staffTotalLocalFemale", _staffTotalLocalFemale);
		_columnOriginalValues.put(
			"tourismApplicationId", _tourismApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("tourismBonaAccoAssesmentId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("countryOrigin", 128L);

		columnBitmasks.put("jointVenture", 256L);

		columnBitmasks.put("localPer", 512L);

		columnBitmasks.put("foreignPer", 1024L);

		columnBitmasks.put("capitalInvest", 2048L);

		columnBitmasks.put("sourceAttach", 4096L);

		columnBitmasks.put("shareCapital", 8192L);

		columnBitmasks.put("loanCapital", 16384L);

		columnBitmasks.put("other", 32768L);

		columnBitmasks.put("permanentLocalMale", 65536L);

		columnBitmasks.put("permanentLocalFemale", 131072L);

		columnBitmasks.put("permanentForeignMale", 262144L);

		columnBitmasks.put("permanentForeignFemale", 524288L);

		columnBitmasks.put("temporaryLocalMale", 1048576L);

		columnBitmasks.put("temporaryLocalFemale", 2097152L);

		columnBitmasks.put("temporaryForeignMale", 4194304L);

		columnBitmasks.put("temporaryForeignFemale", 8388608L);

		columnBitmasks.put("totalLocalMale", 16777216L);

		columnBitmasks.put("totalLocalFemale", 33554432L);

		columnBitmasks.put("totalForeignMale", 67108864L);

		columnBitmasks.put("totalForeignFemale", 134217728L);

		columnBitmasks.put("salaryWages", 268435456L);

		columnBitmasks.put("estimatedExpenditure", 536870912L);

		columnBitmasks.put("otherExpenditure", 1073741824L);

		columnBitmasks.put("staffPermanentLocalMale", 2147483648L);

		columnBitmasks.put("staffPermanentLocalFemale", 4294967296L);

		columnBitmasks.put("staffForeignLocalMale", 8589934592L);

		columnBitmasks.put("staffForeignLocalFemale", 17179869184L);

		columnBitmasks.put("staffTemporaryLocalMale", 34359738368L);

		columnBitmasks.put("staffTemporaryLocalFemale", 68719476736L);

		columnBitmasks.put("staffTemporaryForeignMale", 137438953472L);

		columnBitmasks.put("staffTemporaryForeignFemale", 274877906944L);

		columnBitmasks.put("staffTotalForeignMale", 549755813888L);

		columnBitmasks.put("staffTotalForeignFemale", 1099511627776L);

		columnBitmasks.put("staffTotalLocalMale", 2199023255552L);

		columnBitmasks.put("staffTotalLocalFemale", 4398046511104L);

		columnBitmasks.put("tourismApplicationId", 8796093022208L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private TourismBonaAccoAssesment _escapedModel;

}