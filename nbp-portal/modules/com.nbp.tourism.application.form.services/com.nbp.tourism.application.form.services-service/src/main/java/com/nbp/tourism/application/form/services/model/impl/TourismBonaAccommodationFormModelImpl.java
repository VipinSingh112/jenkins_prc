/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.tourism.application.form.services.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.tourism.application.form.services.model.TourismBonaAccommodationForm;
import com.nbp.tourism.application.form.services.model.TourismBonaAccommodationFormModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the TourismBonaAccommodationForm service. Represents a row in the &quot;nbp_tourism_bona_af&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>TourismBonaAccommodationFormModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TourismBonaAccommodationFormImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TourismBonaAccommodationFormImpl
 * @generated
 */
@JSON(strict = true)
public class TourismBonaAccommodationFormModelImpl
	extends BaseModelImpl<TourismBonaAccommodationForm>
	implements TourismBonaAccommodationFormModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tourism bona accommodation form model instance should use the <code>TourismBonaAccommodationForm</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_tourism_bona_af";

	public static final Object[][] TABLE_COLUMNS = {
		{"tourismBonaAFId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP},
		{"bonaAccoDateOfApplication", Types.TIMESTAMP},
		{"bonaAccoTypeOfAccommodation", Types.VARCHAR},
		{"bonaAccoPurposeOfIncentives", Types.VARCHAR},
		{"bonaAccoOtherIncPurpose", Types.VARCHAR},
		{"bonaAccoNameOfProperty", Types.VARCHAR},
		{"bonaAccoNameOfOwner", Types.VARCHAR},
		{"bonaAccoLocation", Types.VARCHAR},
		{"bonaAccoCompanyNumber", Types.VARCHAR},
		{"bonaBusinessRegistrationNumber", Types.VARCHAR},
		{"bonaAccoDateOfRegistration", Types.TIMESTAMP},
		{"bonaAccoOwnerTrnNumber", Types.VARCHAR},
		{"bonaAccoTccNumber", Types.VARCHAR},
		{"bonaAccoExpiryDate", Types.TIMESTAMP},
		{"bonaAccoNameOfOperator", Types.VARCHAR},
		{"bonaAccoOperatorTrnNumber", Types.VARCHAR},
		{"bonaAccoOperatorTccNumber", Types.VARCHAR},
		{"bonaAccoOperatorExpiryDate", Types.TIMESTAMP},
		{"bonaAccoContactPerson", Types.VARCHAR},
		{"bonaAccoPositionHeld", Types.VARCHAR},
		{"tourismApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("tourismBonaAFId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("bonaAccoDateOfApplication", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("bonaAccoTypeOfAccommodation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAccoPurposeOfIncentives", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAccoOtherIncPurpose", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAccoNameOfProperty", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAccoNameOfOwner", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAccoLocation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAccoCompanyNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaBusinessRegistrationNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAccoDateOfRegistration", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("bonaAccoOwnerTrnNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAccoTccNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAccoExpiryDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("bonaAccoNameOfOperator", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAccoOperatorTrnNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAccoOperatorTccNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAccoOperatorExpiryDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("bonaAccoContactPerson", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaAccoPositionHeld", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tourismApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_tourism_bona_af (tourismBonaAFId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,bonaAccoDateOfApplication DATE null,bonaAccoTypeOfAccommodation VARCHAR(75) null,bonaAccoPurposeOfIncentives VARCHAR(75) null,bonaAccoOtherIncPurpose VARCHAR(75) null,bonaAccoNameOfProperty VARCHAR(75) null,bonaAccoNameOfOwner VARCHAR(75) null,bonaAccoLocation VARCHAR(75) null,bonaAccoCompanyNumber VARCHAR(75) null,bonaBusinessRegistrationNumber VARCHAR(75) null,bonaAccoDateOfRegistration DATE null,bonaAccoOwnerTrnNumber VARCHAR(75) null,bonaAccoTccNumber VARCHAR(75) null,bonaAccoExpiryDate DATE null,bonaAccoNameOfOperator VARCHAR(75) null,bonaAccoOperatorTrnNumber VARCHAR(75) null,bonaAccoOperatorTccNumber VARCHAR(75) null,bonaAccoOperatorExpiryDate DATE null,bonaAccoContactPerson VARCHAR(75) null,bonaAccoPositionHeld VARCHAR(75) null,tourismApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_tourism_bona_af";

	public static final String ORDER_BY_JPQL =
		" ORDER BY tourismBonaAccommodationForm.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_tourism_bona_af.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TOURISMAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public TourismBonaAccommodationFormModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _tourismBonaAFId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTourismBonaAFId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _tourismBonaAFId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TourismBonaAccommodationForm.class;
	}

	@Override
	public String getModelClassName() {
		return TourismBonaAccommodationForm.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<TourismBonaAccommodationForm, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<TourismBonaAccommodationForm, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismBonaAccommodationForm, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(TourismBonaAccommodationForm)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<TourismBonaAccommodationForm, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<TourismBonaAccommodationForm, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(TourismBonaAccommodationForm)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<TourismBonaAccommodationForm, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<TourismBonaAccommodationForm, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<TourismBonaAccommodationForm, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<TourismBonaAccommodationForm, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String,
						 Function<TourismBonaAccommodationForm, Object>>();

			attributeGetterFunctions.put(
				"tourismBonaAFId",
				TourismBonaAccommodationForm::getTourismBonaAFId);
			attributeGetterFunctions.put(
				"groupId", TourismBonaAccommodationForm::getGroupId);
			attributeGetterFunctions.put(
				"companyId", TourismBonaAccommodationForm::getCompanyId);
			attributeGetterFunctions.put(
				"userId", TourismBonaAccommodationForm::getUserId);
			attributeGetterFunctions.put(
				"userName", TourismBonaAccommodationForm::getUserName);
			attributeGetterFunctions.put(
				"createDate", TourismBonaAccommodationForm::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", TourismBonaAccommodationForm::getModifiedDate);
			attributeGetterFunctions.put(
				"bonaAccoDateOfApplication",
				TourismBonaAccommodationForm::getBonaAccoDateOfApplication);
			attributeGetterFunctions.put(
				"bonaAccoTypeOfAccommodation",
				TourismBonaAccommodationForm::getBonaAccoTypeOfAccommodation);
			attributeGetterFunctions.put(
				"bonaAccoPurposeOfIncentives",
				TourismBonaAccommodationForm::getBonaAccoPurposeOfIncentives);
			attributeGetterFunctions.put(
				"bonaAccoOtherIncPurpose",
				TourismBonaAccommodationForm::getBonaAccoOtherIncPurpose);
			attributeGetterFunctions.put(
				"bonaAccoNameOfProperty",
				TourismBonaAccommodationForm::getBonaAccoNameOfProperty);
			attributeGetterFunctions.put(
				"bonaAccoNameOfOwner",
				TourismBonaAccommodationForm::getBonaAccoNameOfOwner);
			attributeGetterFunctions.put(
				"bonaAccoLocation",
				TourismBonaAccommodationForm::getBonaAccoLocation);
			attributeGetterFunctions.put(
				"bonaAccoCompanyNumber",
				TourismBonaAccommodationForm::getBonaAccoCompanyNumber);
			attributeGetterFunctions.put(
				"bonaBusinessRegistrationNumber",
				TourismBonaAccommodationForm::
					getBonaBusinessRegistrationNumber);
			attributeGetterFunctions.put(
				"bonaAccoDateOfRegistration",
				TourismBonaAccommodationForm::getBonaAccoDateOfRegistration);
			attributeGetterFunctions.put(
				"bonaAccoOwnerTrnNumber",
				TourismBonaAccommodationForm::getBonaAccoOwnerTrnNumber);
			attributeGetterFunctions.put(
				"bonaAccoTccNumber",
				TourismBonaAccommodationForm::getBonaAccoTccNumber);
			attributeGetterFunctions.put(
				"bonaAccoExpiryDate",
				TourismBonaAccommodationForm::getBonaAccoExpiryDate);
			attributeGetterFunctions.put(
				"bonaAccoNameOfOperator",
				TourismBonaAccommodationForm::getBonaAccoNameOfOperator);
			attributeGetterFunctions.put(
				"bonaAccoOperatorTrnNumber",
				TourismBonaAccommodationForm::getBonaAccoOperatorTrnNumber);
			attributeGetterFunctions.put(
				"bonaAccoOperatorTccNumber",
				TourismBonaAccommodationForm::getBonaAccoOperatorTccNumber);
			attributeGetterFunctions.put(
				"bonaAccoOperatorExpiryDate",
				TourismBonaAccommodationForm::getBonaAccoOperatorExpiryDate);
			attributeGetterFunctions.put(
				"bonaAccoContactPerson",
				TourismBonaAccommodationForm::getBonaAccoContactPerson);
			attributeGetterFunctions.put(
				"bonaAccoPositionHeld",
				TourismBonaAccommodationForm::getBonaAccoPositionHeld);
			attributeGetterFunctions.put(
				"tourismApplicationId",
				TourismBonaAccommodationForm::getTourismApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<TourismBonaAccommodationForm, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<TourismBonaAccommodationForm, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<TourismBonaAccommodationForm, ?>>();

			attributeSetterBiConsumers.put(
				"tourismBonaAFId",
				(BiConsumer<TourismBonaAccommodationForm, Long>)
					TourismBonaAccommodationForm::setTourismBonaAFId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<TourismBonaAccommodationForm, Long>)
					TourismBonaAccommodationForm::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<TourismBonaAccommodationForm, Long>)
					TourismBonaAccommodationForm::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<TourismBonaAccommodationForm, Long>)
					TourismBonaAccommodationForm::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<TourismBonaAccommodationForm, String>)
					TourismBonaAccommodationForm::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<TourismBonaAccommodationForm, Date>)
					TourismBonaAccommodationForm::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<TourismBonaAccommodationForm, Date>)
					TourismBonaAccommodationForm::setModifiedDate);
			attributeSetterBiConsumers.put(
				"bonaAccoDateOfApplication",
				(BiConsumer<TourismBonaAccommodationForm, Date>)
					TourismBonaAccommodationForm::setBonaAccoDateOfApplication);
			attributeSetterBiConsumers.put(
				"bonaAccoTypeOfAccommodation",
				(BiConsumer<TourismBonaAccommodationForm, String>)
					TourismBonaAccommodationForm::
						setBonaAccoTypeOfAccommodation);
			attributeSetterBiConsumers.put(
				"bonaAccoPurposeOfIncentives",
				(BiConsumer<TourismBonaAccommodationForm, String>)
					TourismBonaAccommodationForm::
						setBonaAccoPurposeOfIncentives);
			attributeSetterBiConsumers.put(
				"bonaAccoOtherIncPurpose",
				(BiConsumer<TourismBonaAccommodationForm, String>)
					TourismBonaAccommodationForm::setBonaAccoOtherIncPurpose);
			attributeSetterBiConsumers.put(
				"bonaAccoNameOfProperty",
				(BiConsumer<TourismBonaAccommodationForm, String>)
					TourismBonaAccommodationForm::setBonaAccoNameOfProperty);
			attributeSetterBiConsumers.put(
				"bonaAccoNameOfOwner",
				(BiConsumer<TourismBonaAccommodationForm, String>)
					TourismBonaAccommodationForm::setBonaAccoNameOfOwner);
			attributeSetterBiConsumers.put(
				"bonaAccoLocation",
				(BiConsumer<TourismBonaAccommodationForm, String>)
					TourismBonaAccommodationForm::setBonaAccoLocation);
			attributeSetterBiConsumers.put(
				"bonaAccoCompanyNumber",
				(BiConsumer<TourismBonaAccommodationForm, String>)
					TourismBonaAccommodationForm::setBonaAccoCompanyNumber);
			attributeSetterBiConsumers.put(
				"bonaBusinessRegistrationNumber",
				(BiConsumer<TourismBonaAccommodationForm, String>)
					TourismBonaAccommodationForm::
						setBonaBusinessRegistrationNumber);
			attributeSetterBiConsumers.put(
				"bonaAccoDateOfRegistration",
				(BiConsumer<TourismBonaAccommodationForm, Date>)
					TourismBonaAccommodationForm::
						setBonaAccoDateOfRegistration);
			attributeSetterBiConsumers.put(
				"bonaAccoOwnerTrnNumber",
				(BiConsumer<TourismBonaAccommodationForm, String>)
					TourismBonaAccommodationForm::setBonaAccoOwnerTrnNumber);
			attributeSetterBiConsumers.put(
				"bonaAccoTccNumber",
				(BiConsumer<TourismBonaAccommodationForm, String>)
					TourismBonaAccommodationForm::setBonaAccoTccNumber);
			attributeSetterBiConsumers.put(
				"bonaAccoExpiryDate",
				(BiConsumer<TourismBonaAccommodationForm, Date>)
					TourismBonaAccommodationForm::setBonaAccoExpiryDate);
			attributeSetterBiConsumers.put(
				"bonaAccoNameOfOperator",
				(BiConsumer<TourismBonaAccommodationForm, String>)
					TourismBonaAccommodationForm::setBonaAccoNameOfOperator);
			attributeSetterBiConsumers.put(
				"bonaAccoOperatorTrnNumber",
				(BiConsumer<TourismBonaAccommodationForm, String>)
					TourismBonaAccommodationForm::setBonaAccoOperatorTrnNumber);
			attributeSetterBiConsumers.put(
				"bonaAccoOperatorTccNumber",
				(BiConsumer<TourismBonaAccommodationForm, String>)
					TourismBonaAccommodationForm::setBonaAccoOperatorTccNumber);
			attributeSetterBiConsumers.put(
				"bonaAccoOperatorExpiryDate",
				(BiConsumer<TourismBonaAccommodationForm, Date>)
					TourismBonaAccommodationForm::
						setBonaAccoOperatorExpiryDate);
			attributeSetterBiConsumers.put(
				"bonaAccoContactPerson",
				(BiConsumer<TourismBonaAccommodationForm, String>)
					TourismBonaAccommodationForm::setBonaAccoContactPerson);
			attributeSetterBiConsumers.put(
				"bonaAccoPositionHeld",
				(BiConsumer<TourismBonaAccommodationForm, String>)
					TourismBonaAccommodationForm::setBonaAccoPositionHeld);
			attributeSetterBiConsumers.put(
				"tourismApplicationId",
				(BiConsumer<TourismBonaAccommodationForm, Long>)
					TourismBonaAccommodationForm::setTourismApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getTourismBonaAFId() {
		return _tourismBonaAFId;
	}

	@Override
	public void setTourismBonaAFId(long tourismBonaAFId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismBonaAFId = tourismBonaAFId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public Date getBonaAccoDateOfApplication() {
		return _bonaAccoDateOfApplication;
	}

	@Override
	public void setBonaAccoDateOfApplication(Date bonaAccoDateOfApplication) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAccoDateOfApplication = bonaAccoDateOfApplication;
	}

	@JSON
	@Override
	public String getBonaAccoTypeOfAccommodation() {
		if (_bonaAccoTypeOfAccommodation == null) {
			return "";
		}
		else {
			return _bonaAccoTypeOfAccommodation;
		}
	}

	@Override
	public void setBonaAccoTypeOfAccommodation(
		String bonaAccoTypeOfAccommodation) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAccoTypeOfAccommodation = bonaAccoTypeOfAccommodation;
	}

	@JSON
	@Override
	public String getBonaAccoPurposeOfIncentives() {
		if (_bonaAccoPurposeOfIncentives == null) {
			return "";
		}
		else {
			return _bonaAccoPurposeOfIncentives;
		}
	}

	@Override
	public void setBonaAccoPurposeOfIncentives(
		String bonaAccoPurposeOfIncentives) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAccoPurposeOfIncentives = bonaAccoPurposeOfIncentives;
	}

	@JSON
	@Override
	public String getBonaAccoOtherIncPurpose() {
		if (_bonaAccoOtherIncPurpose == null) {
			return "";
		}
		else {
			return _bonaAccoOtherIncPurpose;
		}
	}

	@Override
	public void setBonaAccoOtherIncPurpose(String bonaAccoOtherIncPurpose) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAccoOtherIncPurpose = bonaAccoOtherIncPurpose;
	}

	@JSON
	@Override
	public String getBonaAccoNameOfProperty() {
		if (_bonaAccoNameOfProperty == null) {
			return "";
		}
		else {
			return _bonaAccoNameOfProperty;
		}
	}

	@Override
	public void setBonaAccoNameOfProperty(String bonaAccoNameOfProperty) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAccoNameOfProperty = bonaAccoNameOfProperty;
	}

	@JSON
	@Override
	public String getBonaAccoNameOfOwner() {
		if (_bonaAccoNameOfOwner == null) {
			return "";
		}
		else {
			return _bonaAccoNameOfOwner;
		}
	}

	@Override
	public void setBonaAccoNameOfOwner(String bonaAccoNameOfOwner) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAccoNameOfOwner = bonaAccoNameOfOwner;
	}

	@JSON
	@Override
	public String getBonaAccoLocation() {
		if (_bonaAccoLocation == null) {
			return "";
		}
		else {
			return _bonaAccoLocation;
		}
	}

	@Override
	public void setBonaAccoLocation(String bonaAccoLocation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAccoLocation = bonaAccoLocation;
	}

	@JSON
	@Override
	public String getBonaAccoCompanyNumber() {
		if (_bonaAccoCompanyNumber == null) {
			return "";
		}
		else {
			return _bonaAccoCompanyNumber;
		}
	}

	@Override
	public void setBonaAccoCompanyNumber(String bonaAccoCompanyNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAccoCompanyNumber = bonaAccoCompanyNumber;
	}

	@JSON
	@Override
	public String getBonaBusinessRegistrationNumber() {
		if (_bonaBusinessRegistrationNumber == null) {
			return "";
		}
		else {
			return _bonaBusinessRegistrationNumber;
		}
	}

	@Override
	public void setBonaBusinessRegistrationNumber(
		String bonaBusinessRegistrationNumber) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaBusinessRegistrationNumber = bonaBusinessRegistrationNumber;
	}

	@JSON
	@Override
	public Date getBonaAccoDateOfRegistration() {
		return _bonaAccoDateOfRegistration;
	}

	@Override
	public void setBonaAccoDateOfRegistration(Date bonaAccoDateOfRegistration) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAccoDateOfRegistration = bonaAccoDateOfRegistration;
	}

	@JSON
	@Override
	public String getBonaAccoOwnerTrnNumber() {
		if (_bonaAccoOwnerTrnNumber == null) {
			return "";
		}
		else {
			return _bonaAccoOwnerTrnNumber;
		}
	}

	@Override
	public void setBonaAccoOwnerTrnNumber(String bonaAccoOwnerTrnNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAccoOwnerTrnNumber = bonaAccoOwnerTrnNumber;
	}

	@JSON
	@Override
	public String getBonaAccoTccNumber() {
		if (_bonaAccoTccNumber == null) {
			return "";
		}
		else {
			return _bonaAccoTccNumber;
		}
	}

	@Override
	public void setBonaAccoTccNumber(String bonaAccoTccNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAccoTccNumber = bonaAccoTccNumber;
	}

	@JSON
	@Override
	public Date getBonaAccoExpiryDate() {
		return _bonaAccoExpiryDate;
	}

	@Override
	public void setBonaAccoExpiryDate(Date bonaAccoExpiryDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAccoExpiryDate = bonaAccoExpiryDate;
	}

	@JSON
	@Override
	public String getBonaAccoNameOfOperator() {
		if (_bonaAccoNameOfOperator == null) {
			return "";
		}
		else {
			return _bonaAccoNameOfOperator;
		}
	}

	@Override
	public void setBonaAccoNameOfOperator(String bonaAccoNameOfOperator) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAccoNameOfOperator = bonaAccoNameOfOperator;
	}

	@JSON
	@Override
	public String getBonaAccoOperatorTrnNumber() {
		if (_bonaAccoOperatorTrnNumber == null) {
			return "";
		}
		else {
			return _bonaAccoOperatorTrnNumber;
		}
	}

	@Override
	public void setBonaAccoOperatorTrnNumber(String bonaAccoOperatorTrnNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAccoOperatorTrnNumber = bonaAccoOperatorTrnNumber;
	}

	@JSON
	@Override
	public String getBonaAccoOperatorTccNumber() {
		if (_bonaAccoOperatorTccNumber == null) {
			return "";
		}
		else {
			return _bonaAccoOperatorTccNumber;
		}
	}

	@Override
	public void setBonaAccoOperatorTccNumber(String bonaAccoOperatorTccNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAccoOperatorTccNumber = bonaAccoOperatorTccNumber;
	}

	@JSON
	@Override
	public Date getBonaAccoOperatorExpiryDate() {
		return _bonaAccoOperatorExpiryDate;
	}

	@Override
	public void setBonaAccoOperatorExpiryDate(Date bonaAccoOperatorExpiryDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAccoOperatorExpiryDate = bonaAccoOperatorExpiryDate;
	}

	@JSON
	@Override
	public String getBonaAccoContactPerson() {
		if (_bonaAccoContactPerson == null) {
			return "";
		}
		else {
			return _bonaAccoContactPerson;
		}
	}

	@Override
	public void setBonaAccoContactPerson(String bonaAccoContactPerson) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAccoContactPerson = bonaAccoContactPerson;
	}

	@JSON
	@Override
	public String getBonaAccoPositionHeld() {
		if (_bonaAccoPositionHeld == null) {
			return "";
		}
		else {
			return _bonaAccoPositionHeld;
		}
	}

	@Override
	public void setBonaAccoPositionHeld(String bonaAccoPositionHeld) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaAccoPositionHeld = bonaAccoPositionHeld;
	}

	@JSON
	@Override
	public long getTourismApplicationId() {
		return _tourismApplicationId;
	}

	@Override
	public void setTourismApplicationId(long tourismApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismApplicationId = tourismApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalTourismApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), TourismBonaAccommodationForm.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TourismBonaAccommodationForm toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, TourismBonaAccommodationForm>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TourismBonaAccommodationFormImpl tourismBonaAccommodationFormImpl =
			new TourismBonaAccommodationFormImpl();

		tourismBonaAccommodationFormImpl.setTourismBonaAFId(
			getTourismBonaAFId());
		tourismBonaAccommodationFormImpl.setGroupId(getGroupId());
		tourismBonaAccommodationFormImpl.setCompanyId(getCompanyId());
		tourismBonaAccommodationFormImpl.setUserId(getUserId());
		tourismBonaAccommodationFormImpl.setUserName(getUserName());
		tourismBonaAccommodationFormImpl.setCreateDate(getCreateDate());
		tourismBonaAccommodationFormImpl.setModifiedDate(getModifiedDate());
		tourismBonaAccommodationFormImpl.setBonaAccoDateOfApplication(
			getBonaAccoDateOfApplication());
		tourismBonaAccommodationFormImpl.setBonaAccoTypeOfAccommodation(
			getBonaAccoTypeOfAccommodation());
		tourismBonaAccommodationFormImpl.setBonaAccoPurposeOfIncentives(
			getBonaAccoPurposeOfIncentives());
		tourismBonaAccommodationFormImpl.setBonaAccoOtherIncPurpose(
			getBonaAccoOtherIncPurpose());
		tourismBonaAccommodationFormImpl.setBonaAccoNameOfProperty(
			getBonaAccoNameOfProperty());
		tourismBonaAccommodationFormImpl.setBonaAccoNameOfOwner(
			getBonaAccoNameOfOwner());
		tourismBonaAccommodationFormImpl.setBonaAccoLocation(
			getBonaAccoLocation());
		tourismBonaAccommodationFormImpl.setBonaAccoCompanyNumber(
			getBonaAccoCompanyNumber());
		tourismBonaAccommodationFormImpl.setBonaBusinessRegistrationNumber(
			getBonaBusinessRegistrationNumber());
		tourismBonaAccommodationFormImpl.setBonaAccoDateOfRegistration(
			getBonaAccoDateOfRegistration());
		tourismBonaAccommodationFormImpl.setBonaAccoOwnerTrnNumber(
			getBonaAccoOwnerTrnNumber());
		tourismBonaAccommodationFormImpl.setBonaAccoTccNumber(
			getBonaAccoTccNumber());
		tourismBonaAccommodationFormImpl.setBonaAccoExpiryDate(
			getBonaAccoExpiryDate());
		tourismBonaAccommodationFormImpl.setBonaAccoNameOfOperator(
			getBonaAccoNameOfOperator());
		tourismBonaAccommodationFormImpl.setBonaAccoOperatorTrnNumber(
			getBonaAccoOperatorTrnNumber());
		tourismBonaAccommodationFormImpl.setBonaAccoOperatorTccNumber(
			getBonaAccoOperatorTccNumber());
		tourismBonaAccommodationFormImpl.setBonaAccoOperatorExpiryDate(
			getBonaAccoOperatorExpiryDate());
		tourismBonaAccommodationFormImpl.setBonaAccoContactPerson(
			getBonaAccoContactPerson());
		tourismBonaAccommodationFormImpl.setBonaAccoPositionHeld(
			getBonaAccoPositionHeld());
		tourismBonaAccommodationFormImpl.setTourismApplicationId(
			getTourismApplicationId());

		tourismBonaAccommodationFormImpl.resetOriginalValues();

		return tourismBonaAccommodationFormImpl;
	}

	@Override
	public TourismBonaAccommodationForm cloneWithOriginalValues() {
		TourismBonaAccommodationFormImpl tourismBonaAccommodationFormImpl =
			new TourismBonaAccommodationFormImpl();

		tourismBonaAccommodationFormImpl.setTourismBonaAFId(
			this.<Long>getColumnOriginalValue("tourismBonaAFId"));
		tourismBonaAccommodationFormImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		tourismBonaAccommodationFormImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		tourismBonaAccommodationFormImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		tourismBonaAccommodationFormImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		tourismBonaAccommodationFormImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		tourismBonaAccommodationFormImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		tourismBonaAccommodationFormImpl.setBonaAccoDateOfApplication(
			this.<Date>getColumnOriginalValue("bonaAccoDateOfApplication"));
		tourismBonaAccommodationFormImpl.setBonaAccoTypeOfAccommodation(
			this.<String>getColumnOriginalValue("bonaAccoTypeOfAccommodation"));
		tourismBonaAccommodationFormImpl.setBonaAccoPurposeOfIncentives(
			this.<String>getColumnOriginalValue("bonaAccoPurposeOfIncentives"));
		tourismBonaAccommodationFormImpl.setBonaAccoOtherIncPurpose(
			this.<String>getColumnOriginalValue("bonaAccoOtherIncPurpose"));
		tourismBonaAccommodationFormImpl.setBonaAccoNameOfProperty(
			this.<String>getColumnOriginalValue("bonaAccoNameOfProperty"));
		tourismBonaAccommodationFormImpl.setBonaAccoNameOfOwner(
			this.<String>getColumnOriginalValue("bonaAccoNameOfOwner"));
		tourismBonaAccommodationFormImpl.setBonaAccoLocation(
			this.<String>getColumnOriginalValue("bonaAccoLocation"));
		tourismBonaAccommodationFormImpl.setBonaAccoCompanyNumber(
			this.<String>getColumnOriginalValue("bonaAccoCompanyNumber"));
		tourismBonaAccommodationFormImpl.setBonaBusinessRegistrationNumber(
			this.<String>getColumnOriginalValue(
				"bonaBusinessRegistrationNumber"));
		tourismBonaAccommodationFormImpl.setBonaAccoDateOfRegistration(
			this.<Date>getColumnOriginalValue("bonaAccoDateOfRegistration"));
		tourismBonaAccommodationFormImpl.setBonaAccoOwnerTrnNumber(
			this.<String>getColumnOriginalValue("bonaAccoOwnerTrnNumber"));
		tourismBonaAccommodationFormImpl.setBonaAccoTccNumber(
			this.<String>getColumnOriginalValue("bonaAccoTccNumber"));
		tourismBonaAccommodationFormImpl.setBonaAccoExpiryDate(
			this.<Date>getColumnOriginalValue("bonaAccoExpiryDate"));
		tourismBonaAccommodationFormImpl.setBonaAccoNameOfOperator(
			this.<String>getColumnOriginalValue("bonaAccoNameOfOperator"));
		tourismBonaAccommodationFormImpl.setBonaAccoOperatorTrnNumber(
			this.<String>getColumnOriginalValue("bonaAccoOperatorTrnNumber"));
		tourismBonaAccommodationFormImpl.setBonaAccoOperatorTccNumber(
			this.<String>getColumnOriginalValue("bonaAccoOperatorTccNumber"));
		tourismBonaAccommodationFormImpl.setBonaAccoOperatorExpiryDate(
			this.<Date>getColumnOriginalValue("bonaAccoOperatorExpiryDate"));
		tourismBonaAccommodationFormImpl.setBonaAccoContactPerson(
			this.<String>getColumnOriginalValue("bonaAccoContactPerson"));
		tourismBonaAccommodationFormImpl.setBonaAccoPositionHeld(
			this.<String>getColumnOriginalValue("bonaAccoPositionHeld"));
		tourismBonaAccommodationFormImpl.setTourismApplicationId(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));

		return tourismBonaAccommodationFormImpl;
	}

	@Override
	public int compareTo(
		TourismBonaAccommodationForm tourismBonaAccommodationForm) {

		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), tourismBonaAccommodationForm.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof TourismBonaAccommodationForm)) {
			return false;
		}

		TourismBonaAccommodationForm tourismBonaAccommodationForm =
			(TourismBonaAccommodationForm)object;

		long primaryKey = tourismBonaAccommodationForm.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<TourismBonaAccommodationForm> toCacheModel() {
		TourismBonaAccommodationFormCacheModel
			tourismBonaAccommodationFormCacheModel =
				new TourismBonaAccommodationFormCacheModel();

		tourismBonaAccommodationFormCacheModel.tourismBonaAFId =
			getTourismBonaAFId();

		tourismBonaAccommodationFormCacheModel.groupId = getGroupId();

		tourismBonaAccommodationFormCacheModel.companyId = getCompanyId();

		tourismBonaAccommodationFormCacheModel.userId = getUserId();

		tourismBonaAccommodationFormCacheModel.userName = getUserName();

		String userName = tourismBonaAccommodationFormCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			tourismBonaAccommodationFormCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			tourismBonaAccommodationFormCacheModel.createDate =
				createDate.getTime();
		}
		else {
			tourismBonaAccommodationFormCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			tourismBonaAccommodationFormCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			tourismBonaAccommodationFormCacheModel.modifiedDate =
				Long.MIN_VALUE;
		}

		Date bonaAccoDateOfApplication = getBonaAccoDateOfApplication();

		if (bonaAccoDateOfApplication != null) {
			tourismBonaAccommodationFormCacheModel.bonaAccoDateOfApplication =
				bonaAccoDateOfApplication.getTime();
		}
		else {
			tourismBonaAccommodationFormCacheModel.bonaAccoDateOfApplication =
				Long.MIN_VALUE;
		}

		tourismBonaAccommodationFormCacheModel.bonaAccoTypeOfAccommodation =
			getBonaAccoTypeOfAccommodation();

		String bonaAccoTypeOfAccommodation =
			tourismBonaAccommodationFormCacheModel.bonaAccoTypeOfAccommodation;

		if ((bonaAccoTypeOfAccommodation != null) &&
			(bonaAccoTypeOfAccommodation.length() == 0)) {

			tourismBonaAccommodationFormCacheModel.bonaAccoTypeOfAccommodation =
				null;
		}

		tourismBonaAccommodationFormCacheModel.bonaAccoPurposeOfIncentives =
			getBonaAccoPurposeOfIncentives();

		String bonaAccoPurposeOfIncentives =
			tourismBonaAccommodationFormCacheModel.bonaAccoPurposeOfIncentives;

		if ((bonaAccoPurposeOfIncentives != null) &&
			(bonaAccoPurposeOfIncentives.length() == 0)) {

			tourismBonaAccommodationFormCacheModel.bonaAccoPurposeOfIncentives =
				null;
		}

		tourismBonaAccommodationFormCacheModel.bonaAccoOtherIncPurpose =
			getBonaAccoOtherIncPurpose();

		String bonaAccoOtherIncPurpose =
			tourismBonaAccommodationFormCacheModel.bonaAccoOtherIncPurpose;

		if ((bonaAccoOtherIncPurpose != null) &&
			(bonaAccoOtherIncPurpose.length() == 0)) {

			tourismBonaAccommodationFormCacheModel.bonaAccoOtherIncPurpose =
				null;
		}

		tourismBonaAccommodationFormCacheModel.bonaAccoNameOfProperty =
			getBonaAccoNameOfProperty();

		String bonaAccoNameOfProperty =
			tourismBonaAccommodationFormCacheModel.bonaAccoNameOfProperty;

		if ((bonaAccoNameOfProperty != null) &&
			(bonaAccoNameOfProperty.length() == 0)) {

			tourismBonaAccommodationFormCacheModel.bonaAccoNameOfProperty =
				null;
		}

		tourismBonaAccommodationFormCacheModel.bonaAccoNameOfOwner =
			getBonaAccoNameOfOwner();

		String bonaAccoNameOfOwner =
			tourismBonaAccommodationFormCacheModel.bonaAccoNameOfOwner;

		if ((bonaAccoNameOfOwner != null) &&
			(bonaAccoNameOfOwner.length() == 0)) {

			tourismBonaAccommodationFormCacheModel.bonaAccoNameOfOwner = null;
		}

		tourismBonaAccommodationFormCacheModel.bonaAccoLocation =
			getBonaAccoLocation();

		String bonaAccoLocation =
			tourismBonaAccommodationFormCacheModel.bonaAccoLocation;

		if ((bonaAccoLocation != null) && (bonaAccoLocation.length() == 0)) {
			tourismBonaAccommodationFormCacheModel.bonaAccoLocation = null;
		}

		tourismBonaAccommodationFormCacheModel.bonaAccoCompanyNumber =
			getBonaAccoCompanyNumber();

		String bonaAccoCompanyNumber =
			tourismBonaAccommodationFormCacheModel.bonaAccoCompanyNumber;

		if ((bonaAccoCompanyNumber != null) &&
			(bonaAccoCompanyNumber.length() == 0)) {

			tourismBonaAccommodationFormCacheModel.bonaAccoCompanyNumber = null;
		}

		tourismBonaAccommodationFormCacheModel.bonaBusinessRegistrationNumber =
			getBonaBusinessRegistrationNumber();

		String bonaBusinessRegistrationNumber =
			tourismBonaAccommodationFormCacheModel.
				bonaBusinessRegistrationNumber;

		if ((bonaBusinessRegistrationNumber != null) &&
			(bonaBusinessRegistrationNumber.length() == 0)) {

			tourismBonaAccommodationFormCacheModel.
				bonaBusinessRegistrationNumber = null;
		}

		Date bonaAccoDateOfRegistration = getBonaAccoDateOfRegistration();

		if (bonaAccoDateOfRegistration != null) {
			tourismBonaAccommodationFormCacheModel.bonaAccoDateOfRegistration =
				bonaAccoDateOfRegistration.getTime();
		}
		else {
			tourismBonaAccommodationFormCacheModel.bonaAccoDateOfRegistration =
				Long.MIN_VALUE;
		}

		tourismBonaAccommodationFormCacheModel.bonaAccoOwnerTrnNumber =
			getBonaAccoOwnerTrnNumber();

		String bonaAccoOwnerTrnNumber =
			tourismBonaAccommodationFormCacheModel.bonaAccoOwnerTrnNumber;

		if ((bonaAccoOwnerTrnNumber != null) &&
			(bonaAccoOwnerTrnNumber.length() == 0)) {

			tourismBonaAccommodationFormCacheModel.bonaAccoOwnerTrnNumber =
				null;
		}

		tourismBonaAccommodationFormCacheModel.bonaAccoTccNumber =
			getBonaAccoTccNumber();

		String bonaAccoTccNumber =
			tourismBonaAccommodationFormCacheModel.bonaAccoTccNumber;

		if ((bonaAccoTccNumber != null) && (bonaAccoTccNumber.length() == 0)) {
			tourismBonaAccommodationFormCacheModel.bonaAccoTccNumber = null;
		}

		Date bonaAccoExpiryDate = getBonaAccoExpiryDate();

		if (bonaAccoExpiryDate != null) {
			tourismBonaAccommodationFormCacheModel.bonaAccoExpiryDate =
				bonaAccoExpiryDate.getTime();
		}
		else {
			tourismBonaAccommodationFormCacheModel.bonaAccoExpiryDate =
				Long.MIN_VALUE;
		}

		tourismBonaAccommodationFormCacheModel.bonaAccoNameOfOperator =
			getBonaAccoNameOfOperator();

		String bonaAccoNameOfOperator =
			tourismBonaAccommodationFormCacheModel.bonaAccoNameOfOperator;

		if ((bonaAccoNameOfOperator != null) &&
			(bonaAccoNameOfOperator.length() == 0)) {

			tourismBonaAccommodationFormCacheModel.bonaAccoNameOfOperator =
				null;
		}

		tourismBonaAccommodationFormCacheModel.bonaAccoOperatorTrnNumber =
			getBonaAccoOperatorTrnNumber();

		String bonaAccoOperatorTrnNumber =
			tourismBonaAccommodationFormCacheModel.bonaAccoOperatorTrnNumber;

		if ((bonaAccoOperatorTrnNumber != null) &&
			(bonaAccoOperatorTrnNumber.length() == 0)) {

			tourismBonaAccommodationFormCacheModel.bonaAccoOperatorTrnNumber =
				null;
		}

		tourismBonaAccommodationFormCacheModel.bonaAccoOperatorTccNumber =
			getBonaAccoOperatorTccNumber();

		String bonaAccoOperatorTccNumber =
			tourismBonaAccommodationFormCacheModel.bonaAccoOperatorTccNumber;

		if ((bonaAccoOperatorTccNumber != null) &&
			(bonaAccoOperatorTccNumber.length() == 0)) {

			tourismBonaAccommodationFormCacheModel.bonaAccoOperatorTccNumber =
				null;
		}

		Date bonaAccoOperatorExpiryDate = getBonaAccoOperatorExpiryDate();

		if (bonaAccoOperatorExpiryDate != null) {
			tourismBonaAccommodationFormCacheModel.bonaAccoOperatorExpiryDate =
				bonaAccoOperatorExpiryDate.getTime();
		}
		else {
			tourismBonaAccommodationFormCacheModel.bonaAccoOperatorExpiryDate =
				Long.MIN_VALUE;
		}

		tourismBonaAccommodationFormCacheModel.bonaAccoContactPerson =
			getBonaAccoContactPerson();

		String bonaAccoContactPerson =
			tourismBonaAccommodationFormCacheModel.bonaAccoContactPerson;

		if ((bonaAccoContactPerson != null) &&
			(bonaAccoContactPerson.length() == 0)) {

			tourismBonaAccommodationFormCacheModel.bonaAccoContactPerson = null;
		}

		tourismBonaAccommodationFormCacheModel.bonaAccoPositionHeld =
			getBonaAccoPositionHeld();

		String bonaAccoPositionHeld =
			tourismBonaAccommodationFormCacheModel.bonaAccoPositionHeld;

		if ((bonaAccoPositionHeld != null) &&
			(bonaAccoPositionHeld.length() == 0)) {

			tourismBonaAccommodationFormCacheModel.bonaAccoPositionHeld = null;
		}

		tourismBonaAccommodationFormCacheModel.tourismApplicationId =
			getTourismApplicationId();

		return tourismBonaAccommodationFormCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<TourismBonaAccommodationForm, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<TourismBonaAccommodationForm, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismBonaAccommodationForm, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(TourismBonaAccommodationForm)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, TourismBonaAccommodationForm>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						TourismBonaAccommodationForm.class, ModelWrapper.class);

	}

	private long _tourismBonaAFId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private Date _bonaAccoDateOfApplication;
	private String _bonaAccoTypeOfAccommodation;
	private String _bonaAccoPurposeOfIncentives;
	private String _bonaAccoOtherIncPurpose;
	private String _bonaAccoNameOfProperty;
	private String _bonaAccoNameOfOwner;
	private String _bonaAccoLocation;
	private String _bonaAccoCompanyNumber;
	private String _bonaBusinessRegistrationNumber;
	private Date _bonaAccoDateOfRegistration;
	private String _bonaAccoOwnerTrnNumber;
	private String _bonaAccoTccNumber;
	private Date _bonaAccoExpiryDate;
	private String _bonaAccoNameOfOperator;
	private String _bonaAccoOperatorTrnNumber;
	private String _bonaAccoOperatorTccNumber;
	private Date _bonaAccoOperatorExpiryDate;
	private String _bonaAccoContactPerson;
	private String _bonaAccoPositionHeld;
	private long _tourismApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<TourismBonaAccommodationForm, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((TourismBonaAccommodationForm)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("tourismBonaAFId", _tourismBonaAFId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"bonaAccoDateOfApplication", _bonaAccoDateOfApplication);
		_columnOriginalValues.put(
			"bonaAccoTypeOfAccommodation", _bonaAccoTypeOfAccommodation);
		_columnOriginalValues.put(
			"bonaAccoPurposeOfIncentives", _bonaAccoPurposeOfIncentives);
		_columnOriginalValues.put(
			"bonaAccoOtherIncPurpose", _bonaAccoOtherIncPurpose);
		_columnOriginalValues.put(
			"bonaAccoNameOfProperty", _bonaAccoNameOfProperty);
		_columnOriginalValues.put("bonaAccoNameOfOwner", _bonaAccoNameOfOwner);
		_columnOriginalValues.put("bonaAccoLocation", _bonaAccoLocation);
		_columnOriginalValues.put(
			"bonaAccoCompanyNumber", _bonaAccoCompanyNumber);
		_columnOriginalValues.put(
			"bonaBusinessRegistrationNumber", _bonaBusinessRegistrationNumber);
		_columnOriginalValues.put(
			"bonaAccoDateOfRegistration", _bonaAccoDateOfRegistration);
		_columnOriginalValues.put(
			"bonaAccoOwnerTrnNumber", _bonaAccoOwnerTrnNumber);
		_columnOriginalValues.put("bonaAccoTccNumber", _bonaAccoTccNumber);
		_columnOriginalValues.put("bonaAccoExpiryDate", _bonaAccoExpiryDate);
		_columnOriginalValues.put(
			"bonaAccoNameOfOperator", _bonaAccoNameOfOperator);
		_columnOriginalValues.put(
			"bonaAccoOperatorTrnNumber", _bonaAccoOperatorTrnNumber);
		_columnOriginalValues.put(
			"bonaAccoOperatorTccNumber", _bonaAccoOperatorTccNumber);
		_columnOriginalValues.put(
			"bonaAccoOperatorExpiryDate", _bonaAccoOperatorExpiryDate);
		_columnOriginalValues.put(
			"bonaAccoContactPerson", _bonaAccoContactPerson);
		_columnOriginalValues.put(
			"bonaAccoPositionHeld", _bonaAccoPositionHeld);
		_columnOriginalValues.put(
			"tourismApplicationId", _tourismApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("tourismBonaAFId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("bonaAccoDateOfApplication", 128L);

		columnBitmasks.put("bonaAccoTypeOfAccommodation", 256L);

		columnBitmasks.put("bonaAccoPurposeOfIncentives", 512L);

		columnBitmasks.put("bonaAccoOtherIncPurpose", 1024L);

		columnBitmasks.put("bonaAccoNameOfProperty", 2048L);

		columnBitmasks.put("bonaAccoNameOfOwner", 4096L);

		columnBitmasks.put("bonaAccoLocation", 8192L);

		columnBitmasks.put("bonaAccoCompanyNumber", 16384L);

		columnBitmasks.put("bonaBusinessRegistrationNumber", 32768L);

		columnBitmasks.put("bonaAccoDateOfRegistration", 65536L);

		columnBitmasks.put("bonaAccoOwnerTrnNumber", 131072L);

		columnBitmasks.put("bonaAccoTccNumber", 262144L);

		columnBitmasks.put("bonaAccoExpiryDate", 524288L);

		columnBitmasks.put("bonaAccoNameOfOperator", 1048576L);

		columnBitmasks.put("bonaAccoOperatorTrnNumber", 2097152L);

		columnBitmasks.put("bonaAccoOperatorTccNumber", 4194304L);

		columnBitmasks.put("bonaAccoOperatorExpiryDate", 8388608L);

		columnBitmasks.put("bonaAccoContactPerson", 16777216L);

		columnBitmasks.put("bonaAccoPositionHeld", 33554432L);

		columnBitmasks.put("tourismApplicationId", 67108864L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private TourismBonaAccommodationForm _escapedModel;

}