/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.tourism.application.form.services.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.tourism.application.form.services.model.TourismBonaGroundTransportation;
import com.nbp.tourism.application.form.services.model.TourismBonaGroundTransportationModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the TourismBonaGroundTransportation service. Represents a row in the &quot;nbp_tourism_bona_ground_t&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>TourismBonaGroundTransportationModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TourismBonaGroundTransportationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TourismBonaGroundTransportationImpl
 * @generated
 */
@JSON(strict = true)
public class TourismBonaGroundTransportationModelImpl
	extends BaseModelImpl<TourismBonaGroundTransportation>
	implements TourismBonaGroundTransportationModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tourism bona ground transportation model instance should use the <code>TourismBonaGroundTransportation</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_tourism_bona_ground_t";

	public static final Object[][] TABLE_COLUMNS = {
		{"tourismBonaGroundTransportId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"typeOfGroundTransportation", Types.VARCHAR},
		{"bonaGroundName", Types.VARCHAR},
		{"bonaGroundLandlineNo", Types.VARCHAR},
		{"bonaGroundMobileNo", Types.VARCHAR},
		{"bonaGroundFaxNo", Types.VARCHAR},
		{"bonaGroundLicensedWith", Types.VARCHAR},
		{"bonaGroundBoardExpiryDate", Types.TIMESTAMP},
		{"bonaGroundHaveYouBenefitBefore", Types.VARCHAR},
		{"bonaGroundDateOfLastBenefit", Types.TIMESTAMP},
		{"bonaGroundEntityType", Types.VARCHAR},
		{"bonaGroundVehicleInfoMake", Types.VARCHAR},
		{"bonaGroundVehicleInfoModel", Types.VARCHAR},
		{"bonaGroundVehicleInfoYear", Types.VARCHAR},
		{"bonaGroundSeatingCapacity", Types.VARCHAR},
		{"bonaGroundExistingFleetAmount", Types.VARCHAR},
		{"bonaGroundIndicateVehicleWill", Types.VARCHAR},
		{"tourismApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("tourismBonaGroundTransportId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("typeOfGroundTransportation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundLandlineNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundMobileNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundFaxNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundLicensedWith", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundBoardExpiryDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("bonaGroundHaveYouBenefitBefore", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundDateOfLastBenefit", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("bonaGroundEntityType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundVehicleInfoMake", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundVehicleInfoModel", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundVehicleInfoYear", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundSeatingCapacity", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundExistingFleetAmount", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaGroundIndicateVehicleWill", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tourismApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_tourism_bona_ground_t (tourismBonaGroundTransportId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,typeOfGroundTransportation VARCHAR(75) null,bonaGroundName VARCHAR(75) null,bonaGroundLandlineNo VARCHAR(75) null,bonaGroundMobileNo VARCHAR(75) null,bonaGroundFaxNo VARCHAR(75) null,bonaGroundLicensedWith VARCHAR(75) null,bonaGroundBoardExpiryDate DATE null,bonaGroundHaveYouBenefitBefore VARCHAR(75) null,bonaGroundDateOfLastBenefit DATE null,bonaGroundEntityType VARCHAR(75) null,bonaGroundVehicleInfoMake VARCHAR(75) null,bonaGroundVehicleInfoModel VARCHAR(75) null,bonaGroundVehicleInfoYear VARCHAR(75) null,bonaGroundSeatingCapacity VARCHAR(75) null,bonaGroundExistingFleetAmount VARCHAR(75) null,bonaGroundIndicateVehicleWill VARCHAR(75) null,tourismApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_tourism_bona_ground_t";

	public static final String ORDER_BY_JPQL =
		" ORDER BY tourismBonaGroundTransportation.tourismBonaGroundTransportId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_tourism_bona_ground_t.tourismBonaGroundTransportId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TOURISMAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TOURISMBONAGROUNDTRANSPORTID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public TourismBonaGroundTransportationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _tourismBonaGroundTransportId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTourismBonaGroundTransportId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _tourismBonaGroundTransportId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TourismBonaGroundTransportation.class;
	}

	@Override
	public String getModelClassName() {
		return TourismBonaGroundTransportation.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<TourismBonaGroundTransportation, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry
				<String, Function<TourismBonaGroundTransportation, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismBonaGroundTransportation, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(TourismBonaGroundTransportation)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<TourismBonaGroundTransportation, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<TourismBonaGroundTransportation, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(TourismBonaGroundTransportation)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<TourismBonaGroundTransportation, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<TourismBonaGroundTransportation, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<TourismBonaGroundTransportation, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<TourismBonaGroundTransportation, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String,
						 Function<TourismBonaGroundTransportation, Object>>();

			attributeGetterFunctions.put(
				"tourismBonaGroundTransportId",
				TourismBonaGroundTransportation::
					getTourismBonaGroundTransportId);
			attributeGetterFunctions.put(
				"groupId", TourismBonaGroundTransportation::getGroupId);
			attributeGetterFunctions.put(
				"companyId", TourismBonaGroundTransportation::getCompanyId);
			attributeGetterFunctions.put(
				"userId", TourismBonaGroundTransportation::getUserId);
			attributeGetterFunctions.put(
				"userName", TourismBonaGroundTransportation::getUserName);
			attributeGetterFunctions.put(
				"createDate", TourismBonaGroundTransportation::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate",
				TourismBonaGroundTransportation::getModifiedDate);
			attributeGetterFunctions.put(
				"typeOfGroundTransportation",
				TourismBonaGroundTransportation::getTypeOfGroundTransportation);
			attributeGetterFunctions.put(
				"bonaGroundName",
				TourismBonaGroundTransportation::getBonaGroundName);
			attributeGetterFunctions.put(
				"bonaGroundLandlineNo",
				TourismBonaGroundTransportation::getBonaGroundLandlineNo);
			attributeGetterFunctions.put(
				"bonaGroundMobileNo",
				TourismBonaGroundTransportation::getBonaGroundMobileNo);
			attributeGetterFunctions.put(
				"bonaGroundFaxNo",
				TourismBonaGroundTransportation::getBonaGroundFaxNo);
			attributeGetterFunctions.put(
				"bonaGroundLicensedWith",
				TourismBonaGroundTransportation::getBonaGroundLicensedWith);
			attributeGetterFunctions.put(
				"bonaGroundBoardExpiryDate",
				TourismBonaGroundTransportation::getBonaGroundBoardExpiryDate);
			attributeGetterFunctions.put(
				"bonaGroundHaveYouBenefitBefore",
				TourismBonaGroundTransportation::
					getBonaGroundHaveYouBenefitBefore);
			attributeGetterFunctions.put(
				"bonaGroundDateOfLastBenefit",
				TourismBonaGroundTransportation::
					getBonaGroundDateOfLastBenefit);
			attributeGetterFunctions.put(
				"bonaGroundEntityType",
				TourismBonaGroundTransportation::getBonaGroundEntityType);
			attributeGetterFunctions.put(
				"bonaGroundVehicleInfoMake",
				TourismBonaGroundTransportation::getBonaGroundVehicleInfoMake);
			attributeGetterFunctions.put(
				"bonaGroundVehicleInfoModel",
				TourismBonaGroundTransportation::getBonaGroundVehicleInfoModel);
			attributeGetterFunctions.put(
				"bonaGroundVehicleInfoYear",
				TourismBonaGroundTransportation::getBonaGroundVehicleInfoYear);
			attributeGetterFunctions.put(
				"bonaGroundSeatingCapacity",
				TourismBonaGroundTransportation::getBonaGroundSeatingCapacity);
			attributeGetterFunctions.put(
				"bonaGroundExistingFleetAmount",
				TourismBonaGroundTransportation::
					getBonaGroundExistingFleetAmount);
			attributeGetterFunctions.put(
				"bonaGroundIndicateVehicleWill",
				TourismBonaGroundTransportation::
					getBonaGroundIndicateVehicleWill);
			attributeGetterFunctions.put(
				"tourismApplicationId",
				TourismBonaGroundTransportation::getTourismApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<TourismBonaGroundTransportation, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<TourismBonaGroundTransportation, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String,
						 BiConsumer<TourismBonaGroundTransportation, ?>>();

			attributeSetterBiConsumers.put(
				"tourismBonaGroundTransportId",
				(BiConsumer<TourismBonaGroundTransportation, Long>)
					TourismBonaGroundTransportation::
						setTourismBonaGroundTransportId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<TourismBonaGroundTransportation, Long>)
					TourismBonaGroundTransportation::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<TourismBonaGroundTransportation, Long>)
					TourismBonaGroundTransportation::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<TourismBonaGroundTransportation, Long>)
					TourismBonaGroundTransportation::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<TourismBonaGroundTransportation, String>)
					TourismBonaGroundTransportation::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<TourismBonaGroundTransportation, Date>)
					TourismBonaGroundTransportation::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<TourismBonaGroundTransportation, Date>)
					TourismBonaGroundTransportation::setModifiedDate);
			attributeSetterBiConsumers.put(
				"typeOfGroundTransportation",
				(BiConsumer<TourismBonaGroundTransportation, String>)
					TourismBonaGroundTransportation::
						setTypeOfGroundTransportation);
			attributeSetterBiConsumers.put(
				"bonaGroundName",
				(BiConsumer<TourismBonaGroundTransportation, String>)
					TourismBonaGroundTransportation::setBonaGroundName);
			attributeSetterBiConsumers.put(
				"bonaGroundLandlineNo",
				(BiConsumer<TourismBonaGroundTransportation, String>)
					TourismBonaGroundTransportation::setBonaGroundLandlineNo);
			attributeSetterBiConsumers.put(
				"bonaGroundMobileNo",
				(BiConsumer<TourismBonaGroundTransportation, String>)
					TourismBonaGroundTransportation::setBonaGroundMobileNo);
			attributeSetterBiConsumers.put(
				"bonaGroundFaxNo",
				(BiConsumer<TourismBonaGroundTransportation, String>)
					TourismBonaGroundTransportation::setBonaGroundFaxNo);
			attributeSetterBiConsumers.put(
				"bonaGroundLicensedWith",
				(BiConsumer<TourismBonaGroundTransportation, String>)
					TourismBonaGroundTransportation::setBonaGroundLicensedWith);
			attributeSetterBiConsumers.put(
				"bonaGroundBoardExpiryDate",
				(BiConsumer<TourismBonaGroundTransportation, Date>)
					TourismBonaGroundTransportation::
						setBonaGroundBoardExpiryDate);
			attributeSetterBiConsumers.put(
				"bonaGroundHaveYouBenefitBefore",
				(BiConsumer<TourismBonaGroundTransportation, String>)
					TourismBonaGroundTransportation::
						setBonaGroundHaveYouBenefitBefore);
			attributeSetterBiConsumers.put(
				"bonaGroundDateOfLastBenefit",
				(BiConsumer<TourismBonaGroundTransportation, Date>)
					TourismBonaGroundTransportation::
						setBonaGroundDateOfLastBenefit);
			attributeSetterBiConsumers.put(
				"bonaGroundEntityType",
				(BiConsumer<TourismBonaGroundTransportation, String>)
					TourismBonaGroundTransportation::setBonaGroundEntityType);
			attributeSetterBiConsumers.put(
				"bonaGroundVehicleInfoMake",
				(BiConsumer<TourismBonaGroundTransportation, String>)
					TourismBonaGroundTransportation::
						setBonaGroundVehicleInfoMake);
			attributeSetterBiConsumers.put(
				"bonaGroundVehicleInfoModel",
				(BiConsumer<TourismBonaGroundTransportation, String>)
					TourismBonaGroundTransportation::
						setBonaGroundVehicleInfoModel);
			attributeSetterBiConsumers.put(
				"bonaGroundVehicleInfoYear",
				(BiConsumer<TourismBonaGroundTransportation, String>)
					TourismBonaGroundTransportation::
						setBonaGroundVehicleInfoYear);
			attributeSetterBiConsumers.put(
				"bonaGroundSeatingCapacity",
				(BiConsumer<TourismBonaGroundTransportation, String>)
					TourismBonaGroundTransportation::
						setBonaGroundSeatingCapacity);
			attributeSetterBiConsumers.put(
				"bonaGroundExistingFleetAmount",
				(BiConsumer<TourismBonaGroundTransportation, String>)
					TourismBonaGroundTransportation::
						setBonaGroundExistingFleetAmount);
			attributeSetterBiConsumers.put(
				"bonaGroundIndicateVehicleWill",
				(BiConsumer<TourismBonaGroundTransportation, String>)
					TourismBonaGroundTransportation::
						setBonaGroundIndicateVehicleWill);
			attributeSetterBiConsumers.put(
				"tourismApplicationId",
				(BiConsumer<TourismBonaGroundTransportation, Long>)
					TourismBonaGroundTransportation::setTourismApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getTourismBonaGroundTransportId() {
		return _tourismBonaGroundTransportId;
	}

	@Override
	public void setTourismBonaGroundTransportId(
		long tourismBonaGroundTransportId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismBonaGroundTransportId = tourismBonaGroundTransportId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getTypeOfGroundTransportation() {
		if (_typeOfGroundTransportation == null) {
			return "";
		}
		else {
			return _typeOfGroundTransportation;
		}
	}

	@Override
	public void setTypeOfGroundTransportation(
		String typeOfGroundTransportation) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_typeOfGroundTransportation = typeOfGroundTransportation;
	}

	@JSON
	@Override
	public String getBonaGroundName() {
		if (_bonaGroundName == null) {
			return "";
		}
		else {
			return _bonaGroundName;
		}
	}

	@Override
	public void setBonaGroundName(String bonaGroundName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundName = bonaGroundName;
	}

	@JSON
	@Override
	public String getBonaGroundLandlineNo() {
		if (_bonaGroundLandlineNo == null) {
			return "";
		}
		else {
			return _bonaGroundLandlineNo;
		}
	}

	@Override
	public void setBonaGroundLandlineNo(String bonaGroundLandlineNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundLandlineNo = bonaGroundLandlineNo;
	}

	@JSON
	@Override
	public String getBonaGroundMobileNo() {
		if (_bonaGroundMobileNo == null) {
			return "";
		}
		else {
			return _bonaGroundMobileNo;
		}
	}

	@Override
	public void setBonaGroundMobileNo(String bonaGroundMobileNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundMobileNo = bonaGroundMobileNo;
	}

	@JSON
	@Override
	public String getBonaGroundFaxNo() {
		if (_bonaGroundFaxNo == null) {
			return "";
		}
		else {
			return _bonaGroundFaxNo;
		}
	}

	@Override
	public void setBonaGroundFaxNo(String bonaGroundFaxNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundFaxNo = bonaGroundFaxNo;
	}

	@JSON
	@Override
	public String getBonaGroundLicensedWith() {
		if (_bonaGroundLicensedWith == null) {
			return "";
		}
		else {
			return _bonaGroundLicensedWith;
		}
	}

	@Override
	public void setBonaGroundLicensedWith(String bonaGroundLicensedWith) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundLicensedWith = bonaGroundLicensedWith;
	}

	@JSON
	@Override
	public Date getBonaGroundBoardExpiryDate() {
		return _bonaGroundBoardExpiryDate;
	}

	@Override
	public void setBonaGroundBoardExpiryDate(Date bonaGroundBoardExpiryDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundBoardExpiryDate = bonaGroundBoardExpiryDate;
	}

	@JSON
	@Override
	public String getBonaGroundHaveYouBenefitBefore() {
		if (_bonaGroundHaveYouBenefitBefore == null) {
			return "";
		}
		else {
			return _bonaGroundHaveYouBenefitBefore;
		}
	}

	@Override
	public void setBonaGroundHaveYouBenefitBefore(
		String bonaGroundHaveYouBenefitBefore) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundHaveYouBenefitBefore = bonaGroundHaveYouBenefitBefore;
	}

	@JSON
	@Override
	public Date getBonaGroundDateOfLastBenefit() {
		return _bonaGroundDateOfLastBenefit;
	}

	@Override
	public void setBonaGroundDateOfLastBenefit(
		Date bonaGroundDateOfLastBenefit) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundDateOfLastBenefit = bonaGroundDateOfLastBenefit;
	}

	@JSON
	@Override
	public String getBonaGroundEntityType() {
		if (_bonaGroundEntityType == null) {
			return "";
		}
		else {
			return _bonaGroundEntityType;
		}
	}

	@Override
	public void setBonaGroundEntityType(String bonaGroundEntityType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundEntityType = bonaGroundEntityType;
	}

	@JSON
	@Override
	public String getBonaGroundVehicleInfoMake() {
		if (_bonaGroundVehicleInfoMake == null) {
			return "";
		}
		else {
			return _bonaGroundVehicleInfoMake;
		}
	}

	@Override
	public void setBonaGroundVehicleInfoMake(String bonaGroundVehicleInfoMake) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundVehicleInfoMake = bonaGroundVehicleInfoMake;
	}

	@JSON
	@Override
	public String getBonaGroundVehicleInfoModel() {
		if (_bonaGroundVehicleInfoModel == null) {
			return "";
		}
		else {
			return _bonaGroundVehicleInfoModel;
		}
	}

	@Override
	public void setBonaGroundVehicleInfoModel(
		String bonaGroundVehicleInfoModel) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundVehicleInfoModel = bonaGroundVehicleInfoModel;
	}

	@JSON
	@Override
	public String getBonaGroundVehicleInfoYear() {
		if (_bonaGroundVehicleInfoYear == null) {
			return "";
		}
		else {
			return _bonaGroundVehicleInfoYear;
		}
	}

	@Override
	public void setBonaGroundVehicleInfoYear(String bonaGroundVehicleInfoYear) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundVehicleInfoYear = bonaGroundVehicleInfoYear;
	}

	@JSON
	@Override
	public String getBonaGroundSeatingCapacity() {
		if (_bonaGroundSeatingCapacity == null) {
			return "";
		}
		else {
			return _bonaGroundSeatingCapacity;
		}
	}

	@Override
	public void setBonaGroundSeatingCapacity(String bonaGroundSeatingCapacity) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundSeatingCapacity = bonaGroundSeatingCapacity;
	}

	@JSON
	@Override
	public String getBonaGroundExistingFleetAmount() {
		if (_bonaGroundExistingFleetAmount == null) {
			return "";
		}
		else {
			return _bonaGroundExistingFleetAmount;
		}
	}

	@Override
	public void setBonaGroundExistingFleetAmount(
		String bonaGroundExistingFleetAmount) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundExistingFleetAmount = bonaGroundExistingFleetAmount;
	}

	@JSON
	@Override
	public String getBonaGroundIndicateVehicleWill() {
		if (_bonaGroundIndicateVehicleWill == null) {
			return "";
		}
		else {
			return _bonaGroundIndicateVehicleWill;
		}
	}

	@Override
	public void setBonaGroundIndicateVehicleWill(
		String bonaGroundIndicateVehicleWill) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaGroundIndicateVehicleWill = bonaGroundIndicateVehicleWill;
	}

	@JSON
	@Override
	public long getTourismApplicationId() {
		return _tourismApplicationId;
	}

	@Override
	public void setTourismApplicationId(long tourismApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismApplicationId = tourismApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalTourismApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), TourismBonaGroundTransportation.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TourismBonaGroundTransportation toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, TourismBonaGroundTransportation>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TourismBonaGroundTransportationImpl
			tourismBonaGroundTransportationImpl =
				new TourismBonaGroundTransportationImpl();

		tourismBonaGroundTransportationImpl.setTourismBonaGroundTransportId(
			getTourismBonaGroundTransportId());
		tourismBonaGroundTransportationImpl.setGroupId(getGroupId());
		tourismBonaGroundTransportationImpl.setCompanyId(getCompanyId());
		tourismBonaGroundTransportationImpl.setUserId(getUserId());
		tourismBonaGroundTransportationImpl.setUserName(getUserName());
		tourismBonaGroundTransportationImpl.setCreateDate(getCreateDate());
		tourismBonaGroundTransportationImpl.setModifiedDate(getModifiedDate());
		tourismBonaGroundTransportationImpl.setTypeOfGroundTransportation(
			getTypeOfGroundTransportation());
		tourismBonaGroundTransportationImpl.setBonaGroundName(
			getBonaGroundName());
		tourismBonaGroundTransportationImpl.setBonaGroundLandlineNo(
			getBonaGroundLandlineNo());
		tourismBonaGroundTransportationImpl.setBonaGroundMobileNo(
			getBonaGroundMobileNo());
		tourismBonaGroundTransportationImpl.setBonaGroundFaxNo(
			getBonaGroundFaxNo());
		tourismBonaGroundTransportationImpl.setBonaGroundLicensedWith(
			getBonaGroundLicensedWith());
		tourismBonaGroundTransportationImpl.setBonaGroundBoardExpiryDate(
			getBonaGroundBoardExpiryDate());
		tourismBonaGroundTransportationImpl.setBonaGroundHaveYouBenefitBefore(
			getBonaGroundHaveYouBenefitBefore());
		tourismBonaGroundTransportationImpl.setBonaGroundDateOfLastBenefit(
			getBonaGroundDateOfLastBenefit());
		tourismBonaGroundTransportationImpl.setBonaGroundEntityType(
			getBonaGroundEntityType());
		tourismBonaGroundTransportationImpl.setBonaGroundVehicleInfoMake(
			getBonaGroundVehicleInfoMake());
		tourismBonaGroundTransportationImpl.setBonaGroundVehicleInfoModel(
			getBonaGroundVehicleInfoModel());
		tourismBonaGroundTransportationImpl.setBonaGroundVehicleInfoYear(
			getBonaGroundVehicleInfoYear());
		tourismBonaGroundTransportationImpl.setBonaGroundSeatingCapacity(
			getBonaGroundSeatingCapacity());
		tourismBonaGroundTransportationImpl.setBonaGroundExistingFleetAmount(
			getBonaGroundExistingFleetAmount());
		tourismBonaGroundTransportationImpl.setBonaGroundIndicateVehicleWill(
			getBonaGroundIndicateVehicleWill());
		tourismBonaGroundTransportationImpl.setTourismApplicationId(
			getTourismApplicationId());

		tourismBonaGroundTransportationImpl.resetOriginalValues();

		return tourismBonaGroundTransportationImpl;
	}

	@Override
	public TourismBonaGroundTransportation cloneWithOriginalValues() {
		TourismBonaGroundTransportationImpl
			tourismBonaGroundTransportationImpl =
				new TourismBonaGroundTransportationImpl();

		tourismBonaGroundTransportationImpl.setTourismBonaGroundTransportId(
			this.<Long>getColumnOriginalValue("tourismBonaGroundTransportId"));
		tourismBonaGroundTransportationImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		tourismBonaGroundTransportationImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		tourismBonaGroundTransportationImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		tourismBonaGroundTransportationImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		tourismBonaGroundTransportationImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		tourismBonaGroundTransportationImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		tourismBonaGroundTransportationImpl.setTypeOfGroundTransportation(
			this.<String>getColumnOriginalValue("typeOfGroundTransportation"));
		tourismBonaGroundTransportationImpl.setBonaGroundName(
			this.<String>getColumnOriginalValue("bonaGroundName"));
		tourismBonaGroundTransportationImpl.setBonaGroundLandlineNo(
			this.<String>getColumnOriginalValue("bonaGroundLandlineNo"));
		tourismBonaGroundTransportationImpl.setBonaGroundMobileNo(
			this.<String>getColumnOriginalValue("bonaGroundMobileNo"));
		tourismBonaGroundTransportationImpl.setBonaGroundFaxNo(
			this.<String>getColumnOriginalValue("bonaGroundFaxNo"));
		tourismBonaGroundTransportationImpl.setBonaGroundLicensedWith(
			this.<String>getColumnOriginalValue("bonaGroundLicensedWith"));
		tourismBonaGroundTransportationImpl.setBonaGroundBoardExpiryDate(
			this.<Date>getColumnOriginalValue("bonaGroundBoardExpiryDate"));
		tourismBonaGroundTransportationImpl.setBonaGroundHaveYouBenefitBefore(
			this.<String>getColumnOriginalValue(
				"bonaGroundHaveYouBenefitBefore"));
		tourismBonaGroundTransportationImpl.setBonaGroundDateOfLastBenefit(
			this.<Date>getColumnOriginalValue("bonaGroundDateOfLastBenefit"));
		tourismBonaGroundTransportationImpl.setBonaGroundEntityType(
			this.<String>getColumnOriginalValue("bonaGroundEntityType"));
		tourismBonaGroundTransportationImpl.setBonaGroundVehicleInfoMake(
			this.<String>getColumnOriginalValue("bonaGroundVehicleInfoMake"));
		tourismBonaGroundTransportationImpl.setBonaGroundVehicleInfoModel(
			this.<String>getColumnOriginalValue("bonaGroundVehicleInfoModel"));
		tourismBonaGroundTransportationImpl.setBonaGroundVehicleInfoYear(
			this.<String>getColumnOriginalValue("bonaGroundVehicleInfoYear"));
		tourismBonaGroundTransportationImpl.setBonaGroundSeatingCapacity(
			this.<String>getColumnOriginalValue("bonaGroundSeatingCapacity"));
		tourismBonaGroundTransportationImpl.setBonaGroundExistingFleetAmount(
			this.<String>getColumnOriginalValue(
				"bonaGroundExistingFleetAmount"));
		tourismBonaGroundTransportationImpl.setBonaGroundIndicateVehicleWill(
			this.<String>getColumnOriginalValue(
				"bonaGroundIndicateVehicleWill"));
		tourismBonaGroundTransportationImpl.setTourismApplicationId(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));

		return tourismBonaGroundTransportationImpl;
	}

	@Override
	public int compareTo(
		TourismBonaGroundTransportation tourismBonaGroundTransportation) {

		long primaryKey = tourismBonaGroundTransportation.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof TourismBonaGroundTransportation)) {
			return false;
		}

		TourismBonaGroundTransportation tourismBonaGroundTransportation =
			(TourismBonaGroundTransportation)object;

		long primaryKey = tourismBonaGroundTransportation.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<TourismBonaGroundTransportation> toCacheModel() {
		TourismBonaGroundTransportationCacheModel
			tourismBonaGroundTransportationCacheModel =
				new TourismBonaGroundTransportationCacheModel();

		tourismBonaGroundTransportationCacheModel.tourismBonaGroundTransportId =
			getTourismBonaGroundTransportId();

		tourismBonaGroundTransportationCacheModel.groupId = getGroupId();

		tourismBonaGroundTransportationCacheModel.companyId = getCompanyId();

		tourismBonaGroundTransportationCacheModel.userId = getUserId();

		tourismBonaGroundTransportationCacheModel.userName = getUserName();

		String userName = tourismBonaGroundTransportationCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			tourismBonaGroundTransportationCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			tourismBonaGroundTransportationCacheModel.createDate =
				createDate.getTime();
		}
		else {
			tourismBonaGroundTransportationCacheModel.createDate =
				Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			tourismBonaGroundTransportationCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			tourismBonaGroundTransportationCacheModel.modifiedDate =
				Long.MIN_VALUE;
		}

		tourismBonaGroundTransportationCacheModel.typeOfGroundTransportation =
			getTypeOfGroundTransportation();

		String typeOfGroundTransportation =
			tourismBonaGroundTransportationCacheModel.
				typeOfGroundTransportation;

		if ((typeOfGroundTransportation != null) &&
			(typeOfGroundTransportation.length() == 0)) {

			tourismBonaGroundTransportationCacheModel.
				typeOfGroundTransportation = null;
		}

		tourismBonaGroundTransportationCacheModel.bonaGroundName =
			getBonaGroundName();

		String bonaGroundName =
			tourismBonaGroundTransportationCacheModel.bonaGroundName;

		if ((bonaGroundName != null) && (bonaGroundName.length() == 0)) {
			tourismBonaGroundTransportationCacheModel.bonaGroundName = null;
		}

		tourismBonaGroundTransportationCacheModel.bonaGroundLandlineNo =
			getBonaGroundLandlineNo();

		String bonaGroundLandlineNo =
			tourismBonaGroundTransportationCacheModel.bonaGroundLandlineNo;

		if ((bonaGroundLandlineNo != null) &&
			(bonaGroundLandlineNo.length() == 0)) {

			tourismBonaGroundTransportationCacheModel.bonaGroundLandlineNo =
				null;
		}

		tourismBonaGroundTransportationCacheModel.bonaGroundMobileNo =
			getBonaGroundMobileNo();

		String bonaGroundMobileNo =
			tourismBonaGroundTransportationCacheModel.bonaGroundMobileNo;

		if ((bonaGroundMobileNo != null) &&
			(bonaGroundMobileNo.length() == 0)) {

			tourismBonaGroundTransportationCacheModel.bonaGroundMobileNo = null;
		}

		tourismBonaGroundTransportationCacheModel.bonaGroundFaxNo =
			getBonaGroundFaxNo();

		String bonaGroundFaxNo =
			tourismBonaGroundTransportationCacheModel.bonaGroundFaxNo;

		if ((bonaGroundFaxNo != null) && (bonaGroundFaxNo.length() == 0)) {
			tourismBonaGroundTransportationCacheModel.bonaGroundFaxNo = null;
		}

		tourismBonaGroundTransportationCacheModel.bonaGroundLicensedWith =
			getBonaGroundLicensedWith();

		String bonaGroundLicensedWith =
			tourismBonaGroundTransportationCacheModel.bonaGroundLicensedWith;

		if ((bonaGroundLicensedWith != null) &&
			(bonaGroundLicensedWith.length() == 0)) {

			tourismBonaGroundTransportationCacheModel.bonaGroundLicensedWith =
				null;
		}

		Date bonaGroundBoardExpiryDate = getBonaGroundBoardExpiryDate();

		if (bonaGroundBoardExpiryDate != null) {
			tourismBonaGroundTransportationCacheModel.
				bonaGroundBoardExpiryDate = bonaGroundBoardExpiryDate.getTime();
		}
		else {
			tourismBonaGroundTransportationCacheModel.
				bonaGroundBoardExpiryDate = Long.MIN_VALUE;
		}

		tourismBonaGroundTransportationCacheModel.
			bonaGroundHaveYouBenefitBefore =
				getBonaGroundHaveYouBenefitBefore();

		String bonaGroundHaveYouBenefitBefore =
			tourismBonaGroundTransportationCacheModel.
				bonaGroundHaveYouBenefitBefore;

		if ((bonaGroundHaveYouBenefitBefore != null) &&
			(bonaGroundHaveYouBenefitBefore.length() == 0)) {

			tourismBonaGroundTransportationCacheModel.
				bonaGroundHaveYouBenefitBefore = null;
		}

		Date bonaGroundDateOfLastBenefit = getBonaGroundDateOfLastBenefit();

		if (bonaGroundDateOfLastBenefit != null) {
			tourismBonaGroundTransportationCacheModel.
				bonaGroundDateOfLastBenefit =
					bonaGroundDateOfLastBenefit.getTime();
		}
		else {
			tourismBonaGroundTransportationCacheModel.
				bonaGroundDateOfLastBenefit = Long.MIN_VALUE;
		}

		tourismBonaGroundTransportationCacheModel.bonaGroundEntityType =
			getBonaGroundEntityType();

		String bonaGroundEntityType =
			tourismBonaGroundTransportationCacheModel.bonaGroundEntityType;

		if ((bonaGroundEntityType != null) &&
			(bonaGroundEntityType.length() == 0)) {

			tourismBonaGroundTransportationCacheModel.bonaGroundEntityType =
				null;
		}

		tourismBonaGroundTransportationCacheModel.bonaGroundVehicleInfoMake =
			getBonaGroundVehicleInfoMake();

		String bonaGroundVehicleInfoMake =
			tourismBonaGroundTransportationCacheModel.bonaGroundVehicleInfoMake;

		if ((bonaGroundVehicleInfoMake != null) &&
			(bonaGroundVehicleInfoMake.length() == 0)) {

			tourismBonaGroundTransportationCacheModel.
				bonaGroundVehicleInfoMake = null;
		}

		tourismBonaGroundTransportationCacheModel.bonaGroundVehicleInfoModel =
			getBonaGroundVehicleInfoModel();

		String bonaGroundVehicleInfoModel =
			tourismBonaGroundTransportationCacheModel.
				bonaGroundVehicleInfoModel;

		if ((bonaGroundVehicleInfoModel != null) &&
			(bonaGroundVehicleInfoModel.length() == 0)) {

			tourismBonaGroundTransportationCacheModel.
				bonaGroundVehicleInfoModel = null;
		}

		tourismBonaGroundTransportationCacheModel.bonaGroundVehicleInfoYear =
			getBonaGroundVehicleInfoYear();

		String bonaGroundVehicleInfoYear =
			tourismBonaGroundTransportationCacheModel.bonaGroundVehicleInfoYear;

		if ((bonaGroundVehicleInfoYear != null) &&
			(bonaGroundVehicleInfoYear.length() == 0)) {

			tourismBonaGroundTransportationCacheModel.
				bonaGroundVehicleInfoYear = null;
		}

		tourismBonaGroundTransportationCacheModel.bonaGroundSeatingCapacity =
			getBonaGroundSeatingCapacity();

		String bonaGroundSeatingCapacity =
			tourismBonaGroundTransportationCacheModel.bonaGroundSeatingCapacity;

		if ((bonaGroundSeatingCapacity != null) &&
			(bonaGroundSeatingCapacity.length() == 0)) {

			tourismBonaGroundTransportationCacheModel.
				bonaGroundSeatingCapacity = null;
		}

		tourismBonaGroundTransportationCacheModel.
			bonaGroundExistingFleetAmount = getBonaGroundExistingFleetAmount();

		String bonaGroundExistingFleetAmount =
			tourismBonaGroundTransportationCacheModel.
				bonaGroundExistingFleetAmount;

		if ((bonaGroundExistingFleetAmount != null) &&
			(bonaGroundExistingFleetAmount.length() == 0)) {

			tourismBonaGroundTransportationCacheModel.
				bonaGroundExistingFleetAmount = null;
		}

		tourismBonaGroundTransportationCacheModel.
			bonaGroundIndicateVehicleWill = getBonaGroundIndicateVehicleWill();

		String bonaGroundIndicateVehicleWill =
			tourismBonaGroundTransportationCacheModel.
				bonaGroundIndicateVehicleWill;

		if ((bonaGroundIndicateVehicleWill != null) &&
			(bonaGroundIndicateVehicleWill.length() == 0)) {

			tourismBonaGroundTransportationCacheModel.
				bonaGroundIndicateVehicleWill = null;
		}

		tourismBonaGroundTransportationCacheModel.tourismApplicationId =
			getTourismApplicationId();

		return tourismBonaGroundTransportationCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<TourismBonaGroundTransportation, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry
				<String, Function<TourismBonaGroundTransportation, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismBonaGroundTransportation, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(TourismBonaGroundTransportation)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, TourismBonaGroundTransportation>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						TourismBonaGroundTransportation.class,
						ModelWrapper.class);

	}

	private long _tourismBonaGroundTransportId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _typeOfGroundTransportation;
	private String _bonaGroundName;
	private String _bonaGroundLandlineNo;
	private String _bonaGroundMobileNo;
	private String _bonaGroundFaxNo;
	private String _bonaGroundLicensedWith;
	private Date _bonaGroundBoardExpiryDate;
	private String _bonaGroundHaveYouBenefitBefore;
	private Date _bonaGroundDateOfLastBenefit;
	private String _bonaGroundEntityType;
	private String _bonaGroundVehicleInfoMake;
	private String _bonaGroundVehicleInfoModel;
	private String _bonaGroundVehicleInfoYear;
	private String _bonaGroundSeatingCapacity;
	private String _bonaGroundExistingFleetAmount;
	private String _bonaGroundIndicateVehicleWill;
	private long _tourismApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<TourismBonaGroundTransportation, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((TourismBonaGroundTransportation)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"tourismBonaGroundTransportId", _tourismBonaGroundTransportId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"typeOfGroundTransportation", _typeOfGroundTransportation);
		_columnOriginalValues.put("bonaGroundName", _bonaGroundName);
		_columnOriginalValues.put(
			"bonaGroundLandlineNo", _bonaGroundLandlineNo);
		_columnOriginalValues.put("bonaGroundMobileNo", _bonaGroundMobileNo);
		_columnOriginalValues.put("bonaGroundFaxNo", _bonaGroundFaxNo);
		_columnOriginalValues.put(
			"bonaGroundLicensedWith", _bonaGroundLicensedWith);
		_columnOriginalValues.put(
			"bonaGroundBoardExpiryDate", _bonaGroundBoardExpiryDate);
		_columnOriginalValues.put(
			"bonaGroundHaveYouBenefitBefore", _bonaGroundHaveYouBenefitBefore);
		_columnOriginalValues.put(
			"bonaGroundDateOfLastBenefit", _bonaGroundDateOfLastBenefit);
		_columnOriginalValues.put(
			"bonaGroundEntityType", _bonaGroundEntityType);
		_columnOriginalValues.put(
			"bonaGroundVehicleInfoMake", _bonaGroundVehicleInfoMake);
		_columnOriginalValues.put(
			"bonaGroundVehicleInfoModel", _bonaGroundVehicleInfoModel);
		_columnOriginalValues.put(
			"bonaGroundVehicleInfoYear", _bonaGroundVehicleInfoYear);
		_columnOriginalValues.put(
			"bonaGroundSeatingCapacity", _bonaGroundSeatingCapacity);
		_columnOriginalValues.put(
			"bonaGroundExistingFleetAmount", _bonaGroundExistingFleetAmount);
		_columnOriginalValues.put(
			"bonaGroundIndicateVehicleWill", _bonaGroundIndicateVehicleWill);
		_columnOriginalValues.put(
			"tourismApplicationId", _tourismApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("tourismBonaGroundTransportId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("typeOfGroundTransportation", 128L);

		columnBitmasks.put("bonaGroundName", 256L);

		columnBitmasks.put("bonaGroundLandlineNo", 512L);

		columnBitmasks.put("bonaGroundMobileNo", 1024L);

		columnBitmasks.put("bonaGroundFaxNo", 2048L);

		columnBitmasks.put("bonaGroundLicensedWith", 4096L);

		columnBitmasks.put("bonaGroundBoardExpiryDate", 8192L);

		columnBitmasks.put("bonaGroundHaveYouBenefitBefore", 16384L);

		columnBitmasks.put("bonaGroundDateOfLastBenefit", 32768L);

		columnBitmasks.put("bonaGroundEntityType", 65536L);

		columnBitmasks.put("bonaGroundVehicleInfoMake", 131072L);

		columnBitmasks.put("bonaGroundVehicleInfoModel", 262144L);

		columnBitmasks.put("bonaGroundVehicleInfoYear", 524288L);

		columnBitmasks.put("bonaGroundSeatingCapacity", 1048576L);

		columnBitmasks.put("bonaGroundExistingFleetAmount", 2097152L);

		columnBitmasks.put("bonaGroundIndicateVehicleWill", 4194304L);

		columnBitmasks.put("tourismApplicationId", 8388608L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private TourismBonaGroundTransportation _escapedModel;

}