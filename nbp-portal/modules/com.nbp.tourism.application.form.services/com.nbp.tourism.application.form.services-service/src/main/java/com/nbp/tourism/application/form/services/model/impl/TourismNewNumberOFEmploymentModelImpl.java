/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.tourism.application.form.services.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.tourism.application.form.services.model.TourismNewNumberOFEmployment;
import com.nbp.tourism.application.form.services.model.TourismNewNumberOFEmploymentModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the TourismNewNumberOFEmployment service. Represents a row in the &quot;nbp_tourism_new_acco_employe&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>TourismNewNumberOFEmploymentModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TourismNewNumberOFEmploymentImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TourismNewNumberOFEmploymentImpl
 * @generated
 */
@JSON(strict = true)
public class TourismNewNumberOFEmploymentModelImpl
	extends BaseModelImpl<TourismNewNumberOFEmployment>
	implements TourismNewNumberOFEmploymentModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tourism new number of employment model instance should use the <code>TourismNewNumberOFEmployment</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_tourism_new_acco_employe";

	public static final Object[][] TABLE_COLUMNS = {
		{"tourismNewNumberOFEmploymentId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"permanentLocalMale", Types.VARCHAR},
		{"permanentLocalFemale", Types.VARCHAR},
		{"permanentForeignMale", Types.VARCHAR},
		{"permanentForeignFemale", Types.VARCHAR},
		{"temporaryLocalMale", Types.VARCHAR},
		{"temporaryLocalFemale", Types.VARCHAR},
		{"temporaryForeignMale", Types.VARCHAR},
		{"temporaryForeignFemale", Types.VARCHAR},
		{"totalLocalMale", Types.VARCHAR}, {"totalLocalFemale", Types.VARCHAR},
		{"totalForeignMale", Types.VARCHAR},
		{"totalForeignFemale", Types.VARCHAR}, {"salaryWages", Types.VARCHAR},
		{"estimatedExpenditure", Types.VARCHAR},
		{"otherExpenditure", Types.VARCHAR},
		{"perRoomInclusiveCost", Types.VARCHAR},
		{"perRoomExclusiveCost", Types.VARCHAR},
		{"staffPermanentLocalMale", Types.VARCHAR},
		{"staffPermanentLocalFemale", Types.VARCHAR},
		{"staffPermanentForeignMale", Types.VARCHAR},
		{"staffPermanentForeignFemale", Types.VARCHAR},
		{"staffTemporaryLocalMale", Types.VARCHAR},
		{"staffTemporaryLocalFemale", Types.VARCHAR},
		{"staffTemporaryForeignMale", Types.VARCHAR},
		{"staffTemporaryForeignFemale", Types.VARCHAR},
		{"staffTotalLocalMale", Types.VARCHAR},
		{"staffTotalLocalFemale", Types.VARCHAR},
		{"staffTotalForeignMale", Types.VARCHAR},
		{"staffTotalForeignFemale", Types.VARCHAR},
		{"salariesAndWages", Types.VARCHAR},
		{"expectedAnnualFunds", Types.VARCHAR},
		{"tourismApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("tourismNewNumberOFEmploymentId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("permanentLocalMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("permanentLocalFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("permanentForeignMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("permanentForeignFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("temporaryLocalMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("temporaryLocalFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("temporaryForeignMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("temporaryForeignFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("totalLocalMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("totalLocalFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("totalForeignMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("totalForeignFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("salaryWages", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("estimatedExpenditure", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("otherExpenditure", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("perRoomInclusiveCost", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("perRoomExclusiveCost", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffPermanentLocalMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffPermanentLocalFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffPermanentForeignMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffPermanentForeignFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffTemporaryLocalMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffTemporaryLocalFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffTemporaryForeignMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffTemporaryForeignFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffTotalLocalMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffTotalLocalFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffTotalForeignMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("staffTotalForeignFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("salariesAndWages", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("expectedAnnualFunds", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tourismApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_tourism_new_acco_employe (tourismNewNumberOFEmploymentId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,permanentLocalMale VARCHAR(75) null,permanentLocalFemale VARCHAR(75) null,permanentForeignMale VARCHAR(75) null,permanentForeignFemale VARCHAR(75) null,temporaryLocalMale VARCHAR(75) null,temporaryLocalFemale VARCHAR(75) null,temporaryForeignMale VARCHAR(75) null,temporaryForeignFemale VARCHAR(75) null,totalLocalMale VARCHAR(75) null,totalLocalFemale VARCHAR(75) null,totalForeignMale VARCHAR(75) null,totalForeignFemale VARCHAR(75) null,salaryWages VARCHAR(75) null,estimatedExpenditure VARCHAR(75) null,otherExpenditure VARCHAR(75) null,perRoomInclusiveCost VARCHAR(75) null,perRoomExclusiveCost VARCHAR(75) null,staffPermanentLocalMale VARCHAR(75) null,staffPermanentLocalFemale VARCHAR(75) null,staffPermanentForeignMale VARCHAR(75) null,staffPermanentForeignFemale VARCHAR(75) null,staffTemporaryLocalMale VARCHAR(75) null,staffTemporaryLocalFemale VARCHAR(75) null,staffTemporaryForeignMale VARCHAR(75) null,staffTemporaryForeignFemale VARCHAR(75) null,staffTotalLocalMale VARCHAR(75) null,staffTotalLocalFemale VARCHAR(75) null,staffTotalForeignMale VARCHAR(75) null,staffTotalForeignFemale VARCHAR(75) null,salariesAndWages VARCHAR(75) null,expectedAnnualFunds VARCHAR(75) null,tourismApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_tourism_new_acco_employe";

	public static final String ORDER_BY_JPQL =
		" ORDER BY tourismNewNumberOFEmployment.tourismNewNumberOFEmploymentId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_tourism_new_acco_employe.tourismNewNumberOFEmploymentId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TOURISMAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TOURISMNEWNUMBEROFEMPLOYMENTID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public TourismNewNumberOFEmploymentModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _tourismNewNumberOFEmploymentId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTourismNewNumberOFEmploymentId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _tourismNewNumberOFEmploymentId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TourismNewNumberOFEmployment.class;
	}

	@Override
	public String getModelClassName() {
		return TourismNewNumberOFEmployment.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<TourismNewNumberOFEmployment, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<TourismNewNumberOFEmployment, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismNewNumberOFEmployment, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(TourismNewNumberOFEmployment)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<TourismNewNumberOFEmployment, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<TourismNewNumberOFEmployment, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(TourismNewNumberOFEmployment)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<TourismNewNumberOFEmployment, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<TourismNewNumberOFEmployment, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<TourismNewNumberOFEmployment, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<TourismNewNumberOFEmployment, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String,
						 Function<TourismNewNumberOFEmployment, Object>>();

			attributeGetterFunctions.put(
				"tourismNewNumberOFEmploymentId",
				TourismNewNumberOFEmployment::
					getTourismNewNumberOFEmploymentId);
			attributeGetterFunctions.put(
				"groupId", TourismNewNumberOFEmployment::getGroupId);
			attributeGetterFunctions.put(
				"companyId", TourismNewNumberOFEmployment::getCompanyId);
			attributeGetterFunctions.put(
				"userId", TourismNewNumberOFEmployment::getUserId);
			attributeGetterFunctions.put(
				"userName", TourismNewNumberOFEmployment::getUserName);
			attributeGetterFunctions.put(
				"createDate", TourismNewNumberOFEmployment::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", TourismNewNumberOFEmployment::getModifiedDate);
			attributeGetterFunctions.put(
				"permanentLocalMale",
				TourismNewNumberOFEmployment::getPermanentLocalMale);
			attributeGetterFunctions.put(
				"permanentLocalFemale",
				TourismNewNumberOFEmployment::getPermanentLocalFemale);
			attributeGetterFunctions.put(
				"permanentForeignMale",
				TourismNewNumberOFEmployment::getPermanentForeignMale);
			attributeGetterFunctions.put(
				"permanentForeignFemale",
				TourismNewNumberOFEmployment::getPermanentForeignFemale);
			attributeGetterFunctions.put(
				"temporaryLocalMale",
				TourismNewNumberOFEmployment::getTemporaryLocalMale);
			attributeGetterFunctions.put(
				"temporaryLocalFemale",
				TourismNewNumberOFEmployment::getTemporaryLocalFemale);
			attributeGetterFunctions.put(
				"temporaryForeignMale",
				TourismNewNumberOFEmployment::getTemporaryForeignMale);
			attributeGetterFunctions.put(
				"temporaryForeignFemale",
				TourismNewNumberOFEmployment::getTemporaryForeignFemale);
			attributeGetterFunctions.put(
				"totalLocalMale",
				TourismNewNumberOFEmployment::getTotalLocalMale);
			attributeGetterFunctions.put(
				"totalLocalFemale",
				TourismNewNumberOFEmployment::getTotalLocalFemale);
			attributeGetterFunctions.put(
				"totalForeignMale",
				TourismNewNumberOFEmployment::getTotalForeignMale);
			attributeGetterFunctions.put(
				"totalForeignFemale",
				TourismNewNumberOFEmployment::getTotalForeignFemale);
			attributeGetterFunctions.put(
				"salaryWages", TourismNewNumberOFEmployment::getSalaryWages);
			attributeGetterFunctions.put(
				"estimatedExpenditure",
				TourismNewNumberOFEmployment::getEstimatedExpenditure);
			attributeGetterFunctions.put(
				"otherExpenditure",
				TourismNewNumberOFEmployment::getOtherExpenditure);
			attributeGetterFunctions.put(
				"perRoomInclusiveCost",
				TourismNewNumberOFEmployment::getPerRoomInclusiveCost);
			attributeGetterFunctions.put(
				"perRoomExclusiveCost",
				TourismNewNumberOFEmployment::getPerRoomExclusiveCost);
			attributeGetterFunctions.put(
				"staffPermanentLocalMale",
				TourismNewNumberOFEmployment::getStaffPermanentLocalMale);
			attributeGetterFunctions.put(
				"staffPermanentLocalFemale",
				TourismNewNumberOFEmployment::getStaffPermanentLocalFemale);
			attributeGetterFunctions.put(
				"staffPermanentForeignMale",
				TourismNewNumberOFEmployment::getStaffPermanentForeignMale);
			attributeGetterFunctions.put(
				"staffPermanentForeignFemale",
				TourismNewNumberOFEmployment::getStaffPermanentForeignFemale);
			attributeGetterFunctions.put(
				"staffTemporaryLocalMale",
				TourismNewNumberOFEmployment::getStaffTemporaryLocalMale);
			attributeGetterFunctions.put(
				"staffTemporaryLocalFemale",
				TourismNewNumberOFEmployment::getStaffTemporaryLocalFemale);
			attributeGetterFunctions.put(
				"staffTemporaryForeignMale",
				TourismNewNumberOFEmployment::getStaffTemporaryForeignMale);
			attributeGetterFunctions.put(
				"staffTemporaryForeignFemale",
				TourismNewNumberOFEmployment::getStaffTemporaryForeignFemale);
			attributeGetterFunctions.put(
				"staffTotalLocalMale",
				TourismNewNumberOFEmployment::getStaffTotalLocalMale);
			attributeGetterFunctions.put(
				"staffTotalLocalFemale",
				TourismNewNumberOFEmployment::getStaffTotalLocalFemale);
			attributeGetterFunctions.put(
				"staffTotalForeignMale",
				TourismNewNumberOFEmployment::getStaffTotalForeignMale);
			attributeGetterFunctions.put(
				"staffTotalForeignFemale",
				TourismNewNumberOFEmployment::getStaffTotalForeignFemale);
			attributeGetterFunctions.put(
				"salariesAndWages",
				TourismNewNumberOFEmployment::getSalariesAndWages);
			attributeGetterFunctions.put(
				"expectedAnnualFunds",
				TourismNewNumberOFEmployment::getExpectedAnnualFunds);
			attributeGetterFunctions.put(
				"tourismApplicationId",
				TourismNewNumberOFEmployment::getTourismApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<TourismNewNumberOFEmployment, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<TourismNewNumberOFEmployment, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<TourismNewNumberOFEmployment, ?>>();

			attributeSetterBiConsumers.put(
				"tourismNewNumberOFEmploymentId",
				(BiConsumer<TourismNewNumberOFEmployment, Long>)
					TourismNewNumberOFEmployment::
						setTourismNewNumberOFEmploymentId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<TourismNewNumberOFEmployment, Long>)
					TourismNewNumberOFEmployment::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<TourismNewNumberOFEmployment, Long>)
					TourismNewNumberOFEmployment::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<TourismNewNumberOFEmployment, Long>)
					TourismNewNumberOFEmployment::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<TourismNewNumberOFEmployment, Date>)
					TourismNewNumberOFEmployment::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<TourismNewNumberOFEmployment, Date>)
					TourismNewNumberOFEmployment::setModifiedDate);
			attributeSetterBiConsumers.put(
				"permanentLocalMale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setPermanentLocalMale);
			attributeSetterBiConsumers.put(
				"permanentLocalFemale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setPermanentLocalFemale);
			attributeSetterBiConsumers.put(
				"permanentForeignMale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setPermanentForeignMale);
			attributeSetterBiConsumers.put(
				"permanentForeignFemale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setPermanentForeignFemale);
			attributeSetterBiConsumers.put(
				"temporaryLocalMale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setTemporaryLocalMale);
			attributeSetterBiConsumers.put(
				"temporaryLocalFemale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setTemporaryLocalFemale);
			attributeSetterBiConsumers.put(
				"temporaryForeignMale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setTemporaryForeignMale);
			attributeSetterBiConsumers.put(
				"temporaryForeignFemale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setTemporaryForeignFemale);
			attributeSetterBiConsumers.put(
				"totalLocalMale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setTotalLocalMale);
			attributeSetterBiConsumers.put(
				"totalLocalFemale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setTotalLocalFemale);
			attributeSetterBiConsumers.put(
				"totalForeignMale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setTotalForeignMale);
			attributeSetterBiConsumers.put(
				"totalForeignFemale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setTotalForeignFemale);
			attributeSetterBiConsumers.put(
				"salaryWages",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setSalaryWages);
			attributeSetterBiConsumers.put(
				"estimatedExpenditure",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setEstimatedExpenditure);
			attributeSetterBiConsumers.put(
				"otherExpenditure",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setOtherExpenditure);
			attributeSetterBiConsumers.put(
				"perRoomInclusiveCost",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setPerRoomInclusiveCost);
			attributeSetterBiConsumers.put(
				"perRoomExclusiveCost",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setPerRoomExclusiveCost);
			attributeSetterBiConsumers.put(
				"staffPermanentLocalMale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setStaffPermanentLocalMale);
			attributeSetterBiConsumers.put(
				"staffPermanentLocalFemale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setStaffPermanentLocalFemale);
			attributeSetterBiConsumers.put(
				"staffPermanentForeignMale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setStaffPermanentForeignMale);
			attributeSetterBiConsumers.put(
				"staffPermanentForeignFemale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::
						setStaffPermanentForeignFemale);
			attributeSetterBiConsumers.put(
				"staffTemporaryLocalMale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setStaffTemporaryLocalMale);
			attributeSetterBiConsumers.put(
				"staffTemporaryLocalFemale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setStaffTemporaryLocalFemale);
			attributeSetterBiConsumers.put(
				"staffTemporaryForeignMale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setStaffTemporaryForeignMale);
			attributeSetterBiConsumers.put(
				"staffTemporaryForeignFemale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::
						setStaffTemporaryForeignFemale);
			attributeSetterBiConsumers.put(
				"staffTotalLocalMale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setStaffTotalLocalMale);
			attributeSetterBiConsumers.put(
				"staffTotalLocalFemale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setStaffTotalLocalFemale);
			attributeSetterBiConsumers.put(
				"staffTotalForeignMale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setStaffTotalForeignMale);
			attributeSetterBiConsumers.put(
				"staffTotalForeignFemale",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setStaffTotalForeignFemale);
			attributeSetterBiConsumers.put(
				"salariesAndWages",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setSalariesAndWages);
			attributeSetterBiConsumers.put(
				"expectedAnnualFunds",
				(BiConsumer<TourismNewNumberOFEmployment, String>)
					TourismNewNumberOFEmployment::setExpectedAnnualFunds);
			attributeSetterBiConsumers.put(
				"tourismApplicationId",
				(BiConsumer<TourismNewNumberOFEmployment, Long>)
					TourismNewNumberOFEmployment::setTourismApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getTourismNewNumberOFEmploymentId() {
		return _tourismNewNumberOFEmploymentId;
	}

	@Override
	public void setTourismNewNumberOFEmploymentId(
		long tourismNewNumberOFEmploymentId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismNewNumberOFEmploymentId = tourismNewNumberOFEmploymentId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getPermanentLocalMale() {
		if (_permanentLocalMale == null) {
			return "";
		}
		else {
			return _permanentLocalMale;
		}
	}

	@Override
	public void setPermanentLocalMale(String permanentLocalMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_permanentLocalMale = permanentLocalMale;
	}

	@JSON
	@Override
	public String getPermanentLocalFemale() {
		if (_permanentLocalFemale == null) {
			return "";
		}
		else {
			return _permanentLocalFemale;
		}
	}

	@Override
	public void setPermanentLocalFemale(String permanentLocalFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_permanentLocalFemale = permanentLocalFemale;
	}

	@JSON
	@Override
	public String getPermanentForeignMale() {
		if (_permanentForeignMale == null) {
			return "";
		}
		else {
			return _permanentForeignMale;
		}
	}

	@Override
	public void setPermanentForeignMale(String permanentForeignMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_permanentForeignMale = permanentForeignMale;
	}

	@JSON
	@Override
	public String getPermanentForeignFemale() {
		if (_permanentForeignFemale == null) {
			return "";
		}
		else {
			return _permanentForeignFemale;
		}
	}

	@Override
	public void setPermanentForeignFemale(String permanentForeignFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_permanentForeignFemale = permanentForeignFemale;
	}

	@JSON
	@Override
	public String getTemporaryLocalMale() {
		if (_temporaryLocalMale == null) {
			return "";
		}
		else {
			return _temporaryLocalMale;
		}
	}

	@Override
	public void setTemporaryLocalMale(String temporaryLocalMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_temporaryLocalMale = temporaryLocalMale;
	}

	@JSON
	@Override
	public String getTemporaryLocalFemale() {
		if (_temporaryLocalFemale == null) {
			return "";
		}
		else {
			return _temporaryLocalFemale;
		}
	}

	@Override
	public void setTemporaryLocalFemale(String temporaryLocalFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_temporaryLocalFemale = temporaryLocalFemale;
	}

	@JSON
	@Override
	public String getTemporaryForeignMale() {
		if (_temporaryForeignMale == null) {
			return "";
		}
		else {
			return _temporaryForeignMale;
		}
	}

	@Override
	public void setTemporaryForeignMale(String temporaryForeignMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_temporaryForeignMale = temporaryForeignMale;
	}

	@JSON
	@Override
	public String getTemporaryForeignFemale() {
		if (_temporaryForeignFemale == null) {
			return "";
		}
		else {
			return _temporaryForeignFemale;
		}
	}

	@Override
	public void setTemporaryForeignFemale(String temporaryForeignFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_temporaryForeignFemale = temporaryForeignFemale;
	}

	@JSON
	@Override
	public String getTotalLocalMale() {
		if (_totalLocalMale == null) {
			return "";
		}
		else {
			return _totalLocalMale;
		}
	}

	@Override
	public void setTotalLocalMale(String totalLocalMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_totalLocalMale = totalLocalMale;
	}

	@JSON
	@Override
	public String getTotalLocalFemale() {
		if (_totalLocalFemale == null) {
			return "";
		}
		else {
			return _totalLocalFemale;
		}
	}

	@Override
	public void setTotalLocalFemale(String totalLocalFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_totalLocalFemale = totalLocalFemale;
	}

	@JSON
	@Override
	public String getTotalForeignMale() {
		if (_totalForeignMale == null) {
			return "";
		}
		else {
			return _totalForeignMale;
		}
	}

	@Override
	public void setTotalForeignMale(String totalForeignMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_totalForeignMale = totalForeignMale;
	}

	@JSON
	@Override
	public String getTotalForeignFemale() {
		if (_totalForeignFemale == null) {
			return "";
		}
		else {
			return _totalForeignFemale;
		}
	}

	@Override
	public void setTotalForeignFemale(String totalForeignFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_totalForeignFemale = totalForeignFemale;
	}

	@JSON
	@Override
	public String getSalaryWages() {
		if (_salaryWages == null) {
			return "";
		}
		else {
			return _salaryWages;
		}
	}

	@Override
	public void setSalaryWages(String salaryWages) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_salaryWages = salaryWages;
	}

	@JSON
	@Override
	public String getEstimatedExpenditure() {
		if (_estimatedExpenditure == null) {
			return "";
		}
		else {
			return _estimatedExpenditure;
		}
	}

	@Override
	public void setEstimatedExpenditure(String estimatedExpenditure) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_estimatedExpenditure = estimatedExpenditure;
	}

	@JSON
	@Override
	public String getOtherExpenditure() {
		if (_otherExpenditure == null) {
			return "";
		}
		else {
			return _otherExpenditure;
		}
	}

	@Override
	public void setOtherExpenditure(String otherExpenditure) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_otherExpenditure = otherExpenditure;
	}

	@JSON
	@Override
	public String getPerRoomInclusiveCost() {
		if (_perRoomInclusiveCost == null) {
			return "";
		}
		else {
			return _perRoomInclusiveCost;
		}
	}

	@Override
	public void setPerRoomInclusiveCost(String perRoomInclusiveCost) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_perRoomInclusiveCost = perRoomInclusiveCost;
	}

	@JSON
	@Override
	public String getPerRoomExclusiveCost() {
		if (_perRoomExclusiveCost == null) {
			return "";
		}
		else {
			return _perRoomExclusiveCost;
		}
	}

	@Override
	public void setPerRoomExclusiveCost(String perRoomExclusiveCost) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_perRoomExclusiveCost = perRoomExclusiveCost;
	}

	@JSON
	@Override
	public String getStaffPermanentLocalMale() {
		if (_staffPermanentLocalMale == null) {
			return "";
		}
		else {
			return _staffPermanentLocalMale;
		}
	}

	@Override
	public void setStaffPermanentLocalMale(String staffPermanentLocalMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffPermanentLocalMale = staffPermanentLocalMale;
	}

	@JSON
	@Override
	public String getStaffPermanentLocalFemale() {
		if (_staffPermanentLocalFemale == null) {
			return "";
		}
		else {
			return _staffPermanentLocalFemale;
		}
	}

	@Override
	public void setStaffPermanentLocalFemale(String staffPermanentLocalFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffPermanentLocalFemale = staffPermanentLocalFemale;
	}

	@JSON
	@Override
	public String getStaffPermanentForeignMale() {
		if (_staffPermanentForeignMale == null) {
			return "";
		}
		else {
			return _staffPermanentForeignMale;
		}
	}

	@Override
	public void setStaffPermanentForeignMale(String staffPermanentForeignMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffPermanentForeignMale = staffPermanentForeignMale;
	}

	@JSON
	@Override
	public String getStaffPermanentForeignFemale() {
		if (_staffPermanentForeignFemale == null) {
			return "";
		}
		else {
			return _staffPermanentForeignFemale;
		}
	}

	@Override
	public void setStaffPermanentForeignFemale(
		String staffPermanentForeignFemale) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffPermanentForeignFemale = staffPermanentForeignFemale;
	}

	@JSON
	@Override
	public String getStaffTemporaryLocalMale() {
		if (_staffTemporaryLocalMale == null) {
			return "";
		}
		else {
			return _staffTemporaryLocalMale;
		}
	}

	@Override
	public void setStaffTemporaryLocalMale(String staffTemporaryLocalMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffTemporaryLocalMale = staffTemporaryLocalMale;
	}

	@JSON
	@Override
	public String getStaffTemporaryLocalFemale() {
		if (_staffTemporaryLocalFemale == null) {
			return "";
		}
		else {
			return _staffTemporaryLocalFemale;
		}
	}

	@Override
	public void setStaffTemporaryLocalFemale(String staffTemporaryLocalFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffTemporaryLocalFemale = staffTemporaryLocalFemale;
	}

	@JSON
	@Override
	public String getStaffTemporaryForeignMale() {
		if (_staffTemporaryForeignMale == null) {
			return "";
		}
		else {
			return _staffTemporaryForeignMale;
		}
	}

	@Override
	public void setStaffTemporaryForeignMale(String staffTemporaryForeignMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffTemporaryForeignMale = staffTemporaryForeignMale;
	}

	@JSON
	@Override
	public String getStaffTemporaryForeignFemale() {
		if (_staffTemporaryForeignFemale == null) {
			return "";
		}
		else {
			return _staffTemporaryForeignFemale;
		}
	}

	@Override
	public void setStaffTemporaryForeignFemale(
		String staffTemporaryForeignFemale) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffTemporaryForeignFemale = staffTemporaryForeignFemale;
	}

	@JSON
	@Override
	public String getStaffTotalLocalMale() {
		if (_staffTotalLocalMale == null) {
			return "";
		}
		else {
			return _staffTotalLocalMale;
		}
	}

	@Override
	public void setStaffTotalLocalMale(String staffTotalLocalMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffTotalLocalMale = staffTotalLocalMale;
	}

	@JSON
	@Override
	public String getStaffTotalLocalFemale() {
		if (_staffTotalLocalFemale == null) {
			return "";
		}
		else {
			return _staffTotalLocalFemale;
		}
	}

	@Override
	public void setStaffTotalLocalFemale(String staffTotalLocalFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffTotalLocalFemale = staffTotalLocalFemale;
	}

	@JSON
	@Override
	public String getStaffTotalForeignMale() {
		if (_staffTotalForeignMale == null) {
			return "";
		}
		else {
			return _staffTotalForeignMale;
		}
	}

	@Override
	public void setStaffTotalForeignMale(String staffTotalForeignMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffTotalForeignMale = staffTotalForeignMale;
	}

	@JSON
	@Override
	public String getStaffTotalForeignFemale() {
		if (_staffTotalForeignFemale == null) {
			return "";
		}
		else {
			return _staffTotalForeignFemale;
		}
	}

	@Override
	public void setStaffTotalForeignFemale(String staffTotalForeignFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_staffTotalForeignFemale = staffTotalForeignFemale;
	}

	@JSON
	@Override
	public String getSalariesAndWages() {
		if (_salariesAndWages == null) {
			return "";
		}
		else {
			return _salariesAndWages;
		}
	}

	@Override
	public void setSalariesAndWages(String salariesAndWages) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_salariesAndWages = salariesAndWages;
	}

	@JSON
	@Override
	public String getExpectedAnnualFunds() {
		if (_expectedAnnualFunds == null) {
			return "";
		}
		else {
			return _expectedAnnualFunds;
		}
	}

	@Override
	public void setExpectedAnnualFunds(String expectedAnnualFunds) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_expectedAnnualFunds = expectedAnnualFunds;
	}

	@JSON
	@Override
	public long getTourismApplicationId() {
		return _tourismApplicationId;
	}

	@Override
	public void setTourismApplicationId(long tourismApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismApplicationId = tourismApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalTourismApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), TourismNewNumberOFEmployment.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TourismNewNumberOFEmployment toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, TourismNewNumberOFEmployment>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TourismNewNumberOFEmploymentImpl tourismNewNumberOFEmploymentImpl =
			new TourismNewNumberOFEmploymentImpl();

		tourismNewNumberOFEmploymentImpl.setTourismNewNumberOFEmploymentId(
			getTourismNewNumberOFEmploymentId());
		tourismNewNumberOFEmploymentImpl.setGroupId(getGroupId());
		tourismNewNumberOFEmploymentImpl.setCompanyId(getCompanyId());
		tourismNewNumberOFEmploymentImpl.setUserId(getUserId());
		tourismNewNumberOFEmploymentImpl.setUserName(getUserName());
		tourismNewNumberOFEmploymentImpl.setCreateDate(getCreateDate());
		tourismNewNumberOFEmploymentImpl.setModifiedDate(getModifiedDate());
		tourismNewNumberOFEmploymentImpl.setPermanentLocalMale(
			getPermanentLocalMale());
		tourismNewNumberOFEmploymentImpl.setPermanentLocalFemale(
			getPermanentLocalFemale());
		tourismNewNumberOFEmploymentImpl.setPermanentForeignMale(
			getPermanentForeignMale());
		tourismNewNumberOFEmploymentImpl.setPermanentForeignFemale(
			getPermanentForeignFemale());
		tourismNewNumberOFEmploymentImpl.setTemporaryLocalMale(
			getTemporaryLocalMale());
		tourismNewNumberOFEmploymentImpl.setTemporaryLocalFemale(
			getTemporaryLocalFemale());
		tourismNewNumberOFEmploymentImpl.setTemporaryForeignMale(
			getTemporaryForeignMale());
		tourismNewNumberOFEmploymentImpl.setTemporaryForeignFemale(
			getTemporaryForeignFemale());
		tourismNewNumberOFEmploymentImpl.setTotalLocalMale(getTotalLocalMale());
		tourismNewNumberOFEmploymentImpl.setTotalLocalFemale(
			getTotalLocalFemale());
		tourismNewNumberOFEmploymentImpl.setTotalForeignMale(
			getTotalForeignMale());
		tourismNewNumberOFEmploymentImpl.setTotalForeignFemale(
			getTotalForeignFemale());
		tourismNewNumberOFEmploymentImpl.setSalaryWages(getSalaryWages());
		tourismNewNumberOFEmploymentImpl.setEstimatedExpenditure(
			getEstimatedExpenditure());
		tourismNewNumberOFEmploymentImpl.setOtherExpenditure(
			getOtherExpenditure());
		tourismNewNumberOFEmploymentImpl.setPerRoomInclusiveCost(
			getPerRoomInclusiveCost());
		tourismNewNumberOFEmploymentImpl.setPerRoomExclusiveCost(
			getPerRoomExclusiveCost());
		tourismNewNumberOFEmploymentImpl.setStaffPermanentLocalMale(
			getStaffPermanentLocalMale());
		tourismNewNumberOFEmploymentImpl.setStaffPermanentLocalFemale(
			getStaffPermanentLocalFemale());
		tourismNewNumberOFEmploymentImpl.setStaffPermanentForeignMale(
			getStaffPermanentForeignMale());
		tourismNewNumberOFEmploymentImpl.setStaffPermanentForeignFemale(
			getStaffPermanentForeignFemale());
		tourismNewNumberOFEmploymentImpl.setStaffTemporaryLocalMale(
			getStaffTemporaryLocalMale());
		tourismNewNumberOFEmploymentImpl.setStaffTemporaryLocalFemale(
			getStaffTemporaryLocalFemale());
		tourismNewNumberOFEmploymentImpl.setStaffTemporaryForeignMale(
			getStaffTemporaryForeignMale());
		tourismNewNumberOFEmploymentImpl.setStaffTemporaryForeignFemale(
			getStaffTemporaryForeignFemale());
		tourismNewNumberOFEmploymentImpl.setStaffTotalLocalMale(
			getStaffTotalLocalMale());
		tourismNewNumberOFEmploymentImpl.setStaffTotalLocalFemale(
			getStaffTotalLocalFemale());
		tourismNewNumberOFEmploymentImpl.setStaffTotalForeignMale(
			getStaffTotalForeignMale());
		tourismNewNumberOFEmploymentImpl.setStaffTotalForeignFemale(
			getStaffTotalForeignFemale());
		tourismNewNumberOFEmploymentImpl.setSalariesAndWages(
			getSalariesAndWages());
		tourismNewNumberOFEmploymentImpl.setExpectedAnnualFunds(
			getExpectedAnnualFunds());
		tourismNewNumberOFEmploymentImpl.setTourismApplicationId(
			getTourismApplicationId());

		tourismNewNumberOFEmploymentImpl.resetOriginalValues();

		return tourismNewNumberOFEmploymentImpl;
	}

	@Override
	public TourismNewNumberOFEmployment cloneWithOriginalValues() {
		TourismNewNumberOFEmploymentImpl tourismNewNumberOFEmploymentImpl =
			new TourismNewNumberOFEmploymentImpl();

		tourismNewNumberOFEmploymentImpl.setTourismNewNumberOFEmploymentId(
			this.<Long>getColumnOriginalValue(
				"tourismNewNumberOFEmploymentId"));
		tourismNewNumberOFEmploymentImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		tourismNewNumberOFEmploymentImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		tourismNewNumberOFEmploymentImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		tourismNewNumberOFEmploymentImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		tourismNewNumberOFEmploymentImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		tourismNewNumberOFEmploymentImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		tourismNewNumberOFEmploymentImpl.setPermanentLocalMale(
			this.<String>getColumnOriginalValue("permanentLocalMale"));
		tourismNewNumberOFEmploymentImpl.setPermanentLocalFemale(
			this.<String>getColumnOriginalValue("permanentLocalFemale"));
		tourismNewNumberOFEmploymentImpl.setPermanentForeignMale(
			this.<String>getColumnOriginalValue("permanentForeignMale"));
		tourismNewNumberOFEmploymentImpl.setPermanentForeignFemale(
			this.<String>getColumnOriginalValue("permanentForeignFemale"));
		tourismNewNumberOFEmploymentImpl.setTemporaryLocalMale(
			this.<String>getColumnOriginalValue("temporaryLocalMale"));
		tourismNewNumberOFEmploymentImpl.setTemporaryLocalFemale(
			this.<String>getColumnOriginalValue("temporaryLocalFemale"));
		tourismNewNumberOFEmploymentImpl.setTemporaryForeignMale(
			this.<String>getColumnOriginalValue("temporaryForeignMale"));
		tourismNewNumberOFEmploymentImpl.setTemporaryForeignFemale(
			this.<String>getColumnOriginalValue("temporaryForeignFemale"));
		tourismNewNumberOFEmploymentImpl.setTotalLocalMale(
			this.<String>getColumnOriginalValue("totalLocalMale"));
		tourismNewNumberOFEmploymentImpl.setTotalLocalFemale(
			this.<String>getColumnOriginalValue("totalLocalFemale"));
		tourismNewNumberOFEmploymentImpl.setTotalForeignMale(
			this.<String>getColumnOriginalValue("totalForeignMale"));
		tourismNewNumberOFEmploymentImpl.setTotalForeignFemale(
			this.<String>getColumnOriginalValue("totalForeignFemale"));
		tourismNewNumberOFEmploymentImpl.setSalaryWages(
			this.<String>getColumnOriginalValue("salaryWages"));
		tourismNewNumberOFEmploymentImpl.setEstimatedExpenditure(
			this.<String>getColumnOriginalValue("estimatedExpenditure"));
		tourismNewNumberOFEmploymentImpl.setOtherExpenditure(
			this.<String>getColumnOriginalValue("otherExpenditure"));
		tourismNewNumberOFEmploymentImpl.setPerRoomInclusiveCost(
			this.<String>getColumnOriginalValue("perRoomInclusiveCost"));
		tourismNewNumberOFEmploymentImpl.setPerRoomExclusiveCost(
			this.<String>getColumnOriginalValue("perRoomExclusiveCost"));
		tourismNewNumberOFEmploymentImpl.setStaffPermanentLocalMale(
			this.<String>getColumnOriginalValue("staffPermanentLocalMale"));
		tourismNewNumberOFEmploymentImpl.setStaffPermanentLocalFemale(
			this.<String>getColumnOriginalValue("staffPermanentLocalFemale"));
		tourismNewNumberOFEmploymentImpl.setStaffPermanentForeignMale(
			this.<String>getColumnOriginalValue("staffPermanentForeignMale"));
		tourismNewNumberOFEmploymentImpl.setStaffPermanentForeignFemale(
			this.<String>getColumnOriginalValue("staffPermanentForeignFemale"));
		tourismNewNumberOFEmploymentImpl.setStaffTemporaryLocalMale(
			this.<String>getColumnOriginalValue("staffTemporaryLocalMale"));
		tourismNewNumberOFEmploymentImpl.setStaffTemporaryLocalFemale(
			this.<String>getColumnOriginalValue("staffTemporaryLocalFemale"));
		tourismNewNumberOFEmploymentImpl.setStaffTemporaryForeignMale(
			this.<String>getColumnOriginalValue("staffTemporaryForeignMale"));
		tourismNewNumberOFEmploymentImpl.setStaffTemporaryForeignFemale(
			this.<String>getColumnOriginalValue("staffTemporaryForeignFemale"));
		tourismNewNumberOFEmploymentImpl.setStaffTotalLocalMale(
			this.<String>getColumnOriginalValue("staffTotalLocalMale"));
		tourismNewNumberOFEmploymentImpl.setStaffTotalLocalFemale(
			this.<String>getColumnOriginalValue("staffTotalLocalFemale"));
		tourismNewNumberOFEmploymentImpl.setStaffTotalForeignMale(
			this.<String>getColumnOriginalValue("staffTotalForeignMale"));
		tourismNewNumberOFEmploymentImpl.setStaffTotalForeignFemale(
			this.<String>getColumnOriginalValue("staffTotalForeignFemale"));
		tourismNewNumberOFEmploymentImpl.setSalariesAndWages(
			this.<String>getColumnOriginalValue("salariesAndWages"));
		tourismNewNumberOFEmploymentImpl.setExpectedAnnualFunds(
			this.<String>getColumnOriginalValue("expectedAnnualFunds"));
		tourismNewNumberOFEmploymentImpl.setTourismApplicationId(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));

		return tourismNewNumberOFEmploymentImpl;
	}

	@Override
	public int compareTo(
		TourismNewNumberOFEmployment tourismNewNumberOFEmployment) {

		long primaryKey = tourismNewNumberOFEmployment.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof TourismNewNumberOFEmployment)) {
			return false;
		}

		TourismNewNumberOFEmployment tourismNewNumberOFEmployment =
			(TourismNewNumberOFEmployment)object;

		long primaryKey = tourismNewNumberOFEmployment.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<TourismNewNumberOFEmployment> toCacheModel() {
		TourismNewNumberOFEmploymentCacheModel
			tourismNewNumberOFEmploymentCacheModel =
				new TourismNewNumberOFEmploymentCacheModel();

		tourismNewNumberOFEmploymentCacheModel.tourismNewNumberOFEmploymentId =
			getTourismNewNumberOFEmploymentId();

		tourismNewNumberOFEmploymentCacheModel.groupId = getGroupId();

		tourismNewNumberOFEmploymentCacheModel.companyId = getCompanyId();

		tourismNewNumberOFEmploymentCacheModel.userId = getUserId();

		tourismNewNumberOFEmploymentCacheModel.userName = getUserName();

		String userName = tourismNewNumberOFEmploymentCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			tourismNewNumberOFEmploymentCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			tourismNewNumberOFEmploymentCacheModel.createDate =
				createDate.getTime();
		}
		else {
			tourismNewNumberOFEmploymentCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			tourismNewNumberOFEmploymentCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			tourismNewNumberOFEmploymentCacheModel.modifiedDate =
				Long.MIN_VALUE;
		}

		tourismNewNumberOFEmploymentCacheModel.permanentLocalMale =
			getPermanentLocalMale();

		String permanentLocalMale =
			tourismNewNumberOFEmploymentCacheModel.permanentLocalMale;

		if ((permanentLocalMale != null) &&
			(permanentLocalMale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.permanentLocalMale = null;
		}

		tourismNewNumberOFEmploymentCacheModel.permanentLocalFemale =
			getPermanentLocalFemale();

		String permanentLocalFemale =
			tourismNewNumberOFEmploymentCacheModel.permanentLocalFemale;

		if ((permanentLocalFemale != null) &&
			(permanentLocalFemale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.permanentLocalFemale = null;
		}

		tourismNewNumberOFEmploymentCacheModel.permanentForeignMale =
			getPermanentForeignMale();

		String permanentForeignMale =
			tourismNewNumberOFEmploymentCacheModel.permanentForeignMale;

		if ((permanentForeignMale != null) &&
			(permanentForeignMale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.permanentForeignMale = null;
		}

		tourismNewNumberOFEmploymentCacheModel.permanentForeignFemale =
			getPermanentForeignFemale();

		String permanentForeignFemale =
			tourismNewNumberOFEmploymentCacheModel.permanentForeignFemale;

		if ((permanentForeignFemale != null) &&
			(permanentForeignFemale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.permanentForeignFemale =
				null;
		}

		tourismNewNumberOFEmploymentCacheModel.temporaryLocalMale =
			getTemporaryLocalMale();

		String temporaryLocalMale =
			tourismNewNumberOFEmploymentCacheModel.temporaryLocalMale;

		if ((temporaryLocalMale != null) &&
			(temporaryLocalMale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.temporaryLocalMale = null;
		}

		tourismNewNumberOFEmploymentCacheModel.temporaryLocalFemale =
			getTemporaryLocalFemale();

		String temporaryLocalFemale =
			tourismNewNumberOFEmploymentCacheModel.temporaryLocalFemale;

		if ((temporaryLocalFemale != null) &&
			(temporaryLocalFemale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.temporaryLocalFemale = null;
		}

		tourismNewNumberOFEmploymentCacheModel.temporaryForeignMale =
			getTemporaryForeignMale();

		String temporaryForeignMale =
			tourismNewNumberOFEmploymentCacheModel.temporaryForeignMale;

		if ((temporaryForeignMale != null) &&
			(temporaryForeignMale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.temporaryForeignMale = null;
		}

		tourismNewNumberOFEmploymentCacheModel.temporaryForeignFemale =
			getTemporaryForeignFemale();

		String temporaryForeignFemale =
			tourismNewNumberOFEmploymentCacheModel.temporaryForeignFemale;

		if ((temporaryForeignFemale != null) &&
			(temporaryForeignFemale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.temporaryForeignFemale =
				null;
		}

		tourismNewNumberOFEmploymentCacheModel.totalLocalMale =
			getTotalLocalMale();

		String totalLocalMale =
			tourismNewNumberOFEmploymentCacheModel.totalLocalMale;

		if ((totalLocalMale != null) && (totalLocalMale.length() == 0)) {
			tourismNewNumberOFEmploymentCacheModel.totalLocalMale = null;
		}

		tourismNewNumberOFEmploymentCacheModel.totalLocalFemale =
			getTotalLocalFemale();

		String totalLocalFemale =
			tourismNewNumberOFEmploymentCacheModel.totalLocalFemale;

		if ((totalLocalFemale != null) && (totalLocalFemale.length() == 0)) {
			tourismNewNumberOFEmploymentCacheModel.totalLocalFemale = null;
		}

		tourismNewNumberOFEmploymentCacheModel.totalForeignMale =
			getTotalForeignMale();

		String totalForeignMale =
			tourismNewNumberOFEmploymentCacheModel.totalForeignMale;

		if ((totalForeignMale != null) && (totalForeignMale.length() == 0)) {
			tourismNewNumberOFEmploymentCacheModel.totalForeignMale = null;
		}

		tourismNewNumberOFEmploymentCacheModel.totalForeignFemale =
			getTotalForeignFemale();

		String totalForeignFemale =
			tourismNewNumberOFEmploymentCacheModel.totalForeignFemale;

		if ((totalForeignFemale != null) &&
			(totalForeignFemale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.totalForeignFemale = null;
		}

		tourismNewNumberOFEmploymentCacheModel.salaryWages = getSalaryWages();

		String salaryWages = tourismNewNumberOFEmploymentCacheModel.salaryWages;

		if ((salaryWages != null) && (salaryWages.length() == 0)) {
			tourismNewNumberOFEmploymentCacheModel.salaryWages = null;
		}

		tourismNewNumberOFEmploymentCacheModel.estimatedExpenditure =
			getEstimatedExpenditure();

		String estimatedExpenditure =
			tourismNewNumberOFEmploymentCacheModel.estimatedExpenditure;

		if ((estimatedExpenditure != null) &&
			(estimatedExpenditure.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.estimatedExpenditure = null;
		}

		tourismNewNumberOFEmploymentCacheModel.otherExpenditure =
			getOtherExpenditure();

		String otherExpenditure =
			tourismNewNumberOFEmploymentCacheModel.otherExpenditure;

		if ((otherExpenditure != null) && (otherExpenditure.length() == 0)) {
			tourismNewNumberOFEmploymentCacheModel.otherExpenditure = null;
		}

		tourismNewNumberOFEmploymentCacheModel.perRoomInclusiveCost =
			getPerRoomInclusiveCost();

		String perRoomInclusiveCost =
			tourismNewNumberOFEmploymentCacheModel.perRoomInclusiveCost;

		if ((perRoomInclusiveCost != null) &&
			(perRoomInclusiveCost.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.perRoomInclusiveCost = null;
		}

		tourismNewNumberOFEmploymentCacheModel.perRoomExclusiveCost =
			getPerRoomExclusiveCost();

		String perRoomExclusiveCost =
			tourismNewNumberOFEmploymentCacheModel.perRoomExclusiveCost;

		if ((perRoomExclusiveCost != null) &&
			(perRoomExclusiveCost.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.perRoomExclusiveCost = null;
		}

		tourismNewNumberOFEmploymentCacheModel.staffPermanentLocalMale =
			getStaffPermanentLocalMale();

		String staffPermanentLocalMale =
			tourismNewNumberOFEmploymentCacheModel.staffPermanentLocalMale;

		if ((staffPermanentLocalMale != null) &&
			(staffPermanentLocalMale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.staffPermanentLocalMale =
				null;
		}

		tourismNewNumberOFEmploymentCacheModel.staffPermanentLocalFemale =
			getStaffPermanentLocalFemale();

		String staffPermanentLocalFemale =
			tourismNewNumberOFEmploymentCacheModel.staffPermanentLocalFemale;

		if ((staffPermanentLocalFemale != null) &&
			(staffPermanentLocalFemale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.staffPermanentLocalFemale =
				null;
		}

		tourismNewNumberOFEmploymentCacheModel.staffPermanentForeignMale =
			getStaffPermanentForeignMale();

		String staffPermanentForeignMale =
			tourismNewNumberOFEmploymentCacheModel.staffPermanentForeignMale;

		if ((staffPermanentForeignMale != null) &&
			(staffPermanentForeignMale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.staffPermanentForeignMale =
				null;
		}

		tourismNewNumberOFEmploymentCacheModel.staffPermanentForeignFemale =
			getStaffPermanentForeignFemale();

		String staffPermanentForeignFemale =
			tourismNewNumberOFEmploymentCacheModel.staffPermanentForeignFemale;

		if ((staffPermanentForeignFemale != null) &&
			(staffPermanentForeignFemale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.staffPermanentForeignFemale =
				null;
		}

		tourismNewNumberOFEmploymentCacheModel.staffTemporaryLocalMale =
			getStaffTemporaryLocalMale();

		String staffTemporaryLocalMale =
			tourismNewNumberOFEmploymentCacheModel.staffTemporaryLocalMale;

		if ((staffTemporaryLocalMale != null) &&
			(staffTemporaryLocalMale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.staffTemporaryLocalMale =
				null;
		}

		tourismNewNumberOFEmploymentCacheModel.staffTemporaryLocalFemale =
			getStaffTemporaryLocalFemale();

		String staffTemporaryLocalFemale =
			tourismNewNumberOFEmploymentCacheModel.staffTemporaryLocalFemale;

		if ((staffTemporaryLocalFemale != null) &&
			(staffTemporaryLocalFemale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.staffTemporaryLocalFemale =
				null;
		}

		tourismNewNumberOFEmploymentCacheModel.staffTemporaryForeignMale =
			getStaffTemporaryForeignMale();

		String staffTemporaryForeignMale =
			tourismNewNumberOFEmploymentCacheModel.staffTemporaryForeignMale;

		if ((staffTemporaryForeignMale != null) &&
			(staffTemporaryForeignMale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.staffTemporaryForeignMale =
				null;
		}

		tourismNewNumberOFEmploymentCacheModel.staffTemporaryForeignFemale =
			getStaffTemporaryForeignFemale();

		String staffTemporaryForeignFemale =
			tourismNewNumberOFEmploymentCacheModel.staffTemporaryForeignFemale;

		if ((staffTemporaryForeignFemale != null) &&
			(staffTemporaryForeignFemale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.staffTemporaryForeignFemale =
				null;
		}

		tourismNewNumberOFEmploymentCacheModel.staffTotalLocalMale =
			getStaffTotalLocalMale();

		String staffTotalLocalMale =
			tourismNewNumberOFEmploymentCacheModel.staffTotalLocalMale;

		if ((staffTotalLocalMale != null) &&
			(staffTotalLocalMale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.staffTotalLocalMale = null;
		}

		tourismNewNumberOFEmploymentCacheModel.staffTotalLocalFemale =
			getStaffTotalLocalFemale();

		String staffTotalLocalFemale =
			tourismNewNumberOFEmploymentCacheModel.staffTotalLocalFemale;

		if ((staffTotalLocalFemale != null) &&
			(staffTotalLocalFemale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.staffTotalLocalFemale = null;
		}

		tourismNewNumberOFEmploymentCacheModel.staffTotalForeignMale =
			getStaffTotalForeignMale();

		String staffTotalForeignMale =
			tourismNewNumberOFEmploymentCacheModel.staffTotalForeignMale;

		if ((staffTotalForeignMale != null) &&
			(staffTotalForeignMale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.staffTotalForeignMale = null;
		}

		tourismNewNumberOFEmploymentCacheModel.staffTotalForeignFemale =
			getStaffTotalForeignFemale();

		String staffTotalForeignFemale =
			tourismNewNumberOFEmploymentCacheModel.staffTotalForeignFemale;

		if ((staffTotalForeignFemale != null) &&
			(staffTotalForeignFemale.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.staffTotalForeignFemale =
				null;
		}

		tourismNewNumberOFEmploymentCacheModel.salariesAndWages =
			getSalariesAndWages();

		String salariesAndWages =
			tourismNewNumberOFEmploymentCacheModel.salariesAndWages;

		if ((salariesAndWages != null) && (salariesAndWages.length() == 0)) {
			tourismNewNumberOFEmploymentCacheModel.salariesAndWages = null;
		}

		tourismNewNumberOFEmploymentCacheModel.expectedAnnualFunds =
			getExpectedAnnualFunds();

		String expectedAnnualFunds =
			tourismNewNumberOFEmploymentCacheModel.expectedAnnualFunds;

		if ((expectedAnnualFunds != null) &&
			(expectedAnnualFunds.length() == 0)) {

			tourismNewNumberOFEmploymentCacheModel.expectedAnnualFunds = null;
		}

		tourismNewNumberOFEmploymentCacheModel.tourismApplicationId =
			getTourismApplicationId();

		return tourismNewNumberOFEmploymentCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<TourismNewNumberOFEmployment, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<TourismNewNumberOFEmployment, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismNewNumberOFEmployment, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(TourismNewNumberOFEmployment)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, TourismNewNumberOFEmployment>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						TourismNewNumberOFEmployment.class, ModelWrapper.class);

	}

	private long _tourismNewNumberOFEmploymentId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _permanentLocalMale;
	private String _permanentLocalFemale;
	private String _permanentForeignMale;
	private String _permanentForeignFemale;
	private String _temporaryLocalMale;
	private String _temporaryLocalFemale;
	private String _temporaryForeignMale;
	private String _temporaryForeignFemale;
	private String _totalLocalMale;
	private String _totalLocalFemale;
	private String _totalForeignMale;
	private String _totalForeignFemale;
	private String _salaryWages;
	private String _estimatedExpenditure;
	private String _otherExpenditure;
	private String _perRoomInclusiveCost;
	private String _perRoomExclusiveCost;
	private String _staffPermanentLocalMale;
	private String _staffPermanentLocalFemale;
	private String _staffPermanentForeignMale;
	private String _staffPermanentForeignFemale;
	private String _staffTemporaryLocalMale;
	private String _staffTemporaryLocalFemale;
	private String _staffTemporaryForeignMale;
	private String _staffTemporaryForeignFemale;
	private String _staffTotalLocalMale;
	private String _staffTotalLocalFemale;
	private String _staffTotalForeignMale;
	private String _staffTotalForeignFemale;
	private String _salariesAndWages;
	private String _expectedAnnualFunds;
	private long _tourismApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<TourismNewNumberOFEmployment, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((TourismNewNumberOFEmployment)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"tourismNewNumberOFEmploymentId", _tourismNewNumberOFEmploymentId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("permanentLocalMale", _permanentLocalMale);
		_columnOriginalValues.put(
			"permanentLocalFemale", _permanentLocalFemale);
		_columnOriginalValues.put(
			"permanentForeignMale", _permanentForeignMale);
		_columnOriginalValues.put(
			"permanentForeignFemale", _permanentForeignFemale);
		_columnOriginalValues.put("temporaryLocalMale", _temporaryLocalMale);
		_columnOriginalValues.put(
			"temporaryLocalFemale", _temporaryLocalFemale);
		_columnOriginalValues.put(
			"temporaryForeignMale", _temporaryForeignMale);
		_columnOriginalValues.put(
			"temporaryForeignFemale", _temporaryForeignFemale);
		_columnOriginalValues.put("totalLocalMale", _totalLocalMale);
		_columnOriginalValues.put("totalLocalFemale", _totalLocalFemale);
		_columnOriginalValues.put("totalForeignMale", _totalForeignMale);
		_columnOriginalValues.put("totalForeignFemale", _totalForeignFemale);
		_columnOriginalValues.put("salaryWages", _salaryWages);
		_columnOriginalValues.put(
			"estimatedExpenditure", _estimatedExpenditure);
		_columnOriginalValues.put("otherExpenditure", _otherExpenditure);
		_columnOriginalValues.put(
			"perRoomInclusiveCost", _perRoomInclusiveCost);
		_columnOriginalValues.put(
			"perRoomExclusiveCost", _perRoomExclusiveCost);
		_columnOriginalValues.put(
			"staffPermanentLocalMale", _staffPermanentLocalMale);
		_columnOriginalValues.put(
			"staffPermanentLocalFemale", _staffPermanentLocalFemale);
		_columnOriginalValues.put(
			"staffPermanentForeignMale", _staffPermanentForeignMale);
		_columnOriginalValues.put(
			"staffPermanentForeignFemale", _staffPermanentForeignFemale);
		_columnOriginalValues.put(
			"staffTemporaryLocalMale", _staffTemporaryLocalMale);
		_columnOriginalValues.put(
			"staffTemporaryLocalFemale", _staffTemporaryLocalFemale);
		_columnOriginalValues.put(
			"staffTemporaryForeignMale", _staffTemporaryForeignMale);
		_columnOriginalValues.put(
			"staffTemporaryForeignFemale", _staffTemporaryForeignFemale);
		_columnOriginalValues.put("staffTotalLocalMale", _staffTotalLocalMale);
		_columnOriginalValues.put(
			"staffTotalLocalFemale", _staffTotalLocalFemale);
		_columnOriginalValues.put(
			"staffTotalForeignMale", _staffTotalForeignMale);
		_columnOriginalValues.put(
			"staffTotalForeignFemale", _staffTotalForeignFemale);
		_columnOriginalValues.put("salariesAndWages", _salariesAndWages);
		_columnOriginalValues.put("expectedAnnualFunds", _expectedAnnualFunds);
		_columnOriginalValues.put(
			"tourismApplicationId", _tourismApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("tourismNewNumberOFEmploymentId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("permanentLocalMale", 128L);

		columnBitmasks.put("permanentLocalFemale", 256L);

		columnBitmasks.put("permanentForeignMale", 512L);

		columnBitmasks.put("permanentForeignFemale", 1024L);

		columnBitmasks.put("temporaryLocalMale", 2048L);

		columnBitmasks.put("temporaryLocalFemale", 4096L);

		columnBitmasks.put("temporaryForeignMale", 8192L);

		columnBitmasks.put("temporaryForeignFemale", 16384L);

		columnBitmasks.put("totalLocalMale", 32768L);

		columnBitmasks.put("totalLocalFemale", 65536L);

		columnBitmasks.put("totalForeignMale", 131072L);

		columnBitmasks.put("totalForeignFemale", 262144L);

		columnBitmasks.put("salaryWages", 524288L);

		columnBitmasks.put("estimatedExpenditure", 1048576L);

		columnBitmasks.put("otherExpenditure", 2097152L);

		columnBitmasks.put("perRoomInclusiveCost", 4194304L);

		columnBitmasks.put("perRoomExclusiveCost", 8388608L);

		columnBitmasks.put("staffPermanentLocalMale", 16777216L);

		columnBitmasks.put("staffPermanentLocalFemale", 33554432L);

		columnBitmasks.put("staffPermanentForeignMale", 67108864L);

		columnBitmasks.put("staffPermanentForeignFemale", 134217728L);

		columnBitmasks.put("staffTemporaryLocalMale", 268435456L);

		columnBitmasks.put("staffTemporaryLocalFemale", 536870912L);

		columnBitmasks.put("staffTemporaryForeignMale", 1073741824L);

		columnBitmasks.put("staffTemporaryForeignFemale", 2147483648L);

		columnBitmasks.put("staffTotalLocalMale", 4294967296L);

		columnBitmasks.put("staffTotalLocalFemale", 8589934592L);

		columnBitmasks.put("staffTotalForeignMale", 17179869184L);

		columnBitmasks.put("staffTotalForeignFemale", 34359738368L);

		columnBitmasks.put("salariesAndWages", 68719476736L);

		columnBitmasks.put("expectedAnnualFunds", 137438953472L);

		columnBitmasks.put("tourismApplicationId", 274877906944L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private TourismNewNumberOFEmployment _escapedModel;

}