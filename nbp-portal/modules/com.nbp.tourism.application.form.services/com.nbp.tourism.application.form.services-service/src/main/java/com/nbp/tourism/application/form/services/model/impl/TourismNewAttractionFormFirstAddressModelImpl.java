/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.tourism.application.form.services.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.tourism.application.form.services.model.TourismNewAttractionFormFirstAddress;
import com.nbp.tourism.application.form.services.model.TourismNewAttractionFormFirstAddressModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the TourismNewAttractionFormFirstAddress service. Represents a row in the &quot;nbp_tourism_new_attract_ffaoo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>TourismNewAttractionFormFirstAddressModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TourismNewAttractionFormFirstAddressImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TourismNewAttractionFormFirstAddressImpl
 * @generated
 */
@JSON(strict = true)
public class TourismNewAttractionFormFirstAddressModelImpl
	extends BaseModelImpl<TourismNewAttractionFormFirstAddress>
	implements TourismNewAttractionFormFirstAddressModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tourism new attraction form first address model instance should use the <code>TourismNewAttractionFormFirstAddress</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_tourism_new_attract_ffaoo";

	public static final Object[][] TABLE_COLUMNS = {
		{"tourismNewAttractionFormFAOOId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"addressType", Types.VARCHAR}, {"attractionAddress", Types.VARCHAR},
		{"attractionTelephoneNumber", Types.VARCHAR},
		{"attractionFaxNumber", Types.VARCHAR},
		{"attractionEmail", Types.VARCHAR},
		{"tourismApplicationId", Types.BIGINT},
		{"tourismNewAttractFormFirstId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("tourismNewAttractionFormFAOOId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("addressType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("attractionAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("attractionTelephoneNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("attractionFaxNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("attractionEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tourismApplicationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("tourismNewAttractFormFirstId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_tourism_new_attract_ffaoo (tourismNewAttractionFormFAOOId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,addressType VARCHAR(75) null,attractionAddress VARCHAR(500) null,attractionTelephoneNumber VARCHAR(75) null,attractionFaxNumber VARCHAR(75) null,attractionEmail VARCHAR(75) null,tourismApplicationId LONG,tourismNewAttractFormFirstId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_tourism_new_attract_ffaoo";

	public static final String ORDER_BY_JPQL =
		" ORDER BY tourismNewAttractionFormFirstAddress.tourismNewAttractionFormFAOOId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_tourism_new_attract_ffaoo.tourismNewAttractionFormFAOOId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ADDRESSTYPE_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TOURISMAPPLICATIONID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TOURISMNEWATTRACTFORMFIRSTID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TOURISMNEWATTRACTIONFORMFAOOID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public TourismNewAttractionFormFirstAddressModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _tourismNewAttractionFormFAOOId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTourismNewAttractionFormFAOOId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _tourismNewAttractionFormFAOOId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TourismNewAttractionFormFirstAddress.class;
	}

	@Override
	public String getModelClassName() {
		return TourismNewAttractionFormFirstAddress.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<TourismNewAttractionFormFirstAddress, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry
				<String, Function<TourismNewAttractionFormFirstAddress, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismNewAttractionFormFirstAddress, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(TourismNewAttractionFormFirstAddress)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<TourismNewAttractionFormFirstAddress, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<TourismNewAttractionFormFirstAddress, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(TourismNewAttractionFormFirstAddress)this,
					entry.getValue());
			}
		}
	}

	public Map<String, Function<TourismNewAttractionFormFirstAddress, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<TourismNewAttractionFormFirstAddress, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<TourismNewAttractionFormFirstAddress, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<TourismNewAttractionFormFirstAddress, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String,
						 Function
							 <TourismNewAttractionFormFirstAddress, Object>>();

			attributeGetterFunctions.put(
				"tourismNewAttractionFormFAOOId",
				TourismNewAttractionFormFirstAddress::
					getTourismNewAttractionFormFAOOId);
			attributeGetterFunctions.put(
				"groupId", TourismNewAttractionFormFirstAddress::getGroupId);
			attributeGetterFunctions.put(
				"companyId",
				TourismNewAttractionFormFirstAddress::getCompanyId);
			attributeGetterFunctions.put(
				"userId", TourismNewAttractionFormFirstAddress::getUserId);
			attributeGetterFunctions.put(
				"userName", TourismNewAttractionFormFirstAddress::getUserName);
			attributeGetterFunctions.put(
				"createDate",
				TourismNewAttractionFormFirstAddress::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate",
				TourismNewAttractionFormFirstAddress::getModifiedDate);
			attributeGetterFunctions.put(
				"addressType",
				TourismNewAttractionFormFirstAddress::getAddressType);
			attributeGetterFunctions.put(
				"attractionAddress",
				TourismNewAttractionFormFirstAddress::getAttractionAddress);
			attributeGetterFunctions.put(
				"attractionTelephoneNumber",
				TourismNewAttractionFormFirstAddress::
					getAttractionTelephoneNumber);
			attributeGetterFunctions.put(
				"attractionFaxNumber",
				TourismNewAttractionFormFirstAddress::getAttractionFaxNumber);
			attributeGetterFunctions.put(
				"attractionEmail",
				TourismNewAttractionFormFirstAddress::getAttractionEmail);
			attributeGetterFunctions.put(
				"tourismApplicationId",
				TourismNewAttractionFormFirstAddress::getTourismApplicationId);
			attributeGetterFunctions.put(
				"tourismNewAttractFormFirstId",
				TourismNewAttractionFormFirstAddress::
					getTourismNewAttractFormFirstId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<TourismNewAttractionFormFirstAddress, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<TourismNewAttractionFormFirstAddress, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String,
						 BiConsumer<TourismNewAttractionFormFirstAddress, ?>>();

			attributeSetterBiConsumers.put(
				"tourismNewAttractionFormFAOOId",
				(BiConsumer<TourismNewAttractionFormFirstAddress, Long>)
					TourismNewAttractionFormFirstAddress::
						setTourismNewAttractionFormFAOOId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<TourismNewAttractionFormFirstAddress, Long>)
					TourismNewAttractionFormFirstAddress::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<TourismNewAttractionFormFirstAddress, Long>)
					TourismNewAttractionFormFirstAddress::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<TourismNewAttractionFormFirstAddress, Long>)
					TourismNewAttractionFormFirstAddress::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<TourismNewAttractionFormFirstAddress, String>)
					TourismNewAttractionFormFirstAddress::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<TourismNewAttractionFormFirstAddress, Date>)
					TourismNewAttractionFormFirstAddress::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<TourismNewAttractionFormFirstAddress, Date>)
					TourismNewAttractionFormFirstAddress::setModifiedDate);
			attributeSetterBiConsumers.put(
				"addressType",
				(BiConsumer<TourismNewAttractionFormFirstAddress, String>)
					TourismNewAttractionFormFirstAddress::setAddressType);
			attributeSetterBiConsumers.put(
				"attractionAddress",
				(BiConsumer<TourismNewAttractionFormFirstAddress, String>)
					TourismNewAttractionFormFirstAddress::setAttractionAddress);
			attributeSetterBiConsumers.put(
				"attractionTelephoneNumber",
				(BiConsumer<TourismNewAttractionFormFirstAddress, String>)
					TourismNewAttractionFormFirstAddress::
						setAttractionTelephoneNumber);
			attributeSetterBiConsumers.put(
				"attractionFaxNumber",
				(BiConsumer<TourismNewAttractionFormFirstAddress, String>)
					TourismNewAttractionFormFirstAddress::
						setAttractionFaxNumber);
			attributeSetterBiConsumers.put(
				"attractionEmail",
				(BiConsumer<TourismNewAttractionFormFirstAddress, String>)
					TourismNewAttractionFormFirstAddress::setAttractionEmail);
			attributeSetterBiConsumers.put(
				"tourismApplicationId",
				(BiConsumer<TourismNewAttractionFormFirstAddress, Long>)
					TourismNewAttractionFormFirstAddress::
						setTourismApplicationId);
			attributeSetterBiConsumers.put(
				"tourismNewAttractFormFirstId",
				(BiConsumer<TourismNewAttractionFormFirstAddress, Long>)
					TourismNewAttractionFormFirstAddress::
						setTourismNewAttractFormFirstId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getTourismNewAttractionFormFAOOId() {
		return _tourismNewAttractionFormFAOOId;
	}

	@Override
	public void setTourismNewAttractionFormFAOOId(
		long tourismNewAttractionFormFAOOId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismNewAttractionFormFAOOId = tourismNewAttractionFormFAOOId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getAddressType() {
		if (_addressType == null) {
			return "";
		}
		else {
			return _addressType;
		}
	}

	@Override
	public void setAddressType(String addressType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_addressType = addressType;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalAddressType() {
		return getColumnOriginalValue("addressType");
	}

	@JSON
	@Override
	public String getAttractionAddress() {
		if (_attractionAddress == null) {
			return "";
		}
		else {
			return _attractionAddress;
		}
	}

	@Override
	public void setAttractionAddress(String attractionAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_attractionAddress = attractionAddress;
	}

	@JSON
	@Override
	public String getAttractionTelephoneNumber() {
		if (_attractionTelephoneNumber == null) {
			return "";
		}
		else {
			return _attractionTelephoneNumber;
		}
	}

	@Override
	public void setAttractionTelephoneNumber(String attractionTelephoneNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_attractionTelephoneNumber = attractionTelephoneNumber;
	}

	@JSON
	@Override
	public String getAttractionFaxNumber() {
		if (_attractionFaxNumber == null) {
			return "";
		}
		else {
			return _attractionFaxNumber;
		}
	}

	@Override
	public void setAttractionFaxNumber(String attractionFaxNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_attractionFaxNumber = attractionFaxNumber;
	}

	@JSON
	@Override
	public String getAttractionEmail() {
		if (_attractionEmail == null) {
			return "";
		}
		else {
			return _attractionEmail;
		}
	}

	@Override
	public void setAttractionEmail(String attractionEmail) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_attractionEmail = attractionEmail;
	}

	@JSON
	@Override
	public long getTourismApplicationId() {
		return _tourismApplicationId;
	}

	@Override
	public void setTourismApplicationId(long tourismApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismApplicationId = tourismApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalTourismApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));
	}

	@JSON
	@Override
	public long getTourismNewAttractFormFirstId() {
		return _tourismNewAttractFormFirstId;
	}

	@Override
	public void setTourismNewAttractFormFirstId(
		long tourismNewAttractFormFirstId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismNewAttractFormFirstId = tourismNewAttractFormFirstId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalTourismNewAttractFormFirstId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("tourismNewAttractFormFirstId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(),
			TourismNewAttractionFormFirstAddress.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TourismNewAttractionFormFirstAddress toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, TourismNewAttractionFormFirstAddress>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TourismNewAttractionFormFirstAddressImpl
			tourismNewAttractionFormFirstAddressImpl =
				new TourismNewAttractionFormFirstAddressImpl();

		tourismNewAttractionFormFirstAddressImpl.
			setTourismNewAttractionFormFAOOId(
				getTourismNewAttractionFormFAOOId());
		tourismNewAttractionFormFirstAddressImpl.setGroupId(getGroupId());
		tourismNewAttractionFormFirstAddressImpl.setCompanyId(getCompanyId());
		tourismNewAttractionFormFirstAddressImpl.setUserId(getUserId());
		tourismNewAttractionFormFirstAddressImpl.setUserName(getUserName());
		tourismNewAttractionFormFirstAddressImpl.setCreateDate(getCreateDate());
		tourismNewAttractionFormFirstAddressImpl.setModifiedDate(
			getModifiedDate());
		tourismNewAttractionFormFirstAddressImpl.setAddressType(
			getAddressType());
		tourismNewAttractionFormFirstAddressImpl.setAttractionAddress(
			getAttractionAddress());
		tourismNewAttractionFormFirstAddressImpl.setAttractionTelephoneNumber(
			getAttractionTelephoneNumber());
		tourismNewAttractionFormFirstAddressImpl.setAttractionFaxNumber(
			getAttractionFaxNumber());
		tourismNewAttractionFormFirstAddressImpl.setAttractionEmail(
			getAttractionEmail());
		tourismNewAttractionFormFirstAddressImpl.setTourismApplicationId(
			getTourismApplicationId());
		tourismNewAttractionFormFirstAddressImpl.
			setTourismNewAttractFormFirstId(getTourismNewAttractFormFirstId());

		tourismNewAttractionFormFirstAddressImpl.resetOriginalValues();

		return tourismNewAttractionFormFirstAddressImpl;
	}

	@Override
	public TourismNewAttractionFormFirstAddress cloneWithOriginalValues() {
		TourismNewAttractionFormFirstAddressImpl
			tourismNewAttractionFormFirstAddressImpl =
				new TourismNewAttractionFormFirstAddressImpl();

		tourismNewAttractionFormFirstAddressImpl.
			setTourismNewAttractionFormFAOOId(
				this.<Long>getColumnOriginalValue(
					"tourismNewAttractionFormFAOOId"));
		tourismNewAttractionFormFirstAddressImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		tourismNewAttractionFormFirstAddressImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		tourismNewAttractionFormFirstAddressImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		tourismNewAttractionFormFirstAddressImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		tourismNewAttractionFormFirstAddressImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		tourismNewAttractionFormFirstAddressImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		tourismNewAttractionFormFirstAddressImpl.setAddressType(
			this.<String>getColumnOriginalValue("addressType"));
		tourismNewAttractionFormFirstAddressImpl.setAttractionAddress(
			this.<String>getColumnOriginalValue("attractionAddress"));
		tourismNewAttractionFormFirstAddressImpl.setAttractionTelephoneNumber(
			this.<String>getColumnOriginalValue("attractionTelephoneNumber"));
		tourismNewAttractionFormFirstAddressImpl.setAttractionFaxNumber(
			this.<String>getColumnOriginalValue("attractionFaxNumber"));
		tourismNewAttractionFormFirstAddressImpl.setAttractionEmail(
			this.<String>getColumnOriginalValue("attractionEmail"));
		tourismNewAttractionFormFirstAddressImpl.setTourismApplicationId(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));
		tourismNewAttractionFormFirstAddressImpl.
			setTourismNewAttractFormFirstId(
				this.<Long>getColumnOriginalValue(
					"tourismNewAttractFormFirstId"));

		return tourismNewAttractionFormFirstAddressImpl;
	}

	@Override
	public int compareTo(
		TourismNewAttractionFormFirstAddress
			tourismNewAttractionFormFirstAddress) {

		long primaryKey = tourismNewAttractionFormFirstAddress.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof TourismNewAttractionFormFirstAddress)) {
			return false;
		}

		TourismNewAttractionFormFirstAddress
			tourismNewAttractionFormFirstAddress =
				(TourismNewAttractionFormFirstAddress)object;

		long primaryKey = tourismNewAttractionFormFirstAddress.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<TourismNewAttractionFormFirstAddress> toCacheModel() {
		TourismNewAttractionFormFirstAddressCacheModel
			tourismNewAttractionFormFirstAddressCacheModel =
				new TourismNewAttractionFormFirstAddressCacheModel();

		tourismNewAttractionFormFirstAddressCacheModel.
			tourismNewAttractionFormFAOOId =
				getTourismNewAttractionFormFAOOId();

		tourismNewAttractionFormFirstAddressCacheModel.groupId = getGroupId();

		tourismNewAttractionFormFirstAddressCacheModel.companyId =
			getCompanyId();

		tourismNewAttractionFormFirstAddressCacheModel.userId = getUserId();

		tourismNewAttractionFormFirstAddressCacheModel.userName = getUserName();

		String userName =
			tourismNewAttractionFormFirstAddressCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			tourismNewAttractionFormFirstAddressCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			tourismNewAttractionFormFirstAddressCacheModel.createDate =
				createDate.getTime();
		}
		else {
			tourismNewAttractionFormFirstAddressCacheModel.createDate =
				Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			tourismNewAttractionFormFirstAddressCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			tourismNewAttractionFormFirstAddressCacheModel.modifiedDate =
				Long.MIN_VALUE;
		}

		tourismNewAttractionFormFirstAddressCacheModel.addressType =
			getAddressType();

		String addressType =
			tourismNewAttractionFormFirstAddressCacheModel.addressType;

		if ((addressType != null) && (addressType.length() == 0)) {
			tourismNewAttractionFormFirstAddressCacheModel.addressType = null;
		}

		tourismNewAttractionFormFirstAddressCacheModel.attractionAddress =
			getAttractionAddress();

		String attractionAddress =
			tourismNewAttractionFormFirstAddressCacheModel.attractionAddress;

		if ((attractionAddress != null) && (attractionAddress.length() == 0)) {
			tourismNewAttractionFormFirstAddressCacheModel.attractionAddress =
				null;
		}

		tourismNewAttractionFormFirstAddressCacheModel.
			attractionTelephoneNumber = getAttractionTelephoneNumber();

		String attractionTelephoneNumber =
			tourismNewAttractionFormFirstAddressCacheModel.
				attractionTelephoneNumber;

		if ((attractionTelephoneNumber != null) &&
			(attractionTelephoneNumber.length() == 0)) {

			tourismNewAttractionFormFirstAddressCacheModel.
				attractionTelephoneNumber = null;
		}

		tourismNewAttractionFormFirstAddressCacheModel.attractionFaxNumber =
			getAttractionFaxNumber();

		String attractionFaxNumber =
			tourismNewAttractionFormFirstAddressCacheModel.attractionFaxNumber;

		if ((attractionFaxNumber != null) &&
			(attractionFaxNumber.length() == 0)) {

			tourismNewAttractionFormFirstAddressCacheModel.attractionFaxNumber =
				null;
		}

		tourismNewAttractionFormFirstAddressCacheModel.attractionEmail =
			getAttractionEmail();

		String attractionEmail =
			tourismNewAttractionFormFirstAddressCacheModel.attractionEmail;

		if ((attractionEmail != null) && (attractionEmail.length() == 0)) {
			tourismNewAttractionFormFirstAddressCacheModel.attractionEmail =
				null;
		}

		tourismNewAttractionFormFirstAddressCacheModel.tourismApplicationId =
			getTourismApplicationId();

		tourismNewAttractionFormFirstAddressCacheModel.
			tourismNewAttractFormFirstId = getTourismNewAttractFormFirstId();

		return tourismNewAttractionFormFirstAddressCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<TourismNewAttractionFormFirstAddress, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry
				<String, Function<TourismNewAttractionFormFirstAddress, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismNewAttractionFormFirstAddress, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(TourismNewAttractionFormFirstAddress)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, TourismNewAttractionFormFirstAddress>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						TourismNewAttractionFormFirstAddress.class,
						ModelWrapper.class);

	}

	private long _tourismNewAttractionFormFAOOId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _addressType;
	private String _attractionAddress;
	private String _attractionTelephoneNumber;
	private String _attractionFaxNumber;
	private String _attractionEmail;
	private long _tourismApplicationId;
	private long _tourismNewAttractFormFirstId;

	public <T> T getColumnValue(String columnName) {
		Function<TourismNewAttractionFormFirstAddress, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((TourismNewAttractionFormFirstAddress)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"tourismNewAttractionFormFAOOId", _tourismNewAttractionFormFAOOId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("addressType", _addressType);
		_columnOriginalValues.put("attractionAddress", _attractionAddress);
		_columnOriginalValues.put(
			"attractionTelephoneNumber", _attractionTelephoneNumber);
		_columnOriginalValues.put("attractionFaxNumber", _attractionFaxNumber);
		_columnOriginalValues.put("attractionEmail", _attractionEmail);
		_columnOriginalValues.put(
			"tourismApplicationId", _tourismApplicationId);
		_columnOriginalValues.put(
			"tourismNewAttractFormFirstId", _tourismNewAttractFormFirstId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("tourismNewAttractionFormFAOOId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("addressType", 128L);

		columnBitmasks.put("attractionAddress", 256L);

		columnBitmasks.put("attractionTelephoneNumber", 512L);

		columnBitmasks.put("attractionFaxNumber", 1024L);

		columnBitmasks.put("attractionEmail", 2048L);

		columnBitmasks.put("tourismApplicationId", 4096L);

		columnBitmasks.put("tourismNewAttractFormFirstId", 8192L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private TourismNewAttractionFormFirstAddress _escapedModel;

}