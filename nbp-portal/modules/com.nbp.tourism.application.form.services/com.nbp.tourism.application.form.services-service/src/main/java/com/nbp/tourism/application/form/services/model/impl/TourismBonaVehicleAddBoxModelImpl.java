/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.nbp.tourism.application.form.services.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.tourism.application.form.services.model.TourismBonaVehicleAddBox;
import com.nbp.tourism.application.form.services.model.TourismBonaVehicleAddBoxModel;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the TourismBonaVehicleAddBox service. Represents a row in the &quot;nbp_tourism_bona_vehicle_box&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>TourismBonaVehicleAddBoxModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TourismBonaVehicleAddBoxImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TourismBonaVehicleAddBoxImpl
 * @generated
 */
@JSON(strict = true)
public class TourismBonaVehicleAddBoxModelImpl
	extends BaseModelImpl<TourismBonaVehicleAddBox>
	implements TourismBonaVehicleAddBoxModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tourism bona vehicle add box model instance should use the <code>TourismBonaVehicleAddBox</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_tourism_bona_vehicle_box";

	public static final Object[][] TABLE_COLUMNS = {
		{"tourismBonaVehBoxId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"bonaMake", Types.VARCHAR},
		{"bonaYear", Types.VARCHAR}, {"bonaModel", Types.VARCHAR},
		{"tourismApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("tourismBonaVehBoxId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("bonaMake", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaYear", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bonaModel", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tourismApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_tourism_bona_vehicle_box (tourismBonaVehBoxId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,bonaMake VARCHAR(75) null,bonaYear VARCHAR(75) null,bonaModel VARCHAR(75) null,tourismApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_tourism_bona_vehicle_box";

	public static final String ORDER_BY_JPQL =
		" ORDER BY tourismBonaVehicleAddBox.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_tourism_bona_vehicle_box.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TOURISMAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public TourismBonaVehicleAddBoxModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _tourismBonaVehBoxId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTourismBonaVehBoxId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _tourismBonaVehBoxId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TourismBonaVehicleAddBox.class;
	}

	@Override
	public String getModelClassName() {
		return TourismBonaVehicleAddBox.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<TourismBonaVehicleAddBox, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<TourismBonaVehicleAddBox, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismBonaVehicleAddBox, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((TourismBonaVehicleAddBox)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<TourismBonaVehicleAddBox, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<TourismBonaVehicleAddBox, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(TourismBonaVehicleAddBox)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<TourismBonaVehicleAddBox, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<TourismBonaVehicleAddBox, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, TourismBonaVehicleAddBox>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			TourismBonaVehicleAddBox.class.getClassLoader(),
			TourismBonaVehicleAddBox.class, ModelWrapper.class);

		try {
			Constructor<TourismBonaVehicleAddBox> constructor =
				(Constructor<TourismBonaVehicleAddBox>)
					proxyClass.getConstructor(InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<TourismBonaVehicleAddBox, Object>>
		_attributeGetterFunctions;
	private static final Map
		<String, BiConsumer<TourismBonaVehicleAddBox, Object>>
			_attributeSetterBiConsumers;

	static {
		Map<String, Function<TourismBonaVehicleAddBox, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<TourismBonaVehicleAddBox, Object>>();
		Map<String, BiConsumer<TourismBonaVehicleAddBox, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap
					<String, BiConsumer<TourismBonaVehicleAddBox, ?>>();

		attributeGetterFunctions.put(
			"tourismBonaVehBoxId",
			TourismBonaVehicleAddBox::getTourismBonaVehBoxId);
		attributeSetterBiConsumers.put(
			"tourismBonaVehBoxId",
			(BiConsumer<TourismBonaVehicleAddBox, Long>)
				TourismBonaVehicleAddBox::setTourismBonaVehBoxId);
		attributeGetterFunctions.put(
			"groupId", TourismBonaVehicleAddBox::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<TourismBonaVehicleAddBox, Long>)
				TourismBonaVehicleAddBox::setGroupId);
		attributeGetterFunctions.put(
			"companyId", TourismBonaVehicleAddBox::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<TourismBonaVehicleAddBox, Long>)
				TourismBonaVehicleAddBox::setCompanyId);
		attributeGetterFunctions.put(
			"userId", TourismBonaVehicleAddBox::getUserId);
		attributeSetterBiConsumers.put(
			"userId",
			(BiConsumer<TourismBonaVehicleAddBox, Long>)
				TourismBonaVehicleAddBox::setUserId);
		attributeGetterFunctions.put(
			"userName", TourismBonaVehicleAddBox::getUserName);
		attributeSetterBiConsumers.put(
			"userName",
			(BiConsumer<TourismBonaVehicleAddBox, String>)
				TourismBonaVehicleAddBox::setUserName);
		attributeGetterFunctions.put(
			"createDate", TourismBonaVehicleAddBox::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<TourismBonaVehicleAddBox, Date>)
				TourismBonaVehicleAddBox::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", TourismBonaVehicleAddBox::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<TourismBonaVehicleAddBox, Date>)
				TourismBonaVehicleAddBox::setModifiedDate);
		attributeGetterFunctions.put(
			"bonaMake", TourismBonaVehicleAddBox::getBonaMake);
		attributeSetterBiConsumers.put(
			"bonaMake",
			(BiConsumer<TourismBonaVehicleAddBox, String>)
				TourismBonaVehicleAddBox::setBonaMake);
		attributeGetterFunctions.put(
			"bonaYear", TourismBonaVehicleAddBox::getBonaYear);
		attributeSetterBiConsumers.put(
			"bonaYear",
			(BiConsumer<TourismBonaVehicleAddBox, String>)
				TourismBonaVehicleAddBox::setBonaYear);
		attributeGetterFunctions.put(
			"bonaModel", TourismBonaVehicleAddBox::getBonaModel);
		attributeSetterBiConsumers.put(
			"bonaModel",
			(BiConsumer<TourismBonaVehicleAddBox, String>)
				TourismBonaVehicleAddBox::setBonaModel);
		attributeGetterFunctions.put(
			"tourismApplicationId",
			TourismBonaVehicleAddBox::getTourismApplicationId);
		attributeSetterBiConsumers.put(
			"tourismApplicationId",
			(BiConsumer<TourismBonaVehicleAddBox, Long>)
				TourismBonaVehicleAddBox::setTourismApplicationId);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getTourismBonaVehBoxId() {
		return _tourismBonaVehBoxId;
	}

	@Override
	public void setTourismBonaVehBoxId(long tourismBonaVehBoxId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismBonaVehBoxId = tourismBonaVehBoxId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getBonaMake() {
		if (_bonaMake == null) {
			return "";
		}
		else {
			return _bonaMake;
		}
	}

	@Override
	public void setBonaMake(String bonaMake) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaMake = bonaMake;
	}

	@JSON
	@Override
	public String getBonaYear() {
		if (_bonaYear == null) {
			return "";
		}
		else {
			return _bonaYear;
		}
	}

	@Override
	public void setBonaYear(String bonaYear) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaYear = bonaYear;
	}

	@JSON
	@Override
	public String getBonaModel() {
		if (_bonaModel == null) {
			return "";
		}
		else {
			return _bonaModel;
		}
	}

	@Override
	public void setBonaModel(String bonaModel) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bonaModel = bonaModel;
	}

	@JSON
	@Override
	public long getTourismApplicationId() {
		return _tourismApplicationId;
	}

	@Override
	public void setTourismApplicationId(long tourismApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tourismApplicationId = tourismApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalTourismApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), TourismBonaVehicleAddBox.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TourismBonaVehicleAddBox toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, TourismBonaVehicleAddBox>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TourismBonaVehicleAddBoxImpl tourismBonaVehicleAddBoxImpl =
			new TourismBonaVehicleAddBoxImpl();

		tourismBonaVehicleAddBoxImpl.setTourismBonaVehBoxId(
			getTourismBonaVehBoxId());
		tourismBonaVehicleAddBoxImpl.setGroupId(getGroupId());
		tourismBonaVehicleAddBoxImpl.setCompanyId(getCompanyId());
		tourismBonaVehicleAddBoxImpl.setUserId(getUserId());
		tourismBonaVehicleAddBoxImpl.setUserName(getUserName());
		tourismBonaVehicleAddBoxImpl.setCreateDate(getCreateDate());
		tourismBonaVehicleAddBoxImpl.setModifiedDate(getModifiedDate());
		tourismBonaVehicleAddBoxImpl.setBonaMake(getBonaMake());
		tourismBonaVehicleAddBoxImpl.setBonaYear(getBonaYear());
		tourismBonaVehicleAddBoxImpl.setBonaModel(getBonaModel());
		tourismBonaVehicleAddBoxImpl.setTourismApplicationId(
			getTourismApplicationId());

		tourismBonaVehicleAddBoxImpl.resetOriginalValues();

		return tourismBonaVehicleAddBoxImpl;
	}

	@Override
	public TourismBonaVehicleAddBox cloneWithOriginalValues() {
		TourismBonaVehicleAddBoxImpl tourismBonaVehicleAddBoxImpl =
			new TourismBonaVehicleAddBoxImpl();

		tourismBonaVehicleAddBoxImpl.setTourismBonaVehBoxId(
			this.<Long>getColumnOriginalValue("tourismBonaVehBoxId"));
		tourismBonaVehicleAddBoxImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		tourismBonaVehicleAddBoxImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		tourismBonaVehicleAddBoxImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		tourismBonaVehicleAddBoxImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		tourismBonaVehicleAddBoxImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		tourismBonaVehicleAddBoxImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		tourismBonaVehicleAddBoxImpl.setBonaMake(
			this.<String>getColumnOriginalValue("bonaMake"));
		tourismBonaVehicleAddBoxImpl.setBonaYear(
			this.<String>getColumnOriginalValue("bonaYear"));
		tourismBonaVehicleAddBoxImpl.setBonaModel(
			this.<String>getColumnOriginalValue("bonaModel"));
		tourismBonaVehicleAddBoxImpl.setTourismApplicationId(
			this.<Long>getColumnOriginalValue("tourismApplicationId"));

		return tourismBonaVehicleAddBoxImpl;
	}

	@Override
	public int compareTo(TourismBonaVehicleAddBox tourismBonaVehicleAddBox) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), tourismBonaVehicleAddBox.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof TourismBonaVehicleAddBox)) {
			return false;
		}

		TourismBonaVehicleAddBox tourismBonaVehicleAddBox =
			(TourismBonaVehicleAddBox)object;

		long primaryKey = tourismBonaVehicleAddBox.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<TourismBonaVehicleAddBox> toCacheModel() {
		TourismBonaVehicleAddBoxCacheModel tourismBonaVehicleAddBoxCacheModel =
			new TourismBonaVehicleAddBoxCacheModel();

		tourismBonaVehicleAddBoxCacheModel.tourismBonaVehBoxId =
			getTourismBonaVehBoxId();

		tourismBonaVehicleAddBoxCacheModel.groupId = getGroupId();

		tourismBonaVehicleAddBoxCacheModel.companyId = getCompanyId();

		tourismBonaVehicleAddBoxCacheModel.userId = getUserId();

		tourismBonaVehicleAddBoxCacheModel.userName = getUserName();

		String userName = tourismBonaVehicleAddBoxCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			tourismBonaVehicleAddBoxCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			tourismBonaVehicleAddBoxCacheModel.createDate =
				createDate.getTime();
		}
		else {
			tourismBonaVehicleAddBoxCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			tourismBonaVehicleAddBoxCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			tourismBonaVehicleAddBoxCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		tourismBonaVehicleAddBoxCacheModel.bonaMake = getBonaMake();

		String bonaMake = tourismBonaVehicleAddBoxCacheModel.bonaMake;

		if ((bonaMake != null) && (bonaMake.length() == 0)) {
			tourismBonaVehicleAddBoxCacheModel.bonaMake = null;
		}

		tourismBonaVehicleAddBoxCacheModel.bonaYear = getBonaYear();

		String bonaYear = tourismBonaVehicleAddBoxCacheModel.bonaYear;

		if ((bonaYear != null) && (bonaYear.length() == 0)) {
			tourismBonaVehicleAddBoxCacheModel.bonaYear = null;
		}

		tourismBonaVehicleAddBoxCacheModel.bonaModel = getBonaModel();

		String bonaModel = tourismBonaVehicleAddBoxCacheModel.bonaModel;

		if ((bonaModel != null) && (bonaModel.length() == 0)) {
			tourismBonaVehicleAddBoxCacheModel.bonaModel = null;
		}

		tourismBonaVehicleAddBoxCacheModel.tourismApplicationId =
			getTourismApplicationId();

		return tourismBonaVehicleAddBoxCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<TourismBonaVehicleAddBox, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<TourismBonaVehicleAddBox, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<TourismBonaVehicleAddBox, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(TourismBonaVehicleAddBox)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}


	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, TourismBonaVehicleAddBox>
				_escapedModelProxyProviderFunction =
					_getProxyProviderFunction();

	}

	private long _tourismBonaVehBoxId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _bonaMake;
	private String _bonaYear;
	private String _bonaModel;
	private long _tourismApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<TourismBonaVehicleAddBox, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((TourismBonaVehicleAddBox)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("tourismBonaVehBoxId", _tourismBonaVehBoxId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("bonaMake", _bonaMake);
		_columnOriginalValues.put("bonaYear", _bonaYear);
		_columnOriginalValues.put("bonaModel", _bonaModel);
		_columnOriginalValues.put(
			"tourismApplicationId", _tourismApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("tourismBonaVehBoxId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("bonaMake", 128L);

		columnBitmasks.put("bonaYear", 256L);

		columnBitmasks.put("bonaModel", 512L);

		columnBitmasks.put("tourismApplicationId", 1024L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private TourismBonaVehicleAddBox _escapedModel;

}