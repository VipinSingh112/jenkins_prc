/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.ncra.stages.services.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the CertificateOfVerification service. Represents a row in the &quot;nbp_certificate_of_verifi&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.nbp.ncra.stages.services.model.impl.CertificateOfVerificationModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.nbp.ncra.stages.services.model.impl.CertificateOfVerificationImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CertificateOfVerification
 * @generated
 */
@ProviderType
public interface CertificateOfVerificationModel
	extends BaseModel<CertificateOfVerification>, GroupedModel, ShardedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a certificate of verification model instance should use the {@link CertificateOfVerification} interface instead.
	 */

	/**
	 * Returns the primary key of this certificate of verification.
	 *
	 * @return the primary key of this certificate of verification
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this certificate of verification.
	 *
	 * @param primaryKey the primary key of this certificate of verification
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the certificate of verification ID of this certificate of verification.
	 *
	 * @return the certificate of verification ID of this certificate of verification
	 */
	public long getCertificateOfVerificationId();

	/**
	 * Sets the certificate of verification ID of this certificate of verification.
	 *
	 * @param certificateOfVerificationId the certificate of verification ID of this certificate of verification
	 */
	public void setCertificateOfVerificationId(
		long certificateOfVerificationId);

	/**
	 * Returns the group ID of this certificate of verification.
	 *
	 * @return the group ID of this certificate of verification
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this certificate of verification.
	 *
	 * @param groupId the group ID of this certificate of verification
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this certificate of verification.
	 *
	 * @return the company ID of this certificate of verification
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this certificate of verification.
	 *
	 * @param companyId the company ID of this certificate of verification
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this certificate of verification.
	 *
	 * @return the user ID of this certificate of verification
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this certificate of verification.
	 *
	 * @param userId the user ID of this certificate of verification
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this certificate of verification.
	 *
	 * @return the user uuid of this certificate of verification
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this certificate of verification.
	 *
	 * @param userUuid the user uuid of this certificate of verification
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this certificate of verification.
	 *
	 * @return the user name of this certificate of verification
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this certificate of verification.
	 *
	 * @param userName the user name of this certificate of verification
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this certificate of verification.
	 *
	 * @return the create date of this certificate of verification
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this certificate of verification.
	 *
	 * @param createDate the create date of this certificate of verification
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this certificate of verification.
	 *
	 * @return the modified date of this certificate of verification
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this certificate of verification.
	 *
	 * @param modifiedDate the modified date of this certificate of verification
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the name of applicant of this certificate of verification.
	 *
	 * @return the name of applicant of this certificate of verification
	 */
	@AutoEscape
	public String getNameOfApplicant();

	/**
	 * Sets the name of applicant of this certificate of verification.
	 *
	 * @param nameOfApplicant the name of applicant of this certificate of verification
	 */
	public void setNameOfApplicant(String nameOfApplicant);

	/**
	 * Returns the product name of this certificate of verification.
	 *
	 * @return the product name of this certificate of verification
	 */
	@AutoEscape
	public String getProductName();

	/**
	 * Sets the product name of this certificate of verification.
	 *
	 * @param productName the product name of this certificate of verification
	 */
	public void setProductName(String productName);

	/**
	 * Returns the date certificate issued of this certificate of verification.
	 *
	 * @return the date certificate issued of this certificate of verification
	 */
	public Date getDateCertificateIssued();

	/**
	 * Sets the date certificate issued of this certificate of verification.
	 *
	 * @param dateCertificateIssued the date certificate issued of this certificate of verification
	 */
	public void setDateCertificateIssued(Date dateCertificateIssued);

	/**
	 * Returns the date of expiration of this certificate of verification.
	 *
	 * @return the date of expiration of this certificate of verification
	 */
	public Date getDateOfExpiration();

	/**
	 * Sets the date of expiration of this certificate of verification.
	 *
	 * @param dateOfExpiration the date of expiration of this certificate of verification
	 */
	public void setDateOfExpiration(Date dateOfExpiration);

	/**
	 * Returns the certificate number of this certificate of verification.
	 *
	 * @return the certificate number of this certificate of verification
	 */
	@AutoEscape
	public String getCertificateNumber();

	/**
	 * Sets the certificate number of this certificate of verification.
	 *
	 * @param certificateNumber the certificate number of this certificate of verification
	 */
	public void setCertificateNumber(String certificateNumber);

	/**
	 * Returns the case ID of this certificate of verification.
	 *
	 * @return the case ID of this certificate of verification
	 */
	@AutoEscape
	public String getCaseId();

	/**
	 * Sets the case ID of this certificate of verification.
	 *
	 * @param caseId the case ID of this certificate of verification
	 */
	public void setCaseId(String caseId);

	/**
	 * Returns the document file entry ID of this certificate of verification.
	 *
	 * @return the document file entry ID of this certificate of verification
	 */
	public long getDocumentFileEntryId();

	/**
	 * Sets the document file entry ID of this certificate of verification.
	 *
	 * @param documentFileEntryId the document file entry ID of this certificate of verification
	 */
	public void setDocumentFileEntryId(long documentFileEntryId);

	@Override
	public CertificateOfVerification cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}