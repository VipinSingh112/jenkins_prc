/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.nbp.farm.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.farm.application.form.service.model.FarmerStakeholderInfo;
import com.nbp.farm.application.form.service.model.FarmerStakeholderInfoModel;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the FarmerStakeholderInfo service. Represents a row in the &quot;farmer_Stakeholder_info&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>FarmerStakeholderInfoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FarmerStakeholderInfoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see FarmerStakeholderInfoImpl
 * @generated
 */
@JSON(strict = true)
public class FarmerStakeholderInfoModelImpl
	extends BaseModelImpl<FarmerStakeholderInfo>
	implements FarmerStakeholderInfoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a farmer stakeholder info model instance should use the <code>FarmerStakeholderInfo</code> interface instead.
	 */
	public static final String TABLE_NAME = "farmer_Stakeholder_info";

	public static final Object[][] TABLE_COLUMNS = {
		{"farmerStakeholderInfoId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"companyName", Types.VARCHAR},
		{"firstName", Types.VARCHAR}, {"middleName", Types.VARCHAR},
		{"lastName", Types.VARCHAR}, {"alias_", Types.VARCHAR},
		{"residentialStreetName", Types.VARCHAR},
		{"residentialDistrict", Types.VARCHAR},
		{"residentialPostOffice", Types.VARCHAR},
		{"residentialParish", Types.VARCHAR},
		{"residentialtelephoneNumber", Types.VARCHAR},
		{"businessStreetName", Types.VARCHAR},
		{"businessDistrict", Types.VARCHAR},
		{"businessPostOffice", Types.VARCHAR},
		{"businessParish", Types.VARCHAR},
		{"businessTelephoneNumber", Types.VARCHAR},
		{"identificationType", Types.VARCHAR},
		{"identificationNumber", Types.VARCHAR}, {"gender", Types.VARCHAR},
		{"dateOfBirth", Types.TIMESTAMP},
		{"taxpayerRegistrationNumber", Types.VARCHAR},
		{"cellPhone", Types.VARCHAR}, {"fax", Types.VARCHAR},
		{"emailAddress", Types.VARCHAR}, {"farmerApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("farmerStakeholderInfoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("companyName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("firstName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("middleName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("lastName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("alias_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("residentialStreetName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("residentialDistrict", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("residentialPostOffice", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("residentialParish", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("residentialtelephoneNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessStreetName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessDistrict", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessPostOffice", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessParish", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessTelephoneNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("identificationType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("identificationNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("gender", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dateOfBirth", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("taxpayerRegistrationNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cellPhone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fax", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("emailAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("farmerApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table farmer_Stakeholder_info (farmerStakeholderInfoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,companyName VARCHAR(75) null,firstName VARCHAR(75) null,middleName VARCHAR(75) null,lastName VARCHAR(75) null,alias_ VARCHAR(75) null,residentialStreetName VARCHAR(75) null,residentialDistrict VARCHAR(75) null,residentialPostOffice VARCHAR(75) null,residentialParish VARCHAR(75) null,residentialtelephoneNumber VARCHAR(75) null,businessStreetName VARCHAR(75) null,businessDistrict VARCHAR(75) null,businessPostOffice VARCHAR(75) null,businessParish VARCHAR(75) null,businessTelephoneNumber VARCHAR(75) null,identificationType VARCHAR(75) null,identificationNumber VARCHAR(75) null,gender VARCHAR(75) null,dateOfBirth DATE null,taxpayerRegistrationNumber VARCHAR(75) null,cellPhone VARCHAR(75) null,fax VARCHAR(75) null,emailAddress VARCHAR(75) null,farmerApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table farmer_Stakeholder_info";

	public static final String ORDER_BY_JPQL =
		" ORDER BY farmerStakeholderInfo.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY farmer_Stakeholder_info.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long FARMERAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public FarmerStakeholderInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _farmerStakeholderInfoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setFarmerStakeholderInfoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _farmerStakeholderInfoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return FarmerStakeholderInfo.class;
	}

	@Override
	public String getModelClassName() {
		return FarmerStakeholderInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<FarmerStakeholderInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<FarmerStakeholderInfo, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<FarmerStakeholderInfo, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((FarmerStakeholderInfo)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<FarmerStakeholderInfo, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<FarmerStakeholderInfo, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(FarmerStakeholderInfo)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<FarmerStakeholderInfo, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<FarmerStakeholderInfo, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, FarmerStakeholderInfo>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			FarmerStakeholderInfo.class.getClassLoader(),
			FarmerStakeholderInfo.class, ModelWrapper.class);

		try {
			Constructor<FarmerStakeholderInfo> constructor =
				(Constructor<FarmerStakeholderInfo>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<FarmerStakeholderInfo, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<FarmerStakeholderInfo, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<FarmerStakeholderInfo, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<FarmerStakeholderInfo, Object>>();
		Map<String, BiConsumer<FarmerStakeholderInfo, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap
					<String, BiConsumer<FarmerStakeholderInfo, ?>>();

		attributeGetterFunctions.put(
			"farmerStakeholderInfoId",
			FarmerStakeholderInfo::getFarmerStakeholderInfoId);
		attributeSetterBiConsumers.put(
			"farmerStakeholderInfoId",
			(BiConsumer<FarmerStakeholderInfo, Long>)
				FarmerStakeholderInfo::setFarmerStakeholderInfoId);
		attributeGetterFunctions.put(
			"groupId", FarmerStakeholderInfo::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<FarmerStakeholderInfo, Long>)
				FarmerStakeholderInfo::setGroupId);
		attributeGetterFunctions.put(
			"companyId", FarmerStakeholderInfo::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<FarmerStakeholderInfo, Long>)
				FarmerStakeholderInfo::setCompanyId);
		attributeGetterFunctions.put(
			"userId", FarmerStakeholderInfo::getUserId);
		attributeSetterBiConsumers.put(
			"userId",
			(BiConsumer<FarmerStakeholderInfo, Long>)
				FarmerStakeholderInfo::setUserId);
		attributeGetterFunctions.put(
			"userName", FarmerStakeholderInfo::getUserName);
		attributeSetterBiConsumers.put(
			"userName",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setUserName);
		attributeGetterFunctions.put(
			"createDate", FarmerStakeholderInfo::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<FarmerStakeholderInfo, Date>)
				FarmerStakeholderInfo::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", FarmerStakeholderInfo::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<FarmerStakeholderInfo, Date>)
				FarmerStakeholderInfo::setModifiedDate);
		attributeGetterFunctions.put(
			"companyName", FarmerStakeholderInfo::getCompanyName);
		attributeSetterBiConsumers.put(
			"companyName",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setCompanyName);
		attributeGetterFunctions.put(
			"firstName", FarmerStakeholderInfo::getFirstName);
		attributeSetterBiConsumers.put(
			"firstName",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setFirstName);
		attributeGetterFunctions.put(
			"middleName", FarmerStakeholderInfo::getMiddleName);
		attributeSetterBiConsumers.put(
			"middleName",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setMiddleName);
		attributeGetterFunctions.put(
			"lastName", FarmerStakeholderInfo::getLastName);
		attributeSetterBiConsumers.put(
			"lastName",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setLastName);
		attributeGetterFunctions.put("alias", FarmerStakeholderInfo::getAlias);
		attributeSetterBiConsumers.put(
			"alias",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setAlias);
		attributeGetterFunctions.put(
			"residentialStreetName",
			FarmerStakeholderInfo::getResidentialStreetName);
		attributeSetterBiConsumers.put(
			"residentialStreetName",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setResidentialStreetName);
		attributeGetterFunctions.put(
			"residentialDistrict",
			FarmerStakeholderInfo::getResidentialDistrict);
		attributeSetterBiConsumers.put(
			"residentialDistrict",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setResidentialDistrict);
		attributeGetterFunctions.put(
			"residentialPostOffice",
			FarmerStakeholderInfo::getResidentialPostOffice);
		attributeSetterBiConsumers.put(
			"residentialPostOffice",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setResidentialPostOffice);
		attributeGetterFunctions.put(
			"residentialParish", FarmerStakeholderInfo::getResidentialParish);
		attributeSetterBiConsumers.put(
			"residentialParish",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setResidentialParish);
		attributeGetterFunctions.put(
			"residentialtelephoneNumber",
			FarmerStakeholderInfo::getResidentialtelephoneNumber);
		attributeSetterBiConsumers.put(
			"residentialtelephoneNumber",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setResidentialtelephoneNumber);
		attributeGetterFunctions.put(
			"businessStreetName", FarmerStakeholderInfo::getBusinessStreetName);
		attributeSetterBiConsumers.put(
			"businessStreetName",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setBusinessStreetName);
		attributeGetterFunctions.put(
			"businessDistrict", FarmerStakeholderInfo::getBusinessDistrict);
		attributeSetterBiConsumers.put(
			"businessDistrict",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setBusinessDistrict);
		attributeGetterFunctions.put(
			"businessPostOffice", FarmerStakeholderInfo::getBusinessPostOffice);
		attributeSetterBiConsumers.put(
			"businessPostOffice",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setBusinessPostOffice);
		attributeGetterFunctions.put(
			"businessParish", FarmerStakeholderInfo::getBusinessParish);
		attributeSetterBiConsumers.put(
			"businessParish",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setBusinessParish);
		attributeGetterFunctions.put(
			"businessTelephoneNumber",
			FarmerStakeholderInfo::getBusinessTelephoneNumber);
		attributeSetterBiConsumers.put(
			"businessTelephoneNumber",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setBusinessTelephoneNumber);
		attributeGetterFunctions.put(
			"identificationType", FarmerStakeholderInfo::getIdentificationType);
		attributeSetterBiConsumers.put(
			"identificationType",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setIdentificationType);
		attributeGetterFunctions.put(
			"identificationNumber",
			FarmerStakeholderInfo::getIdentificationNumber);
		attributeSetterBiConsumers.put(
			"identificationNumber",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setIdentificationNumber);
		attributeGetterFunctions.put(
			"gender", FarmerStakeholderInfo::getGender);
		attributeSetterBiConsumers.put(
			"gender",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setGender);
		attributeGetterFunctions.put(
			"dateOfBirth", FarmerStakeholderInfo::getDateOfBirth);
		attributeSetterBiConsumers.put(
			"dateOfBirth",
			(BiConsumer<FarmerStakeholderInfo, Date>)
				FarmerStakeholderInfo::setDateOfBirth);
		attributeGetterFunctions.put(
			"taxpayerRegistrationNumber",
			FarmerStakeholderInfo::getTaxpayerRegistrationNumber);
		attributeSetterBiConsumers.put(
			"taxpayerRegistrationNumber",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setTaxpayerRegistrationNumber);
		attributeGetterFunctions.put(
			"cellPhone", FarmerStakeholderInfo::getCellPhone);
		attributeSetterBiConsumers.put(
			"cellPhone",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setCellPhone);
		attributeGetterFunctions.put("fax", FarmerStakeholderInfo::getFax);
		attributeSetterBiConsumers.put(
			"fax",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setFax);
		attributeGetterFunctions.put(
			"emailAddress", FarmerStakeholderInfo::getEmailAddress);
		attributeSetterBiConsumers.put(
			"emailAddress",
			(BiConsumer<FarmerStakeholderInfo, String>)
				FarmerStakeholderInfo::setEmailAddress);
		attributeGetterFunctions.put(
			"farmerApplicationId",
			FarmerStakeholderInfo::getFarmerApplicationId);
		attributeSetterBiConsumers.put(
			"farmerApplicationId",
			(BiConsumer<FarmerStakeholderInfo, Long>)
				FarmerStakeholderInfo::setFarmerApplicationId);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getFarmerStakeholderInfoId() {
		return _farmerStakeholderInfoId;
	}

	@Override
	public void setFarmerStakeholderInfoId(long farmerStakeholderInfoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_farmerStakeholderInfoId = farmerStakeholderInfoId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getCompanyName() {
		if (_companyName == null) {
			return "";
		}
		else {
			return _companyName;
		}
	}

	@Override
	public void setCompanyName(String companyName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyName = companyName;
	}

	@JSON
	@Override
	public String getFirstName() {
		if (_firstName == null) {
			return "";
		}
		else {
			return _firstName;
		}
	}

	@Override
	public void setFirstName(String firstName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_firstName = firstName;
	}

	@JSON
	@Override
	public String getMiddleName() {
		if (_middleName == null) {
			return "";
		}
		else {
			return _middleName;
		}
	}

	@Override
	public void setMiddleName(String middleName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_middleName = middleName;
	}

	@JSON
	@Override
	public String getLastName() {
		if (_lastName == null) {
			return "";
		}
		else {
			return _lastName;
		}
	}

	@Override
	public void setLastName(String lastName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_lastName = lastName;
	}

	@JSON
	@Override
	public String getAlias() {
		if (_alias == null) {
			return "";
		}
		else {
			return _alias;
		}
	}

	@Override
	public void setAlias(String alias) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_alias = alias;
	}

	@JSON
	@Override
	public String getResidentialStreetName() {
		if (_residentialStreetName == null) {
			return "";
		}
		else {
			return _residentialStreetName;
		}
	}

	@Override
	public void setResidentialStreetName(String residentialStreetName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_residentialStreetName = residentialStreetName;
	}

	@JSON
	@Override
	public String getResidentialDistrict() {
		if (_residentialDistrict == null) {
			return "";
		}
		else {
			return _residentialDistrict;
		}
	}

	@Override
	public void setResidentialDistrict(String residentialDistrict) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_residentialDistrict = residentialDistrict;
	}

	@JSON
	@Override
	public String getResidentialPostOffice() {
		if (_residentialPostOffice == null) {
			return "";
		}
		else {
			return _residentialPostOffice;
		}
	}

	@Override
	public void setResidentialPostOffice(String residentialPostOffice) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_residentialPostOffice = residentialPostOffice;
	}

	@JSON
	@Override
	public String getResidentialParish() {
		if (_residentialParish == null) {
			return "";
		}
		else {
			return _residentialParish;
		}
	}

	@Override
	public void setResidentialParish(String residentialParish) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_residentialParish = residentialParish;
	}

	@JSON
	@Override
	public String getResidentialtelephoneNumber() {
		if (_residentialtelephoneNumber == null) {
			return "";
		}
		else {
			return _residentialtelephoneNumber;
		}
	}

	@Override
	public void setResidentialtelephoneNumber(
		String residentialtelephoneNumber) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_residentialtelephoneNumber = residentialtelephoneNumber;
	}

	@JSON
	@Override
	public String getBusinessStreetName() {
		if (_businessStreetName == null) {
			return "";
		}
		else {
			return _businessStreetName;
		}
	}

	@Override
	public void setBusinessStreetName(String businessStreetName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessStreetName = businessStreetName;
	}

	@JSON
	@Override
	public String getBusinessDistrict() {
		if (_businessDistrict == null) {
			return "";
		}
		else {
			return _businessDistrict;
		}
	}

	@Override
	public void setBusinessDistrict(String businessDistrict) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessDistrict = businessDistrict;
	}

	@JSON
	@Override
	public String getBusinessPostOffice() {
		if (_businessPostOffice == null) {
			return "";
		}
		else {
			return _businessPostOffice;
		}
	}

	@Override
	public void setBusinessPostOffice(String businessPostOffice) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessPostOffice = businessPostOffice;
	}

	@JSON
	@Override
	public String getBusinessParish() {
		if (_businessParish == null) {
			return "";
		}
		else {
			return _businessParish;
		}
	}

	@Override
	public void setBusinessParish(String businessParish) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessParish = businessParish;
	}

	@JSON
	@Override
	public String getBusinessTelephoneNumber() {
		if (_businessTelephoneNumber == null) {
			return "";
		}
		else {
			return _businessTelephoneNumber;
		}
	}

	@Override
	public void setBusinessTelephoneNumber(String businessTelephoneNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessTelephoneNumber = businessTelephoneNumber;
	}

	@JSON
	@Override
	public String getIdentificationType() {
		if (_identificationType == null) {
			return "";
		}
		else {
			return _identificationType;
		}
	}

	@Override
	public void setIdentificationType(String identificationType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_identificationType = identificationType;
	}

	@JSON
	@Override
	public String getIdentificationNumber() {
		if (_identificationNumber == null) {
			return "";
		}
		else {
			return _identificationNumber;
		}
	}

	@Override
	public void setIdentificationNumber(String identificationNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_identificationNumber = identificationNumber;
	}

	@JSON
	@Override
	public String getGender() {
		if (_gender == null) {
			return "";
		}
		else {
			return _gender;
		}
	}

	@Override
	public void setGender(String gender) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_gender = gender;
	}

	@JSON
	@Override
	public Date getDateOfBirth() {
		return _dateOfBirth;
	}

	@Override
	public void setDateOfBirth(Date dateOfBirth) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dateOfBirth = dateOfBirth;
	}

	@JSON
	@Override
	public String getTaxpayerRegistrationNumber() {
		if (_taxpayerRegistrationNumber == null) {
			return "";
		}
		else {
			return _taxpayerRegistrationNumber;
		}
	}

	@Override
	public void setTaxpayerRegistrationNumber(
		String taxpayerRegistrationNumber) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_taxpayerRegistrationNumber = taxpayerRegistrationNumber;
	}

	@JSON
	@Override
	public String getCellPhone() {
		if (_cellPhone == null) {
			return "";
		}
		else {
			return _cellPhone;
		}
	}

	@Override
	public void setCellPhone(String cellPhone) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cellPhone = cellPhone;
	}

	@JSON
	@Override
	public String getFax() {
		if (_fax == null) {
			return "";
		}
		else {
			return _fax;
		}
	}

	@Override
	public void setFax(String fax) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fax = fax;
	}

	@JSON
	@Override
	public String getEmailAddress() {
		if (_emailAddress == null) {
			return "";
		}
		else {
			return _emailAddress;
		}
	}

	@Override
	public void setEmailAddress(String emailAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_emailAddress = emailAddress;
	}

	@JSON
	@Override
	public long getFarmerApplicationId() {
		return _farmerApplicationId;
	}

	@Override
	public void setFarmerApplicationId(long farmerApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_farmerApplicationId = farmerApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalFarmerApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("farmerApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), FarmerStakeholderInfo.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public FarmerStakeholderInfo toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, FarmerStakeholderInfo>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		FarmerStakeholderInfoImpl farmerStakeholderInfoImpl =
			new FarmerStakeholderInfoImpl();

		farmerStakeholderInfoImpl.setFarmerStakeholderInfoId(
			getFarmerStakeholderInfoId());
		farmerStakeholderInfoImpl.setGroupId(getGroupId());
		farmerStakeholderInfoImpl.setCompanyId(getCompanyId());
		farmerStakeholderInfoImpl.setUserId(getUserId());
		farmerStakeholderInfoImpl.setUserName(getUserName());
		farmerStakeholderInfoImpl.setCreateDate(getCreateDate());
		farmerStakeholderInfoImpl.setModifiedDate(getModifiedDate());
		farmerStakeholderInfoImpl.setCompanyName(getCompanyName());
		farmerStakeholderInfoImpl.setFirstName(getFirstName());
		farmerStakeholderInfoImpl.setMiddleName(getMiddleName());
		farmerStakeholderInfoImpl.setLastName(getLastName());
		farmerStakeholderInfoImpl.setAlias(getAlias());
		farmerStakeholderInfoImpl.setResidentialStreetName(
			getResidentialStreetName());
		farmerStakeholderInfoImpl.setResidentialDistrict(
			getResidentialDistrict());
		farmerStakeholderInfoImpl.setResidentialPostOffice(
			getResidentialPostOffice());
		farmerStakeholderInfoImpl.setResidentialParish(getResidentialParish());
		farmerStakeholderInfoImpl.setResidentialtelephoneNumber(
			getResidentialtelephoneNumber());
		farmerStakeholderInfoImpl.setBusinessStreetName(
			getBusinessStreetName());
		farmerStakeholderInfoImpl.setBusinessDistrict(getBusinessDistrict());
		farmerStakeholderInfoImpl.setBusinessPostOffice(
			getBusinessPostOffice());
		farmerStakeholderInfoImpl.setBusinessParish(getBusinessParish());
		farmerStakeholderInfoImpl.setBusinessTelephoneNumber(
			getBusinessTelephoneNumber());
		farmerStakeholderInfoImpl.setIdentificationType(
			getIdentificationType());
		farmerStakeholderInfoImpl.setIdentificationNumber(
			getIdentificationNumber());
		farmerStakeholderInfoImpl.setGender(getGender());
		farmerStakeholderInfoImpl.setDateOfBirth(getDateOfBirth());
		farmerStakeholderInfoImpl.setTaxpayerRegistrationNumber(
			getTaxpayerRegistrationNumber());
		farmerStakeholderInfoImpl.setCellPhone(getCellPhone());
		farmerStakeholderInfoImpl.setFax(getFax());
		farmerStakeholderInfoImpl.setEmailAddress(getEmailAddress());
		farmerStakeholderInfoImpl.setFarmerApplicationId(
			getFarmerApplicationId());

		farmerStakeholderInfoImpl.resetOriginalValues();

		return farmerStakeholderInfoImpl;
	}

	@Override
	public FarmerStakeholderInfo cloneWithOriginalValues() {
		FarmerStakeholderInfoImpl farmerStakeholderInfoImpl =
			new FarmerStakeholderInfoImpl();

		farmerStakeholderInfoImpl.setFarmerStakeholderInfoId(
			this.<Long>getColumnOriginalValue("farmerStakeholderInfoId"));
		farmerStakeholderInfoImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		farmerStakeholderInfoImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		farmerStakeholderInfoImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		farmerStakeholderInfoImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		farmerStakeholderInfoImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		farmerStakeholderInfoImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		farmerStakeholderInfoImpl.setCompanyName(
			this.<String>getColumnOriginalValue("companyName"));
		farmerStakeholderInfoImpl.setFirstName(
			this.<String>getColumnOriginalValue("firstName"));
		farmerStakeholderInfoImpl.setMiddleName(
			this.<String>getColumnOriginalValue("middleName"));
		farmerStakeholderInfoImpl.setLastName(
			this.<String>getColumnOriginalValue("lastName"));
		farmerStakeholderInfoImpl.setAlias(
			this.<String>getColumnOriginalValue("alias_"));
		farmerStakeholderInfoImpl.setResidentialStreetName(
			this.<String>getColumnOriginalValue("residentialStreetName"));
		farmerStakeholderInfoImpl.setResidentialDistrict(
			this.<String>getColumnOriginalValue("residentialDistrict"));
		farmerStakeholderInfoImpl.setResidentialPostOffice(
			this.<String>getColumnOriginalValue("residentialPostOffice"));
		farmerStakeholderInfoImpl.setResidentialParish(
			this.<String>getColumnOriginalValue("residentialParish"));
		farmerStakeholderInfoImpl.setResidentialtelephoneNumber(
			this.<String>getColumnOriginalValue("residentialtelephoneNumber"));
		farmerStakeholderInfoImpl.setBusinessStreetName(
			this.<String>getColumnOriginalValue("businessStreetName"));
		farmerStakeholderInfoImpl.setBusinessDistrict(
			this.<String>getColumnOriginalValue("businessDistrict"));
		farmerStakeholderInfoImpl.setBusinessPostOffice(
			this.<String>getColumnOriginalValue("businessPostOffice"));
		farmerStakeholderInfoImpl.setBusinessParish(
			this.<String>getColumnOriginalValue("businessParish"));
		farmerStakeholderInfoImpl.setBusinessTelephoneNumber(
			this.<String>getColumnOriginalValue("businessTelephoneNumber"));
		farmerStakeholderInfoImpl.setIdentificationType(
			this.<String>getColumnOriginalValue("identificationType"));
		farmerStakeholderInfoImpl.setIdentificationNumber(
			this.<String>getColumnOriginalValue("identificationNumber"));
		farmerStakeholderInfoImpl.setGender(
			this.<String>getColumnOriginalValue("gender"));
		farmerStakeholderInfoImpl.setDateOfBirth(
			this.<Date>getColumnOriginalValue("dateOfBirth"));
		farmerStakeholderInfoImpl.setTaxpayerRegistrationNumber(
			this.<String>getColumnOriginalValue("taxpayerRegistrationNumber"));
		farmerStakeholderInfoImpl.setCellPhone(
			this.<String>getColumnOriginalValue("cellPhone"));
		farmerStakeholderInfoImpl.setFax(
			this.<String>getColumnOriginalValue("fax"));
		farmerStakeholderInfoImpl.setEmailAddress(
			this.<String>getColumnOriginalValue("emailAddress"));
		farmerStakeholderInfoImpl.setFarmerApplicationId(
			this.<Long>getColumnOriginalValue("farmerApplicationId"));

		return farmerStakeholderInfoImpl;
	}

	@Override
	public int compareTo(FarmerStakeholderInfo farmerStakeholderInfo) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), farmerStakeholderInfo.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof FarmerStakeholderInfo)) {
			return false;
		}

		FarmerStakeholderInfo farmerStakeholderInfo =
			(FarmerStakeholderInfo)object;

		long primaryKey = farmerStakeholderInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<FarmerStakeholderInfo> toCacheModel() {
		FarmerStakeholderInfoCacheModel farmerStakeholderInfoCacheModel =
			new FarmerStakeholderInfoCacheModel();

		farmerStakeholderInfoCacheModel.farmerStakeholderInfoId =
			getFarmerStakeholderInfoId();

		farmerStakeholderInfoCacheModel.groupId = getGroupId();

		farmerStakeholderInfoCacheModel.companyId = getCompanyId();

		farmerStakeholderInfoCacheModel.userId = getUserId();

		farmerStakeholderInfoCacheModel.userName = getUserName();

		String userName = farmerStakeholderInfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			farmerStakeholderInfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			farmerStakeholderInfoCacheModel.createDate = createDate.getTime();
		}
		else {
			farmerStakeholderInfoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			farmerStakeholderInfoCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			farmerStakeholderInfoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		farmerStakeholderInfoCacheModel.companyName = getCompanyName();

		String companyName = farmerStakeholderInfoCacheModel.companyName;

		if ((companyName != null) && (companyName.length() == 0)) {
			farmerStakeholderInfoCacheModel.companyName = null;
		}

		farmerStakeholderInfoCacheModel.firstName = getFirstName();

		String firstName = farmerStakeholderInfoCacheModel.firstName;

		if ((firstName != null) && (firstName.length() == 0)) {
			farmerStakeholderInfoCacheModel.firstName = null;
		}

		farmerStakeholderInfoCacheModel.middleName = getMiddleName();

		String middleName = farmerStakeholderInfoCacheModel.middleName;

		if ((middleName != null) && (middleName.length() == 0)) {
			farmerStakeholderInfoCacheModel.middleName = null;
		}

		farmerStakeholderInfoCacheModel.lastName = getLastName();

		String lastName = farmerStakeholderInfoCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			farmerStakeholderInfoCacheModel.lastName = null;
		}

		farmerStakeholderInfoCacheModel.alias = getAlias();

		String alias = farmerStakeholderInfoCacheModel.alias;

		if ((alias != null) && (alias.length() == 0)) {
			farmerStakeholderInfoCacheModel.alias = null;
		}

		farmerStakeholderInfoCacheModel.residentialStreetName =
			getResidentialStreetName();

		String residentialStreetName =
			farmerStakeholderInfoCacheModel.residentialStreetName;

		if ((residentialStreetName != null) &&
			(residentialStreetName.length() == 0)) {

			farmerStakeholderInfoCacheModel.residentialStreetName = null;
		}

		farmerStakeholderInfoCacheModel.residentialDistrict =
			getResidentialDistrict();

		String residentialDistrict =
			farmerStakeholderInfoCacheModel.residentialDistrict;

		if ((residentialDistrict != null) &&
			(residentialDistrict.length() == 0)) {

			farmerStakeholderInfoCacheModel.residentialDistrict = null;
		}

		farmerStakeholderInfoCacheModel.residentialPostOffice =
			getResidentialPostOffice();

		String residentialPostOffice =
			farmerStakeholderInfoCacheModel.residentialPostOffice;

		if ((residentialPostOffice != null) &&
			(residentialPostOffice.length() == 0)) {

			farmerStakeholderInfoCacheModel.residentialPostOffice = null;
		}

		farmerStakeholderInfoCacheModel.residentialParish =
			getResidentialParish();

		String residentialParish =
			farmerStakeholderInfoCacheModel.residentialParish;

		if ((residentialParish != null) && (residentialParish.length() == 0)) {
			farmerStakeholderInfoCacheModel.residentialParish = null;
		}

		farmerStakeholderInfoCacheModel.residentialtelephoneNumber =
			getResidentialtelephoneNumber();

		String residentialtelephoneNumber =
			farmerStakeholderInfoCacheModel.residentialtelephoneNumber;

		if ((residentialtelephoneNumber != null) &&
			(residentialtelephoneNumber.length() == 0)) {

			farmerStakeholderInfoCacheModel.residentialtelephoneNumber = null;
		}

		farmerStakeholderInfoCacheModel.businessStreetName =
			getBusinessStreetName();

		String businessStreetName =
			farmerStakeholderInfoCacheModel.businessStreetName;

		if ((businessStreetName != null) &&
			(businessStreetName.length() == 0)) {

			farmerStakeholderInfoCacheModel.businessStreetName = null;
		}

		farmerStakeholderInfoCacheModel.businessDistrict =
			getBusinessDistrict();

		String businessDistrict =
			farmerStakeholderInfoCacheModel.businessDistrict;

		if ((businessDistrict != null) && (businessDistrict.length() == 0)) {
			farmerStakeholderInfoCacheModel.businessDistrict = null;
		}

		farmerStakeholderInfoCacheModel.businessPostOffice =
			getBusinessPostOffice();

		String businessPostOffice =
			farmerStakeholderInfoCacheModel.businessPostOffice;

		if ((businessPostOffice != null) &&
			(businessPostOffice.length() == 0)) {

			farmerStakeholderInfoCacheModel.businessPostOffice = null;
		}

		farmerStakeholderInfoCacheModel.businessParish = getBusinessParish();

		String businessParish = farmerStakeholderInfoCacheModel.businessParish;

		if ((businessParish != null) && (businessParish.length() == 0)) {
			farmerStakeholderInfoCacheModel.businessParish = null;
		}

		farmerStakeholderInfoCacheModel.businessTelephoneNumber =
			getBusinessTelephoneNumber();

		String businessTelephoneNumber =
			farmerStakeholderInfoCacheModel.businessTelephoneNumber;

		if ((businessTelephoneNumber != null) &&
			(businessTelephoneNumber.length() == 0)) {

			farmerStakeholderInfoCacheModel.businessTelephoneNumber = null;
		}

		farmerStakeholderInfoCacheModel.identificationType =
			getIdentificationType();

		String identificationType =
			farmerStakeholderInfoCacheModel.identificationType;

		if ((identificationType != null) &&
			(identificationType.length() == 0)) {

			farmerStakeholderInfoCacheModel.identificationType = null;
		}

		farmerStakeholderInfoCacheModel.identificationNumber =
			getIdentificationNumber();

		String identificationNumber =
			farmerStakeholderInfoCacheModel.identificationNumber;

		if ((identificationNumber != null) &&
			(identificationNumber.length() == 0)) {

			farmerStakeholderInfoCacheModel.identificationNumber = null;
		}

		farmerStakeholderInfoCacheModel.gender = getGender();

		String gender = farmerStakeholderInfoCacheModel.gender;

		if ((gender != null) && (gender.length() == 0)) {
			farmerStakeholderInfoCacheModel.gender = null;
		}

		Date dateOfBirth = getDateOfBirth();

		if (dateOfBirth != null) {
			farmerStakeholderInfoCacheModel.dateOfBirth = dateOfBirth.getTime();
		}
		else {
			farmerStakeholderInfoCacheModel.dateOfBirth = Long.MIN_VALUE;
		}

		farmerStakeholderInfoCacheModel.taxpayerRegistrationNumber =
			getTaxpayerRegistrationNumber();

		String taxpayerRegistrationNumber =
			farmerStakeholderInfoCacheModel.taxpayerRegistrationNumber;

		if ((taxpayerRegistrationNumber != null) &&
			(taxpayerRegistrationNumber.length() == 0)) {

			farmerStakeholderInfoCacheModel.taxpayerRegistrationNumber = null;
		}

		farmerStakeholderInfoCacheModel.cellPhone = getCellPhone();

		String cellPhone = farmerStakeholderInfoCacheModel.cellPhone;

		if ((cellPhone != null) && (cellPhone.length() == 0)) {
			farmerStakeholderInfoCacheModel.cellPhone = null;
		}

		farmerStakeholderInfoCacheModel.fax = getFax();

		String fax = farmerStakeholderInfoCacheModel.fax;

		if ((fax != null) && (fax.length() == 0)) {
			farmerStakeholderInfoCacheModel.fax = null;
		}

		farmerStakeholderInfoCacheModel.emailAddress = getEmailAddress();

		String emailAddress = farmerStakeholderInfoCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			farmerStakeholderInfoCacheModel.emailAddress = null;
		}

		farmerStakeholderInfoCacheModel.farmerApplicationId =
			getFarmerApplicationId();

		return farmerStakeholderInfoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<FarmerStakeholderInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<FarmerStakeholderInfo, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<FarmerStakeholderInfo, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(FarmerStakeholderInfo)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, FarmerStakeholderInfo>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private long _farmerStakeholderInfoId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _companyName;
	private String _firstName;
	private String _middleName;
	private String _lastName;
	private String _alias;
	private String _residentialStreetName;
	private String _residentialDistrict;
	private String _residentialPostOffice;
	private String _residentialParish;
	private String _residentialtelephoneNumber;
	private String _businessStreetName;
	private String _businessDistrict;
	private String _businessPostOffice;
	private String _businessParish;
	private String _businessTelephoneNumber;
	private String _identificationType;
	private String _identificationNumber;
	private String _gender;
	private Date _dateOfBirth;
	private String _taxpayerRegistrationNumber;
	private String _cellPhone;
	private String _fax;
	private String _emailAddress;
	private long _farmerApplicationId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<FarmerStakeholderInfo, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((FarmerStakeholderInfo)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"farmerStakeholderInfoId", _farmerStakeholderInfoId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("companyName", _companyName);
		_columnOriginalValues.put("firstName", _firstName);
		_columnOriginalValues.put("middleName", _middleName);
		_columnOriginalValues.put("lastName", _lastName);
		_columnOriginalValues.put("alias_", _alias);
		_columnOriginalValues.put(
			"residentialStreetName", _residentialStreetName);
		_columnOriginalValues.put("residentialDistrict", _residentialDistrict);
		_columnOriginalValues.put(
			"residentialPostOffice", _residentialPostOffice);
		_columnOriginalValues.put("residentialParish", _residentialParish);
		_columnOriginalValues.put(
			"residentialtelephoneNumber", _residentialtelephoneNumber);
		_columnOriginalValues.put("businessStreetName", _businessStreetName);
		_columnOriginalValues.put("businessDistrict", _businessDistrict);
		_columnOriginalValues.put("businessPostOffice", _businessPostOffice);
		_columnOriginalValues.put("businessParish", _businessParish);
		_columnOriginalValues.put(
			"businessTelephoneNumber", _businessTelephoneNumber);
		_columnOriginalValues.put("identificationType", _identificationType);
		_columnOriginalValues.put(
			"identificationNumber", _identificationNumber);
		_columnOriginalValues.put("gender", _gender);
		_columnOriginalValues.put("dateOfBirth", _dateOfBirth);
		_columnOriginalValues.put(
			"taxpayerRegistrationNumber", _taxpayerRegistrationNumber);
		_columnOriginalValues.put("cellPhone", _cellPhone);
		_columnOriginalValues.put("fax", _fax);
		_columnOriginalValues.put("emailAddress", _emailAddress);
		_columnOriginalValues.put("farmerApplicationId", _farmerApplicationId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("alias_", "alias");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("farmerStakeholderInfoId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("companyName", 128L);

		columnBitmasks.put("firstName", 256L);

		columnBitmasks.put("middleName", 512L);

		columnBitmasks.put("lastName", 1024L);

		columnBitmasks.put("alias_", 2048L);

		columnBitmasks.put("residentialStreetName", 4096L);

		columnBitmasks.put("residentialDistrict", 8192L);

		columnBitmasks.put("residentialPostOffice", 16384L);

		columnBitmasks.put("residentialParish", 32768L);

		columnBitmasks.put("residentialtelephoneNumber", 65536L);

		columnBitmasks.put("businessStreetName", 131072L);

		columnBitmasks.put("businessDistrict", 262144L);

		columnBitmasks.put("businessPostOffice", 524288L);

		columnBitmasks.put("businessParish", 1048576L);

		columnBitmasks.put("businessTelephoneNumber", 2097152L);

		columnBitmasks.put("identificationType", 4194304L);

		columnBitmasks.put("identificationNumber", 8388608L);

		columnBitmasks.put("gender", 16777216L);

		columnBitmasks.put("dateOfBirth", 33554432L);

		columnBitmasks.put("taxpayerRegistrationNumber", 67108864L);

		columnBitmasks.put("cellPhone", 134217728L);

		columnBitmasks.put("fax", 268435456L);

		columnBitmasks.put("emailAddress", 536870912L);

		columnBitmasks.put("farmerApplicationId", 1073741824L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private FarmerStakeholderInfo _escapedModel;

}