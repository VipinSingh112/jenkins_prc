/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.janaac.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.janaac.application.form.service.model.AccInsBodiesOrganization;
import com.nbp.janaac.application.form.service.model.AccInsBodiesOrganizationModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the AccInsBodiesOrganization service. Represents a row in the &quot;nbp_janaac_acc_ins_body_org&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>AccInsBodiesOrganizationModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AccInsBodiesOrganizationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AccInsBodiesOrganizationImpl
 * @generated
 */
@JSON(strict = true)
public class AccInsBodiesOrganizationModelImpl
	extends BaseModelImpl<AccInsBodiesOrganization>
	implements AccInsBodiesOrganizationModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a acc ins bodies organization model instance should use the <code>AccInsBodiesOrganization</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_janaac_acc_ins_body_org";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"accInsBodiesOrganizationId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"insLegalEntity", Types.VARCHAR},
		{"insLegalStatusEntity", Types.VARCHAR},
		{"insBodyOrgPart", Types.VARCHAR}, {"insPersonnelName", Types.VARCHAR},
		{"insPersonnelPosition", Types.VARCHAR},
		{"insStaffSize", Types.VARCHAR}, {"insStaffComplement", Types.VARCHAR},
		{"insIncomeSource", Types.VARCHAR}, {"insOrgBodyType", Types.VARCHAR},
		{"insBodyOwnOrgClient", Types.VARCHAR},
		{"insBodyOtherOrgClient", Types.VARCHAR},
		{"janaacApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("accInsBodiesOrganizationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("insLegalEntity", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insLegalStatusEntity", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insBodyOrgPart", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insPersonnelName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insPersonnelPosition", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insStaffSize", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insStaffComplement", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insIncomeSource", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insOrgBodyType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insBodyOwnOrgClient", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insBodyOtherOrgClient", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("janaacApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_janaac_acc_ins_body_org (uuid_ VARCHAR(75) null,accInsBodiesOrganizationId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,insLegalEntity VARCHAR(75) null,insLegalStatusEntity VARCHAR(75) null,insBodyOrgPart VARCHAR(75) null,insPersonnelName VARCHAR(75) null,insPersonnelPosition VARCHAR(75) null,insStaffSize VARCHAR(75) null,insStaffComplement VARCHAR(75) null,insIncomeSource VARCHAR(75) null,insOrgBodyType VARCHAR(75) null,insBodyOwnOrgClient VARCHAR(75) null,insBodyOtherOrgClient VARCHAR(75) null,janaacApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_janaac_acc_ins_body_org";

	public static final String ORDER_BY_JPQL =
		" ORDER BY accInsBodiesOrganization.accInsBodiesOrganizationId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_janaac_acc_ins_body_org.accInsBodiesOrganizationId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long JANAACAPPLICATIONID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ACCINSBODIESORGANIZATIONID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public AccInsBodiesOrganizationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _accInsBodiesOrganizationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAccInsBodiesOrganizationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _accInsBodiesOrganizationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AccInsBodiesOrganization.class;
	}

	@Override
	public String getModelClassName() {
		return AccInsBodiesOrganization.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<AccInsBodiesOrganization, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<AccInsBodiesOrganization, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AccInsBodiesOrganization, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((AccInsBodiesOrganization)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<AccInsBodiesOrganization, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<AccInsBodiesOrganization, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(AccInsBodiesOrganization)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<AccInsBodiesOrganization, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<AccInsBodiesOrganization, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<AccInsBodiesOrganization, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<AccInsBodiesOrganization, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<AccInsBodiesOrganization, Object>>();

			attributeGetterFunctions.put(
				"uuid", AccInsBodiesOrganization::getUuid);
			attributeGetterFunctions.put(
				"accInsBodiesOrganizationId",
				AccInsBodiesOrganization::getAccInsBodiesOrganizationId);
			attributeGetterFunctions.put(
				"groupId", AccInsBodiesOrganization::getGroupId);
			attributeGetterFunctions.put(
				"companyId", AccInsBodiesOrganization::getCompanyId);
			attributeGetterFunctions.put(
				"userId", AccInsBodiesOrganization::getUserId);
			attributeGetterFunctions.put(
				"userName", AccInsBodiesOrganization::getUserName);
			attributeGetterFunctions.put(
				"createDate", AccInsBodiesOrganization::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", AccInsBodiesOrganization::getModifiedDate);
			attributeGetterFunctions.put(
				"insLegalEntity", AccInsBodiesOrganization::getInsLegalEntity);
			attributeGetterFunctions.put(
				"insLegalStatusEntity",
				AccInsBodiesOrganization::getInsLegalStatusEntity);
			attributeGetterFunctions.put(
				"insBodyOrgPart", AccInsBodiesOrganization::getInsBodyOrgPart);
			attributeGetterFunctions.put(
				"insPersonnelName",
				AccInsBodiesOrganization::getInsPersonnelName);
			attributeGetterFunctions.put(
				"insPersonnelPosition",
				AccInsBodiesOrganization::getInsPersonnelPosition);
			attributeGetterFunctions.put(
				"insStaffSize", AccInsBodiesOrganization::getInsStaffSize);
			attributeGetterFunctions.put(
				"insStaffComplement",
				AccInsBodiesOrganization::getInsStaffComplement);
			attributeGetterFunctions.put(
				"insIncomeSource",
				AccInsBodiesOrganization::getInsIncomeSource);
			attributeGetterFunctions.put(
				"insOrgBodyType", AccInsBodiesOrganization::getInsOrgBodyType);
			attributeGetterFunctions.put(
				"insBodyOwnOrgClient",
				AccInsBodiesOrganization::getInsBodyOwnOrgClient);
			attributeGetterFunctions.put(
				"insBodyOtherOrgClient",
				AccInsBodiesOrganization::getInsBodyOtherOrgClient);
			attributeGetterFunctions.put(
				"janaacApplicationId",
				AccInsBodiesOrganization::getJanaacApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<AccInsBodiesOrganization, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<AccInsBodiesOrganization, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<AccInsBodiesOrganization, ?>>();

			attributeSetterBiConsumers.put(
				"uuid",
				(BiConsumer<AccInsBodiesOrganization, String>)
					AccInsBodiesOrganization::setUuid);
			attributeSetterBiConsumers.put(
				"accInsBodiesOrganizationId",
				(BiConsumer<AccInsBodiesOrganization, Long>)
					AccInsBodiesOrganization::setAccInsBodiesOrganizationId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<AccInsBodiesOrganization, Long>)
					AccInsBodiesOrganization::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<AccInsBodiesOrganization, Long>)
					AccInsBodiesOrganization::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<AccInsBodiesOrganization, Long>)
					AccInsBodiesOrganization::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<AccInsBodiesOrganization, String>)
					AccInsBodiesOrganization::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<AccInsBodiesOrganization, Date>)
					AccInsBodiesOrganization::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<AccInsBodiesOrganization, Date>)
					AccInsBodiesOrganization::setModifiedDate);
			attributeSetterBiConsumers.put(
				"insLegalEntity",
				(BiConsumer<AccInsBodiesOrganization, String>)
					AccInsBodiesOrganization::setInsLegalEntity);
			attributeSetterBiConsumers.put(
				"insLegalStatusEntity",
				(BiConsumer<AccInsBodiesOrganization, String>)
					AccInsBodiesOrganization::setInsLegalStatusEntity);
			attributeSetterBiConsumers.put(
				"insBodyOrgPart",
				(BiConsumer<AccInsBodiesOrganization, String>)
					AccInsBodiesOrganization::setInsBodyOrgPart);
			attributeSetterBiConsumers.put(
				"insPersonnelName",
				(BiConsumer<AccInsBodiesOrganization, String>)
					AccInsBodiesOrganization::setInsPersonnelName);
			attributeSetterBiConsumers.put(
				"insPersonnelPosition",
				(BiConsumer<AccInsBodiesOrganization, String>)
					AccInsBodiesOrganization::setInsPersonnelPosition);
			attributeSetterBiConsumers.put(
				"insStaffSize",
				(BiConsumer<AccInsBodiesOrganization, String>)
					AccInsBodiesOrganization::setInsStaffSize);
			attributeSetterBiConsumers.put(
				"insStaffComplement",
				(BiConsumer<AccInsBodiesOrganization, String>)
					AccInsBodiesOrganization::setInsStaffComplement);
			attributeSetterBiConsumers.put(
				"insIncomeSource",
				(BiConsumer<AccInsBodiesOrganization, String>)
					AccInsBodiesOrganization::setInsIncomeSource);
			attributeSetterBiConsumers.put(
				"insOrgBodyType",
				(BiConsumer<AccInsBodiesOrganization, String>)
					AccInsBodiesOrganization::setInsOrgBodyType);
			attributeSetterBiConsumers.put(
				"insBodyOwnOrgClient",
				(BiConsumer<AccInsBodiesOrganization, String>)
					AccInsBodiesOrganization::setInsBodyOwnOrgClient);
			attributeSetterBiConsumers.put(
				"insBodyOtherOrgClient",
				(BiConsumer<AccInsBodiesOrganization, String>)
					AccInsBodiesOrganization::setInsBodyOtherOrgClient);
			attributeSetterBiConsumers.put(
				"janaacApplicationId",
				(BiConsumer<AccInsBodiesOrganization, Long>)
					AccInsBodiesOrganization::setJanaacApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getAccInsBodiesOrganizationId() {
		return _accInsBodiesOrganizationId;
	}

	@Override
	public void setAccInsBodiesOrganizationId(long accInsBodiesOrganizationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_accInsBodiesOrganizationId = accInsBodiesOrganizationId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getInsLegalEntity() {
		if (_insLegalEntity == null) {
			return "";
		}
		else {
			return _insLegalEntity;
		}
	}

	@Override
	public void setInsLegalEntity(String insLegalEntity) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insLegalEntity = insLegalEntity;
	}

	@JSON
	@Override
	public String getInsLegalStatusEntity() {
		if (_insLegalStatusEntity == null) {
			return "";
		}
		else {
			return _insLegalStatusEntity;
		}
	}

	@Override
	public void setInsLegalStatusEntity(String insLegalStatusEntity) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insLegalStatusEntity = insLegalStatusEntity;
	}

	@JSON
	@Override
	public String getInsBodyOrgPart() {
		if (_insBodyOrgPart == null) {
			return "";
		}
		else {
			return _insBodyOrgPart;
		}
	}

	@Override
	public void setInsBodyOrgPart(String insBodyOrgPart) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insBodyOrgPart = insBodyOrgPart;
	}

	@JSON
	@Override
	public String getInsPersonnelName() {
		if (_insPersonnelName == null) {
			return "";
		}
		else {
			return _insPersonnelName;
		}
	}

	@Override
	public void setInsPersonnelName(String insPersonnelName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insPersonnelName = insPersonnelName;
	}

	@JSON
	@Override
	public String getInsPersonnelPosition() {
		if (_insPersonnelPosition == null) {
			return "";
		}
		else {
			return _insPersonnelPosition;
		}
	}

	@Override
	public void setInsPersonnelPosition(String insPersonnelPosition) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insPersonnelPosition = insPersonnelPosition;
	}

	@JSON
	@Override
	public String getInsStaffSize() {
		if (_insStaffSize == null) {
			return "";
		}
		else {
			return _insStaffSize;
		}
	}

	@Override
	public void setInsStaffSize(String insStaffSize) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insStaffSize = insStaffSize;
	}

	@JSON
	@Override
	public String getInsStaffComplement() {
		if (_insStaffComplement == null) {
			return "";
		}
		else {
			return _insStaffComplement;
		}
	}

	@Override
	public void setInsStaffComplement(String insStaffComplement) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insStaffComplement = insStaffComplement;
	}

	@JSON
	@Override
	public String getInsIncomeSource() {
		if (_insIncomeSource == null) {
			return "";
		}
		else {
			return _insIncomeSource;
		}
	}

	@Override
	public void setInsIncomeSource(String insIncomeSource) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insIncomeSource = insIncomeSource;
	}

	@JSON
	@Override
	public String getInsOrgBodyType() {
		if (_insOrgBodyType == null) {
			return "";
		}
		else {
			return _insOrgBodyType;
		}
	}

	@Override
	public void setInsOrgBodyType(String insOrgBodyType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insOrgBodyType = insOrgBodyType;
	}

	@JSON
	@Override
	public String getInsBodyOwnOrgClient() {
		if (_insBodyOwnOrgClient == null) {
			return "";
		}
		else {
			return _insBodyOwnOrgClient;
		}
	}

	@Override
	public void setInsBodyOwnOrgClient(String insBodyOwnOrgClient) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insBodyOwnOrgClient = insBodyOwnOrgClient;
	}

	@JSON
	@Override
	public String getInsBodyOtherOrgClient() {
		if (_insBodyOtherOrgClient == null) {
			return "";
		}
		else {
			return _insBodyOtherOrgClient;
		}
	}

	@Override
	public void setInsBodyOtherOrgClient(String insBodyOtherOrgClient) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insBodyOtherOrgClient = insBodyOtherOrgClient;
	}

	@JSON
	@Override
	public long getJanaacApplicationId() {
		return _janaacApplicationId;
	}

	@Override
	public void setJanaacApplicationId(long janaacApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_janaacApplicationId = janaacApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalJanaacApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("janaacApplicationId"));
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(
				AccInsBodiesOrganization.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), AccInsBodiesOrganization.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AccInsBodiesOrganization toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, AccInsBodiesOrganization>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AccInsBodiesOrganizationImpl accInsBodiesOrganizationImpl =
			new AccInsBodiesOrganizationImpl();

		accInsBodiesOrganizationImpl.setUuid(getUuid());
		accInsBodiesOrganizationImpl.setAccInsBodiesOrganizationId(
			getAccInsBodiesOrganizationId());
		accInsBodiesOrganizationImpl.setGroupId(getGroupId());
		accInsBodiesOrganizationImpl.setCompanyId(getCompanyId());
		accInsBodiesOrganizationImpl.setUserId(getUserId());
		accInsBodiesOrganizationImpl.setUserName(getUserName());
		accInsBodiesOrganizationImpl.setCreateDate(getCreateDate());
		accInsBodiesOrganizationImpl.setModifiedDate(getModifiedDate());
		accInsBodiesOrganizationImpl.setInsLegalEntity(getInsLegalEntity());
		accInsBodiesOrganizationImpl.setInsLegalStatusEntity(
			getInsLegalStatusEntity());
		accInsBodiesOrganizationImpl.setInsBodyOrgPart(getInsBodyOrgPart());
		accInsBodiesOrganizationImpl.setInsPersonnelName(getInsPersonnelName());
		accInsBodiesOrganizationImpl.setInsPersonnelPosition(
			getInsPersonnelPosition());
		accInsBodiesOrganizationImpl.setInsStaffSize(getInsStaffSize());
		accInsBodiesOrganizationImpl.setInsStaffComplement(
			getInsStaffComplement());
		accInsBodiesOrganizationImpl.setInsIncomeSource(getInsIncomeSource());
		accInsBodiesOrganizationImpl.setInsOrgBodyType(getInsOrgBodyType());
		accInsBodiesOrganizationImpl.setInsBodyOwnOrgClient(
			getInsBodyOwnOrgClient());
		accInsBodiesOrganizationImpl.setInsBodyOtherOrgClient(
			getInsBodyOtherOrgClient());
		accInsBodiesOrganizationImpl.setJanaacApplicationId(
			getJanaacApplicationId());

		accInsBodiesOrganizationImpl.resetOriginalValues();

		return accInsBodiesOrganizationImpl;
	}

	@Override
	public AccInsBodiesOrganization cloneWithOriginalValues() {
		AccInsBodiesOrganizationImpl accInsBodiesOrganizationImpl =
			new AccInsBodiesOrganizationImpl();

		accInsBodiesOrganizationImpl.setUuid(
			this.<String>getColumnOriginalValue("uuid_"));
		accInsBodiesOrganizationImpl.setAccInsBodiesOrganizationId(
			this.<Long>getColumnOriginalValue("accInsBodiesOrganizationId"));
		accInsBodiesOrganizationImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		accInsBodiesOrganizationImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		accInsBodiesOrganizationImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		accInsBodiesOrganizationImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		accInsBodiesOrganizationImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		accInsBodiesOrganizationImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		accInsBodiesOrganizationImpl.setInsLegalEntity(
			this.<String>getColumnOriginalValue("insLegalEntity"));
		accInsBodiesOrganizationImpl.setInsLegalStatusEntity(
			this.<String>getColumnOriginalValue("insLegalStatusEntity"));
		accInsBodiesOrganizationImpl.setInsBodyOrgPart(
			this.<String>getColumnOriginalValue("insBodyOrgPart"));
		accInsBodiesOrganizationImpl.setInsPersonnelName(
			this.<String>getColumnOriginalValue("insPersonnelName"));
		accInsBodiesOrganizationImpl.setInsPersonnelPosition(
			this.<String>getColumnOriginalValue("insPersonnelPosition"));
		accInsBodiesOrganizationImpl.setInsStaffSize(
			this.<String>getColumnOriginalValue("insStaffSize"));
		accInsBodiesOrganizationImpl.setInsStaffComplement(
			this.<String>getColumnOriginalValue("insStaffComplement"));
		accInsBodiesOrganizationImpl.setInsIncomeSource(
			this.<String>getColumnOriginalValue("insIncomeSource"));
		accInsBodiesOrganizationImpl.setInsOrgBodyType(
			this.<String>getColumnOriginalValue("insOrgBodyType"));
		accInsBodiesOrganizationImpl.setInsBodyOwnOrgClient(
			this.<String>getColumnOriginalValue("insBodyOwnOrgClient"));
		accInsBodiesOrganizationImpl.setInsBodyOtherOrgClient(
			this.<String>getColumnOriginalValue("insBodyOtherOrgClient"));
		accInsBodiesOrganizationImpl.setJanaacApplicationId(
			this.<Long>getColumnOriginalValue("janaacApplicationId"));

		return accInsBodiesOrganizationImpl;
	}

	@Override
	public int compareTo(AccInsBodiesOrganization accInsBodiesOrganization) {
		long primaryKey = accInsBodiesOrganization.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof AccInsBodiesOrganization)) {
			return false;
		}

		AccInsBodiesOrganization accInsBodiesOrganization =
			(AccInsBodiesOrganization)object;

		long primaryKey = accInsBodiesOrganization.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<AccInsBodiesOrganization> toCacheModel() {
		AccInsBodiesOrganizationCacheModel accInsBodiesOrganizationCacheModel =
			new AccInsBodiesOrganizationCacheModel();

		accInsBodiesOrganizationCacheModel.uuid = getUuid();

		String uuid = accInsBodiesOrganizationCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			accInsBodiesOrganizationCacheModel.uuid = null;
		}

		accInsBodiesOrganizationCacheModel.accInsBodiesOrganizationId =
			getAccInsBodiesOrganizationId();

		accInsBodiesOrganizationCacheModel.groupId = getGroupId();

		accInsBodiesOrganizationCacheModel.companyId = getCompanyId();

		accInsBodiesOrganizationCacheModel.userId = getUserId();

		accInsBodiesOrganizationCacheModel.userName = getUserName();

		String userName = accInsBodiesOrganizationCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			accInsBodiesOrganizationCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			accInsBodiesOrganizationCacheModel.createDate =
				createDate.getTime();
		}
		else {
			accInsBodiesOrganizationCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			accInsBodiesOrganizationCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			accInsBodiesOrganizationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		accInsBodiesOrganizationCacheModel.insLegalEntity = getInsLegalEntity();

		String insLegalEntity =
			accInsBodiesOrganizationCacheModel.insLegalEntity;

		if ((insLegalEntity != null) && (insLegalEntity.length() == 0)) {
			accInsBodiesOrganizationCacheModel.insLegalEntity = null;
		}

		accInsBodiesOrganizationCacheModel.insLegalStatusEntity =
			getInsLegalStatusEntity();

		String insLegalStatusEntity =
			accInsBodiesOrganizationCacheModel.insLegalStatusEntity;

		if ((insLegalStatusEntity != null) &&
			(insLegalStatusEntity.length() == 0)) {

			accInsBodiesOrganizationCacheModel.insLegalStatusEntity = null;
		}

		accInsBodiesOrganizationCacheModel.insBodyOrgPart = getInsBodyOrgPart();

		String insBodyOrgPart =
			accInsBodiesOrganizationCacheModel.insBodyOrgPart;

		if ((insBodyOrgPart != null) && (insBodyOrgPart.length() == 0)) {
			accInsBodiesOrganizationCacheModel.insBodyOrgPart = null;
		}

		accInsBodiesOrganizationCacheModel.insPersonnelName =
			getInsPersonnelName();

		String insPersonnelName =
			accInsBodiesOrganizationCacheModel.insPersonnelName;

		if ((insPersonnelName != null) && (insPersonnelName.length() == 0)) {
			accInsBodiesOrganizationCacheModel.insPersonnelName = null;
		}

		accInsBodiesOrganizationCacheModel.insPersonnelPosition =
			getInsPersonnelPosition();

		String insPersonnelPosition =
			accInsBodiesOrganizationCacheModel.insPersonnelPosition;

		if ((insPersonnelPosition != null) &&
			(insPersonnelPosition.length() == 0)) {

			accInsBodiesOrganizationCacheModel.insPersonnelPosition = null;
		}

		accInsBodiesOrganizationCacheModel.insStaffSize = getInsStaffSize();

		String insStaffSize = accInsBodiesOrganizationCacheModel.insStaffSize;

		if ((insStaffSize != null) && (insStaffSize.length() == 0)) {
			accInsBodiesOrganizationCacheModel.insStaffSize = null;
		}

		accInsBodiesOrganizationCacheModel.insStaffComplement =
			getInsStaffComplement();

		String insStaffComplement =
			accInsBodiesOrganizationCacheModel.insStaffComplement;

		if ((insStaffComplement != null) &&
			(insStaffComplement.length() == 0)) {

			accInsBodiesOrganizationCacheModel.insStaffComplement = null;
		}

		accInsBodiesOrganizationCacheModel.insIncomeSource =
			getInsIncomeSource();

		String insIncomeSource =
			accInsBodiesOrganizationCacheModel.insIncomeSource;

		if ((insIncomeSource != null) && (insIncomeSource.length() == 0)) {
			accInsBodiesOrganizationCacheModel.insIncomeSource = null;
		}

		accInsBodiesOrganizationCacheModel.insOrgBodyType = getInsOrgBodyType();

		String insOrgBodyType =
			accInsBodiesOrganizationCacheModel.insOrgBodyType;

		if ((insOrgBodyType != null) && (insOrgBodyType.length() == 0)) {
			accInsBodiesOrganizationCacheModel.insOrgBodyType = null;
		}

		accInsBodiesOrganizationCacheModel.insBodyOwnOrgClient =
			getInsBodyOwnOrgClient();

		String insBodyOwnOrgClient =
			accInsBodiesOrganizationCacheModel.insBodyOwnOrgClient;

		if ((insBodyOwnOrgClient != null) &&
			(insBodyOwnOrgClient.length() == 0)) {

			accInsBodiesOrganizationCacheModel.insBodyOwnOrgClient = null;
		}

		accInsBodiesOrganizationCacheModel.insBodyOtherOrgClient =
			getInsBodyOtherOrgClient();

		String insBodyOtherOrgClient =
			accInsBodiesOrganizationCacheModel.insBodyOtherOrgClient;

		if ((insBodyOtherOrgClient != null) &&
			(insBodyOtherOrgClient.length() == 0)) {

			accInsBodiesOrganizationCacheModel.insBodyOtherOrgClient = null;
		}

		accInsBodiesOrganizationCacheModel.janaacApplicationId =
			getJanaacApplicationId();

		return accInsBodiesOrganizationCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<AccInsBodiesOrganization, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<AccInsBodiesOrganization, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AccInsBodiesOrganization, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(AccInsBodiesOrganization)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, AccInsBodiesOrganization>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						AccInsBodiesOrganization.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _accInsBodiesOrganizationId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _insLegalEntity;
	private String _insLegalStatusEntity;
	private String _insBodyOrgPart;
	private String _insPersonnelName;
	private String _insPersonnelPosition;
	private String _insStaffSize;
	private String _insStaffComplement;
	private String _insIncomeSource;
	private String _insOrgBodyType;
	private String _insBodyOwnOrgClient;
	private String _insBodyOtherOrgClient;
	private long _janaacApplicationId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<AccInsBodiesOrganization, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((AccInsBodiesOrganization)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put(
			"accInsBodiesOrganizationId", _accInsBodiesOrganizationId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("insLegalEntity", _insLegalEntity);
		_columnOriginalValues.put(
			"insLegalStatusEntity", _insLegalStatusEntity);
		_columnOriginalValues.put("insBodyOrgPart", _insBodyOrgPart);
		_columnOriginalValues.put("insPersonnelName", _insPersonnelName);
		_columnOriginalValues.put(
			"insPersonnelPosition", _insPersonnelPosition);
		_columnOriginalValues.put("insStaffSize", _insStaffSize);
		_columnOriginalValues.put("insStaffComplement", _insStaffComplement);
		_columnOriginalValues.put("insIncomeSource", _insIncomeSource);
		_columnOriginalValues.put("insOrgBodyType", _insOrgBodyType);
		_columnOriginalValues.put("insBodyOwnOrgClient", _insBodyOwnOrgClient);
		_columnOriginalValues.put(
			"insBodyOtherOrgClient", _insBodyOtherOrgClient);
		_columnOriginalValues.put("janaacApplicationId", _janaacApplicationId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("accInsBodiesOrganizationId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("userId", 16L);

		columnBitmasks.put("userName", 32L);

		columnBitmasks.put("createDate", 64L);

		columnBitmasks.put("modifiedDate", 128L);

		columnBitmasks.put("insLegalEntity", 256L);

		columnBitmasks.put("insLegalStatusEntity", 512L);

		columnBitmasks.put("insBodyOrgPart", 1024L);

		columnBitmasks.put("insPersonnelName", 2048L);

		columnBitmasks.put("insPersonnelPosition", 4096L);

		columnBitmasks.put("insStaffSize", 8192L);

		columnBitmasks.put("insStaffComplement", 16384L);

		columnBitmasks.put("insIncomeSource", 32768L);

		columnBitmasks.put("insOrgBodyType", 65536L);

		columnBitmasks.put("insBodyOwnOrgClient", 131072L);

		columnBitmasks.put("insBodyOtherOrgClient", 262144L);

		columnBitmasks.put("janaacApplicationId", 524288L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private AccInsBodiesOrganization _escapedModel;

}