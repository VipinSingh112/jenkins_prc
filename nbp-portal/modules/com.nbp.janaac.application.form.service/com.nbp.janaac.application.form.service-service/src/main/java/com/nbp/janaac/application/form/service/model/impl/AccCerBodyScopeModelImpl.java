/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.janaac.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.janaac.application.form.service.model.AccCerBodyScope;
import com.nbp.janaac.application.form.service.model.AccCerBodyScopeModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the AccCerBodyScope service. Represents a row in the &quot;nbp_janaac_acc_cer_scope&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>AccCerBodyScopeModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AccCerBodyScopeImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AccCerBodyScopeImpl
 * @generated
 */
@JSON(strict = true)
public class AccCerBodyScopeModelImpl
	extends BaseModelImpl<AccCerBodyScope> implements AccCerBodyScopeModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a acc cer body scope model instance should use the <code>AccCerBodyScope</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_janaac_acc_cer_scope";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"accCerBodyScopeId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"certificationStandard", Types.VARCHAR},
		{"expertiseField1", Types.VARCHAR}, {"expertiseField2", Types.VARCHAR},
		{"expertiseField3", Types.VARCHAR}, {"expertiseField4", Types.VARCHAR},
		{"expertiseField5", Types.VARCHAR}, {"expertiseField6", Types.VARCHAR},
		{"expertiseField7", Types.VARCHAR}, {"expertiseField8", Types.VARCHAR},
		{"expertiseField9", Types.VARCHAR}, {"expertiseField10", Types.VARCHAR},
		{"expertiseField11", Types.VARCHAR},
		{"expertiseField12", Types.VARCHAR},
		{"expertiseField13", Types.VARCHAR},
		{"expertiseField14", Types.VARCHAR},
		{"cerIntrestedParties", Types.VARCHAR},
		{"otherServices", Types.VARCHAR},
		{"otherServicesDescribe", Types.VARCHAR},
		{"establishedRelation", Types.VARCHAR},
		{"establishedRelDesc", Types.VARCHAR}, {"clientService", Types.VARCHAR},
		{"certificationCerBody", Types.VARCHAR},
		{"orgAccredited", Types.VARCHAR}, {"responsibleBody", Types.VARCHAR},
		{"accExpDate", Types.TIMESTAMP}, {"certBodyScope", Types.VARCHAR},
		{"janaacApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("accCerBodyScopeId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("certificationStandard", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("expertiseField1", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("expertiseField2", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("expertiseField3", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("expertiseField4", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("expertiseField5", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("expertiseField6", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("expertiseField7", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("expertiseField8", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("expertiseField9", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("expertiseField10", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("expertiseField11", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("expertiseField12", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("expertiseField13", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("expertiseField14", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cerIntrestedParties", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("otherServices", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("otherServicesDescribe", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("establishedRelation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("establishedRelDesc", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("clientService", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("certificationCerBody", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("orgAccredited", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("responsibleBody", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("accExpDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("certBodyScope", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("janaacApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_janaac_acc_cer_scope (uuid_ VARCHAR(75) null,accCerBodyScopeId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,certificationStandard TEXT null,expertiseField1 TEXT null,expertiseField2 TEXT null,expertiseField3 TEXT null,expertiseField4 TEXT null,expertiseField5 TEXT null,expertiseField6 TEXT null,expertiseField7 TEXT null,expertiseField8 TEXT null,expertiseField9 TEXT null,expertiseField10 TEXT null,expertiseField11 TEXT null,expertiseField12 TEXT null,expertiseField13 TEXT null,expertiseField14 TEXT null,cerIntrestedParties TEXT null,otherServices TEXT null,otherServicesDescribe TEXT null,establishedRelation TEXT null,establishedRelDesc TEXT null,clientService TEXT null,certificationCerBody TEXT null,orgAccredited TEXT null,responsibleBody TEXT null,accExpDate DATE null,certBodyScope TEXT null,janaacApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_janaac_acc_cer_scope";

	public static final String ORDER_BY_JPQL =
		" ORDER BY accCerBodyScope.accCerBodyScopeId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_janaac_acc_cer_scope.accCerBodyScopeId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long JANAACAPPLICATIONID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ACCCERBODYSCOPEID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public AccCerBodyScopeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _accCerBodyScopeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAccCerBodyScopeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _accCerBodyScopeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AccCerBodyScope.class;
	}

	@Override
	public String getModelClassName() {
		return AccCerBodyScope.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<AccCerBodyScope, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<AccCerBodyScope, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AccCerBodyScope, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((AccCerBodyScope)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<AccCerBodyScope, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<AccCerBodyScope, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(AccCerBodyScope)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<AccCerBodyScope, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<AccCerBodyScope, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<AccCerBodyScope, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<AccCerBodyScope, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<AccCerBodyScope, Object>>();

			attributeGetterFunctions.put("uuid", AccCerBodyScope::getUuid);
			attributeGetterFunctions.put(
				"accCerBodyScopeId", AccCerBodyScope::getAccCerBodyScopeId);
			attributeGetterFunctions.put(
				"groupId", AccCerBodyScope::getGroupId);
			attributeGetterFunctions.put(
				"companyId", AccCerBodyScope::getCompanyId);
			attributeGetterFunctions.put("userId", AccCerBodyScope::getUserId);
			attributeGetterFunctions.put(
				"userName", AccCerBodyScope::getUserName);
			attributeGetterFunctions.put(
				"createDate", AccCerBodyScope::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", AccCerBodyScope::getModifiedDate);
			attributeGetterFunctions.put(
				"certificationStandard",
				AccCerBodyScope::getCertificationStandard);
			attributeGetterFunctions.put(
				"expertiseField1", AccCerBodyScope::getExpertiseField1);
			attributeGetterFunctions.put(
				"expertiseField2", AccCerBodyScope::getExpertiseField2);
			attributeGetterFunctions.put(
				"expertiseField3", AccCerBodyScope::getExpertiseField3);
			attributeGetterFunctions.put(
				"expertiseField4", AccCerBodyScope::getExpertiseField4);
			attributeGetterFunctions.put(
				"expertiseField5", AccCerBodyScope::getExpertiseField5);
			attributeGetterFunctions.put(
				"expertiseField6", AccCerBodyScope::getExpertiseField6);
			attributeGetterFunctions.put(
				"expertiseField7", AccCerBodyScope::getExpertiseField7);
			attributeGetterFunctions.put(
				"expertiseField8", AccCerBodyScope::getExpertiseField8);
			attributeGetterFunctions.put(
				"expertiseField9", AccCerBodyScope::getExpertiseField9);
			attributeGetterFunctions.put(
				"expertiseField10", AccCerBodyScope::getExpertiseField10);
			attributeGetterFunctions.put(
				"expertiseField11", AccCerBodyScope::getExpertiseField11);
			attributeGetterFunctions.put(
				"expertiseField12", AccCerBodyScope::getExpertiseField12);
			attributeGetterFunctions.put(
				"expertiseField13", AccCerBodyScope::getExpertiseField13);
			attributeGetterFunctions.put(
				"expertiseField14", AccCerBodyScope::getExpertiseField14);
			attributeGetterFunctions.put(
				"cerIntrestedParties", AccCerBodyScope::getCerIntrestedParties);
			attributeGetterFunctions.put(
				"otherServices", AccCerBodyScope::getOtherServices);
			attributeGetterFunctions.put(
				"otherServicesDescribe",
				AccCerBodyScope::getOtherServicesDescribe);
			attributeGetterFunctions.put(
				"establishedRelation", AccCerBodyScope::getEstablishedRelation);
			attributeGetterFunctions.put(
				"establishedRelDesc", AccCerBodyScope::getEstablishedRelDesc);
			attributeGetterFunctions.put(
				"clientService", AccCerBodyScope::getClientService);
			attributeGetterFunctions.put(
				"certificationCerBody",
				AccCerBodyScope::getCertificationCerBody);
			attributeGetterFunctions.put(
				"orgAccredited", AccCerBodyScope::getOrgAccredited);
			attributeGetterFunctions.put(
				"responsibleBody", AccCerBodyScope::getResponsibleBody);
			attributeGetterFunctions.put(
				"accExpDate", AccCerBodyScope::getAccExpDate);
			attributeGetterFunctions.put(
				"certBodyScope", AccCerBodyScope::getCertBodyScope);
			attributeGetterFunctions.put(
				"janaacApplicationId", AccCerBodyScope::getJanaacApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<AccCerBodyScope, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<AccCerBodyScope, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap<String, BiConsumer<AccCerBodyScope, ?>>();

			attributeSetterBiConsumers.put(
				"uuid",
				(BiConsumer<AccCerBodyScope, String>)AccCerBodyScope::setUuid);
			attributeSetterBiConsumers.put(
				"accCerBodyScopeId",
				(BiConsumer<AccCerBodyScope, Long>)
					AccCerBodyScope::setAccCerBodyScopeId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<AccCerBodyScope, Long>)AccCerBodyScope::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<AccCerBodyScope, Long>)
					AccCerBodyScope::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<AccCerBodyScope, Long>)AccCerBodyScope::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<AccCerBodyScope, Date>)
					AccCerBodyScope::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<AccCerBodyScope, Date>)
					AccCerBodyScope::setModifiedDate);
			attributeSetterBiConsumers.put(
				"certificationStandard",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setCertificationStandard);
			attributeSetterBiConsumers.put(
				"expertiseField1",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setExpertiseField1);
			attributeSetterBiConsumers.put(
				"expertiseField2",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setExpertiseField2);
			attributeSetterBiConsumers.put(
				"expertiseField3",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setExpertiseField3);
			attributeSetterBiConsumers.put(
				"expertiseField4",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setExpertiseField4);
			attributeSetterBiConsumers.put(
				"expertiseField5",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setExpertiseField5);
			attributeSetterBiConsumers.put(
				"expertiseField6",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setExpertiseField6);
			attributeSetterBiConsumers.put(
				"expertiseField7",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setExpertiseField7);
			attributeSetterBiConsumers.put(
				"expertiseField8",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setExpertiseField8);
			attributeSetterBiConsumers.put(
				"expertiseField9",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setExpertiseField9);
			attributeSetterBiConsumers.put(
				"expertiseField10",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setExpertiseField10);
			attributeSetterBiConsumers.put(
				"expertiseField11",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setExpertiseField11);
			attributeSetterBiConsumers.put(
				"expertiseField12",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setExpertiseField12);
			attributeSetterBiConsumers.put(
				"expertiseField13",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setExpertiseField13);
			attributeSetterBiConsumers.put(
				"expertiseField14",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setExpertiseField14);
			attributeSetterBiConsumers.put(
				"cerIntrestedParties",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setCerIntrestedParties);
			attributeSetterBiConsumers.put(
				"otherServices",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setOtherServices);
			attributeSetterBiConsumers.put(
				"otherServicesDescribe",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setOtherServicesDescribe);
			attributeSetterBiConsumers.put(
				"establishedRelation",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setEstablishedRelation);
			attributeSetterBiConsumers.put(
				"establishedRelDesc",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setEstablishedRelDesc);
			attributeSetterBiConsumers.put(
				"clientService",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setClientService);
			attributeSetterBiConsumers.put(
				"certificationCerBody",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setCertificationCerBody);
			attributeSetterBiConsumers.put(
				"orgAccredited",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setOrgAccredited);
			attributeSetterBiConsumers.put(
				"responsibleBody",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setResponsibleBody);
			attributeSetterBiConsumers.put(
				"accExpDate",
				(BiConsumer<AccCerBodyScope, Date>)
					AccCerBodyScope::setAccExpDate);
			attributeSetterBiConsumers.put(
				"certBodyScope",
				(BiConsumer<AccCerBodyScope, String>)
					AccCerBodyScope::setCertBodyScope);
			attributeSetterBiConsumers.put(
				"janaacApplicationId",
				(BiConsumer<AccCerBodyScope, Long>)
					AccCerBodyScope::setJanaacApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getAccCerBodyScopeId() {
		return _accCerBodyScopeId;
	}

	@Override
	public void setAccCerBodyScopeId(long accCerBodyScopeId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_accCerBodyScopeId = accCerBodyScopeId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getCertificationStandard() {
		if (_certificationStandard == null) {
			return "";
		}
		else {
			return _certificationStandard;
		}
	}

	@Override
	public void setCertificationStandard(String certificationStandard) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_certificationStandard = certificationStandard;
	}

	@JSON
	@Override
	public String getExpertiseField1() {
		if (_expertiseField1 == null) {
			return "";
		}
		else {
			return _expertiseField1;
		}
	}

	@Override
	public void setExpertiseField1(String expertiseField1) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_expertiseField1 = expertiseField1;
	}

	@JSON
	@Override
	public String getExpertiseField2() {
		if (_expertiseField2 == null) {
			return "";
		}
		else {
			return _expertiseField2;
		}
	}

	@Override
	public void setExpertiseField2(String expertiseField2) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_expertiseField2 = expertiseField2;
	}

	@JSON
	@Override
	public String getExpertiseField3() {
		if (_expertiseField3 == null) {
			return "";
		}
		else {
			return _expertiseField3;
		}
	}

	@Override
	public void setExpertiseField3(String expertiseField3) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_expertiseField3 = expertiseField3;
	}

	@JSON
	@Override
	public String getExpertiseField4() {
		if (_expertiseField4 == null) {
			return "";
		}
		else {
			return _expertiseField4;
		}
	}

	@Override
	public void setExpertiseField4(String expertiseField4) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_expertiseField4 = expertiseField4;
	}

	@JSON
	@Override
	public String getExpertiseField5() {
		if (_expertiseField5 == null) {
			return "";
		}
		else {
			return _expertiseField5;
		}
	}

	@Override
	public void setExpertiseField5(String expertiseField5) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_expertiseField5 = expertiseField5;
	}

	@JSON
	@Override
	public String getExpertiseField6() {
		if (_expertiseField6 == null) {
			return "";
		}
		else {
			return _expertiseField6;
		}
	}

	@Override
	public void setExpertiseField6(String expertiseField6) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_expertiseField6 = expertiseField6;
	}

	@JSON
	@Override
	public String getExpertiseField7() {
		if (_expertiseField7 == null) {
			return "";
		}
		else {
			return _expertiseField7;
		}
	}

	@Override
	public void setExpertiseField7(String expertiseField7) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_expertiseField7 = expertiseField7;
	}

	@JSON
	@Override
	public String getExpertiseField8() {
		if (_expertiseField8 == null) {
			return "";
		}
		else {
			return _expertiseField8;
		}
	}

	@Override
	public void setExpertiseField8(String expertiseField8) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_expertiseField8 = expertiseField8;
	}

	@JSON
	@Override
	public String getExpertiseField9() {
		if (_expertiseField9 == null) {
			return "";
		}
		else {
			return _expertiseField9;
		}
	}

	@Override
	public void setExpertiseField9(String expertiseField9) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_expertiseField9 = expertiseField9;
	}

	@JSON
	@Override
	public String getExpertiseField10() {
		if (_expertiseField10 == null) {
			return "";
		}
		else {
			return _expertiseField10;
		}
	}

	@Override
	public void setExpertiseField10(String expertiseField10) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_expertiseField10 = expertiseField10;
	}

	@JSON
	@Override
	public String getExpertiseField11() {
		if (_expertiseField11 == null) {
			return "";
		}
		else {
			return _expertiseField11;
		}
	}

	@Override
	public void setExpertiseField11(String expertiseField11) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_expertiseField11 = expertiseField11;
	}

	@JSON
	@Override
	public String getExpertiseField12() {
		if (_expertiseField12 == null) {
			return "";
		}
		else {
			return _expertiseField12;
		}
	}

	@Override
	public void setExpertiseField12(String expertiseField12) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_expertiseField12 = expertiseField12;
	}

	@JSON
	@Override
	public String getExpertiseField13() {
		if (_expertiseField13 == null) {
			return "";
		}
		else {
			return _expertiseField13;
		}
	}

	@Override
	public void setExpertiseField13(String expertiseField13) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_expertiseField13 = expertiseField13;
	}

	@JSON
	@Override
	public String getExpertiseField14() {
		if (_expertiseField14 == null) {
			return "";
		}
		else {
			return _expertiseField14;
		}
	}

	@Override
	public void setExpertiseField14(String expertiseField14) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_expertiseField14 = expertiseField14;
	}

	@JSON
	@Override
	public String getCerIntrestedParties() {
		if (_cerIntrestedParties == null) {
			return "";
		}
		else {
			return _cerIntrestedParties;
		}
	}

	@Override
	public void setCerIntrestedParties(String cerIntrestedParties) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cerIntrestedParties = cerIntrestedParties;
	}

	@JSON
	@Override
	public String getOtherServices() {
		if (_otherServices == null) {
			return "";
		}
		else {
			return _otherServices;
		}
	}

	@Override
	public void setOtherServices(String otherServices) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_otherServices = otherServices;
	}

	@JSON
	@Override
	public String getOtherServicesDescribe() {
		if (_otherServicesDescribe == null) {
			return "";
		}
		else {
			return _otherServicesDescribe;
		}
	}

	@Override
	public void setOtherServicesDescribe(String otherServicesDescribe) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_otherServicesDescribe = otherServicesDescribe;
	}

	@JSON
	@Override
	public String getEstablishedRelation() {
		if (_establishedRelation == null) {
			return "";
		}
		else {
			return _establishedRelation;
		}
	}

	@Override
	public void setEstablishedRelation(String establishedRelation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_establishedRelation = establishedRelation;
	}

	@JSON
	@Override
	public String getEstablishedRelDesc() {
		if (_establishedRelDesc == null) {
			return "";
		}
		else {
			return _establishedRelDesc;
		}
	}

	@Override
	public void setEstablishedRelDesc(String establishedRelDesc) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_establishedRelDesc = establishedRelDesc;
	}

	@JSON
	@Override
	public String getClientService() {
		if (_clientService == null) {
			return "";
		}
		else {
			return _clientService;
		}
	}

	@Override
	public void setClientService(String clientService) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_clientService = clientService;
	}

	@JSON
	@Override
	public String getCertificationCerBody() {
		if (_certificationCerBody == null) {
			return "";
		}
		else {
			return _certificationCerBody;
		}
	}

	@Override
	public void setCertificationCerBody(String certificationCerBody) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_certificationCerBody = certificationCerBody;
	}

	@JSON
	@Override
	public String getOrgAccredited() {
		if (_orgAccredited == null) {
			return "";
		}
		else {
			return _orgAccredited;
		}
	}

	@Override
	public void setOrgAccredited(String orgAccredited) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_orgAccredited = orgAccredited;
	}

	@JSON
	@Override
	public String getResponsibleBody() {
		if (_responsibleBody == null) {
			return "";
		}
		else {
			return _responsibleBody;
		}
	}

	@Override
	public void setResponsibleBody(String responsibleBody) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_responsibleBody = responsibleBody;
	}

	@JSON
	@Override
	public Date getAccExpDate() {
		return _accExpDate;
	}

	@Override
	public void setAccExpDate(Date accExpDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_accExpDate = accExpDate;
	}

	@JSON
	@Override
	public String getCertBodyScope() {
		if (_certBodyScope == null) {
			return "";
		}
		else {
			return _certBodyScope;
		}
	}

	@Override
	public void setCertBodyScope(String certBodyScope) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_certBodyScope = certBodyScope;
	}

	@JSON
	@Override
	public long getJanaacApplicationId() {
		return _janaacApplicationId;
	}

	@Override
	public void setJanaacApplicationId(long janaacApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_janaacApplicationId = janaacApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalJanaacApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("janaacApplicationId"));
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(AccCerBodyScope.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), AccCerBodyScope.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AccCerBodyScope toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, AccCerBodyScope>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AccCerBodyScopeImpl accCerBodyScopeImpl = new AccCerBodyScopeImpl();

		accCerBodyScopeImpl.setUuid(getUuid());
		accCerBodyScopeImpl.setAccCerBodyScopeId(getAccCerBodyScopeId());
		accCerBodyScopeImpl.setGroupId(getGroupId());
		accCerBodyScopeImpl.setCompanyId(getCompanyId());
		accCerBodyScopeImpl.setUserId(getUserId());
		accCerBodyScopeImpl.setUserName(getUserName());
		accCerBodyScopeImpl.setCreateDate(getCreateDate());
		accCerBodyScopeImpl.setModifiedDate(getModifiedDate());
		accCerBodyScopeImpl.setCertificationStandard(
			getCertificationStandard());
		accCerBodyScopeImpl.setExpertiseField1(getExpertiseField1());
		accCerBodyScopeImpl.setExpertiseField2(getExpertiseField2());
		accCerBodyScopeImpl.setExpertiseField3(getExpertiseField3());
		accCerBodyScopeImpl.setExpertiseField4(getExpertiseField4());
		accCerBodyScopeImpl.setExpertiseField5(getExpertiseField5());
		accCerBodyScopeImpl.setExpertiseField6(getExpertiseField6());
		accCerBodyScopeImpl.setExpertiseField7(getExpertiseField7());
		accCerBodyScopeImpl.setExpertiseField8(getExpertiseField8());
		accCerBodyScopeImpl.setExpertiseField9(getExpertiseField9());
		accCerBodyScopeImpl.setExpertiseField10(getExpertiseField10());
		accCerBodyScopeImpl.setExpertiseField11(getExpertiseField11());
		accCerBodyScopeImpl.setExpertiseField12(getExpertiseField12());
		accCerBodyScopeImpl.setExpertiseField13(getExpertiseField13());
		accCerBodyScopeImpl.setExpertiseField14(getExpertiseField14());
		accCerBodyScopeImpl.setCerIntrestedParties(getCerIntrestedParties());
		accCerBodyScopeImpl.setOtherServices(getOtherServices());
		accCerBodyScopeImpl.setOtherServicesDescribe(
			getOtherServicesDescribe());
		accCerBodyScopeImpl.setEstablishedRelation(getEstablishedRelation());
		accCerBodyScopeImpl.setEstablishedRelDesc(getEstablishedRelDesc());
		accCerBodyScopeImpl.setClientService(getClientService());
		accCerBodyScopeImpl.setCertificationCerBody(getCertificationCerBody());
		accCerBodyScopeImpl.setOrgAccredited(getOrgAccredited());
		accCerBodyScopeImpl.setResponsibleBody(getResponsibleBody());
		accCerBodyScopeImpl.setAccExpDate(getAccExpDate());
		accCerBodyScopeImpl.setCertBodyScope(getCertBodyScope());
		accCerBodyScopeImpl.setJanaacApplicationId(getJanaacApplicationId());

		accCerBodyScopeImpl.resetOriginalValues();

		return accCerBodyScopeImpl;
	}

	@Override
	public AccCerBodyScope cloneWithOriginalValues() {
		AccCerBodyScopeImpl accCerBodyScopeImpl = new AccCerBodyScopeImpl();

		accCerBodyScopeImpl.setUuid(
			this.<String>getColumnOriginalValue("uuid_"));
		accCerBodyScopeImpl.setAccCerBodyScopeId(
			this.<Long>getColumnOriginalValue("accCerBodyScopeId"));
		accCerBodyScopeImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		accCerBodyScopeImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		accCerBodyScopeImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		accCerBodyScopeImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		accCerBodyScopeImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		accCerBodyScopeImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		accCerBodyScopeImpl.setCertificationStandard(
			this.<String>getColumnOriginalValue("certificationStandard"));
		accCerBodyScopeImpl.setExpertiseField1(
			this.<String>getColumnOriginalValue("expertiseField1"));
		accCerBodyScopeImpl.setExpertiseField2(
			this.<String>getColumnOriginalValue("expertiseField2"));
		accCerBodyScopeImpl.setExpertiseField3(
			this.<String>getColumnOriginalValue("expertiseField3"));
		accCerBodyScopeImpl.setExpertiseField4(
			this.<String>getColumnOriginalValue("expertiseField4"));
		accCerBodyScopeImpl.setExpertiseField5(
			this.<String>getColumnOriginalValue("expertiseField5"));
		accCerBodyScopeImpl.setExpertiseField6(
			this.<String>getColumnOriginalValue("expertiseField6"));
		accCerBodyScopeImpl.setExpertiseField7(
			this.<String>getColumnOriginalValue("expertiseField7"));
		accCerBodyScopeImpl.setExpertiseField8(
			this.<String>getColumnOriginalValue("expertiseField8"));
		accCerBodyScopeImpl.setExpertiseField9(
			this.<String>getColumnOriginalValue("expertiseField9"));
		accCerBodyScopeImpl.setExpertiseField10(
			this.<String>getColumnOriginalValue("expertiseField10"));
		accCerBodyScopeImpl.setExpertiseField11(
			this.<String>getColumnOriginalValue("expertiseField11"));
		accCerBodyScopeImpl.setExpertiseField12(
			this.<String>getColumnOriginalValue("expertiseField12"));
		accCerBodyScopeImpl.setExpertiseField13(
			this.<String>getColumnOriginalValue("expertiseField13"));
		accCerBodyScopeImpl.setExpertiseField14(
			this.<String>getColumnOriginalValue("expertiseField14"));
		accCerBodyScopeImpl.setCerIntrestedParties(
			this.<String>getColumnOriginalValue("cerIntrestedParties"));
		accCerBodyScopeImpl.setOtherServices(
			this.<String>getColumnOriginalValue("otherServices"));
		accCerBodyScopeImpl.setOtherServicesDescribe(
			this.<String>getColumnOriginalValue("otherServicesDescribe"));
		accCerBodyScopeImpl.setEstablishedRelation(
			this.<String>getColumnOriginalValue("establishedRelation"));
		accCerBodyScopeImpl.setEstablishedRelDesc(
			this.<String>getColumnOriginalValue("establishedRelDesc"));
		accCerBodyScopeImpl.setClientService(
			this.<String>getColumnOriginalValue("clientService"));
		accCerBodyScopeImpl.setCertificationCerBody(
			this.<String>getColumnOriginalValue("certificationCerBody"));
		accCerBodyScopeImpl.setOrgAccredited(
			this.<String>getColumnOriginalValue("orgAccredited"));
		accCerBodyScopeImpl.setResponsibleBody(
			this.<String>getColumnOriginalValue("responsibleBody"));
		accCerBodyScopeImpl.setAccExpDate(
			this.<Date>getColumnOriginalValue("accExpDate"));
		accCerBodyScopeImpl.setCertBodyScope(
			this.<String>getColumnOriginalValue("certBodyScope"));
		accCerBodyScopeImpl.setJanaacApplicationId(
			this.<Long>getColumnOriginalValue("janaacApplicationId"));

		return accCerBodyScopeImpl;
	}

	@Override
	public int compareTo(AccCerBodyScope accCerBodyScope) {
		long primaryKey = accCerBodyScope.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof AccCerBodyScope)) {
			return false;
		}

		AccCerBodyScope accCerBodyScope = (AccCerBodyScope)object;

		long primaryKey = accCerBodyScope.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<AccCerBodyScope> toCacheModel() {
		AccCerBodyScopeCacheModel accCerBodyScopeCacheModel =
			new AccCerBodyScopeCacheModel();

		accCerBodyScopeCacheModel.uuid = getUuid();

		String uuid = accCerBodyScopeCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			accCerBodyScopeCacheModel.uuid = null;
		}

		accCerBodyScopeCacheModel.accCerBodyScopeId = getAccCerBodyScopeId();

		accCerBodyScopeCacheModel.groupId = getGroupId();

		accCerBodyScopeCacheModel.companyId = getCompanyId();

		accCerBodyScopeCacheModel.userId = getUserId();

		accCerBodyScopeCacheModel.userName = getUserName();

		String userName = accCerBodyScopeCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			accCerBodyScopeCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			accCerBodyScopeCacheModel.createDate = createDate.getTime();
		}
		else {
			accCerBodyScopeCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			accCerBodyScopeCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			accCerBodyScopeCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		accCerBodyScopeCacheModel.certificationStandard =
			getCertificationStandard();

		String certificationStandard =
			accCerBodyScopeCacheModel.certificationStandard;

		if ((certificationStandard != null) &&
			(certificationStandard.length() == 0)) {

			accCerBodyScopeCacheModel.certificationStandard = null;
		}

		accCerBodyScopeCacheModel.expertiseField1 = getExpertiseField1();

		String expertiseField1 = accCerBodyScopeCacheModel.expertiseField1;

		if ((expertiseField1 != null) && (expertiseField1.length() == 0)) {
			accCerBodyScopeCacheModel.expertiseField1 = null;
		}

		accCerBodyScopeCacheModel.expertiseField2 = getExpertiseField2();

		String expertiseField2 = accCerBodyScopeCacheModel.expertiseField2;

		if ((expertiseField2 != null) && (expertiseField2.length() == 0)) {
			accCerBodyScopeCacheModel.expertiseField2 = null;
		}

		accCerBodyScopeCacheModel.expertiseField3 = getExpertiseField3();

		String expertiseField3 = accCerBodyScopeCacheModel.expertiseField3;

		if ((expertiseField3 != null) && (expertiseField3.length() == 0)) {
			accCerBodyScopeCacheModel.expertiseField3 = null;
		}

		accCerBodyScopeCacheModel.expertiseField4 = getExpertiseField4();

		String expertiseField4 = accCerBodyScopeCacheModel.expertiseField4;

		if ((expertiseField4 != null) && (expertiseField4.length() == 0)) {
			accCerBodyScopeCacheModel.expertiseField4 = null;
		}

		accCerBodyScopeCacheModel.expertiseField5 = getExpertiseField5();

		String expertiseField5 = accCerBodyScopeCacheModel.expertiseField5;

		if ((expertiseField5 != null) && (expertiseField5.length() == 0)) {
			accCerBodyScopeCacheModel.expertiseField5 = null;
		}

		accCerBodyScopeCacheModel.expertiseField6 = getExpertiseField6();

		String expertiseField6 = accCerBodyScopeCacheModel.expertiseField6;

		if ((expertiseField6 != null) && (expertiseField6.length() == 0)) {
			accCerBodyScopeCacheModel.expertiseField6 = null;
		}

		accCerBodyScopeCacheModel.expertiseField7 = getExpertiseField7();

		String expertiseField7 = accCerBodyScopeCacheModel.expertiseField7;

		if ((expertiseField7 != null) && (expertiseField7.length() == 0)) {
			accCerBodyScopeCacheModel.expertiseField7 = null;
		}

		accCerBodyScopeCacheModel.expertiseField8 = getExpertiseField8();

		String expertiseField8 = accCerBodyScopeCacheModel.expertiseField8;

		if ((expertiseField8 != null) && (expertiseField8.length() == 0)) {
			accCerBodyScopeCacheModel.expertiseField8 = null;
		}

		accCerBodyScopeCacheModel.expertiseField9 = getExpertiseField9();

		String expertiseField9 = accCerBodyScopeCacheModel.expertiseField9;

		if ((expertiseField9 != null) && (expertiseField9.length() == 0)) {
			accCerBodyScopeCacheModel.expertiseField9 = null;
		}

		accCerBodyScopeCacheModel.expertiseField10 = getExpertiseField10();

		String expertiseField10 = accCerBodyScopeCacheModel.expertiseField10;

		if ((expertiseField10 != null) && (expertiseField10.length() == 0)) {
			accCerBodyScopeCacheModel.expertiseField10 = null;
		}

		accCerBodyScopeCacheModel.expertiseField11 = getExpertiseField11();

		String expertiseField11 = accCerBodyScopeCacheModel.expertiseField11;

		if ((expertiseField11 != null) && (expertiseField11.length() == 0)) {
			accCerBodyScopeCacheModel.expertiseField11 = null;
		}

		accCerBodyScopeCacheModel.expertiseField12 = getExpertiseField12();

		String expertiseField12 = accCerBodyScopeCacheModel.expertiseField12;

		if ((expertiseField12 != null) && (expertiseField12.length() == 0)) {
			accCerBodyScopeCacheModel.expertiseField12 = null;
		}

		accCerBodyScopeCacheModel.expertiseField13 = getExpertiseField13();

		String expertiseField13 = accCerBodyScopeCacheModel.expertiseField13;

		if ((expertiseField13 != null) && (expertiseField13.length() == 0)) {
			accCerBodyScopeCacheModel.expertiseField13 = null;
		}

		accCerBodyScopeCacheModel.expertiseField14 = getExpertiseField14();

		String expertiseField14 = accCerBodyScopeCacheModel.expertiseField14;

		if ((expertiseField14 != null) && (expertiseField14.length() == 0)) {
			accCerBodyScopeCacheModel.expertiseField14 = null;
		}

		accCerBodyScopeCacheModel.cerIntrestedParties =
			getCerIntrestedParties();

		String cerIntrestedParties =
			accCerBodyScopeCacheModel.cerIntrestedParties;

		if ((cerIntrestedParties != null) &&
			(cerIntrestedParties.length() == 0)) {

			accCerBodyScopeCacheModel.cerIntrestedParties = null;
		}

		accCerBodyScopeCacheModel.otherServices = getOtherServices();

		String otherServices = accCerBodyScopeCacheModel.otherServices;

		if ((otherServices != null) && (otherServices.length() == 0)) {
			accCerBodyScopeCacheModel.otherServices = null;
		}

		accCerBodyScopeCacheModel.otherServicesDescribe =
			getOtherServicesDescribe();

		String otherServicesDescribe =
			accCerBodyScopeCacheModel.otherServicesDescribe;

		if ((otherServicesDescribe != null) &&
			(otherServicesDescribe.length() == 0)) {

			accCerBodyScopeCacheModel.otherServicesDescribe = null;
		}

		accCerBodyScopeCacheModel.establishedRelation =
			getEstablishedRelation();

		String establishedRelation =
			accCerBodyScopeCacheModel.establishedRelation;

		if ((establishedRelation != null) &&
			(establishedRelation.length() == 0)) {

			accCerBodyScopeCacheModel.establishedRelation = null;
		}

		accCerBodyScopeCacheModel.establishedRelDesc = getEstablishedRelDesc();

		String establishedRelDesc =
			accCerBodyScopeCacheModel.establishedRelDesc;

		if ((establishedRelDesc != null) &&
			(establishedRelDesc.length() == 0)) {

			accCerBodyScopeCacheModel.establishedRelDesc = null;
		}

		accCerBodyScopeCacheModel.clientService = getClientService();

		String clientService = accCerBodyScopeCacheModel.clientService;

		if ((clientService != null) && (clientService.length() == 0)) {
			accCerBodyScopeCacheModel.clientService = null;
		}

		accCerBodyScopeCacheModel.certificationCerBody =
			getCertificationCerBody();

		String certificationCerBody =
			accCerBodyScopeCacheModel.certificationCerBody;

		if ((certificationCerBody != null) &&
			(certificationCerBody.length() == 0)) {

			accCerBodyScopeCacheModel.certificationCerBody = null;
		}

		accCerBodyScopeCacheModel.orgAccredited = getOrgAccredited();

		String orgAccredited = accCerBodyScopeCacheModel.orgAccredited;

		if ((orgAccredited != null) && (orgAccredited.length() == 0)) {
			accCerBodyScopeCacheModel.orgAccredited = null;
		}

		accCerBodyScopeCacheModel.responsibleBody = getResponsibleBody();

		String responsibleBody = accCerBodyScopeCacheModel.responsibleBody;

		if ((responsibleBody != null) && (responsibleBody.length() == 0)) {
			accCerBodyScopeCacheModel.responsibleBody = null;
		}

		Date accExpDate = getAccExpDate();

		if (accExpDate != null) {
			accCerBodyScopeCacheModel.accExpDate = accExpDate.getTime();
		}
		else {
			accCerBodyScopeCacheModel.accExpDate = Long.MIN_VALUE;
		}

		accCerBodyScopeCacheModel.certBodyScope = getCertBodyScope();

		String certBodyScope = accCerBodyScopeCacheModel.certBodyScope;

		if ((certBodyScope != null) && (certBodyScope.length() == 0)) {
			accCerBodyScopeCacheModel.certBodyScope = null;
		}

		accCerBodyScopeCacheModel.janaacApplicationId =
			getJanaacApplicationId();

		return accCerBodyScopeCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<AccCerBodyScope, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<AccCerBodyScope, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AccCerBodyScope, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((AccCerBodyScope)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, AccCerBodyScope>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					AccCerBodyScope.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _accCerBodyScopeId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _certificationStandard;
	private String _expertiseField1;
	private String _expertiseField2;
	private String _expertiseField3;
	private String _expertiseField4;
	private String _expertiseField5;
	private String _expertiseField6;
	private String _expertiseField7;
	private String _expertiseField8;
	private String _expertiseField9;
	private String _expertiseField10;
	private String _expertiseField11;
	private String _expertiseField12;
	private String _expertiseField13;
	private String _expertiseField14;
	private String _cerIntrestedParties;
	private String _otherServices;
	private String _otherServicesDescribe;
	private String _establishedRelation;
	private String _establishedRelDesc;
	private String _clientService;
	private String _certificationCerBody;
	private String _orgAccredited;
	private String _responsibleBody;
	private Date _accExpDate;
	private String _certBodyScope;
	private long _janaacApplicationId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<AccCerBodyScope, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((AccCerBodyScope)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("accCerBodyScopeId", _accCerBodyScopeId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"certificationStandard", _certificationStandard);
		_columnOriginalValues.put("expertiseField1", _expertiseField1);
		_columnOriginalValues.put("expertiseField2", _expertiseField2);
		_columnOriginalValues.put("expertiseField3", _expertiseField3);
		_columnOriginalValues.put("expertiseField4", _expertiseField4);
		_columnOriginalValues.put("expertiseField5", _expertiseField5);
		_columnOriginalValues.put("expertiseField6", _expertiseField6);
		_columnOriginalValues.put("expertiseField7", _expertiseField7);
		_columnOriginalValues.put("expertiseField8", _expertiseField8);
		_columnOriginalValues.put("expertiseField9", _expertiseField9);
		_columnOriginalValues.put("expertiseField10", _expertiseField10);
		_columnOriginalValues.put("expertiseField11", _expertiseField11);
		_columnOriginalValues.put("expertiseField12", _expertiseField12);
		_columnOriginalValues.put("expertiseField13", _expertiseField13);
		_columnOriginalValues.put("expertiseField14", _expertiseField14);
		_columnOriginalValues.put("cerIntrestedParties", _cerIntrestedParties);
		_columnOriginalValues.put("otherServices", _otherServices);
		_columnOriginalValues.put(
			"otherServicesDescribe", _otherServicesDescribe);
		_columnOriginalValues.put("establishedRelation", _establishedRelation);
		_columnOriginalValues.put("establishedRelDesc", _establishedRelDesc);
		_columnOriginalValues.put("clientService", _clientService);
		_columnOriginalValues.put(
			"certificationCerBody", _certificationCerBody);
		_columnOriginalValues.put("orgAccredited", _orgAccredited);
		_columnOriginalValues.put("responsibleBody", _responsibleBody);
		_columnOriginalValues.put("accExpDate", _accExpDate);
		_columnOriginalValues.put("certBodyScope", _certBodyScope);
		_columnOriginalValues.put("janaacApplicationId", _janaacApplicationId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("accCerBodyScopeId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("userId", 16L);

		columnBitmasks.put("userName", 32L);

		columnBitmasks.put("createDate", 64L);

		columnBitmasks.put("modifiedDate", 128L);

		columnBitmasks.put("certificationStandard", 256L);

		columnBitmasks.put("expertiseField1", 512L);

		columnBitmasks.put("expertiseField2", 1024L);

		columnBitmasks.put("expertiseField3", 2048L);

		columnBitmasks.put("expertiseField4", 4096L);

		columnBitmasks.put("expertiseField5", 8192L);

		columnBitmasks.put("expertiseField6", 16384L);

		columnBitmasks.put("expertiseField7", 32768L);

		columnBitmasks.put("expertiseField8", 65536L);

		columnBitmasks.put("expertiseField9", 131072L);

		columnBitmasks.put("expertiseField10", 262144L);

		columnBitmasks.put("expertiseField11", 524288L);

		columnBitmasks.put("expertiseField12", 1048576L);

		columnBitmasks.put("expertiseField13", 2097152L);

		columnBitmasks.put("expertiseField14", 4194304L);

		columnBitmasks.put("cerIntrestedParties", 8388608L);

		columnBitmasks.put("otherServices", 16777216L);

		columnBitmasks.put("otherServicesDescribe", 33554432L);

		columnBitmasks.put("establishedRelation", 67108864L);

		columnBitmasks.put("establishedRelDesc", 134217728L);

		columnBitmasks.put("clientService", 268435456L);

		columnBitmasks.put("certificationCerBody", 536870912L);

		columnBitmasks.put("orgAccredited", 1073741824L);

		columnBitmasks.put("responsibleBody", 2147483648L);

		columnBitmasks.put("accExpDate", 4294967296L);

		columnBitmasks.put("certBodyScope", 8589934592L);

		columnBitmasks.put("janaacApplicationId", 17179869184L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private AccCerBodyScope _escapedModel;

}