/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.janaac.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.janaac.application.form.service.model.AccInsBodiesOtherReq;
import com.nbp.janaac.application.form.service.model.AccInsBodiesOtherReqModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the AccInsBodiesOtherReq service. Represents a row in the &quot;nbp_janaac_acc_ins_body_other&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>AccInsBodiesOtherReqModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AccInsBodiesOtherReqImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AccInsBodiesOtherReqImpl
 * @generated
 */
@JSON(strict = true)
public class AccInsBodiesOtherReqModelImpl
	extends BaseModelImpl<AccInsBodiesOtherReq>
	implements AccInsBodiesOtherReqModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a acc ins bodies other req model instance should use the <code>AccInsBodiesOtherReq</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_janaac_acc_ins_body_other";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"accInsBodiesOtherReqId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"applicationFees", Types.VARCHAR}, {"insPaymentMethod", Types.VARCHAR},
		{"applicantRepName", Types.VARCHAR},
		{"applicantRepPosition", Types.VARCHAR},
		{"signatureDate", Types.TIMESTAMP},
		{"janaacApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("accInsBodiesOtherReqId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("applicationFees", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insPaymentMethod", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantRepName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantRepPosition", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("signatureDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("janaacApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_janaac_acc_ins_body_other (uuid_ VARCHAR(75) null,accInsBodiesOtherReqId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,applicationFees VARCHAR(75) null,insPaymentMethod VARCHAR(75) null,applicantRepName VARCHAR(75) null,applicantRepPosition VARCHAR(75) null,signatureDate DATE null,janaacApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_janaac_acc_ins_body_other";

	public static final String ORDER_BY_JPQL =
		" ORDER BY accInsBodiesOtherReq.accInsBodiesOtherReqId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_janaac_acc_ins_body_other.accInsBodiesOtherReqId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long JANAACAPPLICATIONID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ACCINSBODIESOTHERREQID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public AccInsBodiesOtherReqModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _accInsBodiesOtherReqId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAccInsBodiesOtherReqId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _accInsBodiesOtherReqId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AccInsBodiesOtherReq.class;
	}

	@Override
	public String getModelClassName() {
		return AccInsBodiesOtherReq.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<AccInsBodiesOtherReq, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<AccInsBodiesOtherReq, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AccInsBodiesOtherReq, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((AccInsBodiesOtherReq)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<AccInsBodiesOtherReq, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<AccInsBodiesOtherReq, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(AccInsBodiesOtherReq)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<AccInsBodiesOtherReq, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<AccInsBodiesOtherReq, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<AccInsBodiesOtherReq, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<AccInsBodiesOtherReq, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<AccInsBodiesOtherReq, Object>>();

			attributeGetterFunctions.put("uuid", AccInsBodiesOtherReq::getUuid);
			attributeGetterFunctions.put(
				"accInsBodiesOtherReqId",
				AccInsBodiesOtherReq::getAccInsBodiesOtherReqId);
			attributeGetterFunctions.put(
				"groupId", AccInsBodiesOtherReq::getGroupId);
			attributeGetterFunctions.put(
				"companyId", AccInsBodiesOtherReq::getCompanyId);
			attributeGetterFunctions.put(
				"userId", AccInsBodiesOtherReq::getUserId);
			attributeGetterFunctions.put(
				"userName", AccInsBodiesOtherReq::getUserName);
			attributeGetterFunctions.put(
				"createDate", AccInsBodiesOtherReq::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", AccInsBodiesOtherReq::getModifiedDate);
			attributeGetterFunctions.put(
				"applicationFees", AccInsBodiesOtherReq::getApplicationFees);
			attributeGetterFunctions.put(
				"insPaymentMethod", AccInsBodiesOtherReq::getInsPaymentMethod);
			attributeGetterFunctions.put(
				"applicantRepName", AccInsBodiesOtherReq::getApplicantRepName);
			attributeGetterFunctions.put(
				"applicantRepPosition",
				AccInsBodiesOtherReq::getApplicantRepPosition);
			attributeGetterFunctions.put(
				"signatureDate", AccInsBodiesOtherReq::getSignatureDate);
			attributeGetterFunctions.put(
				"janaacApplicationId",
				AccInsBodiesOtherReq::getJanaacApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<AccInsBodiesOtherReq, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<AccInsBodiesOtherReq, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<AccInsBodiesOtherReq, ?>>();

			attributeSetterBiConsumers.put(
				"uuid",
				(BiConsumer<AccInsBodiesOtherReq, String>)
					AccInsBodiesOtherReq::setUuid);
			attributeSetterBiConsumers.put(
				"accInsBodiesOtherReqId",
				(BiConsumer<AccInsBodiesOtherReq, Long>)
					AccInsBodiesOtherReq::setAccInsBodiesOtherReqId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<AccInsBodiesOtherReq, Long>)
					AccInsBodiesOtherReq::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<AccInsBodiesOtherReq, Long>)
					AccInsBodiesOtherReq::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<AccInsBodiesOtherReq, Long>)
					AccInsBodiesOtherReq::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<AccInsBodiesOtherReq, String>)
					AccInsBodiesOtherReq::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<AccInsBodiesOtherReq, Date>)
					AccInsBodiesOtherReq::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<AccInsBodiesOtherReq, Date>)
					AccInsBodiesOtherReq::setModifiedDate);
			attributeSetterBiConsumers.put(
				"applicationFees",
				(BiConsumer<AccInsBodiesOtherReq, String>)
					AccInsBodiesOtherReq::setApplicationFees);
			attributeSetterBiConsumers.put(
				"insPaymentMethod",
				(BiConsumer<AccInsBodiesOtherReq, String>)
					AccInsBodiesOtherReq::setInsPaymentMethod);
			attributeSetterBiConsumers.put(
				"applicantRepName",
				(BiConsumer<AccInsBodiesOtherReq, String>)
					AccInsBodiesOtherReq::setApplicantRepName);
			attributeSetterBiConsumers.put(
				"applicantRepPosition",
				(BiConsumer<AccInsBodiesOtherReq, String>)
					AccInsBodiesOtherReq::setApplicantRepPosition);
			attributeSetterBiConsumers.put(
				"signatureDate",
				(BiConsumer<AccInsBodiesOtherReq, Date>)
					AccInsBodiesOtherReq::setSignatureDate);
			attributeSetterBiConsumers.put(
				"janaacApplicationId",
				(BiConsumer<AccInsBodiesOtherReq, Long>)
					AccInsBodiesOtherReq::setJanaacApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getAccInsBodiesOtherReqId() {
		return _accInsBodiesOtherReqId;
	}

	@Override
	public void setAccInsBodiesOtherReqId(long accInsBodiesOtherReqId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_accInsBodiesOtherReqId = accInsBodiesOtherReqId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getApplicationFees() {
		if (_applicationFees == null) {
			return "";
		}
		else {
			return _applicationFees;
		}
	}

	@Override
	public void setApplicationFees(String applicationFees) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicationFees = applicationFees;
	}

	@JSON
	@Override
	public String getInsPaymentMethod() {
		if (_insPaymentMethod == null) {
			return "";
		}
		else {
			return _insPaymentMethod;
		}
	}

	@Override
	public void setInsPaymentMethod(String insPaymentMethod) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insPaymentMethod = insPaymentMethod;
	}

	@JSON
	@Override
	public String getApplicantRepName() {
		if (_applicantRepName == null) {
			return "";
		}
		else {
			return _applicantRepName;
		}
	}

	@Override
	public void setApplicantRepName(String applicantRepName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicantRepName = applicantRepName;
	}

	@JSON
	@Override
	public String getApplicantRepPosition() {
		if (_applicantRepPosition == null) {
			return "";
		}
		else {
			return _applicantRepPosition;
		}
	}

	@Override
	public void setApplicantRepPosition(String applicantRepPosition) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicantRepPosition = applicantRepPosition;
	}

	@JSON
	@Override
	public Date getSignatureDate() {
		return _signatureDate;
	}

	@Override
	public void setSignatureDate(Date signatureDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_signatureDate = signatureDate;
	}

	@JSON
	@Override
	public long getJanaacApplicationId() {
		return _janaacApplicationId;
	}

	@Override
	public void setJanaacApplicationId(long janaacApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_janaacApplicationId = janaacApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalJanaacApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("janaacApplicationId"));
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(AccInsBodiesOtherReq.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), AccInsBodiesOtherReq.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AccInsBodiesOtherReq toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, AccInsBodiesOtherReq>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AccInsBodiesOtherReqImpl accInsBodiesOtherReqImpl =
			new AccInsBodiesOtherReqImpl();

		accInsBodiesOtherReqImpl.setUuid(getUuid());
		accInsBodiesOtherReqImpl.setAccInsBodiesOtherReqId(
			getAccInsBodiesOtherReqId());
		accInsBodiesOtherReqImpl.setGroupId(getGroupId());
		accInsBodiesOtherReqImpl.setCompanyId(getCompanyId());
		accInsBodiesOtherReqImpl.setUserId(getUserId());
		accInsBodiesOtherReqImpl.setUserName(getUserName());
		accInsBodiesOtherReqImpl.setCreateDate(getCreateDate());
		accInsBodiesOtherReqImpl.setModifiedDate(getModifiedDate());
		accInsBodiesOtherReqImpl.setApplicationFees(getApplicationFees());
		accInsBodiesOtherReqImpl.setInsPaymentMethod(getInsPaymentMethod());
		accInsBodiesOtherReqImpl.setApplicantRepName(getApplicantRepName());
		accInsBodiesOtherReqImpl.setApplicantRepPosition(
			getApplicantRepPosition());
		accInsBodiesOtherReqImpl.setSignatureDate(getSignatureDate());
		accInsBodiesOtherReqImpl.setJanaacApplicationId(
			getJanaacApplicationId());

		accInsBodiesOtherReqImpl.resetOriginalValues();

		return accInsBodiesOtherReqImpl;
	}

	@Override
	public AccInsBodiesOtherReq cloneWithOriginalValues() {
		AccInsBodiesOtherReqImpl accInsBodiesOtherReqImpl =
			new AccInsBodiesOtherReqImpl();

		accInsBodiesOtherReqImpl.setUuid(
			this.<String>getColumnOriginalValue("uuid_"));
		accInsBodiesOtherReqImpl.setAccInsBodiesOtherReqId(
			this.<Long>getColumnOriginalValue("accInsBodiesOtherReqId"));
		accInsBodiesOtherReqImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		accInsBodiesOtherReqImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		accInsBodiesOtherReqImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		accInsBodiesOtherReqImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		accInsBodiesOtherReqImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		accInsBodiesOtherReqImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		accInsBodiesOtherReqImpl.setApplicationFees(
			this.<String>getColumnOriginalValue("applicationFees"));
		accInsBodiesOtherReqImpl.setInsPaymentMethod(
			this.<String>getColumnOriginalValue("insPaymentMethod"));
		accInsBodiesOtherReqImpl.setApplicantRepName(
			this.<String>getColumnOriginalValue("applicantRepName"));
		accInsBodiesOtherReqImpl.setApplicantRepPosition(
			this.<String>getColumnOriginalValue("applicantRepPosition"));
		accInsBodiesOtherReqImpl.setSignatureDate(
			this.<Date>getColumnOriginalValue("signatureDate"));
		accInsBodiesOtherReqImpl.setJanaacApplicationId(
			this.<Long>getColumnOriginalValue("janaacApplicationId"));

		return accInsBodiesOtherReqImpl;
	}

	@Override
	public int compareTo(AccInsBodiesOtherReq accInsBodiesOtherReq) {
		long primaryKey = accInsBodiesOtherReq.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof AccInsBodiesOtherReq)) {
			return false;
		}

		AccInsBodiesOtherReq accInsBodiesOtherReq =
			(AccInsBodiesOtherReq)object;

		long primaryKey = accInsBodiesOtherReq.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<AccInsBodiesOtherReq> toCacheModel() {
		AccInsBodiesOtherReqCacheModel accInsBodiesOtherReqCacheModel =
			new AccInsBodiesOtherReqCacheModel();

		accInsBodiesOtherReqCacheModel.uuid = getUuid();

		String uuid = accInsBodiesOtherReqCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			accInsBodiesOtherReqCacheModel.uuid = null;
		}

		accInsBodiesOtherReqCacheModel.accInsBodiesOtherReqId =
			getAccInsBodiesOtherReqId();

		accInsBodiesOtherReqCacheModel.groupId = getGroupId();

		accInsBodiesOtherReqCacheModel.companyId = getCompanyId();

		accInsBodiesOtherReqCacheModel.userId = getUserId();

		accInsBodiesOtherReqCacheModel.userName = getUserName();

		String userName = accInsBodiesOtherReqCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			accInsBodiesOtherReqCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			accInsBodiesOtherReqCacheModel.createDate = createDate.getTime();
		}
		else {
			accInsBodiesOtherReqCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			accInsBodiesOtherReqCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			accInsBodiesOtherReqCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		accInsBodiesOtherReqCacheModel.applicationFees = getApplicationFees();

		String applicationFees = accInsBodiesOtherReqCacheModel.applicationFees;

		if ((applicationFees != null) && (applicationFees.length() == 0)) {
			accInsBodiesOtherReqCacheModel.applicationFees = null;
		}

		accInsBodiesOtherReqCacheModel.insPaymentMethod = getInsPaymentMethod();

		String insPaymentMethod =
			accInsBodiesOtherReqCacheModel.insPaymentMethod;

		if ((insPaymentMethod != null) && (insPaymentMethod.length() == 0)) {
			accInsBodiesOtherReqCacheModel.insPaymentMethod = null;
		}

		accInsBodiesOtherReqCacheModel.applicantRepName = getApplicantRepName();

		String applicantRepName =
			accInsBodiesOtherReqCacheModel.applicantRepName;

		if ((applicantRepName != null) && (applicantRepName.length() == 0)) {
			accInsBodiesOtherReqCacheModel.applicantRepName = null;
		}

		accInsBodiesOtherReqCacheModel.applicantRepPosition =
			getApplicantRepPosition();

		String applicantRepPosition =
			accInsBodiesOtherReqCacheModel.applicantRepPosition;

		if ((applicantRepPosition != null) &&
			(applicantRepPosition.length() == 0)) {

			accInsBodiesOtherReqCacheModel.applicantRepPosition = null;
		}

		Date signatureDate = getSignatureDate();

		if (signatureDate != null) {
			accInsBodiesOtherReqCacheModel.signatureDate =
				signatureDate.getTime();
		}
		else {
			accInsBodiesOtherReqCacheModel.signatureDate = Long.MIN_VALUE;
		}

		accInsBodiesOtherReqCacheModel.janaacApplicationId =
			getJanaacApplicationId();

		return accInsBodiesOtherReqCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<AccInsBodiesOtherReq, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<AccInsBodiesOtherReq, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AccInsBodiesOtherReq, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(AccInsBodiesOtherReq)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, AccInsBodiesOtherReq>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					AccInsBodiesOtherReq.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _accInsBodiesOtherReqId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _applicationFees;
	private String _insPaymentMethod;
	private String _applicantRepName;
	private String _applicantRepPosition;
	private Date _signatureDate;
	private long _janaacApplicationId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<AccInsBodiesOtherReq, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((AccInsBodiesOtherReq)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put(
			"accInsBodiesOtherReqId", _accInsBodiesOtherReqId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("applicationFees", _applicationFees);
		_columnOriginalValues.put("insPaymentMethod", _insPaymentMethod);
		_columnOriginalValues.put("applicantRepName", _applicantRepName);
		_columnOriginalValues.put(
			"applicantRepPosition", _applicantRepPosition);
		_columnOriginalValues.put("signatureDate", _signatureDate);
		_columnOriginalValues.put("janaacApplicationId", _janaacApplicationId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("accInsBodiesOtherReqId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("userId", 16L);

		columnBitmasks.put("userName", 32L);

		columnBitmasks.put("createDate", 64L);

		columnBitmasks.put("modifiedDate", 128L);

		columnBitmasks.put("applicationFees", 256L);

		columnBitmasks.put("insPaymentMethod", 512L);

		columnBitmasks.put("applicantRepName", 1024L);

		columnBitmasks.put("applicantRepPosition", 2048L);

		columnBitmasks.put("signatureDate", 4096L);

		columnBitmasks.put("janaacApplicationId", 8192L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private AccInsBodiesOtherReq _escapedModel;

}