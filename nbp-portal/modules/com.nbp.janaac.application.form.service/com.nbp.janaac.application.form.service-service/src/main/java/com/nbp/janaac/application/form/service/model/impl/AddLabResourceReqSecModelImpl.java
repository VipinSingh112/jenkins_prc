/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.janaac.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.janaac.application.form.service.model.AddLabResourceReqSec;
import com.nbp.janaac.application.form.service.model.AddLabResourceReqSecModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the AddLabResourceReqSec service. Represents a row in the &quot;nbp_janaac_add_lab_res_req_sec&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>AddLabResourceReqSecModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AddLabResourceReqSecImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AddLabResourceReqSecImpl
 * @generated
 */
@JSON(strict = true)
public class AddLabResourceReqSecModelImpl
	extends BaseModelImpl<AddLabResourceReqSec>
	implements AddLabResourceReqSecModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a add lab resource req sec model instance should use the <code>AddLabResourceReqSec</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_janaac_add_lab_res_req_sec";

	public static final Object[][] TABLE_COLUMNS = {
		{"addLabResourceReqSecId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"inventoryNumber", Types.VARCHAR},
		{"item", Types.VARCHAR}, {"manufacturer", Types.VARCHAR},
		{"modelNumber", Types.VARCHAR}, {"calibrationInterval", Types.VARCHAR},
		{"calibratedBy", Types.VARCHAR}, {"janaacApplicationId", Types.BIGINT},
		{"counter", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("addLabResourceReqSecId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("inventoryNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("item", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("manufacturer", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("modelNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("calibrationInterval", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("calibratedBy", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("janaacApplicationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("counter", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_janaac_add_lab_res_req_sec (addLabResourceReqSecId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,inventoryNumber VARCHAR(75) null,item VARCHAR(75) null,manufacturer VARCHAR(75) null,modelNumber VARCHAR(75) null,calibrationInterval VARCHAR(75) null,calibratedBy VARCHAR(75) null,janaacApplicationId LONG,counter VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_janaac_add_lab_res_req_sec";

	public static final String ORDER_BY_JPQL =
		" ORDER BY addLabResourceReqSec.addLabResourceReqSecId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_janaac_add_lab_res_req_sec.addLabResourceReqSecId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long JANAACAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ADDLABRESOURCEREQSECID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public AddLabResourceReqSecModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _addLabResourceReqSecId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAddLabResourceReqSecId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _addLabResourceReqSecId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AddLabResourceReqSec.class;
	}

	@Override
	public String getModelClassName() {
		return AddLabResourceReqSec.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<AddLabResourceReqSec, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<AddLabResourceReqSec, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AddLabResourceReqSec, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((AddLabResourceReqSec)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<AddLabResourceReqSec, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<AddLabResourceReqSec, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(AddLabResourceReqSec)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<AddLabResourceReqSec, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<AddLabResourceReqSec, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<AddLabResourceReqSec, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<AddLabResourceReqSec, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<AddLabResourceReqSec, Object>>();

			attributeGetterFunctions.put(
				"addLabResourceReqSecId",
				AddLabResourceReqSec::getAddLabResourceReqSecId);
			attributeGetterFunctions.put(
				"groupId", AddLabResourceReqSec::getGroupId);
			attributeGetterFunctions.put(
				"companyId", AddLabResourceReqSec::getCompanyId);
			attributeGetterFunctions.put(
				"userId", AddLabResourceReqSec::getUserId);
			attributeGetterFunctions.put(
				"userName", AddLabResourceReqSec::getUserName);
			attributeGetterFunctions.put(
				"createDate", AddLabResourceReqSec::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", AddLabResourceReqSec::getModifiedDate);
			attributeGetterFunctions.put(
				"inventoryNumber", AddLabResourceReqSec::getInventoryNumber);
			attributeGetterFunctions.put("item", AddLabResourceReqSec::getItem);
			attributeGetterFunctions.put(
				"manufacturer", AddLabResourceReqSec::getManufacturer);
			attributeGetterFunctions.put(
				"modelNumber", AddLabResourceReqSec::getModelNumber);
			attributeGetterFunctions.put(
				"calibrationInterval",
				AddLabResourceReqSec::getCalibrationInterval);
			attributeGetterFunctions.put(
				"calibratedBy", AddLabResourceReqSec::getCalibratedBy);
			attributeGetterFunctions.put(
				"janaacApplicationId",
				AddLabResourceReqSec::getJanaacApplicationId);
			attributeGetterFunctions.put(
				"counter", AddLabResourceReqSec::getCounter);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<AddLabResourceReqSec, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<AddLabResourceReqSec, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<AddLabResourceReqSec, ?>>();

			attributeSetterBiConsumers.put(
				"addLabResourceReqSecId",
				(BiConsumer<AddLabResourceReqSec, Long>)
					AddLabResourceReqSec::setAddLabResourceReqSecId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<AddLabResourceReqSec, Long>)
					AddLabResourceReqSec::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<AddLabResourceReqSec, Long>)
					AddLabResourceReqSec::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<AddLabResourceReqSec, Long>)
					AddLabResourceReqSec::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<AddLabResourceReqSec, String>)
					AddLabResourceReqSec::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<AddLabResourceReqSec, Date>)
					AddLabResourceReqSec::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<AddLabResourceReqSec, Date>)
					AddLabResourceReqSec::setModifiedDate);
			attributeSetterBiConsumers.put(
				"inventoryNumber",
				(BiConsumer<AddLabResourceReqSec, String>)
					AddLabResourceReqSec::setInventoryNumber);
			attributeSetterBiConsumers.put(
				"item",
				(BiConsumer<AddLabResourceReqSec, String>)
					AddLabResourceReqSec::setItem);
			attributeSetterBiConsumers.put(
				"manufacturer",
				(BiConsumer<AddLabResourceReqSec, String>)
					AddLabResourceReqSec::setManufacturer);
			attributeSetterBiConsumers.put(
				"modelNumber",
				(BiConsumer<AddLabResourceReqSec, String>)
					AddLabResourceReqSec::setModelNumber);
			attributeSetterBiConsumers.put(
				"calibrationInterval",
				(BiConsumer<AddLabResourceReqSec, String>)
					AddLabResourceReqSec::setCalibrationInterval);
			attributeSetterBiConsumers.put(
				"calibratedBy",
				(BiConsumer<AddLabResourceReqSec, String>)
					AddLabResourceReqSec::setCalibratedBy);
			attributeSetterBiConsumers.put(
				"janaacApplicationId",
				(BiConsumer<AddLabResourceReqSec, Long>)
					AddLabResourceReqSec::setJanaacApplicationId);
			attributeSetterBiConsumers.put(
				"counter",
				(BiConsumer<AddLabResourceReqSec, String>)
					AddLabResourceReqSec::setCounter);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getAddLabResourceReqSecId() {
		return _addLabResourceReqSecId;
	}

	@Override
	public void setAddLabResourceReqSecId(long addLabResourceReqSecId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_addLabResourceReqSecId = addLabResourceReqSecId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getInventoryNumber() {
		if (_inventoryNumber == null) {
			return "";
		}
		else {
			return _inventoryNumber;
		}
	}

	@Override
	public void setInventoryNumber(String inventoryNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_inventoryNumber = inventoryNumber;
	}

	@JSON
	@Override
	public String getItem() {
		if (_item == null) {
			return "";
		}
		else {
			return _item;
		}
	}

	@Override
	public void setItem(String item) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_item = item;
	}

	@JSON
	@Override
	public String getManufacturer() {
		if (_manufacturer == null) {
			return "";
		}
		else {
			return _manufacturer;
		}
	}

	@Override
	public void setManufacturer(String manufacturer) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_manufacturer = manufacturer;
	}

	@JSON
	@Override
	public String getModelNumber() {
		if (_modelNumber == null) {
			return "";
		}
		else {
			return _modelNumber;
		}
	}

	@Override
	public void setModelNumber(String modelNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modelNumber = modelNumber;
	}

	@JSON
	@Override
	public String getCalibrationInterval() {
		if (_calibrationInterval == null) {
			return "";
		}
		else {
			return _calibrationInterval;
		}
	}

	@Override
	public void setCalibrationInterval(String calibrationInterval) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_calibrationInterval = calibrationInterval;
	}

	@JSON
	@Override
	public String getCalibratedBy() {
		if (_calibratedBy == null) {
			return "";
		}
		else {
			return _calibratedBy;
		}
	}

	@Override
	public void setCalibratedBy(String calibratedBy) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_calibratedBy = calibratedBy;
	}

	@JSON
	@Override
	public long getJanaacApplicationId() {
		return _janaacApplicationId;
	}

	@Override
	public void setJanaacApplicationId(long janaacApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_janaacApplicationId = janaacApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalJanaacApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("janaacApplicationId"));
	}

	@JSON
	@Override
	public String getCounter() {
		if (_counter == null) {
			return "";
		}
		else {
			return _counter;
		}
	}

	@Override
	public void setCounter(String counter) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_counter = counter;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), AddLabResourceReqSec.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AddLabResourceReqSec toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, AddLabResourceReqSec>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AddLabResourceReqSecImpl addLabResourceReqSecImpl =
			new AddLabResourceReqSecImpl();

		addLabResourceReqSecImpl.setAddLabResourceReqSecId(
			getAddLabResourceReqSecId());
		addLabResourceReqSecImpl.setGroupId(getGroupId());
		addLabResourceReqSecImpl.setCompanyId(getCompanyId());
		addLabResourceReqSecImpl.setUserId(getUserId());
		addLabResourceReqSecImpl.setUserName(getUserName());
		addLabResourceReqSecImpl.setCreateDate(getCreateDate());
		addLabResourceReqSecImpl.setModifiedDate(getModifiedDate());
		addLabResourceReqSecImpl.setInventoryNumber(getInventoryNumber());
		addLabResourceReqSecImpl.setItem(getItem());
		addLabResourceReqSecImpl.setManufacturer(getManufacturer());
		addLabResourceReqSecImpl.setModelNumber(getModelNumber());
		addLabResourceReqSecImpl.setCalibrationInterval(
			getCalibrationInterval());
		addLabResourceReqSecImpl.setCalibratedBy(getCalibratedBy());
		addLabResourceReqSecImpl.setJanaacApplicationId(
			getJanaacApplicationId());
		addLabResourceReqSecImpl.setCounter(getCounter());

		addLabResourceReqSecImpl.resetOriginalValues();

		return addLabResourceReqSecImpl;
	}

	@Override
	public AddLabResourceReqSec cloneWithOriginalValues() {
		AddLabResourceReqSecImpl addLabResourceReqSecImpl =
			new AddLabResourceReqSecImpl();

		addLabResourceReqSecImpl.setAddLabResourceReqSecId(
			this.<Long>getColumnOriginalValue("addLabResourceReqSecId"));
		addLabResourceReqSecImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		addLabResourceReqSecImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		addLabResourceReqSecImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		addLabResourceReqSecImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		addLabResourceReqSecImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		addLabResourceReqSecImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		addLabResourceReqSecImpl.setInventoryNumber(
			this.<String>getColumnOriginalValue("inventoryNumber"));
		addLabResourceReqSecImpl.setItem(
			this.<String>getColumnOriginalValue("item"));
		addLabResourceReqSecImpl.setManufacturer(
			this.<String>getColumnOriginalValue("manufacturer"));
		addLabResourceReqSecImpl.setModelNumber(
			this.<String>getColumnOriginalValue("modelNumber"));
		addLabResourceReqSecImpl.setCalibrationInterval(
			this.<String>getColumnOriginalValue("calibrationInterval"));
		addLabResourceReqSecImpl.setCalibratedBy(
			this.<String>getColumnOriginalValue("calibratedBy"));
		addLabResourceReqSecImpl.setJanaacApplicationId(
			this.<Long>getColumnOriginalValue("janaacApplicationId"));
		addLabResourceReqSecImpl.setCounter(
			this.<String>getColumnOriginalValue("counter"));

		return addLabResourceReqSecImpl;
	}

	@Override
	public int compareTo(AddLabResourceReqSec addLabResourceReqSec) {
		long primaryKey = addLabResourceReqSec.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof AddLabResourceReqSec)) {
			return false;
		}

		AddLabResourceReqSec addLabResourceReqSec =
			(AddLabResourceReqSec)object;

		long primaryKey = addLabResourceReqSec.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<AddLabResourceReqSec> toCacheModel() {
		AddLabResourceReqSecCacheModel addLabResourceReqSecCacheModel =
			new AddLabResourceReqSecCacheModel();

		addLabResourceReqSecCacheModel.addLabResourceReqSecId =
			getAddLabResourceReqSecId();

		addLabResourceReqSecCacheModel.groupId = getGroupId();

		addLabResourceReqSecCacheModel.companyId = getCompanyId();

		addLabResourceReqSecCacheModel.userId = getUserId();

		addLabResourceReqSecCacheModel.userName = getUserName();

		String userName = addLabResourceReqSecCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			addLabResourceReqSecCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			addLabResourceReqSecCacheModel.createDate = createDate.getTime();
		}
		else {
			addLabResourceReqSecCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			addLabResourceReqSecCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			addLabResourceReqSecCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		addLabResourceReqSecCacheModel.inventoryNumber = getInventoryNumber();

		String inventoryNumber = addLabResourceReqSecCacheModel.inventoryNumber;

		if ((inventoryNumber != null) && (inventoryNumber.length() == 0)) {
			addLabResourceReqSecCacheModel.inventoryNumber = null;
		}

		addLabResourceReqSecCacheModel.item = getItem();

		String item = addLabResourceReqSecCacheModel.item;

		if ((item != null) && (item.length() == 0)) {
			addLabResourceReqSecCacheModel.item = null;
		}

		addLabResourceReqSecCacheModel.manufacturer = getManufacturer();

		String manufacturer = addLabResourceReqSecCacheModel.manufacturer;

		if ((manufacturer != null) && (manufacturer.length() == 0)) {
			addLabResourceReqSecCacheModel.manufacturer = null;
		}

		addLabResourceReqSecCacheModel.modelNumber = getModelNumber();

		String modelNumber = addLabResourceReqSecCacheModel.modelNumber;

		if ((modelNumber != null) && (modelNumber.length() == 0)) {
			addLabResourceReqSecCacheModel.modelNumber = null;
		}

		addLabResourceReqSecCacheModel.calibrationInterval =
			getCalibrationInterval();

		String calibrationInterval =
			addLabResourceReqSecCacheModel.calibrationInterval;

		if ((calibrationInterval != null) &&
			(calibrationInterval.length() == 0)) {

			addLabResourceReqSecCacheModel.calibrationInterval = null;
		}

		addLabResourceReqSecCacheModel.calibratedBy = getCalibratedBy();

		String calibratedBy = addLabResourceReqSecCacheModel.calibratedBy;

		if ((calibratedBy != null) && (calibratedBy.length() == 0)) {
			addLabResourceReqSecCacheModel.calibratedBy = null;
		}

		addLabResourceReqSecCacheModel.janaacApplicationId =
			getJanaacApplicationId();

		addLabResourceReqSecCacheModel.counter = getCounter();

		String counter = addLabResourceReqSecCacheModel.counter;

		if ((counter != null) && (counter.length() == 0)) {
			addLabResourceReqSecCacheModel.counter = null;
		}

		return addLabResourceReqSecCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<AddLabResourceReqSec, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<AddLabResourceReqSec, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AddLabResourceReqSec, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(AddLabResourceReqSec)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, AddLabResourceReqSec>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					AddLabResourceReqSec.class, ModelWrapper.class);

	}

	private long _addLabResourceReqSecId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _inventoryNumber;
	private String _item;
	private String _manufacturer;
	private String _modelNumber;
	private String _calibrationInterval;
	private String _calibratedBy;
	private long _janaacApplicationId;
	private String _counter;

	public <T> T getColumnValue(String columnName) {
		Function<AddLabResourceReqSec, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((AddLabResourceReqSec)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"addLabResourceReqSecId", _addLabResourceReqSecId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("inventoryNumber", _inventoryNumber);
		_columnOriginalValues.put("item", _item);
		_columnOriginalValues.put("manufacturer", _manufacturer);
		_columnOriginalValues.put("modelNumber", _modelNumber);
		_columnOriginalValues.put("calibrationInterval", _calibrationInterval);
		_columnOriginalValues.put("calibratedBy", _calibratedBy);
		_columnOriginalValues.put("janaacApplicationId", _janaacApplicationId);
		_columnOriginalValues.put("counter", _counter);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("addLabResourceReqSecId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("inventoryNumber", 128L);

		columnBitmasks.put("item", 256L);

		columnBitmasks.put("manufacturer", 512L);

		columnBitmasks.put("modelNumber", 1024L);

		columnBitmasks.put("calibrationInterval", 2048L);

		columnBitmasks.put("calibratedBy", 4096L);

		columnBitmasks.put("janaacApplicationId", 8192L);

		columnBitmasks.put("counter", 16384L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private AddLabResourceReqSec _escapedModel;

}