/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.janaac.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.janaac.application.form.service.model.AddCerScopeServiceThird;
import com.nbp.janaac.application.form.service.model.AddCerScopeServiceThirdModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the AddCerScopeServiceThird service. Represents a row in the &quot;nbp_janaac_add_scope_ser_third&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>AddCerScopeServiceThirdModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AddCerScopeServiceThirdImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AddCerScopeServiceThirdImpl
 * @generated
 */
@JSON(strict = true)
public class AddCerScopeServiceThirdModelImpl
	extends BaseModelImpl<AddCerScopeServiceThird>
	implements AddCerScopeServiceThirdModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a add cer scope service third model instance should use the <code>AddCerScopeServiceThird</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_janaac_add_scope_ser_third";

	public static final Object[][] TABLE_COLUMNS = {
		{"addCerScopeServiceThirdId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"organizationName", Types.VARCHAR},
		{"organizationAddress", Types.VARCHAR},
		{"certificationScheme", Types.VARCHAR},
		{"currentStatus", Types.VARCHAR}, {"dateFirstGranted", Types.TIMESTAMP},
		{"DateOfNextExamination", Types.TIMESTAMP},
		{"janaacApplicationId", Types.BIGINT}, {"counter", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("addCerScopeServiceThirdId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("organizationName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("organizationAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("certificationScheme", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("currentStatus", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dateFirstGranted", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("DateOfNextExamination", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("janaacApplicationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("counter", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_janaac_add_scope_ser_third (addCerScopeServiceThirdId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,organizationName VARCHAR(75) null,organizationAddress VARCHAR(75) null,certificationScheme VARCHAR(75) null,currentStatus VARCHAR(75) null,dateFirstGranted DATE null,DateOfNextExamination DATE null,janaacApplicationId LONG,counter VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_janaac_add_scope_ser_third";

	public static final String ORDER_BY_JPQL =
		" ORDER BY addCerScopeServiceThird.addCerScopeServiceThirdId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_janaac_add_scope_ser_third.addCerScopeServiceThirdId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long JANAACAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ADDCERSCOPESERVICETHIRDID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public AddCerScopeServiceThirdModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _addCerScopeServiceThirdId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAddCerScopeServiceThirdId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _addCerScopeServiceThirdId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AddCerScopeServiceThird.class;
	}

	@Override
	public String getModelClassName() {
		return AddCerScopeServiceThird.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<AddCerScopeServiceThird, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<AddCerScopeServiceThird, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AddCerScopeServiceThird, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((AddCerScopeServiceThird)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<AddCerScopeServiceThird, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<AddCerScopeServiceThird, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(AddCerScopeServiceThird)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<AddCerScopeServiceThird, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<AddCerScopeServiceThird, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<AddCerScopeServiceThird, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<AddCerScopeServiceThird, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<AddCerScopeServiceThird, Object>>();

			attributeGetterFunctions.put(
				"addCerScopeServiceThirdId",
				AddCerScopeServiceThird::getAddCerScopeServiceThirdId);
			attributeGetterFunctions.put(
				"groupId", AddCerScopeServiceThird::getGroupId);
			attributeGetterFunctions.put(
				"companyId", AddCerScopeServiceThird::getCompanyId);
			attributeGetterFunctions.put(
				"userId", AddCerScopeServiceThird::getUserId);
			attributeGetterFunctions.put(
				"userName", AddCerScopeServiceThird::getUserName);
			attributeGetterFunctions.put(
				"createDate", AddCerScopeServiceThird::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", AddCerScopeServiceThird::getModifiedDate);
			attributeGetterFunctions.put(
				"organizationName",
				AddCerScopeServiceThird::getOrganizationName);
			attributeGetterFunctions.put(
				"organizationAddress",
				AddCerScopeServiceThird::getOrganizationAddress);
			attributeGetterFunctions.put(
				"certificationScheme",
				AddCerScopeServiceThird::getCertificationScheme);
			attributeGetterFunctions.put(
				"currentStatus", AddCerScopeServiceThird::getCurrentStatus);
			attributeGetterFunctions.put(
				"dateFirstGranted",
				AddCerScopeServiceThird::getDateFirstGranted);
			attributeGetterFunctions.put(
				"DateOfNextExamination",
				AddCerScopeServiceThird::getDateOfNextExamination);
			attributeGetterFunctions.put(
				"janaacApplicationId",
				AddCerScopeServiceThird::getJanaacApplicationId);
			attributeGetterFunctions.put(
				"counter", AddCerScopeServiceThird::getCounter);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<AddCerScopeServiceThird, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<AddCerScopeServiceThird, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<AddCerScopeServiceThird, ?>>();

			attributeSetterBiConsumers.put(
				"addCerScopeServiceThirdId",
				(BiConsumer<AddCerScopeServiceThird, Long>)
					AddCerScopeServiceThird::setAddCerScopeServiceThirdId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<AddCerScopeServiceThird, Long>)
					AddCerScopeServiceThird::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<AddCerScopeServiceThird, Long>)
					AddCerScopeServiceThird::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<AddCerScopeServiceThird, Long>)
					AddCerScopeServiceThird::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<AddCerScopeServiceThird, String>)
					AddCerScopeServiceThird::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<AddCerScopeServiceThird, Date>)
					AddCerScopeServiceThird::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<AddCerScopeServiceThird, Date>)
					AddCerScopeServiceThird::setModifiedDate);
			attributeSetterBiConsumers.put(
				"organizationName",
				(BiConsumer<AddCerScopeServiceThird, String>)
					AddCerScopeServiceThird::setOrganizationName);
			attributeSetterBiConsumers.put(
				"organizationAddress",
				(BiConsumer<AddCerScopeServiceThird, String>)
					AddCerScopeServiceThird::setOrganizationAddress);
			attributeSetterBiConsumers.put(
				"certificationScheme",
				(BiConsumer<AddCerScopeServiceThird, String>)
					AddCerScopeServiceThird::setCertificationScheme);
			attributeSetterBiConsumers.put(
				"currentStatus",
				(BiConsumer<AddCerScopeServiceThird, String>)
					AddCerScopeServiceThird::setCurrentStatus);
			attributeSetterBiConsumers.put(
				"dateFirstGranted",
				(BiConsumer<AddCerScopeServiceThird, Date>)
					AddCerScopeServiceThird::setDateFirstGranted);
			attributeSetterBiConsumers.put(
				"DateOfNextExamination",
				(BiConsumer<AddCerScopeServiceThird, Date>)
					AddCerScopeServiceThird::setDateOfNextExamination);
			attributeSetterBiConsumers.put(
				"janaacApplicationId",
				(BiConsumer<AddCerScopeServiceThird, Long>)
					AddCerScopeServiceThird::setJanaacApplicationId);
			attributeSetterBiConsumers.put(
				"counter",
				(BiConsumer<AddCerScopeServiceThird, String>)
					AddCerScopeServiceThird::setCounter);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getAddCerScopeServiceThirdId() {
		return _addCerScopeServiceThirdId;
	}

	@Override
	public void setAddCerScopeServiceThirdId(long addCerScopeServiceThirdId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_addCerScopeServiceThirdId = addCerScopeServiceThirdId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getOrganizationName() {
		if (_organizationName == null) {
			return "";
		}
		else {
			return _organizationName;
		}
	}

	@Override
	public void setOrganizationName(String organizationName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_organizationName = organizationName;
	}

	@JSON
	@Override
	public String getOrganizationAddress() {
		if (_organizationAddress == null) {
			return "";
		}
		else {
			return _organizationAddress;
		}
	}

	@Override
	public void setOrganizationAddress(String organizationAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_organizationAddress = organizationAddress;
	}

	@JSON
	@Override
	public String getCertificationScheme() {
		if (_certificationScheme == null) {
			return "";
		}
		else {
			return _certificationScheme;
		}
	}

	@Override
	public void setCertificationScheme(String certificationScheme) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_certificationScheme = certificationScheme;
	}

	@JSON
	@Override
	public String getCurrentStatus() {
		if (_currentStatus == null) {
			return "";
		}
		else {
			return _currentStatus;
		}
	}

	@Override
	public void setCurrentStatus(String currentStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_currentStatus = currentStatus;
	}

	@JSON
	@Override
	public Date getDateFirstGranted() {
		return _dateFirstGranted;
	}

	@Override
	public void setDateFirstGranted(Date dateFirstGranted) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dateFirstGranted = dateFirstGranted;
	}

	@JSON
	@Override
	public Date getDateOfNextExamination() {
		return _DateOfNextExamination;
	}

	@Override
	public void setDateOfNextExamination(Date DateOfNextExamination) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_DateOfNextExamination = DateOfNextExamination;
	}

	@JSON
	@Override
	public long getJanaacApplicationId() {
		return _janaacApplicationId;
	}

	@Override
	public void setJanaacApplicationId(long janaacApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_janaacApplicationId = janaacApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalJanaacApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("janaacApplicationId"));
	}

	@JSON
	@Override
	public String getCounter() {
		if (_counter == null) {
			return "";
		}
		else {
			return _counter;
		}
	}

	@Override
	public void setCounter(String counter) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_counter = counter;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), AddCerScopeServiceThird.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AddCerScopeServiceThird toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, AddCerScopeServiceThird>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AddCerScopeServiceThirdImpl addCerScopeServiceThirdImpl =
			new AddCerScopeServiceThirdImpl();

		addCerScopeServiceThirdImpl.setAddCerScopeServiceThirdId(
			getAddCerScopeServiceThirdId());
		addCerScopeServiceThirdImpl.setGroupId(getGroupId());
		addCerScopeServiceThirdImpl.setCompanyId(getCompanyId());
		addCerScopeServiceThirdImpl.setUserId(getUserId());
		addCerScopeServiceThirdImpl.setUserName(getUserName());
		addCerScopeServiceThirdImpl.setCreateDate(getCreateDate());
		addCerScopeServiceThirdImpl.setModifiedDate(getModifiedDate());
		addCerScopeServiceThirdImpl.setOrganizationName(getOrganizationName());
		addCerScopeServiceThirdImpl.setOrganizationAddress(
			getOrganizationAddress());
		addCerScopeServiceThirdImpl.setCertificationScheme(
			getCertificationScheme());
		addCerScopeServiceThirdImpl.setCurrentStatus(getCurrentStatus());
		addCerScopeServiceThirdImpl.setDateFirstGranted(getDateFirstGranted());
		addCerScopeServiceThirdImpl.setDateOfNextExamination(
			getDateOfNextExamination());
		addCerScopeServiceThirdImpl.setJanaacApplicationId(
			getJanaacApplicationId());
		addCerScopeServiceThirdImpl.setCounter(getCounter());

		addCerScopeServiceThirdImpl.resetOriginalValues();

		return addCerScopeServiceThirdImpl;
	}

	@Override
	public AddCerScopeServiceThird cloneWithOriginalValues() {
		AddCerScopeServiceThirdImpl addCerScopeServiceThirdImpl =
			new AddCerScopeServiceThirdImpl();

		addCerScopeServiceThirdImpl.setAddCerScopeServiceThirdId(
			this.<Long>getColumnOriginalValue("addCerScopeServiceThirdId"));
		addCerScopeServiceThirdImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		addCerScopeServiceThirdImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		addCerScopeServiceThirdImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		addCerScopeServiceThirdImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		addCerScopeServiceThirdImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		addCerScopeServiceThirdImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		addCerScopeServiceThirdImpl.setOrganizationName(
			this.<String>getColumnOriginalValue("organizationName"));
		addCerScopeServiceThirdImpl.setOrganizationAddress(
			this.<String>getColumnOriginalValue("organizationAddress"));
		addCerScopeServiceThirdImpl.setCertificationScheme(
			this.<String>getColumnOriginalValue("certificationScheme"));
		addCerScopeServiceThirdImpl.setCurrentStatus(
			this.<String>getColumnOriginalValue("currentStatus"));
		addCerScopeServiceThirdImpl.setDateFirstGranted(
			this.<Date>getColumnOriginalValue("dateFirstGranted"));
		addCerScopeServiceThirdImpl.setDateOfNextExamination(
			this.<Date>getColumnOriginalValue("DateOfNextExamination"));
		addCerScopeServiceThirdImpl.setJanaacApplicationId(
			this.<Long>getColumnOriginalValue("janaacApplicationId"));
		addCerScopeServiceThirdImpl.setCounter(
			this.<String>getColumnOriginalValue("counter"));

		return addCerScopeServiceThirdImpl;
	}

	@Override
	public int compareTo(AddCerScopeServiceThird addCerScopeServiceThird) {
		long primaryKey = addCerScopeServiceThird.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof AddCerScopeServiceThird)) {
			return false;
		}

		AddCerScopeServiceThird addCerScopeServiceThird =
			(AddCerScopeServiceThird)object;

		long primaryKey = addCerScopeServiceThird.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<AddCerScopeServiceThird> toCacheModel() {
		AddCerScopeServiceThirdCacheModel addCerScopeServiceThirdCacheModel =
			new AddCerScopeServiceThirdCacheModel();

		addCerScopeServiceThirdCacheModel.addCerScopeServiceThirdId =
			getAddCerScopeServiceThirdId();

		addCerScopeServiceThirdCacheModel.groupId = getGroupId();

		addCerScopeServiceThirdCacheModel.companyId = getCompanyId();

		addCerScopeServiceThirdCacheModel.userId = getUserId();

		addCerScopeServiceThirdCacheModel.userName = getUserName();

		String userName = addCerScopeServiceThirdCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			addCerScopeServiceThirdCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			addCerScopeServiceThirdCacheModel.createDate = createDate.getTime();
		}
		else {
			addCerScopeServiceThirdCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			addCerScopeServiceThirdCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			addCerScopeServiceThirdCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		addCerScopeServiceThirdCacheModel.organizationName =
			getOrganizationName();

		String organizationName =
			addCerScopeServiceThirdCacheModel.organizationName;

		if ((organizationName != null) && (organizationName.length() == 0)) {
			addCerScopeServiceThirdCacheModel.organizationName = null;
		}

		addCerScopeServiceThirdCacheModel.organizationAddress =
			getOrganizationAddress();

		String organizationAddress =
			addCerScopeServiceThirdCacheModel.organizationAddress;

		if ((organizationAddress != null) &&
			(organizationAddress.length() == 0)) {

			addCerScopeServiceThirdCacheModel.organizationAddress = null;
		}

		addCerScopeServiceThirdCacheModel.certificationScheme =
			getCertificationScheme();

		String certificationScheme =
			addCerScopeServiceThirdCacheModel.certificationScheme;

		if ((certificationScheme != null) &&
			(certificationScheme.length() == 0)) {

			addCerScopeServiceThirdCacheModel.certificationScheme = null;
		}

		addCerScopeServiceThirdCacheModel.currentStatus = getCurrentStatus();

		String currentStatus = addCerScopeServiceThirdCacheModel.currentStatus;

		if ((currentStatus != null) && (currentStatus.length() == 0)) {
			addCerScopeServiceThirdCacheModel.currentStatus = null;
		}

		Date dateFirstGranted = getDateFirstGranted();

		if (dateFirstGranted != null) {
			addCerScopeServiceThirdCacheModel.dateFirstGranted =
				dateFirstGranted.getTime();
		}
		else {
			addCerScopeServiceThirdCacheModel.dateFirstGranted = Long.MIN_VALUE;
		}

		Date DateOfNextExamination = getDateOfNextExamination();

		if (DateOfNextExamination != null) {
			addCerScopeServiceThirdCacheModel.DateOfNextExamination =
				DateOfNextExamination.getTime();
		}
		else {
			addCerScopeServiceThirdCacheModel.DateOfNextExamination =
				Long.MIN_VALUE;
		}

		addCerScopeServiceThirdCacheModel.janaacApplicationId =
			getJanaacApplicationId();

		addCerScopeServiceThirdCacheModel.counter = getCounter();

		String counter = addCerScopeServiceThirdCacheModel.counter;

		if ((counter != null) && (counter.length() == 0)) {
			addCerScopeServiceThirdCacheModel.counter = null;
		}

		return addCerScopeServiceThirdCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<AddCerScopeServiceThird, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<AddCerScopeServiceThird, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AddCerScopeServiceThird, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(AddCerScopeServiceThird)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, AddCerScopeServiceThird>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						AddCerScopeServiceThird.class, ModelWrapper.class);

	}

	private long _addCerScopeServiceThirdId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _organizationName;
	private String _organizationAddress;
	private String _certificationScheme;
	private String _currentStatus;
	private Date _dateFirstGranted;
	private Date _DateOfNextExamination;
	private long _janaacApplicationId;
	private String _counter;

	public <T> T getColumnValue(String columnName) {
		Function<AddCerScopeServiceThird, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((AddCerScopeServiceThird)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"addCerScopeServiceThirdId", _addCerScopeServiceThirdId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("organizationName", _organizationName);
		_columnOriginalValues.put("organizationAddress", _organizationAddress);
		_columnOriginalValues.put("certificationScheme", _certificationScheme);
		_columnOriginalValues.put("currentStatus", _currentStatus);
		_columnOriginalValues.put("dateFirstGranted", _dateFirstGranted);
		_columnOriginalValues.put(
			"DateOfNextExamination", _DateOfNextExamination);
		_columnOriginalValues.put("janaacApplicationId", _janaacApplicationId);
		_columnOriginalValues.put("counter", _counter);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("addCerScopeServiceThirdId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("organizationName", 128L);

		columnBitmasks.put("organizationAddress", 256L);

		columnBitmasks.put("certificationScheme", 512L);

		columnBitmasks.put("currentStatus", 1024L);

		columnBitmasks.put("dateFirstGranted", 2048L);

		columnBitmasks.put("DateOfNextExamination", 4096L);

		columnBitmasks.put("janaacApplicationId", 8192L);

		columnBitmasks.put("counter", 16384L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private AddCerScopeServiceThird _escapedModel;

}