/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.jadsc.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.jadsc.application.form.service.model.JADSCInformationRequest;
import com.nbp.jadsc.application.form.service.model.JADSCInformationRequestModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the JADSCInformationRequest service. Represents a row in the &quot;nbp_jadsc_info_request&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>JADSCInformationRequestModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link JADSCInformationRequestImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see JADSCInformationRequestImpl
 * @generated
 */
@JSON(strict = true)
public class JADSCInformationRequestModelImpl
	extends BaseModelImpl<JADSCInformationRequest>
	implements JADSCInformationRequestModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a jadsc information request model instance should use the <code>JADSCInformationRequest</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_jadsc_info_request";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"jadscInfoRequestId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"entityId", Types.VARCHAR}, {"companyName", Types.VARCHAR},
		{"address", Types.VARCHAR}, {"mainTelephone", Types.VARCHAR},
		{"officeTelephone", Types.VARCHAR}, {"cellTelephone", Types.VARCHAR},
		{"otherContact", Types.VARCHAR}, {"whatsappTelephone", Types.VARCHAR},
		{"emailContact", Types.VARCHAR}, {"contactPerName", Types.VARCHAR},
		{"contactPerPosition", Types.VARCHAR},
		{"contactPerPhone", Types.VARCHAR}, {"contactPerEmail", Types.VARCHAR},
		{"altContactPerName", Types.VARCHAR},
		{"altContactPerPosition", Types.VARCHAR},
		{"altContactPerPhone", Types.VARCHAR},
		{"altContactPerEmail", Types.VARCHAR},
		{"comOperationYear", Types.VARCHAR}, {"products", Types.VARCHAR},
		{"marketSharePer", Types.VARCHAR},
		{"tradeRemedyMeasure", Types.VARCHAR},
		{"fiveYearsInvestment", Types.VARCHAR}, {"planCapacity", Types.VARCHAR},
		{"growthProjection", Types.VARCHAR},
		{"jadscApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("jadscInfoRequestId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("entityId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("address", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mainTelephone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("officeTelephone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cellTelephone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("otherContact", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("whatsappTelephone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("emailContact", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactPerName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactPerPosition", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactPerPhone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactPerEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("altContactPerName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("altContactPerPosition", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("altContactPerPhone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("altContactPerEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("comOperationYear", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("products", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("marketSharePer", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tradeRemedyMeasure", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fiveYearsInvestment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("planCapacity", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("growthProjection", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("jadscApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_jadsc_info_request (uuid_ VARCHAR(75) null,jadscInfoRequestId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,entityId VARCHAR(75) null,companyName VARCHAR(75) null,address VARCHAR(75) null,mainTelephone VARCHAR(75) null,officeTelephone VARCHAR(75) null,cellTelephone VARCHAR(75) null,otherContact VARCHAR(75) null,whatsappTelephone VARCHAR(75) null,emailContact VARCHAR(75) null,contactPerName VARCHAR(75) null,contactPerPosition VARCHAR(75) null,contactPerPhone VARCHAR(75) null,contactPerEmail VARCHAR(75) null,altContactPerName VARCHAR(75) null,altContactPerPosition VARCHAR(75) null,altContactPerPhone VARCHAR(75) null,altContactPerEmail VARCHAR(75) null,comOperationYear VARCHAR(75) null,products VARCHAR(75) null,marketSharePer VARCHAR(75) null,tradeRemedyMeasure TEXT null,fiveYearsInvestment VARCHAR(75) null,planCapacity VARCHAR(75) null,growthProjection VARCHAR(75) null,jadscApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_jadsc_info_request";

	public static final String ORDER_BY_JPQL =
		" ORDER BY jadscInformationRequest.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_jadsc_info_request.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long JADSCAPPLICATIONID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public JADSCInformationRequestModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _jadscInfoRequestId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setJadscInfoRequestId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _jadscInfoRequestId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return JADSCInformationRequest.class;
	}

	@Override
	public String getModelClassName() {
		return JADSCInformationRequest.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<JADSCInformationRequest, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<JADSCInformationRequest, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<JADSCInformationRequest, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((JADSCInformationRequest)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<JADSCInformationRequest, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<JADSCInformationRequest, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(JADSCInformationRequest)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<JADSCInformationRequest, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<JADSCInformationRequest, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<JADSCInformationRequest, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<JADSCInformationRequest, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<JADSCInformationRequest, Object>>();

			attributeGetterFunctions.put(
				"uuid", JADSCInformationRequest::getUuid);
			attributeGetterFunctions.put(
				"jadscInfoRequestId",
				JADSCInformationRequest::getJadscInfoRequestId);
			attributeGetterFunctions.put(
				"groupId", JADSCInformationRequest::getGroupId);
			attributeGetterFunctions.put(
				"companyId", JADSCInformationRequest::getCompanyId);
			attributeGetterFunctions.put(
				"userId", JADSCInformationRequest::getUserId);
			attributeGetterFunctions.put(
				"userName", JADSCInformationRequest::getUserName);
			attributeGetterFunctions.put(
				"createDate", JADSCInformationRequest::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", JADSCInformationRequest::getModifiedDate);
			attributeGetterFunctions.put(
				"entityId", JADSCInformationRequest::getEntityId);
			attributeGetterFunctions.put(
				"companyName", JADSCInformationRequest::getCompanyName);
			attributeGetterFunctions.put(
				"address", JADSCInformationRequest::getAddress);
			attributeGetterFunctions.put(
				"mainTelephone", JADSCInformationRequest::getMainTelephone);
			attributeGetterFunctions.put(
				"officeTelephone", JADSCInformationRequest::getOfficeTelephone);
			attributeGetterFunctions.put(
				"cellTelephone", JADSCInformationRequest::getCellTelephone);
			attributeGetterFunctions.put(
				"otherContact", JADSCInformationRequest::getOtherContact);
			attributeGetterFunctions.put(
				"whatsappTelephone",
				JADSCInformationRequest::getWhatsappTelephone);
			attributeGetterFunctions.put(
				"emailContact", JADSCInformationRequest::getEmailContact);
			attributeGetterFunctions.put(
				"contactPerName", JADSCInformationRequest::getContactPerName);
			attributeGetterFunctions.put(
				"contactPerPosition",
				JADSCInformationRequest::getContactPerPosition);
			attributeGetterFunctions.put(
				"contactPerPhone", JADSCInformationRequest::getContactPerPhone);
			attributeGetterFunctions.put(
				"contactPerEmail", JADSCInformationRequest::getContactPerEmail);
			attributeGetterFunctions.put(
				"altContactPerName",
				JADSCInformationRequest::getAltContactPerName);
			attributeGetterFunctions.put(
				"altContactPerPosition",
				JADSCInformationRequest::getAltContactPerPosition);
			attributeGetterFunctions.put(
				"altContactPerPhone",
				JADSCInformationRequest::getAltContactPerPhone);
			attributeGetterFunctions.put(
				"altContactPerEmail",
				JADSCInformationRequest::getAltContactPerEmail);
			attributeGetterFunctions.put(
				"comOperationYear",
				JADSCInformationRequest::getComOperationYear);
			attributeGetterFunctions.put(
				"products", JADSCInformationRequest::getProducts);
			attributeGetterFunctions.put(
				"marketSharePer", JADSCInformationRequest::getMarketSharePer);
			attributeGetterFunctions.put(
				"tradeRemedyMeasure",
				JADSCInformationRequest::getTradeRemedyMeasure);
			attributeGetterFunctions.put(
				"fiveYearsInvestment",
				JADSCInformationRequest::getFiveYearsInvestment);
			attributeGetterFunctions.put(
				"planCapacity", JADSCInformationRequest::getPlanCapacity);
			attributeGetterFunctions.put(
				"growthProjection",
				JADSCInformationRequest::getGrowthProjection);
			attributeGetterFunctions.put(
				"jadscApplicationId",
				JADSCInformationRequest::getJadscApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<JADSCInformationRequest, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<JADSCInformationRequest, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<JADSCInformationRequest, ?>>();

			attributeSetterBiConsumers.put(
				"uuid",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setUuid);
			attributeSetterBiConsumers.put(
				"jadscInfoRequestId",
				(BiConsumer<JADSCInformationRequest, Long>)
					JADSCInformationRequest::setJadscInfoRequestId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<JADSCInformationRequest, Long>)
					JADSCInformationRequest::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<JADSCInformationRequest, Long>)
					JADSCInformationRequest::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<JADSCInformationRequest, Long>)
					JADSCInformationRequest::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<JADSCInformationRequest, Date>)
					JADSCInformationRequest::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<JADSCInformationRequest, Date>)
					JADSCInformationRequest::setModifiedDate);
			attributeSetterBiConsumers.put(
				"entityId",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setEntityId);
			attributeSetterBiConsumers.put(
				"companyName",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setCompanyName);
			attributeSetterBiConsumers.put(
				"address",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setAddress);
			attributeSetterBiConsumers.put(
				"mainTelephone",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setMainTelephone);
			attributeSetterBiConsumers.put(
				"officeTelephone",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setOfficeTelephone);
			attributeSetterBiConsumers.put(
				"cellTelephone",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setCellTelephone);
			attributeSetterBiConsumers.put(
				"otherContact",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setOtherContact);
			attributeSetterBiConsumers.put(
				"whatsappTelephone",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setWhatsappTelephone);
			attributeSetterBiConsumers.put(
				"emailContact",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setEmailContact);
			attributeSetterBiConsumers.put(
				"contactPerName",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setContactPerName);
			attributeSetterBiConsumers.put(
				"contactPerPosition",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setContactPerPosition);
			attributeSetterBiConsumers.put(
				"contactPerPhone",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setContactPerPhone);
			attributeSetterBiConsumers.put(
				"contactPerEmail",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setContactPerEmail);
			attributeSetterBiConsumers.put(
				"altContactPerName",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setAltContactPerName);
			attributeSetterBiConsumers.put(
				"altContactPerPosition",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setAltContactPerPosition);
			attributeSetterBiConsumers.put(
				"altContactPerPhone",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setAltContactPerPhone);
			attributeSetterBiConsumers.put(
				"altContactPerEmail",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setAltContactPerEmail);
			attributeSetterBiConsumers.put(
				"comOperationYear",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setComOperationYear);
			attributeSetterBiConsumers.put(
				"products",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setProducts);
			attributeSetterBiConsumers.put(
				"marketSharePer",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setMarketSharePer);
			attributeSetterBiConsumers.put(
				"tradeRemedyMeasure",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setTradeRemedyMeasure);
			attributeSetterBiConsumers.put(
				"fiveYearsInvestment",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setFiveYearsInvestment);
			attributeSetterBiConsumers.put(
				"planCapacity",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setPlanCapacity);
			attributeSetterBiConsumers.put(
				"growthProjection",
				(BiConsumer<JADSCInformationRequest, String>)
					JADSCInformationRequest::setGrowthProjection);
			attributeSetterBiConsumers.put(
				"jadscApplicationId",
				(BiConsumer<JADSCInformationRequest, Long>)
					JADSCInformationRequest::setJadscApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getJadscInfoRequestId() {
		return _jadscInfoRequestId;
	}

	@Override
	public void setJadscInfoRequestId(long jadscInfoRequestId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_jadscInfoRequestId = jadscInfoRequestId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getEntityId() {
		if (_entityId == null) {
			return "";
		}
		else {
			return _entityId;
		}
	}

	@Override
	public void setEntityId(String entityId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_entityId = entityId;
	}

	@JSON
	@Override
	public String getCompanyName() {
		if (_companyName == null) {
			return "";
		}
		else {
			return _companyName;
		}
	}

	@Override
	public void setCompanyName(String companyName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyName = companyName;
	}

	@JSON
	@Override
	public String getAddress() {
		if (_address == null) {
			return "";
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_address = address;
	}

	@JSON
	@Override
	public String getMainTelephone() {
		if (_mainTelephone == null) {
			return "";
		}
		else {
			return _mainTelephone;
		}
	}

	@Override
	public void setMainTelephone(String mainTelephone) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mainTelephone = mainTelephone;
	}

	@JSON
	@Override
	public String getOfficeTelephone() {
		if (_officeTelephone == null) {
			return "";
		}
		else {
			return _officeTelephone;
		}
	}

	@Override
	public void setOfficeTelephone(String officeTelephone) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_officeTelephone = officeTelephone;
	}

	@JSON
	@Override
	public String getCellTelephone() {
		if (_cellTelephone == null) {
			return "";
		}
		else {
			return _cellTelephone;
		}
	}

	@Override
	public void setCellTelephone(String cellTelephone) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cellTelephone = cellTelephone;
	}

	@JSON
	@Override
	public String getOtherContact() {
		if (_otherContact == null) {
			return "";
		}
		else {
			return _otherContact;
		}
	}

	@Override
	public void setOtherContact(String otherContact) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_otherContact = otherContact;
	}

	@JSON
	@Override
	public String getWhatsappTelephone() {
		if (_whatsappTelephone == null) {
			return "";
		}
		else {
			return _whatsappTelephone;
		}
	}

	@Override
	public void setWhatsappTelephone(String whatsappTelephone) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_whatsappTelephone = whatsappTelephone;
	}

	@JSON
	@Override
	public String getEmailContact() {
		if (_emailContact == null) {
			return "";
		}
		else {
			return _emailContact;
		}
	}

	@Override
	public void setEmailContact(String emailContact) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_emailContact = emailContact;
	}

	@JSON
	@Override
	public String getContactPerName() {
		if (_contactPerName == null) {
			return "";
		}
		else {
			return _contactPerName;
		}
	}

	@Override
	public void setContactPerName(String contactPerName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactPerName = contactPerName;
	}

	@JSON
	@Override
	public String getContactPerPosition() {
		if (_contactPerPosition == null) {
			return "";
		}
		else {
			return _contactPerPosition;
		}
	}

	@Override
	public void setContactPerPosition(String contactPerPosition) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactPerPosition = contactPerPosition;
	}

	@JSON
	@Override
	public String getContactPerPhone() {
		if (_contactPerPhone == null) {
			return "";
		}
		else {
			return _contactPerPhone;
		}
	}

	@Override
	public void setContactPerPhone(String contactPerPhone) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactPerPhone = contactPerPhone;
	}

	@JSON
	@Override
	public String getContactPerEmail() {
		if (_contactPerEmail == null) {
			return "";
		}
		else {
			return _contactPerEmail;
		}
	}

	@Override
	public void setContactPerEmail(String contactPerEmail) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactPerEmail = contactPerEmail;
	}

	@JSON
	@Override
	public String getAltContactPerName() {
		if (_altContactPerName == null) {
			return "";
		}
		else {
			return _altContactPerName;
		}
	}

	@Override
	public void setAltContactPerName(String altContactPerName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_altContactPerName = altContactPerName;
	}

	@JSON
	@Override
	public String getAltContactPerPosition() {
		if (_altContactPerPosition == null) {
			return "";
		}
		else {
			return _altContactPerPosition;
		}
	}

	@Override
	public void setAltContactPerPosition(String altContactPerPosition) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_altContactPerPosition = altContactPerPosition;
	}

	@JSON
	@Override
	public String getAltContactPerPhone() {
		if (_altContactPerPhone == null) {
			return "";
		}
		else {
			return _altContactPerPhone;
		}
	}

	@Override
	public void setAltContactPerPhone(String altContactPerPhone) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_altContactPerPhone = altContactPerPhone;
	}

	@JSON
	@Override
	public String getAltContactPerEmail() {
		if (_altContactPerEmail == null) {
			return "";
		}
		else {
			return _altContactPerEmail;
		}
	}

	@Override
	public void setAltContactPerEmail(String altContactPerEmail) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_altContactPerEmail = altContactPerEmail;
	}

	@JSON
	@Override
	public String getComOperationYear() {
		if (_comOperationYear == null) {
			return "";
		}
		else {
			return _comOperationYear;
		}
	}

	@Override
	public void setComOperationYear(String comOperationYear) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_comOperationYear = comOperationYear;
	}

	@JSON
	@Override
	public String getProducts() {
		if (_products == null) {
			return "";
		}
		else {
			return _products;
		}
	}

	@Override
	public void setProducts(String products) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_products = products;
	}

	@JSON
	@Override
	public String getMarketSharePer() {
		if (_marketSharePer == null) {
			return "";
		}
		else {
			return _marketSharePer;
		}
	}

	@Override
	public void setMarketSharePer(String marketSharePer) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_marketSharePer = marketSharePer;
	}

	@JSON
	@Override
	public String getTradeRemedyMeasure() {
		if (_tradeRemedyMeasure == null) {
			return "";
		}
		else {
			return _tradeRemedyMeasure;
		}
	}

	@Override
	public void setTradeRemedyMeasure(String tradeRemedyMeasure) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tradeRemedyMeasure = tradeRemedyMeasure;
	}

	@JSON
	@Override
	public String getFiveYearsInvestment() {
		if (_fiveYearsInvestment == null) {
			return "";
		}
		else {
			return _fiveYearsInvestment;
		}
	}

	@Override
	public void setFiveYearsInvestment(String fiveYearsInvestment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fiveYearsInvestment = fiveYearsInvestment;
	}

	@JSON
	@Override
	public String getPlanCapacity() {
		if (_planCapacity == null) {
			return "";
		}
		else {
			return _planCapacity;
		}
	}

	@Override
	public void setPlanCapacity(String planCapacity) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_planCapacity = planCapacity;
	}

	@JSON
	@Override
	public String getGrowthProjection() {
		if (_growthProjection == null) {
			return "";
		}
		else {
			return _growthProjection;
		}
	}

	@Override
	public void setGrowthProjection(String growthProjection) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_growthProjection = growthProjection;
	}

	@JSON
	@Override
	public long getJadscApplicationId() {
		return _jadscApplicationId;
	}

	@Override
	public void setJadscApplicationId(long jadscApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_jadscApplicationId = jadscApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalJadscApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("jadscApplicationId"));
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(JADSCInformationRequest.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), JADSCInformationRequest.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public JADSCInformationRequest toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, JADSCInformationRequest>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		JADSCInformationRequestImpl jadscInformationRequestImpl =
			new JADSCInformationRequestImpl();

		jadscInformationRequestImpl.setUuid(getUuid());
		jadscInformationRequestImpl.setJadscInfoRequestId(
			getJadscInfoRequestId());
		jadscInformationRequestImpl.setGroupId(getGroupId());
		jadscInformationRequestImpl.setCompanyId(getCompanyId());
		jadscInformationRequestImpl.setUserId(getUserId());
		jadscInformationRequestImpl.setUserName(getUserName());
		jadscInformationRequestImpl.setCreateDate(getCreateDate());
		jadscInformationRequestImpl.setModifiedDate(getModifiedDate());
		jadscInformationRequestImpl.setEntityId(getEntityId());
		jadscInformationRequestImpl.setCompanyName(getCompanyName());
		jadscInformationRequestImpl.setAddress(getAddress());
		jadscInformationRequestImpl.setMainTelephone(getMainTelephone());
		jadscInformationRequestImpl.setOfficeTelephone(getOfficeTelephone());
		jadscInformationRequestImpl.setCellTelephone(getCellTelephone());
		jadscInformationRequestImpl.setOtherContact(getOtherContact());
		jadscInformationRequestImpl.setWhatsappTelephone(
			getWhatsappTelephone());
		jadscInformationRequestImpl.setEmailContact(getEmailContact());
		jadscInformationRequestImpl.setContactPerName(getContactPerName());
		jadscInformationRequestImpl.setContactPerPosition(
			getContactPerPosition());
		jadscInformationRequestImpl.setContactPerPhone(getContactPerPhone());
		jadscInformationRequestImpl.setContactPerEmail(getContactPerEmail());
		jadscInformationRequestImpl.setAltContactPerName(
			getAltContactPerName());
		jadscInformationRequestImpl.setAltContactPerPosition(
			getAltContactPerPosition());
		jadscInformationRequestImpl.setAltContactPerPhone(
			getAltContactPerPhone());
		jadscInformationRequestImpl.setAltContactPerEmail(
			getAltContactPerEmail());
		jadscInformationRequestImpl.setComOperationYear(getComOperationYear());
		jadscInformationRequestImpl.setProducts(getProducts());
		jadscInformationRequestImpl.setMarketSharePer(getMarketSharePer());
		jadscInformationRequestImpl.setTradeRemedyMeasure(
			getTradeRemedyMeasure());
		jadscInformationRequestImpl.setFiveYearsInvestment(
			getFiveYearsInvestment());
		jadscInformationRequestImpl.setPlanCapacity(getPlanCapacity());
		jadscInformationRequestImpl.setGrowthProjection(getGrowthProjection());
		jadscInformationRequestImpl.setJadscApplicationId(
			getJadscApplicationId());

		jadscInformationRequestImpl.resetOriginalValues();

		return jadscInformationRequestImpl;
	}

	@Override
	public JADSCInformationRequest cloneWithOriginalValues() {
		JADSCInformationRequestImpl jadscInformationRequestImpl =
			new JADSCInformationRequestImpl();

		jadscInformationRequestImpl.setUuid(
			this.<String>getColumnOriginalValue("uuid_"));
		jadscInformationRequestImpl.setJadscInfoRequestId(
			this.<Long>getColumnOriginalValue("jadscInfoRequestId"));
		jadscInformationRequestImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		jadscInformationRequestImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		jadscInformationRequestImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		jadscInformationRequestImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		jadscInformationRequestImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		jadscInformationRequestImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		jadscInformationRequestImpl.setEntityId(
			this.<String>getColumnOriginalValue("entityId"));
		jadscInformationRequestImpl.setCompanyName(
			this.<String>getColumnOriginalValue("companyName"));
		jadscInformationRequestImpl.setAddress(
			this.<String>getColumnOriginalValue("address"));
		jadscInformationRequestImpl.setMainTelephone(
			this.<String>getColumnOriginalValue("mainTelephone"));
		jadscInformationRequestImpl.setOfficeTelephone(
			this.<String>getColumnOriginalValue("officeTelephone"));
		jadscInformationRequestImpl.setCellTelephone(
			this.<String>getColumnOriginalValue("cellTelephone"));
		jadscInformationRequestImpl.setOtherContact(
			this.<String>getColumnOriginalValue("otherContact"));
		jadscInformationRequestImpl.setWhatsappTelephone(
			this.<String>getColumnOriginalValue("whatsappTelephone"));
		jadscInformationRequestImpl.setEmailContact(
			this.<String>getColumnOriginalValue("emailContact"));
		jadscInformationRequestImpl.setContactPerName(
			this.<String>getColumnOriginalValue("contactPerName"));
		jadscInformationRequestImpl.setContactPerPosition(
			this.<String>getColumnOriginalValue("contactPerPosition"));
		jadscInformationRequestImpl.setContactPerPhone(
			this.<String>getColumnOriginalValue("contactPerPhone"));
		jadscInformationRequestImpl.setContactPerEmail(
			this.<String>getColumnOriginalValue("contactPerEmail"));
		jadscInformationRequestImpl.setAltContactPerName(
			this.<String>getColumnOriginalValue("altContactPerName"));
		jadscInformationRequestImpl.setAltContactPerPosition(
			this.<String>getColumnOriginalValue("altContactPerPosition"));
		jadscInformationRequestImpl.setAltContactPerPhone(
			this.<String>getColumnOriginalValue("altContactPerPhone"));
		jadscInformationRequestImpl.setAltContactPerEmail(
			this.<String>getColumnOriginalValue("altContactPerEmail"));
		jadscInformationRequestImpl.setComOperationYear(
			this.<String>getColumnOriginalValue("comOperationYear"));
		jadscInformationRequestImpl.setProducts(
			this.<String>getColumnOriginalValue("products"));
		jadscInformationRequestImpl.setMarketSharePer(
			this.<String>getColumnOriginalValue("marketSharePer"));
		jadscInformationRequestImpl.setTradeRemedyMeasure(
			this.<String>getColumnOriginalValue("tradeRemedyMeasure"));
		jadscInformationRequestImpl.setFiveYearsInvestment(
			this.<String>getColumnOriginalValue("fiveYearsInvestment"));
		jadscInformationRequestImpl.setPlanCapacity(
			this.<String>getColumnOriginalValue("planCapacity"));
		jadscInformationRequestImpl.setGrowthProjection(
			this.<String>getColumnOriginalValue("growthProjection"));
		jadscInformationRequestImpl.setJadscApplicationId(
			this.<Long>getColumnOriginalValue("jadscApplicationId"));

		return jadscInformationRequestImpl;
	}

	@Override
	public int compareTo(JADSCInformationRequest jadscInformationRequest) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), jadscInformationRequest.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof JADSCInformationRequest)) {
			return false;
		}

		JADSCInformationRequest jadscInformationRequest =
			(JADSCInformationRequest)object;

		long primaryKey = jadscInformationRequest.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<JADSCInformationRequest> toCacheModel() {
		JADSCInformationRequestCacheModel jadscInformationRequestCacheModel =
			new JADSCInformationRequestCacheModel();

		jadscInformationRequestCacheModel.uuid = getUuid();

		String uuid = jadscInformationRequestCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			jadscInformationRequestCacheModel.uuid = null;
		}

		jadscInformationRequestCacheModel.jadscInfoRequestId =
			getJadscInfoRequestId();

		jadscInformationRequestCacheModel.groupId = getGroupId();

		jadscInformationRequestCacheModel.companyId = getCompanyId();

		jadscInformationRequestCacheModel.userId = getUserId();

		jadscInformationRequestCacheModel.userName = getUserName();

		String userName = jadscInformationRequestCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			jadscInformationRequestCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			jadscInformationRequestCacheModel.createDate = createDate.getTime();
		}
		else {
			jadscInformationRequestCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			jadscInformationRequestCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			jadscInformationRequestCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		jadscInformationRequestCacheModel.entityId = getEntityId();

		String entityId = jadscInformationRequestCacheModel.entityId;

		if ((entityId != null) && (entityId.length() == 0)) {
			jadscInformationRequestCacheModel.entityId = null;
		}

		jadscInformationRequestCacheModel.companyName = getCompanyName();

		String companyName = jadscInformationRequestCacheModel.companyName;

		if ((companyName != null) && (companyName.length() == 0)) {
			jadscInformationRequestCacheModel.companyName = null;
		}

		jadscInformationRequestCacheModel.address = getAddress();

		String address = jadscInformationRequestCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			jadscInformationRequestCacheModel.address = null;
		}

		jadscInformationRequestCacheModel.mainTelephone = getMainTelephone();

		String mainTelephone = jadscInformationRequestCacheModel.mainTelephone;

		if ((mainTelephone != null) && (mainTelephone.length() == 0)) {
			jadscInformationRequestCacheModel.mainTelephone = null;
		}

		jadscInformationRequestCacheModel.officeTelephone =
			getOfficeTelephone();

		String officeTelephone =
			jadscInformationRequestCacheModel.officeTelephone;

		if ((officeTelephone != null) && (officeTelephone.length() == 0)) {
			jadscInformationRequestCacheModel.officeTelephone = null;
		}

		jadscInformationRequestCacheModel.cellTelephone = getCellTelephone();

		String cellTelephone = jadscInformationRequestCacheModel.cellTelephone;

		if ((cellTelephone != null) && (cellTelephone.length() == 0)) {
			jadscInformationRequestCacheModel.cellTelephone = null;
		}

		jadscInformationRequestCacheModel.otherContact = getOtherContact();

		String otherContact = jadscInformationRequestCacheModel.otherContact;

		if ((otherContact != null) && (otherContact.length() == 0)) {
			jadscInformationRequestCacheModel.otherContact = null;
		}

		jadscInformationRequestCacheModel.whatsappTelephone =
			getWhatsappTelephone();

		String whatsappTelephone =
			jadscInformationRequestCacheModel.whatsappTelephone;

		if ((whatsappTelephone != null) && (whatsappTelephone.length() == 0)) {
			jadscInformationRequestCacheModel.whatsappTelephone = null;
		}

		jadscInformationRequestCacheModel.emailContact = getEmailContact();

		String emailContact = jadscInformationRequestCacheModel.emailContact;

		if ((emailContact != null) && (emailContact.length() == 0)) {
			jadscInformationRequestCacheModel.emailContact = null;
		}

		jadscInformationRequestCacheModel.contactPerName = getContactPerName();

		String contactPerName =
			jadscInformationRequestCacheModel.contactPerName;

		if ((contactPerName != null) && (contactPerName.length() == 0)) {
			jadscInformationRequestCacheModel.contactPerName = null;
		}

		jadscInformationRequestCacheModel.contactPerPosition =
			getContactPerPosition();

		String contactPerPosition =
			jadscInformationRequestCacheModel.contactPerPosition;

		if ((contactPerPosition != null) &&
			(contactPerPosition.length() == 0)) {

			jadscInformationRequestCacheModel.contactPerPosition = null;
		}

		jadscInformationRequestCacheModel.contactPerPhone =
			getContactPerPhone();

		String contactPerPhone =
			jadscInformationRequestCacheModel.contactPerPhone;

		if ((contactPerPhone != null) && (contactPerPhone.length() == 0)) {
			jadscInformationRequestCacheModel.contactPerPhone = null;
		}

		jadscInformationRequestCacheModel.contactPerEmail =
			getContactPerEmail();

		String contactPerEmail =
			jadscInformationRequestCacheModel.contactPerEmail;

		if ((contactPerEmail != null) && (contactPerEmail.length() == 0)) {
			jadscInformationRequestCacheModel.contactPerEmail = null;
		}

		jadscInformationRequestCacheModel.altContactPerName =
			getAltContactPerName();

		String altContactPerName =
			jadscInformationRequestCacheModel.altContactPerName;

		if ((altContactPerName != null) && (altContactPerName.length() == 0)) {
			jadscInformationRequestCacheModel.altContactPerName = null;
		}

		jadscInformationRequestCacheModel.altContactPerPosition =
			getAltContactPerPosition();

		String altContactPerPosition =
			jadscInformationRequestCacheModel.altContactPerPosition;

		if ((altContactPerPosition != null) &&
			(altContactPerPosition.length() == 0)) {

			jadscInformationRequestCacheModel.altContactPerPosition = null;
		}

		jadscInformationRequestCacheModel.altContactPerPhone =
			getAltContactPerPhone();

		String altContactPerPhone =
			jadscInformationRequestCacheModel.altContactPerPhone;

		if ((altContactPerPhone != null) &&
			(altContactPerPhone.length() == 0)) {

			jadscInformationRequestCacheModel.altContactPerPhone = null;
		}

		jadscInformationRequestCacheModel.altContactPerEmail =
			getAltContactPerEmail();

		String altContactPerEmail =
			jadscInformationRequestCacheModel.altContactPerEmail;

		if ((altContactPerEmail != null) &&
			(altContactPerEmail.length() == 0)) {

			jadscInformationRequestCacheModel.altContactPerEmail = null;
		}

		jadscInformationRequestCacheModel.comOperationYear =
			getComOperationYear();

		String comOperationYear =
			jadscInformationRequestCacheModel.comOperationYear;

		if ((comOperationYear != null) && (comOperationYear.length() == 0)) {
			jadscInformationRequestCacheModel.comOperationYear = null;
		}

		jadscInformationRequestCacheModel.products = getProducts();

		String products = jadscInformationRequestCacheModel.products;

		if ((products != null) && (products.length() == 0)) {
			jadscInformationRequestCacheModel.products = null;
		}

		jadscInformationRequestCacheModel.marketSharePer = getMarketSharePer();

		String marketSharePer =
			jadscInformationRequestCacheModel.marketSharePer;

		if ((marketSharePer != null) && (marketSharePer.length() == 0)) {
			jadscInformationRequestCacheModel.marketSharePer = null;
		}

		jadscInformationRequestCacheModel.tradeRemedyMeasure =
			getTradeRemedyMeasure();

		String tradeRemedyMeasure =
			jadscInformationRequestCacheModel.tradeRemedyMeasure;

		if ((tradeRemedyMeasure != null) &&
			(tradeRemedyMeasure.length() == 0)) {

			jadscInformationRequestCacheModel.tradeRemedyMeasure = null;
		}

		jadscInformationRequestCacheModel.fiveYearsInvestment =
			getFiveYearsInvestment();

		String fiveYearsInvestment =
			jadscInformationRequestCacheModel.fiveYearsInvestment;

		if ((fiveYearsInvestment != null) &&
			(fiveYearsInvestment.length() == 0)) {

			jadscInformationRequestCacheModel.fiveYearsInvestment = null;
		}

		jadscInformationRequestCacheModel.planCapacity = getPlanCapacity();

		String planCapacity = jadscInformationRequestCacheModel.planCapacity;

		if ((planCapacity != null) && (planCapacity.length() == 0)) {
			jadscInformationRequestCacheModel.planCapacity = null;
		}

		jadscInformationRequestCacheModel.growthProjection =
			getGrowthProjection();

		String growthProjection =
			jadscInformationRequestCacheModel.growthProjection;

		if ((growthProjection != null) && (growthProjection.length() == 0)) {
			jadscInformationRequestCacheModel.growthProjection = null;
		}

		jadscInformationRequestCacheModel.jadscApplicationId =
			getJadscApplicationId();

		return jadscInformationRequestCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<JADSCInformationRequest, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<JADSCInformationRequest, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<JADSCInformationRequest, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(JADSCInformationRequest)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, JADSCInformationRequest>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						JADSCInformationRequest.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _jadscInfoRequestId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _entityId;
	private String _companyName;
	private String _address;
	private String _mainTelephone;
	private String _officeTelephone;
	private String _cellTelephone;
	private String _otherContact;
	private String _whatsappTelephone;
	private String _emailContact;
	private String _contactPerName;
	private String _contactPerPosition;
	private String _contactPerPhone;
	private String _contactPerEmail;
	private String _altContactPerName;
	private String _altContactPerPosition;
	private String _altContactPerPhone;
	private String _altContactPerEmail;
	private String _comOperationYear;
	private String _products;
	private String _marketSharePer;
	private String _tradeRemedyMeasure;
	private String _fiveYearsInvestment;
	private String _planCapacity;
	private String _growthProjection;
	private long _jadscApplicationId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<JADSCInformationRequest, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((JADSCInformationRequest)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("jadscInfoRequestId", _jadscInfoRequestId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("entityId", _entityId);
		_columnOriginalValues.put("companyName", _companyName);
		_columnOriginalValues.put("address", _address);
		_columnOriginalValues.put("mainTelephone", _mainTelephone);
		_columnOriginalValues.put("officeTelephone", _officeTelephone);
		_columnOriginalValues.put("cellTelephone", _cellTelephone);
		_columnOriginalValues.put("otherContact", _otherContact);
		_columnOriginalValues.put("whatsappTelephone", _whatsappTelephone);
		_columnOriginalValues.put("emailContact", _emailContact);
		_columnOriginalValues.put("contactPerName", _contactPerName);
		_columnOriginalValues.put("contactPerPosition", _contactPerPosition);
		_columnOriginalValues.put("contactPerPhone", _contactPerPhone);
		_columnOriginalValues.put("contactPerEmail", _contactPerEmail);
		_columnOriginalValues.put("altContactPerName", _altContactPerName);
		_columnOriginalValues.put(
			"altContactPerPosition", _altContactPerPosition);
		_columnOriginalValues.put("altContactPerPhone", _altContactPerPhone);
		_columnOriginalValues.put("altContactPerEmail", _altContactPerEmail);
		_columnOriginalValues.put("comOperationYear", _comOperationYear);
		_columnOriginalValues.put("products", _products);
		_columnOriginalValues.put("marketSharePer", _marketSharePer);
		_columnOriginalValues.put("tradeRemedyMeasure", _tradeRemedyMeasure);
		_columnOriginalValues.put("fiveYearsInvestment", _fiveYearsInvestment);
		_columnOriginalValues.put("planCapacity", _planCapacity);
		_columnOriginalValues.put("growthProjection", _growthProjection);
		_columnOriginalValues.put("jadscApplicationId", _jadscApplicationId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("jadscInfoRequestId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("userId", 16L);

		columnBitmasks.put("userName", 32L);

		columnBitmasks.put("createDate", 64L);

		columnBitmasks.put("modifiedDate", 128L);

		columnBitmasks.put("entityId", 256L);

		columnBitmasks.put("companyName", 512L);

		columnBitmasks.put("address", 1024L);

		columnBitmasks.put("mainTelephone", 2048L);

		columnBitmasks.put("officeTelephone", 4096L);

		columnBitmasks.put("cellTelephone", 8192L);

		columnBitmasks.put("otherContact", 16384L);

		columnBitmasks.put("whatsappTelephone", 32768L);

		columnBitmasks.put("emailContact", 65536L);

		columnBitmasks.put("contactPerName", 131072L);

		columnBitmasks.put("contactPerPosition", 262144L);

		columnBitmasks.put("contactPerPhone", 524288L);

		columnBitmasks.put("contactPerEmail", 1048576L);

		columnBitmasks.put("altContactPerName", 2097152L);

		columnBitmasks.put("altContactPerPosition", 4194304L);

		columnBitmasks.put("altContactPerPhone", 8388608L);

		columnBitmasks.put("altContactPerEmail", 16777216L);

		columnBitmasks.put("comOperationYear", 33554432L);

		columnBitmasks.put("products", 67108864L);

		columnBitmasks.put("marketSharePer", 134217728L);

		columnBitmasks.put("tradeRemedyMeasure", 268435456L);

		columnBitmasks.put("fiveYearsInvestment", 536870912L);

		columnBitmasks.put("planCapacity", 1073741824L);

		columnBitmasks.put("growthProjection", 2147483648L);

		columnBitmasks.put("jadscApplicationId", 4294967296L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private JADSCInformationRequest _escapedModel;

}