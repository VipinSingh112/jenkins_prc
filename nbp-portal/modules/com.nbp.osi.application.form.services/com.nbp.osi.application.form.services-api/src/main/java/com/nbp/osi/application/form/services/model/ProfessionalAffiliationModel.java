/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.osi.application.form.services.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the ProfessionalAffiliation service. Represents a row in the &quot;nbp_osi_affiliation&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.nbp.osi.application.form.services.model.impl.ProfessionalAffiliationModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.nbp.osi.application.form.services.model.impl.ProfessionalAffiliationImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ProfessionalAffiliation
 * @generated
 */
@ProviderType
public interface ProfessionalAffiliationModel
	extends BaseModel<ProfessionalAffiliation>, GroupedModel, ShardedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a professional affiliation model instance should use the {@link ProfessionalAffiliation} interface instead.
	 */

	/**
	 * Returns the primary key of this professional affiliation.
	 *
	 * @return the primary key of this professional affiliation
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this professional affiliation.
	 *
	 * @param primaryKey the primary key of this professional affiliation
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the professional affiliation ID of this professional affiliation.
	 *
	 * @return the professional affiliation ID of this professional affiliation
	 */
	public long getProfessionalAffiliationId();

	/**
	 * Sets the professional affiliation ID of this professional affiliation.
	 *
	 * @param professionalAffiliationId the professional affiliation ID of this professional affiliation
	 */
	public void setProfessionalAffiliationId(long professionalAffiliationId);

	/**
	 * Returns the group ID of this professional affiliation.
	 *
	 * @return the group ID of this professional affiliation
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this professional affiliation.
	 *
	 * @param groupId the group ID of this professional affiliation
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this professional affiliation.
	 *
	 * @return the company ID of this professional affiliation
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this professional affiliation.
	 *
	 * @param companyId the company ID of this professional affiliation
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this professional affiliation.
	 *
	 * @return the user ID of this professional affiliation
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this professional affiliation.
	 *
	 * @param userId the user ID of this professional affiliation
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this professional affiliation.
	 *
	 * @return the user uuid of this professional affiliation
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this professional affiliation.
	 *
	 * @param userUuid the user uuid of this professional affiliation
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this professional affiliation.
	 *
	 * @return the user name of this professional affiliation
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this professional affiliation.
	 *
	 * @param userName the user name of this professional affiliation
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this professional affiliation.
	 *
	 * @return the create date of this professional affiliation
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this professional affiliation.
	 *
	 * @param createDate the create date of this professional affiliation
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this professional affiliation.
	 *
	 * @return the modified date of this professional affiliation
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this professional affiliation.
	 *
	 * @param modifiedDate the modified date of this professional affiliation
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the professional affiliations date of this professional affiliation.
	 *
	 * @return the professional affiliations date of this professional affiliation
	 */
	public Date getProfessionalAffiliationsDate();

	/**
	 * Sets the professional affiliations date of this professional affiliation.
	 *
	 * @param professionalAffiliationsDate the professional affiliations date of this professional affiliation
	 */
	public void setProfessionalAffiliationsDate(
		Date professionalAffiliationsDate);

	/**
	 * Returns the affiliation multivalue of this professional affiliation.
	 *
	 * @return the affiliation multivalue of this professional affiliation
	 */
	@AutoEscape
	public String getAffiliationMultivalue();

	/**
	 * Sets the affiliation multivalue of this professional affiliation.
	 *
	 * @param affiliationMultivalue the affiliation multivalue of this professional affiliation
	 */
	public void setAffiliationMultivalue(String affiliationMultivalue);

	/**
	 * Returns the osi application ID of this professional affiliation.
	 *
	 * @return the osi application ID of this professional affiliation
	 */
	public long getOsiApplicationId();

	/**
	 * Sets the osi application ID of this professional affiliation.
	 *
	 * @param osiApplicationId the osi application ID of this professional affiliation
	 */
	public void setOsiApplicationId(long osiApplicationId);

	@Override
	public ProfessionalAffiliation cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}