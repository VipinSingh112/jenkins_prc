/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.sez.status.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.sez.status.application.form.service.model.SezZoneGeneralBusinessInfo;
import com.nbp.sez.status.application.form.service.model.SezZoneGeneralBusinessInfoModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the SezZoneGeneralBusinessInfo service. Represents a row in the &quot;nbp_sez_zone_gen_business_info&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>SezZoneGeneralBusinessInfoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SezZoneGeneralBusinessInfoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SezZoneGeneralBusinessInfoImpl
 * @generated
 */
@JSON(strict = true)
public class SezZoneGeneralBusinessInfoModelImpl
	extends BaseModelImpl<SezZoneGeneralBusinessInfo>
	implements SezZoneGeneralBusinessInfoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a sez zone general business info model instance should use the <code>SezZoneGeneralBusinessInfo</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_sez_zone_gen_business_info";

	public static final Object[][] TABLE_COLUMNS = {
		{"sezZoneGeneralBusinessInfoId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"applicationDate", Types.TIMESTAMP}, {"developerName", Types.VARCHAR},
		{"LocationName", Types.VARCHAR}, {"controlNum", Types.VARCHAR},
		{"existingCompany", Types.VARCHAR}, {"articleForm", Types.VARCHAR},
		{"otherArticleForm", Types.VARCHAR}, {"nonResidentCom", Types.VARCHAR},
		{"taxRegisNum", Types.VARCHAR}, {"genConsumptionNum", Types.VARCHAR},
		{"taxComplianceCertificateNum", Types.VARCHAR},
		{"sezStatusApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("sezZoneGeneralBusinessInfoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("applicationDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("developerName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("LocationName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("controlNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("existingCompany", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("articleForm", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("otherArticleForm", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nonResidentCom", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("taxRegisNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("genConsumptionNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("taxComplianceCertificateNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sezStatusApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_sez_zone_gen_business_info (sezZoneGeneralBusinessInfoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,applicationDate DATE null,developerName VARCHAR(75) null,LocationName VARCHAR(75) null,controlNum VARCHAR(75) null,existingCompany VARCHAR(75) null,articleForm VARCHAR(75) null,otherArticleForm VARCHAR(75) null,nonResidentCom VARCHAR(75) null,taxRegisNum VARCHAR(75) null,genConsumptionNum VARCHAR(75) null,taxComplianceCertificateNum VARCHAR(75) null,sezStatusApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_sez_zone_gen_business_info";

	public static final String ORDER_BY_JPQL =
		" ORDER BY sezZoneGeneralBusinessInfo.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_sez_zone_gen_business_info.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SEZSTATUSAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public SezZoneGeneralBusinessInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _sezZoneGeneralBusinessInfoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSezZoneGeneralBusinessInfoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _sezZoneGeneralBusinessInfoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SezZoneGeneralBusinessInfo.class;
	}

	@Override
	public String getModelClassName() {
		return SezZoneGeneralBusinessInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<SezZoneGeneralBusinessInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<SezZoneGeneralBusinessInfo, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SezZoneGeneralBusinessInfo, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(SezZoneGeneralBusinessInfo)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<SezZoneGeneralBusinessInfo, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<SezZoneGeneralBusinessInfo, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(SezZoneGeneralBusinessInfo)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<SezZoneGeneralBusinessInfo, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<SezZoneGeneralBusinessInfo, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<SezZoneGeneralBusinessInfo, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<SezZoneGeneralBusinessInfo, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String,
						 Function<SezZoneGeneralBusinessInfo, Object>>();

			attributeGetterFunctions.put(
				"sezZoneGeneralBusinessInfoId",
				SezZoneGeneralBusinessInfo::getSezZoneGeneralBusinessInfoId);
			attributeGetterFunctions.put(
				"groupId", SezZoneGeneralBusinessInfo::getGroupId);
			attributeGetterFunctions.put(
				"companyId", SezZoneGeneralBusinessInfo::getCompanyId);
			attributeGetterFunctions.put(
				"userId", SezZoneGeneralBusinessInfo::getUserId);
			attributeGetterFunctions.put(
				"userName", SezZoneGeneralBusinessInfo::getUserName);
			attributeGetterFunctions.put(
				"createDate", SezZoneGeneralBusinessInfo::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", SezZoneGeneralBusinessInfo::getModifiedDate);
			attributeGetterFunctions.put(
				"applicationDate",
				SezZoneGeneralBusinessInfo::getApplicationDate);
			attributeGetterFunctions.put(
				"developerName", SezZoneGeneralBusinessInfo::getDeveloperName);
			attributeGetterFunctions.put(
				"LocationName", SezZoneGeneralBusinessInfo::getLocationName);
			attributeGetterFunctions.put(
				"controlNum", SezZoneGeneralBusinessInfo::getControlNum);
			attributeGetterFunctions.put(
				"existingCompany",
				SezZoneGeneralBusinessInfo::getExistingCompany);
			attributeGetterFunctions.put(
				"articleForm", SezZoneGeneralBusinessInfo::getArticleForm);
			attributeGetterFunctions.put(
				"otherArticleForm",
				SezZoneGeneralBusinessInfo::getOtherArticleForm);
			attributeGetterFunctions.put(
				"nonResidentCom",
				SezZoneGeneralBusinessInfo::getNonResidentCom);
			attributeGetterFunctions.put(
				"taxRegisNum", SezZoneGeneralBusinessInfo::getTaxRegisNum);
			attributeGetterFunctions.put(
				"genConsumptionNum",
				SezZoneGeneralBusinessInfo::getGenConsumptionNum);
			attributeGetterFunctions.put(
				"taxComplianceCertificateNum",
				SezZoneGeneralBusinessInfo::getTaxComplianceCertificateNum);
			attributeGetterFunctions.put(
				"sezStatusApplicationId",
				SezZoneGeneralBusinessInfo::getSezStatusApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<SezZoneGeneralBusinessInfo, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<SezZoneGeneralBusinessInfo, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<SezZoneGeneralBusinessInfo, ?>>();

			attributeSetterBiConsumers.put(
				"sezZoneGeneralBusinessInfoId",
				(BiConsumer<SezZoneGeneralBusinessInfo, Long>)
					SezZoneGeneralBusinessInfo::
						setSezZoneGeneralBusinessInfoId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<SezZoneGeneralBusinessInfo, Long>)
					SezZoneGeneralBusinessInfo::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<SezZoneGeneralBusinessInfo, Long>)
					SezZoneGeneralBusinessInfo::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<SezZoneGeneralBusinessInfo, Long>)
					SezZoneGeneralBusinessInfo::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<SezZoneGeneralBusinessInfo, String>)
					SezZoneGeneralBusinessInfo::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<SezZoneGeneralBusinessInfo, Date>)
					SezZoneGeneralBusinessInfo::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<SezZoneGeneralBusinessInfo, Date>)
					SezZoneGeneralBusinessInfo::setModifiedDate);
			attributeSetterBiConsumers.put(
				"applicationDate",
				(BiConsumer<SezZoneGeneralBusinessInfo, Date>)
					SezZoneGeneralBusinessInfo::setApplicationDate);
			attributeSetterBiConsumers.put(
				"developerName",
				(BiConsumer<SezZoneGeneralBusinessInfo, String>)
					SezZoneGeneralBusinessInfo::setDeveloperName);
			attributeSetterBiConsumers.put(
				"LocationName",
				(BiConsumer<SezZoneGeneralBusinessInfo, String>)
					SezZoneGeneralBusinessInfo::setLocationName);
			attributeSetterBiConsumers.put(
				"controlNum",
				(BiConsumer<SezZoneGeneralBusinessInfo, String>)
					SezZoneGeneralBusinessInfo::setControlNum);
			attributeSetterBiConsumers.put(
				"existingCompany",
				(BiConsumer<SezZoneGeneralBusinessInfo, String>)
					SezZoneGeneralBusinessInfo::setExistingCompany);
			attributeSetterBiConsumers.put(
				"articleForm",
				(BiConsumer<SezZoneGeneralBusinessInfo, String>)
					SezZoneGeneralBusinessInfo::setArticleForm);
			attributeSetterBiConsumers.put(
				"otherArticleForm",
				(BiConsumer<SezZoneGeneralBusinessInfo, String>)
					SezZoneGeneralBusinessInfo::setOtherArticleForm);
			attributeSetterBiConsumers.put(
				"nonResidentCom",
				(BiConsumer<SezZoneGeneralBusinessInfo, String>)
					SezZoneGeneralBusinessInfo::setNonResidentCom);
			attributeSetterBiConsumers.put(
				"taxRegisNum",
				(BiConsumer<SezZoneGeneralBusinessInfo, String>)
					SezZoneGeneralBusinessInfo::setTaxRegisNum);
			attributeSetterBiConsumers.put(
				"genConsumptionNum",
				(BiConsumer<SezZoneGeneralBusinessInfo, String>)
					SezZoneGeneralBusinessInfo::setGenConsumptionNum);
			attributeSetterBiConsumers.put(
				"taxComplianceCertificateNum",
				(BiConsumer<SezZoneGeneralBusinessInfo, String>)
					SezZoneGeneralBusinessInfo::setTaxComplianceCertificateNum);
			attributeSetterBiConsumers.put(
				"sezStatusApplicationId",
				(BiConsumer<SezZoneGeneralBusinessInfo, Long>)
					SezZoneGeneralBusinessInfo::setSezStatusApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getSezZoneGeneralBusinessInfoId() {
		return _sezZoneGeneralBusinessInfoId;
	}

	@Override
	public void setSezZoneGeneralBusinessInfoId(
		long sezZoneGeneralBusinessInfoId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sezZoneGeneralBusinessInfoId = sezZoneGeneralBusinessInfoId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public Date getApplicationDate() {
		return _applicationDate;
	}

	@Override
	public void setApplicationDate(Date applicationDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicationDate = applicationDate;
	}

	@JSON
	@Override
	public String getDeveloperName() {
		if (_developerName == null) {
			return "";
		}
		else {
			return _developerName;
		}
	}

	@Override
	public void setDeveloperName(String developerName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_developerName = developerName;
	}

	@JSON
	@Override
	public String getLocationName() {
		if (_LocationName == null) {
			return "";
		}
		else {
			return _LocationName;
		}
	}

	@Override
	public void setLocationName(String LocationName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_LocationName = LocationName;
	}

	@JSON
	@Override
	public String getControlNum() {
		if (_controlNum == null) {
			return "";
		}
		else {
			return _controlNum;
		}
	}

	@Override
	public void setControlNum(String controlNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_controlNum = controlNum;
	}

	@JSON
	@Override
	public String getExistingCompany() {
		if (_existingCompany == null) {
			return "";
		}
		else {
			return _existingCompany;
		}
	}

	@Override
	public void setExistingCompany(String existingCompany) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_existingCompany = existingCompany;
	}

	@JSON
	@Override
	public String getArticleForm() {
		if (_articleForm == null) {
			return "";
		}
		else {
			return _articleForm;
		}
	}

	@Override
	public void setArticleForm(String articleForm) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_articleForm = articleForm;
	}

	@JSON
	@Override
	public String getOtherArticleForm() {
		if (_otherArticleForm == null) {
			return "";
		}
		else {
			return _otherArticleForm;
		}
	}

	@Override
	public void setOtherArticleForm(String otherArticleForm) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_otherArticleForm = otherArticleForm;
	}

	@JSON
	@Override
	public String getNonResidentCom() {
		if (_nonResidentCom == null) {
			return "";
		}
		else {
			return _nonResidentCom;
		}
	}

	@Override
	public void setNonResidentCom(String nonResidentCom) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nonResidentCom = nonResidentCom;
	}

	@JSON
	@Override
	public String getTaxRegisNum() {
		if (_taxRegisNum == null) {
			return "";
		}
		else {
			return _taxRegisNum;
		}
	}

	@Override
	public void setTaxRegisNum(String taxRegisNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_taxRegisNum = taxRegisNum;
	}

	@JSON
	@Override
	public String getGenConsumptionNum() {
		if (_genConsumptionNum == null) {
			return "";
		}
		else {
			return _genConsumptionNum;
		}
	}

	@Override
	public void setGenConsumptionNum(String genConsumptionNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_genConsumptionNum = genConsumptionNum;
	}

	@JSON
	@Override
	public String getTaxComplianceCertificateNum() {
		if (_taxComplianceCertificateNum == null) {
			return "";
		}
		else {
			return _taxComplianceCertificateNum;
		}
	}

	@Override
	public void setTaxComplianceCertificateNum(
		String taxComplianceCertificateNum) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_taxComplianceCertificateNum = taxComplianceCertificateNum;
	}

	@JSON
	@Override
	public long getSezStatusApplicationId() {
		return _sezStatusApplicationId;
	}

	@Override
	public void setSezStatusApplicationId(long sezStatusApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sezStatusApplicationId = sezStatusApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalSezStatusApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("sezStatusApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), SezZoneGeneralBusinessInfo.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SezZoneGeneralBusinessInfo toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, SezZoneGeneralBusinessInfo>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SezZoneGeneralBusinessInfoImpl sezZoneGeneralBusinessInfoImpl =
			new SezZoneGeneralBusinessInfoImpl();

		sezZoneGeneralBusinessInfoImpl.setSezZoneGeneralBusinessInfoId(
			getSezZoneGeneralBusinessInfoId());
		sezZoneGeneralBusinessInfoImpl.setGroupId(getGroupId());
		sezZoneGeneralBusinessInfoImpl.setCompanyId(getCompanyId());
		sezZoneGeneralBusinessInfoImpl.setUserId(getUserId());
		sezZoneGeneralBusinessInfoImpl.setUserName(getUserName());
		sezZoneGeneralBusinessInfoImpl.setCreateDate(getCreateDate());
		sezZoneGeneralBusinessInfoImpl.setModifiedDate(getModifiedDate());
		sezZoneGeneralBusinessInfoImpl.setApplicationDate(getApplicationDate());
		sezZoneGeneralBusinessInfoImpl.setDeveloperName(getDeveloperName());
		sezZoneGeneralBusinessInfoImpl.setLocationName(getLocationName());
		sezZoneGeneralBusinessInfoImpl.setControlNum(getControlNum());
		sezZoneGeneralBusinessInfoImpl.setExistingCompany(getExistingCompany());
		sezZoneGeneralBusinessInfoImpl.setArticleForm(getArticleForm());
		sezZoneGeneralBusinessInfoImpl.setOtherArticleForm(
			getOtherArticleForm());
		sezZoneGeneralBusinessInfoImpl.setNonResidentCom(getNonResidentCom());
		sezZoneGeneralBusinessInfoImpl.setTaxRegisNum(getTaxRegisNum());
		sezZoneGeneralBusinessInfoImpl.setGenConsumptionNum(
			getGenConsumptionNum());
		sezZoneGeneralBusinessInfoImpl.setTaxComplianceCertificateNum(
			getTaxComplianceCertificateNum());
		sezZoneGeneralBusinessInfoImpl.setSezStatusApplicationId(
			getSezStatusApplicationId());

		sezZoneGeneralBusinessInfoImpl.resetOriginalValues();

		return sezZoneGeneralBusinessInfoImpl;
	}

	@Override
	public SezZoneGeneralBusinessInfo cloneWithOriginalValues() {
		SezZoneGeneralBusinessInfoImpl sezZoneGeneralBusinessInfoImpl =
			new SezZoneGeneralBusinessInfoImpl();

		sezZoneGeneralBusinessInfoImpl.setSezZoneGeneralBusinessInfoId(
			this.<Long>getColumnOriginalValue("sezZoneGeneralBusinessInfoId"));
		sezZoneGeneralBusinessInfoImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		sezZoneGeneralBusinessInfoImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		sezZoneGeneralBusinessInfoImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		sezZoneGeneralBusinessInfoImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		sezZoneGeneralBusinessInfoImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		sezZoneGeneralBusinessInfoImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		sezZoneGeneralBusinessInfoImpl.setApplicationDate(
			this.<Date>getColumnOriginalValue("applicationDate"));
		sezZoneGeneralBusinessInfoImpl.setDeveloperName(
			this.<String>getColumnOriginalValue("developerName"));
		sezZoneGeneralBusinessInfoImpl.setLocationName(
			this.<String>getColumnOriginalValue("LocationName"));
		sezZoneGeneralBusinessInfoImpl.setControlNum(
			this.<String>getColumnOriginalValue("controlNum"));
		sezZoneGeneralBusinessInfoImpl.setExistingCompany(
			this.<String>getColumnOriginalValue("existingCompany"));
		sezZoneGeneralBusinessInfoImpl.setArticleForm(
			this.<String>getColumnOriginalValue("articleForm"));
		sezZoneGeneralBusinessInfoImpl.setOtherArticleForm(
			this.<String>getColumnOriginalValue("otherArticleForm"));
		sezZoneGeneralBusinessInfoImpl.setNonResidentCom(
			this.<String>getColumnOriginalValue("nonResidentCom"));
		sezZoneGeneralBusinessInfoImpl.setTaxRegisNum(
			this.<String>getColumnOriginalValue("taxRegisNum"));
		sezZoneGeneralBusinessInfoImpl.setGenConsumptionNum(
			this.<String>getColumnOriginalValue("genConsumptionNum"));
		sezZoneGeneralBusinessInfoImpl.setTaxComplianceCertificateNum(
			this.<String>getColumnOriginalValue("taxComplianceCertificateNum"));
		sezZoneGeneralBusinessInfoImpl.setSezStatusApplicationId(
			this.<Long>getColumnOriginalValue("sezStatusApplicationId"));

		return sezZoneGeneralBusinessInfoImpl;
	}

	@Override
	public int compareTo(
		SezZoneGeneralBusinessInfo sezZoneGeneralBusinessInfo) {

		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), sezZoneGeneralBusinessInfo.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof SezZoneGeneralBusinessInfo)) {
			return false;
		}

		SezZoneGeneralBusinessInfo sezZoneGeneralBusinessInfo =
			(SezZoneGeneralBusinessInfo)object;

		long primaryKey = sezZoneGeneralBusinessInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<SezZoneGeneralBusinessInfo> toCacheModel() {
		SezZoneGeneralBusinessInfoCacheModel
			sezZoneGeneralBusinessInfoCacheModel =
				new SezZoneGeneralBusinessInfoCacheModel();

		sezZoneGeneralBusinessInfoCacheModel.sezZoneGeneralBusinessInfoId =
			getSezZoneGeneralBusinessInfoId();

		sezZoneGeneralBusinessInfoCacheModel.groupId = getGroupId();

		sezZoneGeneralBusinessInfoCacheModel.companyId = getCompanyId();

		sezZoneGeneralBusinessInfoCacheModel.userId = getUserId();

		sezZoneGeneralBusinessInfoCacheModel.userName = getUserName();

		String userName = sezZoneGeneralBusinessInfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			sezZoneGeneralBusinessInfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			sezZoneGeneralBusinessInfoCacheModel.createDate =
				createDate.getTime();
		}
		else {
			sezZoneGeneralBusinessInfoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			sezZoneGeneralBusinessInfoCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			sezZoneGeneralBusinessInfoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		Date applicationDate = getApplicationDate();

		if (applicationDate != null) {
			sezZoneGeneralBusinessInfoCacheModel.applicationDate =
				applicationDate.getTime();
		}
		else {
			sezZoneGeneralBusinessInfoCacheModel.applicationDate =
				Long.MIN_VALUE;
		}

		sezZoneGeneralBusinessInfoCacheModel.developerName = getDeveloperName();

		String developerName =
			sezZoneGeneralBusinessInfoCacheModel.developerName;

		if ((developerName != null) && (developerName.length() == 0)) {
			sezZoneGeneralBusinessInfoCacheModel.developerName = null;
		}

		sezZoneGeneralBusinessInfoCacheModel.LocationName = getLocationName();

		String LocationName = sezZoneGeneralBusinessInfoCacheModel.LocationName;

		if ((LocationName != null) && (LocationName.length() == 0)) {
			sezZoneGeneralBusinessInfoCacheModel.LocationName = null;
		}

		sezZoneGeneralBusinessInfoCacheModel.controlNum = getControlNum();

		String controlNum = sezZoneGeneralBusinessInfoCacheModel.controlNum;

		if ((controlNum != null) && (controlNum.length() == 0)) {
			sezZoneGeneralBusinessInfoCacheModel.controlNum = null;
		}

		sezZoneGeneralBusinessInfoCacheModel.existingCompany =
			getExistingCompany();

		String existingCompany =
			sezZoneGeneralBusinessInfoCacheModel.existingCompany;

		if ((existingCompany != null) && (existingCompany.length() == 0)) {
			sezZoneGeneralBusinessInfoCacheModel.existingCompany = null;
		}

		sezZoneGeneralBusinessInfoCacheModel.articleForm = getArticleForm();

		String articleForm = sezZoneGeneralBusinessInfoCacheModel.articleForm;

		if ((articleForm != null) && (articleForm.length() == 0)) {
			sezZoneGeneralBusinessInfoCacheModel.articleForm = null;
		}

		sezZoneGeneralBusinessInfoCacheModel.otherArticleForm =
			getOtherArticleForm();

		String otherArticleForm =
			sezZoneGeneralBusinessInfoCacheModel.otherArticleForm;

		if ((otherArticleForm != null) && (otherArticleForm.length() == 0)) {
			sezZoneGeneralBusinessInfoCacheModel.otherArticleForm = null;
		}

		sezZoneGeneralBusinessInfoCacheModel.nonResidentCom =
			getNonResidentCom();

		String nonResidentCom =
			sezZoneGeneralBusinessInfoCacheModel.nonResidentCom;

		if ((nonResidentCom != null) && (nonResidentCom.length() == 0)) {
			sezZoneGeneralBusinessInfoCacheModel.nonResidentCom = null;
		}

		sezZoneGeneralBusinessInfoCacheModel.taxRegisNum = getTaxRegisNum();

		String taxRegisNum = sezZoneGeneralBusinessInfoCacheModel.taxRegisNum;

		if ((taxRegisNum != null) && (taxRegisNum.length() == 0)) {
			sezZoneGeneralBusinessInfoCacheModel.taxRegisNum = null;
		}

		sezZoneGeneralBusinessInfoCacheModel.genConsumptionNum =
			getGenConsumptionNum();

		String genConsumptionNum =
			sezZoneGeneralBusinessInfoCacheModel.genConsumptionNum;

		if ((genConsumptionNum != null) && (genConsumptionNum.length() == 0)) {
			sezZoneGeneralBusinessInfoCacheModel.genConsumptionNum = null;
		}

		sezZoneGeneralBusinessInfoCacheModel.taxComplianceCertificateNum =
			getTaxComplianceCertificateNum();

		String taxComplianceCertificateNum =
			sezZoneGeneralBusinessInfoCacheModel.taxComplianceCertificateNum;

		if ((taxComplianceCertificateNum != null) &&
			(taxComplianceCertificateNum.length() == 0)) {

			sezZoneGeneralBusinessInfoCacheModel.taxComplianceCertificateNum =
				null;
		}

		sezZoneGeneralBusinessInfoCacheModel.sezStatusApplicationId =
			getSezStatusApplicationId();

		return sezZoneGeneralBusinessInfoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<SezZoneGeneralBusinessInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<SezZoneGeneralBusinessInfo, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SezZoneGeneralBusinessInfo, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(SezZoneGeneralBusinessInfo)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, SezZoneGeneralBusinessInfo>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						SezZoneGeneralBusinessInfo.class, ModelWrapper.class);

	}

	private long _sezZoneGeneralBusinessInfoId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private Date _applicationDate;
	private String _developerName;
	private String _LocationName;
	private String _controlNum;
	private String _existingCompany;
	private String _articleForm;
	private String _otherArticleForm;
	private String _nonResidentCom;
	private String _taxRegisNum;
	private String _genConsumptionNum;
	private String _taxComplianceCertificateNum;
	private long _sezStatusApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<SezZoneGeneralBusinessInfo, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((SezZoneGeneralBusinessInfo)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"sezZoneGeneralBusinessInfoId", _sezZoneGeneralBusinessInfoId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("applicationDate", _applicationDate);
		_columnOriginalValues.put("developerName", _developerName);
		_columnOriginalValues.put("LocationName", _LocationName);
		_columnOriginalValues.put("controlNum", _controlNum);
		_columnOriginalValues.put("existingCompany", _existingCompany);
		_columnOriginalValues.put("articleForm", _articleForm);
		_columnOriginalValues.put("otherArticleForm", _otherArticleForm);
		_columnOriginalValues.put("nonResidentCom", _nonResidentCom);
		_columnOriginalValues.put("taxRegisNum", _taxRegisNum);
		_columnOriginalValues.put("genConsumptionNum", _genConsumptionNum);
		_columnOriginalValues.put(
			"taxComplianceCertificateNum", _taxComplianceCertificateNum);
		_columnOriginalValues.put(
			"sezStatusApplicationId", _sezStatusApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("sezZoneGeneralBusinessInfoId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("applicationDate", 128L);

		columnBitmasks.put("developerName", 256L);

		columnBitmasks.put("LocationName", 512L);

		columnBitmasks.put("controlNum", 1024L);

		columnBitmasks.put("existingCompany", 2048L);

		columnBitmasks.put("articleForm", 4096L);

		columnBitmasks.put("otherArticleForm", 8192L);

		columnBitmasks.put("nonResidentCom", 16384L);

		columnBitmasks.put("taxRegisNum", 32768L);

		columnBitmasks.put("genConsumptionNum", 65536L);

		columnBitmasks.put("taxComplianceCertificateNum", 131072L);

		columnBitmasks.put("sezStatusApplicationId", 262144L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private SezZoneGeneralBusinessInfo _escapedModel;

}