/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.sez.status.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.sez.status.application.form.service.model.SezZoneDevUnderInfo;
import com.nbp.sez.status.application.form.service.model.SezZoneDevUnderInfoModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the SezZoneDevUnderInfo service. Represents a row in the &quot;nbp_sez_zone_dev_under_info&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>SezZoneDevUnderInfoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SezZoneDevUnderInfoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SezZoneDevUnderInfoImpl
 * @generated
 */
@JSON(strict = true)
public class SezZoneDevUnderInfoModelImpl
	extends BaseModelImpl<SezZoneDevUnderInfo>
	implements SezZoneDevUnderInfoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a sez zone dev under info model instance should use the <code>SezZoneDevUnderInfo</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_sez_zone_dev_under_info";

	public static final Object[][] TABLE_COLUMNS = {
		{"sezZoneDevUnderInfoId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"developerName", Types.VARCHAR},
		{"approvalLetterNum", Types.VARCHAR},
		{"approvalLetterDate", Types.TIMESTAMP},
		{"developerAgreeNum", Types.VARCHAR},
		{"developerAgreeDate", Types.TIMESTAMP},
		{"developerControlNum", Types.VARCHAR},
		{"declarantTitle", Types.VARCHAR}, {"declarantName", Types.VARCHAR},
		{"declarantTelephoneNum", Types.VARCHAR},
		{"declarantEmail", Types.VARCHAR}, {"signatureDate", Types.TIMESTAMP},
		{"publicNotaryName", Types.VARCHAR},
		{"publicNotarySignatureDate", Types.TIMESTAMP},
		{"sezStatusApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("sezZoneDevUnderInfoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("developerName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("approvalLetterNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("approvalLetterDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("developerAgreeNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("developerAgreeDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("developerControlNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("declarantTitle", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("declarantName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("declarantTelephoneNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("declarantEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("signatureDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("publicNotaryName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("publicNotarySignatureDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("sezStatusApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_sez_zone_dev_under_info (sezZoneDevUnderInfoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,developerName VARCHAR(75) null,approvalLetterNum VARCHAR(75) null,approvalLetterDate DATE null,developerAgreeNum VARCHAR(75) null,developerAgreeDate DATE null,developerControlNum VARCHAR(75) null,declarantTitle VARCHAR(75) null,declarantName VARCHAR(75) null,declarantTelephoneNum VARCHAR(75) null,declarantEmail VARCHAR(75) null,signatureDate DATE null,publicNotaryName VARCHAR(75) null,publicNotarySignatureDate DATE null,sezStatusApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_sez_zone_dev_under_info";

	public static final String ORDER_BY_JPQL =
		" ORDER BY sezZoneDevUnderInfo.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_sez_zone_dev_under_info.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SEZSTATUSAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public SezZoneDevUnderInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _sezZoneDevUnderInfoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSezZoneDevUnderInfoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _sezZoneDevUnderInfoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SezZoneDevUnderInfo.class;
	}

	@Override
	public String getModelClassName() {
		return SezZoneDevUnderInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<SezZoneDevUnderInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<SezZoneDevUnderInfo, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SezZoneDevUnderInfo, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((SezZoneDevUnderInfo)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<SezZoneDevUnderInfo, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<SezZoneDevUnderInfo, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(SezZoneDevUnderInfo)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<SezZoneDevUnderInfo, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<SezZoneDevUnderInfo, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<SezZoneDevUnderInfo, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<SezZoneDevUnderInfo, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<SezZoneDevUnderInfo, Object>>();

			attributeGetterFunctions.put(
				"sezZoneDevUnderInfoId",
				SezZoneDevUnderInfo::getSezZoneDevUnderInfoId);
			attributeGetterFunctions.put(
				"groupId", SezZoneDevUnderInfo::getGroupId);
			attributeGetterFunctions.put(
				"companyId", SezZoneDevUnderInfo::getCompanyId);
			attributeGetterFunctions.put(
				"userId", SezZoneDevUnderInfo::getUserId);
			attributeGetterFunctions.put(
				"userName", SezZoneDevUnderInfo::getUserName);
			attributeGetterFunctions.put(
				"createDate", SezZoneDevUnderInfo::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", SezZoneDevUnderInfo::getModifiedDate);
			attributeGetterFunctions.put(
				"developerName", SezZoneDevUnderInfo::getDeveloperName);
			attributeGetterFunctions.put(
				"approvalLetterNum", SezZoneDevUnderInfo::getApprovalLetterNum);
			attributeGetterFunctions.put(
				"approvalLetterDate",
				SezZoneDevUnderInfo::getApprovalLetterDate);
			attributeGetterFunctions.put(
				"developerAgreeNum", SezZoneDevUnderInfo::getDeveloperAgreeNum);
			attributeGetterFunctions.put(
				"developerAgreeDate",
				SezZoneDevUnderInfo::getDeveloperAgreeDate);
			attributeGetterFunctions.put(
				"developerControlNum",
				SezZoneDevUnderInfo::getDeveloperControlNum);
			attributeGetterFunctions.put(
				"declarantTitle", SezZoneDevUnderInfo::getDeclarantTitle);
			attributeGetterFunctions.put(
				"declarantName", SezZoneDevUnderInfo::getDeclarantName);
			attributeGetterFunctions.put(
				"declarantTelephoneNum",
				SezZoneDevUnderInfo::getDeclarantTelephoneNum);
			attributeGetterFunctions.put(
				"declarantEmail", SezZoneDevUnderInfo::getDeclarantEmail);
			attributeGetterFunctions.put(
				"signatureDate", SezZoneDevUnderInfo::getSignatureDate);
			attributeGetterFunctions.put(
				"publicNotaryName", SezZoneDevUnderInfo::getPublicNotaryName);
			attributeGetterFunctions.put(
				"publicNotarySignatureDate",
				SezZoneDevUnderInfo::getPublicNotarySignatureDate);
			attributeGetterFunctions.put(
				"sezStatusApplicationId",
				SezZoneDevUnderInfo::getSezStatusApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<SezZoneDevUnderInfo, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<SezZoneDevUnderInfo, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<SezZoneDevUnderInfo, ?>>();

			attributeSetterBiConsumers.put(
				"sezZoneDevUnderInfoId",
				(BiConsumer<SezZoneDevUnderInfo, Long>)
					SezZoneDevUnderInfo::setSezZoneDevUnderInfoId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<SezZoneDevUnderInfo, Long>)
					SezZoneDevUnderInfo::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<SezZoneDevUnderInfo, Long>)
					SezZoneDevUnderInfo::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<SezZoneDevUnderInfo, Long>)
					SezZoneDevUnderInfo::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<SezZoneDevUnderInfo, String>)
					SezZoneDevUnderInfo::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<SezZoneDevUnderInfo, Date>)
					SezZoneDevUnderInfo::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<SezZoneDevUnderInfo, Date>)
					SezZoneDevUnderInfo::setModifiedDate);
			attributeSetterBiConsumers.put(
				"developerName",
				(BiConsumer<SezZoneDevUnderInfo, String>)
					SezZoneDevUnderInfo::setDeveloperName);
			attributeSetterBiConsumers.put(
				"approvalLetterNum",
				(BiConsumer<SezZoneDevUnderInfo, String>)
					SezZoneDevUnderInfo::setApprovalLetterNum);
			attributeSetterBiConsumers.put(
				"approvalLetterDate",
				(BiConsumer<SezZoneDevUnderInfo, Date>)
					SezZoneDevUnderInfo::setApprovalLetterDate);
			attributeSetterBiConsumers.put(
				"developerAgreeNum",
				(BiConsumer<SezZoneDevUnderInfo, String>)
					SezZoneDevUnderInfo::setDeveloperAgreeNum);
			attributeSetterBiConsumers.put(
				"developerAgreeDate",
				(BiConsumer<SezZoneDevUnderInfo, Date>)
					SezZoneDevUnderInfo::setDeveloperAgreeDate);
			attributeSetterBiConsumers.put(
				"developerControlNum",
				(BiConsumer<SezZoneDevUnderInfo, String>)
					SezZoneDevUnderInfo::setDeveloperControlNum);
			attributeSetterBiConsumers.put(
				"declarantTitle",
				(BiConsumer<SezZoneDevUnderInfo, String>)
					SezZoneDevUnderInfo::setDeclarantTitle);
			attributeSetterBiConsumers.put(
				"declarantName",
				(BiConsumer<SezZoneDevUnderInfo, String>)
					SezZoneDevUnderInfo::setDeclarantName);
			attributeSetterBiConsumers.put(
				"declarantTelephoneNum",
				(BiConsumer<SezZoneDevUnderInfo, String>)
					SezZoneDevUnderInfo::setDeclarantTelephoneNum);
			attributeSetterBiConsumers.put(
				"declarantEmail",
				(BiConsumer<SezZoneDevUnderInfo, String>)
					SezZoneDevUnderInfo::setDeclarantEmail);
			attributeSetterBiConsumers.put(
				"signatureDate",
				(BiConsumer<SezZoneDevUnderInfo, Date>)
					SezZoneDevUnderInfo::setSignatureDate);
			attributeSetterBiConsumers.put(
				"publicNotaryName",
				(BiConsumer<SezZoneDevUnderInfo, String>)
					SezZoneDevUnderInfo::setPublicNotaryName);
			attributeSetterBiConsumers.put(
				"publicNotarySignatureDate",
				(BiConsumer<SezZoneDevUnderInfo, Date>)
					SezZoneDevUnderInfo::setPublicNotarySignatureDate);
			attributeSetterBiConsumers.put(
				"sezStatusApplicationId",
				(BiConsumer<SezZoneDevUnderInfo, Long>)
					SezZoneDevUnderInfo::setSezStatusApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getSezZoneDevUnderInfoId() {
		return _sezZoneDevUnderInfoId;
	}

	@Override
	public void setSezZoneDevUnderInfoId(long sezZoneDevUnderInfoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sezZoneDevUnderInfoId = sezZoneDevUnderInfoId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getDeveloperName() {
		if (_developerName == null) {
			return "";
		}
		else {
			return _developerName;
		}
	}

	@Override
	public void setDeveloperName(String developerName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_developerName = developerName;
	}

	@JSON
	@Override
	public String getApprovalLetterNum() {
		if (_approvalLetterNum == null) {
			return "";
		}
		else {
			return _approvalLetterNum;
		}
	}

	@Override
	public void setApprovalLetterNum(String approvalLetterNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_approvalLetterNum = approvalLetterNum;
	}

	@JSON
	@Override
	public Date getApprovalLetterDate() {
		return _approvalLetterDate;
	}

	@Override
	public void setApprovalLetterDate(Date approvalLetterDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_approvalLetterDate = approvalLetterDate;
	}

	@JSON
	@Override
	public String getDeveloperAgreeNum() {
		if (_developerAgreeNum == null) {
			return "";
		}
		else {
			return _developerAgreeNum;
		}
	}

	@Override
	public void setDeveloperAgreeNum(String developerAgreeNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_developerAgreeNum = developerAgreeNum;
	}

	@JSON
	@Override
	public Date getDeveloperAgreeDate() {
		return _developerAgreeDate;
	}

	@Override
	public void setDeveloperAgreeDate(Date developerAgreeDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_developerAgreeDate = developerAgreeDate;
	}

	@JSON
	@Override
	public String getDeveloperControlNum() {
		if (_developerControlNum == null) {
			return "";
		}
		else {
			return _developerControlNum;
		}
	}

	@Override
	public void setDeveloperControlNum(String developerControlNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_developerControlNum = developerControlNum;
	}

	@JSON
	@Override
	public String getDeclarantTitle() {
		if (_declarantTitle == null) {
			return "";
		}
		else {
			return _declarantTitle;
		}
	}

	@Override
	public void setDeclarantTitle(String declarantTitle) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_declarantTitle = declarantTitle;
	}

	@JSON
	@Override
	public String getDeclarantName() {
		if (_declarantName == null) {
			return "";
		}
		else {
			return _declarantName;
		}
	}

	@Override
	public void setDeclarantName(String declarantName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_declarantName = declarantName;
	}

	@JSON
	@Override
	public String getDeclarantTelephoneNum() {
		if (_declarantTelephoneNum == null) {
			return "";
		}
		else {
			return _declarantTelephoneNum;
		}
	}

	@Override
	public void setDeclarantTelephoneNum(String declarantTelephoneNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_declarantTelephoneNum = declarantTelephoneNum;
	}

	@JSON
	@Override
	public String getDeclarantEmail() {
		if (_declarantEmail == null) {
			return "";
		}
		else {
			return _declarantEmail;
		}
	}

	@Override
	public void setDeclarantEmail(String declarantEmail) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_declarantEmail = declarantEmail;
	}

	@JSON
	@Override
	public Date getSignatureDate() {
		return _signatureDate;
	}

	@Override
	public void setSignatureDate(Date signatureDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_signatureDate = signatureDate;
	}

	@JSON
	@Override
	public String getPublicNotaryName() {
		if (_publicNotaryName == null) {
			return "";
		}
		else {
			return _publicNotaryName;
		}
	}

	@Override
	public void setPublicNotaryName(String publicNotaryName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_publicNotaryName = publicNotaryName;
	}

	@JSON
	@Override
	public Date getPublicNotarySignatureDate() {
		return _publicNotarySignatureDate;
	}

	@Override
	public void setPublicNotarySignatureDate(Date publicNotarySignatureDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_publicNotarySignatureDate = publicNotarySignatureDate;
	}

	@JSON
	@Override
	public long getSezStatusApplicationId() {
		return _sezStatusApplicationId;
	}

	@Override
	public void setSezStatusApplicationId(long sezStatusApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sezStatusApplicationId = sezStatusApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalSezStatusApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("sezStatusApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), SezZoneDevUnderInfo.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SezZoneDevUnderInfo toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, SezZoneDevUnderInfo>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SezZoneDevUnderInfoImpl sezZoneDevUnderInfoImpl =
			new SezZoneDevUnderInfoImpl();

		sezZoneDevUnderInfoImpl.setSezZoneDevUnderInfoId(
			getSezZoneDevUnderInfoId());
		sezZoneDevUnderInfoImpl.setGroupId(getGroupId());
		sezZoneDevUnderInfoImpl.setCompanyId(getCompanyId());
		sezZoneDevUnderInfoImpl.setUserId(getUserId());
		sezZoneDevUnderInfoImpl.setUserName(getUserName());
		sezZoneDevUnderInfoImpl.setCreateDate(getCreateDate());
		sezZoneDevUnderInfoImpl.setModifiedDate(getModifiedDate());
		sezZoneDevUnderInfoImpl.setDeveloperName(getDeveloperName());
		sezZoneDevUnderInfoImpl.setApprovalLetterNum(getApprovalLetterNum());
		sezZoneDevUnderInfoImpl.setApprovalLetterDate(getApprovalLetterDate());
		sezZoneDevUnderInfoImpl.setDeveloperAgreeNum(getDeveloperAgreeNum());
		sezZoneDevUnderInfoImpl.setDeveloperAgreeDate(getDeveloperAgreeDate());
		sezZoneDevUnderInfoImpl.setDeveloperControlNum(
			getDeveloperControlNum());
		sezZoneDevUnderInfoImpl.setDeclarantTitle(getDeclarantTitle());
		sezZoneDevUnderInfoImpl.setDeclarantName(getDeclarantName());
		sezZoneDevUnderInfoImpl.setDeclarantTelephoneNum(
			getDeclarantTelephoneNum());
		sezZoneDevUnderInfoImpl.setDeclarantEmail(getDeclarantEmail());
		sezZoneDevUnderInfoImpl.setSignatureDate(getSignatureDate());
		sezZoneDevUnderInfoImpl.setPublicNotaryName(getPublicNotaryName());
		sezZoneDevUnderInfoImpl.setPublicNotarySignatureDate(
			getPublicNotarySignatureDate());
		sezZoneDevUnderInfoImpl.setSezStatusApplicationId(
			getSezStatusApplicationId());

		sezZoneDevUnderInfoImpl.resetOriginalValues();

		return sezZoneDevUnderInfoImpl;
	}

	@Override
	public SezZoneDevUnderInfo cloneWithOriginalValues() {
		SezZoneDevUnderInfoImpl sezZoneDevUnderInfoImpl =
			new SezZoneDevUnderInfoImpl();

		sezZoneDevUnderInfoImpl.setSezZoneDevUnderInfoId(
			this.<Long>getColumnOriginalValue("sezZoneDevUnderInfoId"));
		sezZoneDevUnderInfoImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		sezZoneDevUnderInfoImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		sezZoneDevUnderInfoImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		sezZoneDevUnderInfoImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		sezZoneDevUnderInfoImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		sezZoneDevUnderInfoImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		sezZoneDevUnderInfoImpl.setDeveloperName(
			this.<String>getColumnOriginalValue("developerName"));
		sezZoneDevUnderInfoImpl.setApprovalLetterNum(
			this.<String>getColumnOriginalValue("approvalLetterNum"));
		sezZoneDevUnderInfoImpl.setApprovalLetterDate(
			this.<Date>getColumnOriginalValue("approvalLetterDate"));
		sezZoneDevUnderInfoImpl.setDeveloperAgreeNum(
			this.<String>getColumnOriginalValue("developerAgreeNum"));
		sezZoneDevUnderInfoImpl.setDeveloperAgreeDate(
			this.<Date>getColumnOriginalValue("developerAgreeDate"));
		sezZoneDevUnderInfoImpl.setDeveloperControlNum(
			this.<String>getColumnOriginalValue("developerControlNum"));
		sezZoneDevUnderInfoImpl.setDeclarantTitle(
			this.<String>getColumnOriginalValue("declarantTitle"));
		sezZoneDevUnderInfoImpl.setDeclarantName(
			this.<String>getColumnOriginalValue("declarantName"));
		sezZoneDevUnderInfoImpl.setDeclarantTelephoneNum(
			this.<String>getColumnOriginalValue("declarantTelephoneNum"));
		sezZoneDevUnderInfoImpl.setDeclarantEmail(
			this.<String>getColumnOriginalValue("declarantEmail"));
		sezZoneDevUnderInfoImpl.setSignatureDate(
			this.<Date>getColumnOriginalValue("signatureDate"));
		sezZoneDevUnderInfoImpl.setPublicNotaryName(
			this.<String>getColumnOriginalValue("publicNotaryName"));
		sezZoneDevUnderInfoImpl.setPublicNotarySignatureDate(
			this.<Date>getColumnOriginalValue("publicNotarySignatureDate"));
		sezZoneDevUnderInfoImpl.setSezStatusApplicationId(
			this.<Long>getColumnOriginalValue("sezStatusApplicationId"));

		return sezZoneDevUnderInfoImpl;
	}

	@Override
	public int compareTo(SezZoneDevUnderInfo sezZoneDevUnderInfo) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), sezZoneDevUnderInfo.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof SezZoneDevUnderInfo)) {
			return false;
		}

		SezZoneDevUnderInfo sezZoneDevUnderInfo = (SezZoneDevUnderInfo)object;

		long primaryKey = sezZoneDevUnderInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<SezZoneDevUnderInfo> toCacheModel() {
		SezZoneDevUnderInfoCacheModel sezZoneDevUnderInfoCacheModel =
			new SezZoneDevUnderInfoCacheModel();

		sezZoneDevUnderInfoCacheModel.sezZoneDevUnderInfoId =
			getSezZoneDevUnderInfoId();

		sezZoneDevUnderInfoCacheModel.groupId = getGroupId();

		sezZoneDevUnderInfoCacheModel.companyId = getCompanyId();

		sezZoneDevUnderInfoCacheModel.userId = getUserId();

		sezZoneDevUnderInfoCacheModel.userName = getUserName();

		String userName = sezZoneDevUnderInfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			sezZoneDevUnderInfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			sezZoneDevUnderInfoCacheModel.createDate = createDate.getTime();
		}
		else {
			sezZoneDevUnderInfoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			sezZoneDevUnderInfoCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			sezZoneDevUnderInfoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		sezZoneDevUnderInfoCacheModel.developerName = getDeveloperName();

		String developerName = sezZoneDevUnderInfoCacheModel.developerName;

		if ((developerName != null) && (developerName.length() == 0)) {
			sezZoneDevUnderInfoCacheModel.developerName = null;
		}

		sezZoneDevUnderInfoCacheModel.approvalLetterNum =
			getApprovalLetterNum();

		String approvalLetterNum =
			sezZoneDevUnderInfoCacheModel.approvalLetterNum;

		if ((approvalLetterNum != null) && (approvalLetterNum.length() == 0)) {
			sezZoneDevUnderInfoCacheModel.approvalLetterNum = null;
		}

		Date approvalLetterDate = getApprovalLetterDate();

		if (approvalLetterDate != null) {
			sezZoneDevUnderInfoCacheModel.approvalLetterDate =
				approvalLetterDate.getTime();
		}
		else {
			sezZoneDevUnderInfoCacheModel.approvalLetterDate = Long.MIN_VALUE;
		}

		sezZoneDevUnderInfoCacheModel.developerAgreeNum =
			getDeveloperAgreeNum();

		String developerAgreeNum =
			sezZoneDevUnderInfoCacheModel.developerAgreeNum;

		if ((developerAgreeNum != null) && (developerAgreeNum.length() == 0)) {
			sezZoneDevUnderInfoCacheModel.developerAgreeNum = null;
		}

		Date developerAgreeDate = getDeveloperAgreeDate();

		if (developerAgreeDate != null) {
			sezZoneDevUnderInfoCacheModel.developerAgreeDate =
				developerAgreeDate.getTime();
		}
		else {
			sezZoneDevUnderInfoCacheModel.developerAgreeDate = Long.MIN_VALUE;
		}

		sezZoneDevUnderInfoCacheModel.developerControlNum =
			getDeveloperControlNum();

		String developerControlNum =
			sezZoneDevUnderInfoCacheModel.developerControlNum;

		if ((developerControlNum != null) &&
			(developerControlNum.length() == 0)) {

			sezZoneDevUnderInfoCacheModel.developerControlNum = null;
		}

		sezZoneDevUnderInfoCacheModel.declarantTitle = getDeclarantTitle();

		String declarantTitle = sezZoneDevUnderInfoCacheModel.declarantTitle;

		if ((declarantTitle != null) && (declarantTitle.length() == 0)) {
			sezZoneDevUnderInfoCacheModel.declarantTitle = null;
		}

		sezZoneDevUnderInfoCacheModel.declarantName = getDeclarantName();

		String declarantName = sezZoneDevUnderInfoCacheModel.declarantName;

		if ((declarantName != null) && (declarantName.length() == 0)) {
			sezZoneDevUnderInfoCacheModel.declarantName = null;
		}

		sezZoneDevUnderInfoCacheModel.declarantTelephoneNum =
			getDeclarantTelephoneNum();

		String declarantTelephoneNum =
			sezZoneDevUnderInfoCacheModel.declarantTelephoneNum;

		if ((declarantTelephoneNum != null) &&
			(declarantTelephoneNum.length() == 0)) {

			sezZoneDevUnderInfoCacheModel.declarantTelephoneNum = null;
		}

		sezZoneDevUnderInfoCacheModel.declarantEmail = getDeclarantEmail();

		String declarantEmail = sezZoneDevUnderInfoCacheModel.declarantEmail;

		if ((declarantEmail != null) && (declarantEmail.length() == 0)) {
			sezZoneDevUnderInfoCacheModel.declarantEmail = null;
		}

		Date signatureDate = getSignatureDate();

		if (signatureDate != null) {
			sezZoneDevUnderInfoCacheModel.signatureDate =
				signatureDate.getTime();
		}
		else {
			sezZoneDevUnderInfoCacheModel.signatureDate = Long.MIN_VALUE;
		}

		sezZoneDevUnderInfoCacheModel.publicNotaryName = getPublicNotaryName();

		String publicNotaryName =
			sezZoneDevUnderInfoCacheModel.publicNotaryName;

		if ((publicNotaryName != null) && (publicNotaryName.length() == 0)) {
			sezZoneDevUnderInfoCacheModel.publicNotaryName = null;
		}

		Date publicNotarySignatureDate = getPublicNotarySignatureDate();

		if (publicNotarySignatureDate != null) {
			sezZoneDevUnderInfoCacheModel.publicNotarySignatureDate =
				publicNotarySignatureDate.getTime();
		}
		else {
			sezZoneDevUnderInfoCacheModel.publicNotarySignatureDate =
				Long.MIN_VALUE;
		}

		sezZoneDevUnderInfoCacheModel.sezStatusApplicationId =
			getSezStatusApplicationId();

		return sezZoneDevUnderInfoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<SezZoneDevUnderInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<SezZoneDevUnderInfo, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SezZoneDevUnderInfo, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(SezZoneDevUnderInfo)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, SezZoneDevUnderInfo>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					SezZoneDevUnderInfo.class, ModelWrapper.class);

	}

	private long _sezZoneDevUnderInfoId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _developerName;
	private String _approvalLetterNum;
	private Date _approvalLetterDate;
	private String _developerAgreeNum;
	private Date _developerAgreeDate;
	private String _developerControlNum;
	private String _declarantTitle;
	private String _declarantName;
	private String _declarantTelephoneNum;
	private String _declarantEmail;
	private Date _signatureDate;
	private String _publicNotaryName;
	private Date _publicNotarySignatureDate;
	private long _sezStatusApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<SezZoneDevUnderInfo, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((SezZoneDevUnderInfo)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"sezZoneDevUnderInfoId", _sezZoneDevUnderInfoId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("developerName", _developerName);
		_columnOriginalValues.put("approvalLetterNum", _approvalLetterNum);
		_columnOriginalValues.put("approvalLetterDate", _approvalLetterDate);
		_columnOriginalValues.put("developerAgreeNum", _developerAgreeNum);
		_columnOriginalValues.put("developerAgreeDate", _developerAgreeDate);
		_columnOriginalValues.put("developerControlNum", _developerControlNum);
		_columnOriginalValues.put("declarantTitle", _declarantTitle);
		_columnOriginalValues.put("declarantName", _declarantName);
		_columnOriginalValues.put(
			"declarantTelephoneNum", _declarantTelephoneNum);
		_columnOriginalValues.put("declarantEmail", _declarantEmail);
		_columnOriginalValues.put("signatureDate", _signatureDate);
		_columnOriginalValues.put("publicNotaryName", _publicNotaryName);
		_columnOriginalValues.put(
			"publicNotarySignatureDate", _publicNotarySignatureDate);
		_columnOriginalValues.put(
			"sezStatusApplicationId", _sezStatusApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("sezZoneDevUnderInfoId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("developerName", 128L);

		columnBitmasks.put("approvalLetterNum", 256L);

		columnBitmasks.put("approvalLetterDate", 512L);

		columnBitmasks.put("developerAgreeNum", 1024L);

		columnBitmasks.put("developerAgreeDate", 2048L);

		columnBitmasks.put("developerControlNum", 4096L);

		columnBitmasks.put("declarantTitle", 8192L);

		columnBitmasks.put("declarantName", 16384L);

		columnBitmasks.put("declarantTelephoneNum", 32768L);

		columnBitmasks.put("declarantEmail", 65536L);

		columnBitmasks.put("signatureDate", 131072L);

		columnBitmasks.put("publicNotaryName", 262144L);

		columnBitmasks.put("publicNotarySignatureDate", 524288L);

		columnBitmasks.put("sezStatusApplicationId", 1048576L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private SezZoneDevUnderInfo _escapedModel;

}