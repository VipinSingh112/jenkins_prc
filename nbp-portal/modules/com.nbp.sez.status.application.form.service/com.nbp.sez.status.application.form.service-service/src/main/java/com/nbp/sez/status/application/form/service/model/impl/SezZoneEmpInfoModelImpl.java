/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.nbp.sez.status.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.sez.status.application.form.service.model.SezZoneEmpInfo;
import com.nbp.sez.status.application.form.service.model.SezZoneEmpInfoModel;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the SezZoneEmpInfo service. Represents a row in the &quot;nbp_sez_zone_emp_info&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>SezZoneEmpInfoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SezZoneEmpInfoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SezZoneEmpInfoImpl
 * @generated
 */
@JSON(strict = true)
public class SezZoneEmpInfoModelImpl
	extends BaseModelImpl<SezZoneEmpInfo> implements SezZoneEmpInfoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a sez zone emp info model instance should use the <code>SezZoneEmpInfo</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_sez_zone_emp_info";

	public static final Object[][] TABLE_COLUMNS = {
		{"sezZoneEmpInfoId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP},
		{"labourRequirementYear", Types.VARCHAR},
		{"labourRequirementDirect", Types.VARCHAR},
		{"labourRequirementMale", Types.VARCHAR},
		{"labourRequirementFemale", Types.VARCHAR},
		{"labourRequirementLocal", Types.VARCHAR},
		{"labourRequirementForeign", Types.VARCHAR}, {"counter", Types.VARCHAR},
		{"sezStatusApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("sezZoneEmpInfoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("labourRequirementYear", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("labourRequirementDirect", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("labourRequirementMale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("labourRequirementFemale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("labourRequirementLocal", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("labourRequirementForeign", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("counter", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sezStatusApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_sez_zone_emp_info (sezZoneEmpInfoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,labourRequirementYear VARCHAR(75) null,labourRequirementDirect VARCHAR(75) null,labourRequirementMale VARCHAR(75) null,labourRequirementFemale VARCHAR(75) null,labourRequirementLocal VARCHAR(75) null,labourRequirementForeign VARCHAR(75) null,counter VARCHAR(75) null,sezStatusApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_sez_zone_emp_info";

	public static final String ORDER_BY_JPQL =
		" ORDER BY sezZoneEmpInfo.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_sez_zone_emp_info.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SEZSTATUSAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public SezZoneEmpInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _sezZoneEmpInfoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSezZoneEmpInfoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _sezZoneEmpInfoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SezZoneEmpInfo.class;
	}

	@Override
	public String getModelClassName() {
		return SezZoneEmpInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<SezZoneEmpInfo, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<SezZoneEmpInfo, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SezZoneEmpInfo, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((SezZoneEmpInfo)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<SezZoneEmpInfo, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<SezZoneEmpInfo, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(SezZoneEmpInfo)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<SezZoneEmpInfo, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<SezZoneEmpInfo, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, SezZoneEmpInfo>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			SezZoneEmpInfo.class.getClassLoader(), SezZoneEmpInfo.class,
			ModelWrapper.class);

		try {
			Constructor<SezZoneEmpInfo> constructor =
				(Constructor<SezZoneEmpInfo>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<SezZoneEmpInfo, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<SezZoneEmpInfo, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<SezZoneEmpInfo, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<SezZoneEmpInfo, Object>>();
		Map<String, BiConsumer<SezZoneEmpInfo, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<SezZoneEmpInfo, ?>>();

		attributeGetterFunctions.put(
			"sezZoneEmpInfoId", SezZoneEmpInfo::getSezZoneEmpInfoId);
		attributeSetterBiConsumers.put(
			"sezZoneEmpInfoId",
			(BiConsumer<SezZoneEmpInfo, Long>)
				SezZoneEmpInfo::setSezZoneEmpInfoId);
		attributeGetterFunctions.put("groupId", SezZoneEmpInfo::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<SezZoneEmpInfo, Long>)SezZoneEmpInfo::setGroupId);
		attributeGetterFunctions.put("companyId", SezZoneEmpInfo::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<SezZoneEmpInfo, Long>)SezZoneEmpInfo::setCompanyId);
		attributeGetterFunctions.put("userId", SezZoneEmpInfo::getUserId);
		attributeSetterBiConsumers.put(
			"userId",
			(BiConsumer<SezZoneEmpInfo, Long>)SezZoneEmpInfo::setUserId);
		attributeGetterFunctions.put("userName", SezZoneEmpInfo::getUserName);
		attributeSetterBiConsumers.put(
			"userName",
			(BiConsumer<SezZoneEmpInfo, String>)SezZoneEmpInfo::setUserName);
		attributeGetterFunctions.put(
			"createDate", SezZoneEmpInfo::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<SezZoneEmpInfo, Date>)SezZoneEmpInfo::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", SezZoneEmpInfo::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<SezZoneEmpInfo, Date>)SezZoneEmpInfo::setModifiedDate);
		attributeGetterFunctions.put(
			"labourRequirementYear", SezZoneEmpInfo::getLabourRequirementYear);
		attributeSetterBiConsumers.put(
			"labourRequirementYear",
			(BiConsumer<SezZoneEmpInfo, String>)
				SezZoneEmpInfo::setLabourRequirementYear);
		attributeGetterFunctions.put(
			"labourRequirementDirect",
			SezZoneEmpInfo::getLabourRequirementDirect);
		attributeSetterBiConsumers.put(
			"labourRequirementDirect",
			(BiConsumer<SezZoneEmpInfo, String>)
				SezZoneEmpInfo::setLabourRequirementDirect);
		attributeGetterFunctions.put(
			"labourRequirementMale", SezZoneEmpInfo::getLabourRequirementMale);
		attributeSetterBiConsumers.put(
			"labourRequirementMale",
			(BiConsumer<SezZoneEmpInfo, String>)
				SezZoneEmpInfo::setLabourRequirementMale);
		attributeGetterFunctions.put(
			"labourRequirementFemale",
			SezZoneEmpInfo::getLabourRequirementFemale);
		attributeSetterBiConsumers.put(
			"labourRequirementFemale",
			(BiConsumer<SezZoneEmpInfo, String>)
				SezZoneEmpInfo::setLabourRequirementFemale);
		attributeGetterFunctions.put(
			"labourRequirementLocal",
			SezZoneEmpInfo::getLabourRequirementLocal);
		attributeSetterBiConsumers.put(
			"labourRequirementLocal",
			(BiConsumer<SezZoneEmpInfo, String>)
				SezZoneEmpInfo::setLabourRequirementLocal);
		attributeGetterFunctions.put(
			"labourRequirementForeign",
			SezZoneEmpInfo::getLabourRequirementForeign);
		attributeSetterBiConsumers.put(
			"labourRequirementForeign",
			(BiConsumer<SezZoneEmpInfo, String>)
				SezZoneEmpInfo::setLabourRequirementForeign);
		attributeGetterFunctions.put("counter", SezZoneEmpInfo::getCounter);
		attributeSetterBiConsumers.put(
			"counter",
			(BiConsumer<SezZoneEmpInfo, String>)SezZoneEmpInfo::setCounter);
		attributeGetterFunctions.put(
			"sezStatusApplicationId",
			SezZoneEmpInfo::getSezStatusApplicationId);
		attributeSetterBiConsumers.put(
			"sezStatusApplicationId",
			(BiConsumer<SezZoneEmpInfo, Long>)
				SezZoneEmpInfo::setSezStatusApplicationId);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getSezZoneEmpInfoId() {
		return _sezZoneEmpInfoId;
	}

	@Override
	public void setSezZoneEmpInfoId(long sezZoneEmpInfoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sezZoneEmpInfoId = sezZoneEmpInfoId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getLabourRequirementYear() {
		if (_labourRequirementYear == null) {
			return "";
		}
		else {
			return _labourRequirementYear;
		}
	}

	@Override
	public void setLabourRequirementYear(String labourRequirementYear) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_labourRequirementYear = labourRequirementYear;
	}

	@JSON
	@Override
	public String getLabourRequirementDirect() {
		if (_labourRequirementDirect == null) {
			return "";
		}
		else {
			return _labourRequirementDirect;
		}
	}

	@Override
	public void setLabourRequirementDirect(String labourRequirementDirect) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_labourRequirementDirect = labourRequirementDirect;
	}

	@JSON
	@Override
	public String getLabourRequirementMale() {
		if (_labourRequirementMale == null) {
			return "";
		}
		else {
			return _labourRequirementMale;
		}
	}

	@Override
	public void setLabourRequirementMale(String labourRequirementMale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_labourRequirementMale = labourRequirementMale;
	}

	@JSON
	@Override
	public String getLabourRequirementFemale() {
		if (_labourRequirementFemale == null) {
			return "";
		}
		else {
			return _labourRequirementFemale;
		}
	}

	@Override
	public void setLabourRequirementFemale(String labourRequirementFemale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_labourRequirementFemale = labourRequirementFemale;
	}

	@JSON
	@Override
	public String getLabourRequirementLocal() {
		if (_labourRequirementLocal == null) {
			return "";
		}
		else {
			return _labourRequirementLocal;
		}
	}

	@Override
	public void setLabourRequirementLocal(String labourRequirementLocal) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_labourRequirementLocal = labourRequirementLocal;
	}

	@JSON
	@Override
	public String getLabourRequirementForeign() {
		if (_labourRequirementForeign == null) {
			return "";
		}
		else {
			return _labourRequirementForeign;
		}
	}

	@Override
	public void setLabourRequirementForeign(String labourRequirementForeign) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_labourRequirementForeign = labourRequirementForeign;
	}

	@JSON
	@Override
	public String getCounter() {
		if (_counter == null) {
			return "";
		}
		else {
			return _counter;
		}
	}

	@Override
	public void setCounter(String counter) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_counter = counter;
	}

	@JSON
	@Override
	public long getSezStatusApplicationId() {
		return _sezStatusApplicationId;
	}

	@Override
	public void setSezStatusApplicationId(long sezStatusApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sezStatusApplicationId = sezStatusApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalSezStatusApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("sezStatusApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), SezZoneEmpInfo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SezZoneEmpInfo toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, SezZoneEmpInfo>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SezZoneEmpInfoImpl sezZoneEmpInfoImpl = new SezZoneEmpInfoImpl();

		sezZoneEmpInfoImpl.setSezZoneEmpInfoId(getSezZoneEmpInfoId());
		sezZoneEmpInfoImpl.setGroupId(getGroupId());
		sezZoneEmpInfoImpl.setCompanyId(getCompanyId());
		sezZoneEmpInfoImpl.setUserId(getUserId());
		sezZoneEmpInfoImpl.setUserName(getUserName());
		sezZoneEmpInfoImpl.setCreateDate(getCreateDate());
		sezZoneEmpInfoImpl.setModifiedDate(getModifiedDate());
		sezZoneEmpInfoImpl.setLabourRequirementYear(getLabourRequirementYear());
		sezZoneEmpInfoImpl.setLabourRequirementDirect(
			getLabourRequirementDirect());
		sezZoneEmpInfoImpl.setLabourRequirementMale(getLabourRequirementMale());
		sezZoneEmpInfoImpl.setLabourRequirementFemale(
			getLabourRequirementFemale());
		sezZoneEmpInfoImpl.setLabourRequirementLocal(
			getLabourRequirementLocal());
		sezZoneEmpInfoImpl.setLabourRequirementForeign(
			getLabourRequirementForeign());
		sezZoneEmpInfoImpl.setCounter(getCounter());
		sezZoneEmpInfoImpl.setSezStatusApplicationId(
			getSezStatusApplicationId());

		sezZoneEmpInfoImpl.resetOriginalValues();

		return sezZoneEmpInfoImpl;
	}

	@Override
	public SezZoneEmpInfo cloneWithOriginalValues() {
		SezZoneEmpInfoImpl sezZoneEmpInfoImpl = new SezZoneEmpInfoImpl();

		sezZoneEmpInfoImpl.setSezZoneEmpInfoId(
			this.<Long>getColumnOriginalValue("sezZoneEmpInfoId"));
		sezZoneEmpInfoImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		sezZoneEmpInfoImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		sezZoneEmpInfoImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		sezZoneEmpInfoImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		sezZoneEmpInfoImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		sezZoneEmpInfoImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		sezZoneEmpInfoImpl.setLabourRequirementYear(
			this.<String>getColumnOriginalValue("labourRequirementYear"));
		sezZoneEmpInfoImpl.setLabourRequirementDirect(
			this.<String>getColumnOriginalValue("labourRequirementDirect"));
		sezZoneEmpInfoImpl.setLabourRequirementMale(
			this.<String>getColumnOriginalValue("labourRequirementMale"));
		sezZoneEmpInfoImpl.setLabourRequirementFemale(
			this.<String>getColumnOriginalValue("labourRequirementFemale"));
		sezZoneEmpInfoImpl.setLabourRequirementLocal(
			this.<String>getColumnOriginalValue("labourRequirementLocal"));
		sezZoneEmpInfoImpl.setLabourRequirementForeign(
			this.<String>getColumnOriginalValue("labourRequirementForeign"));
		sezZoneEmpInfoImpl.setCounter(
			this.<String>getColumnOriginalValue("counter"));
		sezZoneEmpInfoImpl.setSezStatusApplicationId(
			this.<Long>getColumnOriginalValue("sezStatusApplicationId"));

		return sezZoneEmpInfoImpl;
	}

	@Override
	public int compareTo(SezZoneEmpInfo sezZoneEmpInfo) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), sezZoneEmpInfo.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof SezZoneEmpInfo)) {
			return false;
		}

		SezZoneEmpInfo sezZoneEmpInfo = (SezZoneEmpInfo)object;

		long primaryKey = sezZoneEmpInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<SezZoneEmpInfo> toCacheModel() {
		SezZoneEmpInfoCacheModel sezZoneEmpInfoCacheModel =
			new SezZoneEmpInfoCacheModel();

		sezZoneEmpInfoCacheModel.sezZoneEmpInfoId = getSezZoneEmpInfoId();

		sezZoneEmpInfoCacheModel.groupId = getGroupId();

		sezZoneEmpInfoCacheModel.companyId = getCompanyId();

		sezZoneEmpInfoCacheModel.userId = getUserId();

		sezZoneEmpInfoCacheModel.userName = getUserName();

		String userName = sezZoneEmpInfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			sezZoneEmpInfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			sezZoneEmpInfoCacheModel.createDate = createDate.getTime();
		}
		else {
			sezZoneEmpInfoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			sezZoneEmpInfoCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			sezZoneEmpInfoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		sezZoneEmpInfoCacheModel.labourRequirementYear =
			getLabourRequirementYear();

		String labourRequirementYear =
			sezZoneEmpInfoCacheModel.labourRequirementYear;

		if ((labourRequirementYear != null) &&
			(labourRequirementYear.length() == 0)) {

			sezZoneEmpInfoCacheModel.labourRequirementYear = null;
		}

		sezZoneEmpInfoCacheModel.labourRequirementDirect =
			getLabourRequirementDirect();

		String labourRequirementDirect =
			sezZoneEmpInfoCacheModel.labourRequirementDirect;

		if ((labourRequirementDirect != null) &&
			(labourRequirementDirect.length() == 0)) {

			sezZoneEmpInfoCacheModel.labourRequirementDirect = null;
		}

		sezZoneEmpInfoCacheModel.labourRequirementMale =
			getLabourRequirementMale();

		String labourRequirementMale =
			sezZoneEmpInfoCacheModel.labourRequirementMale;

		if ((labourRequirementMale != null) &&
			(labourRequirementMale.length() == 0)) {

			sezZoneEmpInfoCacheModel.labourRequirementMale = null;
		}

		sezZoneEmpInfoCacheModel.labourRequirementFemale =
			getLabourRequirementFemale();

		String labourRequirementFemale =
			sezZoneEmpInfoCacheModel.labourRequirementFemale;

		if ((labourRequirementFemale != null) &&
			(labourRequirementFemale.length() == 0)) {

			sezZoneEmpInfoCacheModel.labourRequirementFemale = null;
		}

		sezZoneEmpInfoCacheModel.labourRequirementLocal =
			getLabourRequirementLocal();

		String labourRequirementLocal =
			sezZoneEmpInfoCacheModel.labourRequirementLocal;

		if ((labourRequirementLocal != null) &&
			(labourRequirementLocal.length() == 0)) {

			sezZoneEmpInfoCacheModel.labourRequirementLocal = null;
		}

		sezZoneEmpInfoCacheModel.labourRequirementForeign =
			getLabourRequirementForeign();

		String labourRequirementForeign =
			sezZoneEmpInfoCacheModel.labourRequirementForeign;

		if ((labourRequirementForeign != null) &&
			(labourRequirementForeign.length() == 0)) {

			sezZoneEmpInfoCacheModel.labourRequirementForeign = null;
		}

		sezZoneEmpInfoCacheModel.counter = getCounter();

		String counter = sezZoneEmpInfoCacheModel.counter;

		if ((counter != null) && (counter.length() == 0)) {
			sezZoneEmpInfoCacheModel.counter = null;
		}

		sezZoneEmpInfoCacheModel.sezStatusApplicationId =
			getSezStatusApplicationId();

		return sezZoneEmpInfoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<SezZoneEmpInfo, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<SezZoneEmpInfo, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SezZoneEmpInfo, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((SezZoneEmpInfo)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, SezZoneEmpInfo>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private long _sezZoneEmpInfoId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _labourRequirementYear;
	private String _labourRequirementDirect;
	private String _labourRequirementMale;
	private String _labourRequirementFemale;
	private String _labourRequirementLocal;
	private String _labourRequirementForeign;
	private String _counter;
	private long _sezStatusApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<SezZoneEmpInfo, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((SezZoneEmpInfo)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("sezZoneEmpInfoId", _sezZoneEmpInfoId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"labourRequirementYear", _labourRequirementYear);
		_columnOriginalValues.put(
			"labourRequirementDirect", _labourRequirementDirect);
		_columnOriginalValues.put(
			"labourRequirementMale", _labourRequirementMale);
		_columnOriginalValues.put(
			"labourRequirementFemale", _labourRequirementFemale);
		_columnOriginalValues.put(
			"labourRequirementLocal", _labourRequirementLocal);
		_columnOriginalValues.put(
			"labourRequirementForeign", _labourRequirementForeign);
		_columnOriginalValues.put("counter", _counter);
		_columnOriginalValues.put(
			"sezStatusApplicationId", _sezStatusApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("sezZoneEmpInfoId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("labourRequirementYear", 128L);

		columnBitmasks.put("labourRequirementDirect", 256L);

		columnBitmasks.put("labourRequirementMale", 512L);

		columnBitmasks.put("labourRequirementFemale", 1024L);

		columnBitmasks.put("labourRequirementLocal", 2048L);

		columnBitmasks.put("labourRequirementForeign", 4096L);

		columnBitmasks.put("counter", 8192L);

		columnBitmasks.put("sezStatusApplicationId", 16384L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private SezZoneEmpInfo _escapedModel;

}