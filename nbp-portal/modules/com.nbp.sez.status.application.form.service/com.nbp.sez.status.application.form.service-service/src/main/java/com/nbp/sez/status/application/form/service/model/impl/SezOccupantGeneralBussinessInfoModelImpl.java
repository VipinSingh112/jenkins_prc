/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.sez.status.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.sez.status.application.form.service.model.SezOccupantGeneralBussinessInfo;
import com.nbp.sez.status.application.form.service.model.SezOccupantGeneralBussinessInfoModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the SezOccupantGeneralBussinessInfo service. Represents a row in the &quot;nbp_sez_occ_gen_bussiness&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>SezOccupantGeneralBussinessInfoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SezOccupantGeneralBussinessInfoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SezOccupantGeneralBussinessInfoImpl
 * @generated
 */
@JSON(strict = true)
public class SezOccupantGeneralBussinessInfoModelImpl
	extends BaseModelImpl<SezOccupantGeneralBussinessInfo>
	implements SezOccupantGeneralBussinessInfoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a sez occupant general bussiness info model instance should use the <code>SezOccupantGeneralBussinessInfo</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_sez_occ_gen_bussiness";

	public static final Object[][] TABLE_COLUMNS = {
		{"sezOccGenBussId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"occAppDate", Types.TIMESTAMP},
		{"occSezDevName", Types.VARCHAR},
		{"occSezDevControlNum", Types.VARCHAR},
		{"occExistingCom", Types.VARCHAR}, {"occFormArticle", Types.VARCHAR},
		{"occFormArticleOther", Types.VARCHAR}, {"occTRN", Types.VARCHAR},
		{"occGCT", Types.VARCHAR}, {"occTCC", Types.VARCHAR},
		{"sezStatusApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("sezOccGenBussId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("occAppDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("occSezDevName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("occSezDevControlNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("occExistingCom", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("occFormArticle", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("occFormArticleOther", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("occTRN", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("occGCT", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("occTCC", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sezStatusApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_sez_occ_gen_bussiness (sezOccGenBussId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,occAppDate DATE null,occSezDevName VARCHAR(75) null,occSezDevControlNum VARCHAR(75) null,occExistingCom VARCHAR(75) null,occFormArticle VARCHAR(75) null,occFormArticleOther VARCHAR(75) null,occTRN VARCHAR(75) null,occGCT VARCHAR(75) null,occTCC VARCHAR(75) null,sezStatusApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_sez_occ_gen_bussiness";

	public static final String ORDER_BY_JPQL =
		" ORDER BY sezOccupantGeneralBussinessInfo.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_sez_occ_gen_bussiness.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SEZSTATUSAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public SezOccupantGeneralBussinessInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _sezOccGenBussId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSezOccGenBussId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _sezOccGenBussId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SezOccupantGeneralBussinessInfo.class;
	}

	@Override
	public String getModelClassName() {
		return SezOccupantGeneralBussinessInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<SezOccupantGeneralBussinessInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry
				<String, Function<SezOccupantGeneralBussinessInfo, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SezOccupantGeneralBussinessInfo, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(SezOccupantGeneralBussinessInfo)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<SezOccupantGeneralBussinessInfo, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<SezOccupantGeneralBussinessInfo, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(SezOccupantGeneralBussinessInfo)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<SezOccupantGeneralBussinessInfo, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<SezOccupantGeneralBussinessInfo, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<SezOccupantGeneralBussinessInfo, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<SezOccupantGeneralBussinessInfo, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String,
						 Function<SezOccupantGeneralBussinessInfo, Object>>();

			attributeGetterFunctions.put(
				"sezOccGenBussId",
				SezOccupantGeneralBussinessInfo::getSezOccGenBussId);
			attributeGetterFunctions.put(
				"groupId", SezOccupantGeneralBussinessInfo::getGroupId);
			attributeGetterFunctions.put(
				"companyId", SezOccupantGeneralBussinessInfo::getCompanyId);
			attributeGetterFunctions.put(
				"userId", SezOccupantGeneralBussinessInfo::getUserId);
			attributeGetterFunctions.put(
				"userName", SezOccupantGeneralBussinessInfo::getUserName);
			attributeGetterFunctions.put(
				"createDate", SezOccupantGeneralBussinessInfo::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate",
				SezOccupantGeneralBussinessInfo::getModifiedDate);
			attributeGetterFunctions.put(
				"occAppDate", SezOccupantGeneralBussinessInfo::getOccAppDate);
			attributeGetterFunctions.put(
				"occSezDevName",
				SezOccupantGeneralBussinessInfo::getOccSezDevName);
			attributeGetterFunctions.put(
				"occSezDevControlNum",
				SezOccupantGeneralBussinessInfo::getOccSezDevControlNum);
			attributeGetterFunctions.put(
				"occExistingCom",
				SezOccupantGeneralBussinessInfo::getOccExistingCom);
			attributeGetterFunctions.put(
				"occFormArticle",
				SezOccupantGeneralBussinessInfo::getOccFormArticle);
			attributeGetterFunctions.put(
				"occFormArticleOther",
				SezOccupantGeneralBussinessInfo::getOccFormArticleOther);
			attributeGetterFunctions.put(
				"occTRN", SezOccupantGeneralBussinessInfo::getOccTRN);
			attributeGetterFunctions.put(
				"occGCT", SezOccupantGeneralBussinessInfo::getOccGCT);
			attributeGetterFunctions.put(
				"occTCC", SezOccupantGeneralBussinessInfo::getOccTCC);
			attributeGetterFunctions.put(
				"sezStatusApplicationId",
				SezOccupantGeneralBussinessInfo::getSezStatusApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<SezOccupantGeneralBussinessInfo, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<SezOccupantGeneralBussinessInfo, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String,
						 BiConsumer<SezOccupantGeneralBussinessInfo, ?>>();

			attributeSetterBiConsumers.put(
				"sezOccGenBussId",
				(BiConsumer<SezOccupantGeneralBussinessInfo, Long>)
					SezOccupantGeneralBussinessInfo::setSezOccGenBussId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<SezOccupantGeneralBussinessInfo, Long>)
					SezOccupantGeneralBussinessInfo::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<SezOccupantGeneralBussinessInfo, Long>)
					SezOccupantGeneralBussinessInfo::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<SezOccupantGeneralBussinessInfo, Long>)
					SezOccupantGeneralBussinessInfo::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<SezOccupantGeneralBussinessInfo, String>)
					SezOccupantGeneralBussinessInfo::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<SezOccupantGeneralBussinessInfo, Date>)
					SezOccupantGeneralBussinessInfo::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<SezOccupantGeneralBussinessInfo, Date>)
					SezOccupantGeneralBussinessInfo::setModifiedDate);
			attributeSetterBiConsumers.put(
				"occAppDate",
				(BiConsumer<SezOccupantGeneralBussinessInfo, Date>)
					SezOccupantGeneralBussinessInfo::setOccAppDate);
			attributeSetterBiConsumers.put(
				"occSezDevName",
				(BiConsumer<SezOccupantGeneralBussinessInfo, String>)
					SezOccupantGeneralBussinessInfo::setOccSezDevName);
			attributeSetterBiConsumers.put(
				"occSezDevControlNum",
				(BiConsumer<SezOccupantGeneralBussinessInfo, String>)
					SezOccupantGeneralBussinessInfo::setOccSezDevControlNum);
			attributeSetterBiConsumers.put(
				"occExistingCom",
				(BiConsumer<SezOccupantGeneralBussinessInfo, String>)
					SezOccupantGeneralBussinessInfo::setOccExistingCom);
			attributeSetterBiConsumers.put(
				"occFormArticle",
				(BiConsumer<SezOccupantGeneralBussinessInfo, String>)
					SezOccupantGeneralBussinessInfo::setOccFormArticle);
			attributeSetterBiConsumers.put(
				"occFormArticleOther",
				(BiConsumer<SezOccupantGeneralBussinessInfo, String>)
					SezOccupantGeneralBussinessInfo::setOccFormArticleOther);
			attributeSetterBiConsumers.put(
				"occTRN",
				(BiConsumer<SezOccupantGeneralBussinessInfo, String>)
					SezOccupantGeneralBussinessInfo::setOccTRN);
			attributeSetterBiConsumers.put(
				"occGCT",
				(BiConsumer<SezOccupantGeneralBussinessInfo, String>)
					SezOccupantGeneralBussinessInfo::setOccGCT);
			attributeSetterBiConsumers.put(
				"occTCC",
				(BiConsumer<SezOccupantGeneralBussinessInfo, String>)
					SezOccupantGeneralBussinessInfo::setOccTCC);
			attributeSetterBiConsumers.put(
				"sezStatusApplicationId",
				(BiConsumer<SezOccupantGeneralBussinessInfo, Long>)
					SezOccupantGeneralBussinessInfo::setSezStatusApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getSezOccGenBussId() {
		return _sezOccGenBussId;
	}

	@Override
	public void setSezOccGenBussId(long sezOccGenBussId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sezOccGenBussId = sezOccGenBussId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public Date getOccAppDate() {
		return _occAppDate;
	}

	@Override
	public void setOccAppDate(Date occAppDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_occAppDate = occAppDate;
	}

	@JSON
	@Override
	public String getOccSezDevName() {
		if (_occSezDevName == null) {
			return "";
		}
		else {
			return _occSezDevName;
		}
	}

	@Override
	public void setOccSezDevName(String occSezDevName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_occSezDevName = occSezDevName;
	}

	@JSON
	@Override
	public String getOccSezDevControlNum() {
		if (_occSezDevControlNum == null) {
			return "";
		}
		else {
			return _occSezDevControlNum;
		}
	}

	@Override
	public void setOccSezDevControlNum(String occSezDevControlNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_occSezDevControlNum = occSezDevControlNum;
	}

	@JSON
	@Override
	public String getOccExistingCom() {
		if (_occExistingCom == null) {
			return "";
		}
		else {
			return _occExistingCom;
		}
	}

	@Override
	public void setOccExistingCom(String occExistingCom) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_occExistingCom = occExistingCom;
	}

	@JSON
	@Override
	public String getOccFormArticle() {
		if (_occFormArticle == null) {
			return "";
		}
		else {
			return _occFormArticle;
		}
	}

	@Override
	public void setOccFormArticle(String occFormArticle) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_occFormArticle = occFormArticle;
	}

	@JSON
	@Override
	public String getOccFormArticleOther() {
		if (_occFormArticleOther == null) {
			return "";
		}
		else {
			return _occFormArticleOther;
		}
	}

	@Override
	public void setOccFormArticleOther(String occFormArticleOther) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_occFormArticleOther = occFormArticleOther;
	}

	@JSON
	@Override
	public String getOccTRN() {
		if (_occTRN == null) {
			return "";
		}
		else {
			return _occTRN;
		}
	}

	@Override
	public void setOccTRN(String occTRN) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_occTRN = occTRN;
	}

	@JSON
	@Override
	public String getOccGCT() {
		if (_occGCT == null) {
			return "";
		}
		else {
			return _occGCT;
		}
	}

	@Override
	public void setOccGCT(String occGCT) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_occGCT = occGCT;
	}

	@JSON
	@Override
	public String getOccTCC() {
		if (_occTCC == null) {
			return "";
		}
		else {
			return _occTCC;
		}
	}

	@Override
	public void setOccTCC(String occTCC) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_occTCC = occTCC;
	}

	@JSON
	@Override
	public long getSezStatusApplicationId() {
		return _sezStatusApplicationId;
	}

	@Override
	public void setSezStatusApplicationId(long sezStatusApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sezStatusApplicationId = sezStatusApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalSezStatusApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("sezStatusApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), SezOccupantGeneralBussinessInfo.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SezOccupantGeneralBussinessInfo toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, SezOccupantGeneralBussinessInfo>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SezOccupantGeneralBussinessInfoImpl
			sezOccupantGeneralBussinessInfoImpl =
				new SezOccupantGeneralBussinessInfoImpl();

		sezOccupantGeneralBussinessInfoImpl.setSezOccGenBussId(
			getSezOccGenBussId());
		sezOccupantGeneralBussinessInfoImpl.setGroupId(getGroupId());
		sezOccupantGeneralBussinessInfoImpl.setCompanyId(getCompanyId());
		sezOccupantGeneralBussinessInfoImpl.setUserId(getUserId());
		sezOccupantGeneralBussinessInfoImpl.setUserName(getUserName());
		sezOccupantGeneralBussinessInfoImpl.setCreateDate(getCreateDate());
		sezOccupantGeneralBussinessInfoImpl.setModifiedDate(getModifiedDate());
		sezOccupantGeneralBussinessInfoImpl.setOccAppDate(getOccAppDate());
		sezOccupantGeneralBussinessInfoImpl.setOccSezDevName(
			getOccSezDevName());
		sezOccupantGeneralBussinessInfoImpl.setOccSezDevControlNum(
			getOccSezDevControlNum());
		sezOccupantGeneralBussinessInfoImpl.setOccExistingCom(
			getOccExistingCom());
		sezOccupantGeneralBussinessInfoImpl.setOccFormArticle(
			getOccFormArticle());
		sezOccupantGeneralBussinessInfoImpl.setOccFormArticleOther(
			getOccFormArticleOther());
		sezOccupantGeneralBussinessInfoImpl.setOccTRN(getOccTRN());
		sezOccupantGeneralBussinessInfoImpl.setOccGCT(getOccGCT());
		sezOccupantGeneralBussinessInfoImpl.setOccTCC(getOccTCC());
		sezOccupantGeneralBussinessInfoImpl.setSezStatusApplicationId(
			getSezStatusApplicationId());

		sezOccupantGeneralBussinessInfoImpl.resetOriginalValues();

		return sezOccupantGeneralBussinessInfoImpl;
	}

	@Override
	public SezOccupantGeneralBussinessInfo cloneWithOriginalValues() {
		SezOccupantGeneralBussinessInfoImpl
			sezOccupantGeneralBussinessInfoImpl =
				new SezOccupantGeneralBussinessInfoImpl();

		sezOccupantGeneralBussinessInfoImpl.setSezOccGenBussId(
			this.<Long>getColumnOriginalValue("sezOccGenBussId"));
		sezOccupantGeneralBussinessInfoImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		sezOccupantGeneralBussinessInfoImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		sezOccupantGeneralBussinessInfoImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		sezOccupantGeneralBussinessInfoImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		sezOccupantGeneralBussinessInfoImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		sezOccupantGeneralBussinessInfoImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		sezOccupantGeneralBussinessInfoImpl.setOccAppDate(
			this.<Date>getColumnOriginalValue("occAppDate"));
		sezOccupantGeneralBussinessInfoImpl.setOccSezDevName(
			this.<String>getColumnOriginalValue("occSezDevName"));
		sezOccupantGeneralBussinessInfoImpl.setOccSezDevControlNum(
			this.<String>getColumnOriginalValue("occSezDevControlNum"));
		sezOccupantGeneralBussinessInfoImpl.setOccExistingCom(
			this.<String>getColumnOriginalValue("occExistingCom"));
		sezOccupantGeneralBussinessInfoImpl.setOccFormArticle(
			this.<String>getColumnOriginalValue("occFormArticle"));
		sezOccupantGeneralBussinessInfoImpl.setOccFormArticleOther(
			this.<String>getColumnOriginalValue("occFormArticleOther"));
		sezOccupantGeneralBussinessInfoImpl.setOccTRN(
			this.<String>getColumnOriginalValue("occTRN"));
		sezOccupantGeneralBussinessInfoImpl.setOccGCT(
			this.<String>getColumnOriginalValue("occGCT"));
		sezOccupantGeneralBussinessInfoImpl.setOccTCC(
			this.<String>getColumnOriginalValue("occTCC"));
		sezOccupantGeneralBussinessInfoImpl.setSezStatusApplicationId(
			this.<Long>getColumnOriginalValue("sezStatusApplicationId"));

		return sezOccupantGeneralBussinessInfoImpl;
	}

	@Override
	public int compareTo(
		SezOccupantGeneralBussinessInfo sezOccupantGeneralBussinessInfo) {

		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), sezOccupantGeneralBussinessInfo.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof SezOccupantGeneralBussinessInfo)) {
			return false;
		}

		SezOccupantGeneralBussinessInfo sezOccupantGeneralBussinessInfo =
			(SezOccupantGeneralBussinessInfo)object;

		long primaryKey = sezOccupantGeneralBussinessInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<SezOccupantGeneralBussinessInfo> toCacheModel() {
		SezOccupantGeneralBussinessInfoCacheModel
			sezOccupantGeneralBussinessInfoCacheModel =
				new SezOccupantGeneralBussinessInfoCacheModel();

		sezOccupantGeneralBussinessInfoCacheModel.sezOccGenBussId =
			getSezOccGenBussId();

		sezOccupantGeneralBussinessInfoCacheModel.groupId = getGroupId();

		sezOccupantGeneralBussinessInfoCacheModel.companyId = getCompanyId();

		sezOccupantGeneralBussinessInfoCacheModel.userId = getUserId();

		sezOccupantGeneralBussinessInfoCacheModel.userName = getUserName();

		String userName = sezOccupantGeneralBussinessInfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			sezOccupantGeneralBussinessInfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			sezOccupantGeneralBussinessInfoCacheModel.createDate =
				createDate.getTime();
		}
		else {
			sezOccupantGeneralBussinessInfoCacheModel.createDate =
				Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			sezOccupantGeneralBussinessInfoCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			sezOccupantGeneralBussinessInfoCacheModel.modifiedDate =
				Long.MIN_VALUE;
		}

		Date occAppDate = getOccAppDate();

		if (occAppDate != null) {
			sezOccupantGeneralBussinessInfoCacheModel.occAppDate =
				occAppDate.getTime();
		}
		else {
			sezOccupantGeneralBussinessInfoCacheModel.occAppDate =
				Long.MIN_VALUE;
		}

		sezOccupantGeneralBussinessInfoCacheModel.occSezDevName =
			getOccSezDevName();

		String occSezDevName =
			sezOccupantGeneralBussinessInfoCacheModel.occSezDevName;

		if ((occSezDevName != null) && (occSezDevName.length() == 0)) {
			sezOccupantGeneralBussinessInfoCacheModel.occSezDevName = null;
		}

		sezOccupantGeneralBussinessInfoCacheModel.occSezDevControlNum =
			getOccSezDevControlNum();

		String occSezDevControlNum =
			sezOccupantGeneralBussinessInfoCacheModel.occSezDevControlNum;

		if ((occSezDevControlNum != null) &&
			(occSezDevControlNum.length() == 0)) {

			sezOccupantGeneralBussinessInfoCacheModel.occSezDevControlNum =
				null;
		}

		sezOccupantGeneralBussinessInfoCacheModel.occExistingCom =
			getOccExistingCom();

		String occExistingCom =
			sezOccupantGeneralBussinessInfoCacheModel.occExistingCom;

		if ((occExistingCom != null) && (occExistingCom.length() == 0)) {
			sezOccupantGeneralBussinessInfoCacheModel.occExistingCom = null;
		}

		sezOccupantGeneralBussinessInfoCacheModel.occFormArticle =
			getOccFormArticle();

		String occFormArticle =
			sezOccupantGeneralBussinessInfoCacheModel.occFormArticle;

		if ((occFormArticle != null) && (occFormArticle.length() == 0)) {
			sezOccupantGeneralBussinessInfoCacheModel.occFormArticle = null;
		}

		sezOccupantGeneralBussinessInfoCacheModel.occFormArticleOther =
			getOccFormArticleOther();

		String occFormArticleOther =
			sezOccupantGeneralBussinessInfoCacheModel.occFormArticleOther;

		if ((occFormArticleOther != null) &&
			(occFormArticleOther.length() == 0)) {

			sezOccupantGeneralBussinessInfoCacheModel.occFormArticleOther =
				null;
		}

		sezOccupantGeneralBussinessInfoCacheModel.occTRN = getOccTRN();

		String occTRN = sezOccupantGeneralBussinessInfoCacheModel.occTRN;

		if ((occTRN != null) && (occTRN.length() == 0)) {
			sezOccupantGeneralBussinessInfoCacheModel.occTRN = null;
		}

		sezOccupantGeneralBussinessInfoCacheModel.occGCT = getOccGCT();

		String occGCT = sezOccupantGeneralBussinessInfoCacheModel.occGCT;

		if ((occGCT != null) && (occGCT.length() == 0)) {
			sezOccupantGeneralBussinessInfoCacheModel.occGCT = null;
		}

		sezOccupantGeneralBussinessInfoCacheModel.occTCC = getOccTCC();

		String occTCC = sezOccupantGeneralBussinessInfoCacheModel.occTCC;

		if ((occTCC != null) && (occTCC.length() == 0)) {
			sezOccupantGeneralBussinessInfoCacheModel.occTCC = null;
		}

		sezOccupantGeneralBussinessInfoCacheModel.sezStatusApplicationId =
			getSezStatusApplicationId();

		return sezOccupantGeneralBussinessInfoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<SezOccupantGeneralBussinessInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry
				<String, Function<SezOccupantGeneralBussinessInfo, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SezOccupantGeneralBussinessInfo, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(SezOccupantGeneralBussinessInfo)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, SezOccupantGeneralBussinessInfo>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						SezOccupantGeneralBussinessInfo.class,
						ModelWrapper.class);

	}

	private long _sezOccGenBussId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private Date _occAppDate;
	private String _occSezDevName;
	private String _occSezDevControlNum;
	private String _occExistingCom;
	private String _occFormArticle;
	private String _occFormArticleOther;
	private String _occTRN;
	private String _occGCT;
	private String _occTCC;
	private long _sezStatusApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<SezOccupantGeneralBussinessInfo, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((SezOccupantGeneralBussinessInfo)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("sezOccGenBussId", _sezOccGenBussId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("occAppDate", _occAppDate);
		_columnOriginalValues.put("occSezDevName", _occSezDevName);
		_columnOriginalValues.put("occSezDevControlNum", _occSezDevControlNum);
		_columnOriginalValues.put("occExistingCom", _occExistingCom);
		_columnOriginalValues.put("occFormArticle", _occFormArticle);
		_columnOriginalValues.put("occFormArticleOther", _occFormArticleOther);
		_columnOriginalValues.put("occTRN", _occTRN);
		_columnOriginalValues.put("occGCT", _occGCT);
		_columnOriginalValues.put("occTCC", _occTCC);
		_columnOriginalValues.put(
			"sezStatusApplicationId", _sezStatusApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("sezOccGenBussId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("occAppDate", 128L);

		columnBitmasks.put("occSezDevName", 256L);

		columnBitmasks.put("occSezDevControlNum", 512L);

		columnBitmasks.put("occExistingCom", 1024L);

		columnBitmasks.put("occFormArticle", 2048L);

		columnBitmasks.put("occFormArticleOther", 4096L);

		columnBitmasks.put("occTRN", 8192L);

		columnBitmasks.put("occGCT", 16384L);

		columnBitmasks.put("occTCC", 32768L);

		columnBitmasks.put("sezStatusApplicationId", 65536L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private SezOccupantGeneralBussinessInfo _escapedModel;

}