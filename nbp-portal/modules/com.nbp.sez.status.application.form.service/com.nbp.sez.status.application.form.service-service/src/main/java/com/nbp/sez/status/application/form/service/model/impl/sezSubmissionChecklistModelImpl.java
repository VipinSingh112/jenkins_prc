/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.sez.status.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.sez.status.application.form.service.model.sezSubmissionChecklist;
import com.nbp.sez.status.application.form.service.model.sezSubmissionChecklistModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the sezSubmissionChecklist service. Represents a row in the &quot;nbp_sez_dev_sub_checklist&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>sezSubmissionChecklistModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link sezSubmissionChecklistImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see sezSubmissionChecklistImpl
 * @generated
 */
@JSON(strict = true)
public class sezSubmissionChecklistModelImpl
	extends BaseModelImpl<sezSubmissionChecklist>
	implements sezSubmissionChecklistModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a sez submission checklist model instance should use the <code>sezSubmissionChecklist</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_sez_dev_sub_checklist";

	public static final Object[][] TABLE_COLUMNS = {
		{"sezSubmissionChecklistId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"selectedGeneral", Types.VARCHAR},
		{"selectedComInfoReq", Types.VARCHAR},
		{"paidShareCapProof", Types.VARCHAR},
		{"selectedSwornStateReq", Types.VARCHAR},
		{"selectedLandOccuReq", Types.VARCHAR},
		{"selectedSafetyHealthReq", Types.VARCHAR},
		{"selectedLandDevlopmentReq", Types.VARCHAR},
		{"selectedTechInfoReq", Types.VARCHAR},
		{"selectedSezPreliminaryReq", Types.VARCHAR},
		{"selectedSezDevDetailReq", Types.VARCHAR},
		{"selectedApprovalReq", Types.VARCHAR}, {"nameReq", Types.VARCHAR},
		{"dateReq", Types.TIMESTAMP}, {"sezStatusApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("sezSubmissionChecklistId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("selectedGeneral", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("selectedComInfoReq", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("paidShareCapProof", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("selectedSwornStateReq", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("selectedLandOccuReq", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("selectedSafetyHealthReq", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("selectedLandDevlopmentReq", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("selectedTechInfoReq", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("selectedSezPreliminaryReq", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("selectedSezDevDetailReq", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("selectedApprovalReq", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nameReq", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dateReq", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("sezStatusApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_sez_dev_sub_checklist (sezSubmissionChecklistId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,selectedGeneral VARCHAR(1000) null,selectedComInfoReq VARCHAR(1000) null,paidShareCapProof VARCHAR(1000) null,selectedSwornStateReq VARCHAR(1000) null,selectedLandOccuReq VARCHAR(1000) null,selectedSafetyHealthReq VARCHAR(1000) null,selectedLandDevlopmentReq VARCHAR(1000) null,selectedTechInfoReq VARCHAR(1000) null,selectedSezPreliminaryReq VARCHAR(1000) null,selectedSezDevDetailReq VARCHAR(1000) null,selectedApprovalReq VARCHAR(1000) null,nameReq VARCHAR(75) null,dateReq DATE null,sezStatusApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_sez_dev_sub_checklist";

	public static final String ORDER_BY_JPQL =
		" ORDER BY sezSubmissionChecklist.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_sez_dev_sub_checklist.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SEZSTATUSAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public sezSubmissionChecklistModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _sezSubmissionChecklistId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSezSubmissionChecklistId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _sezSubmissionChecklistId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return sezSubmissionChecklist.class;
	}

	@Override
	public String getModelClassName() {
		return sezSubmissionChecklist.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<sezSubmissionChecklist, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<sezSubmissionChecklist, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<sezSubmissionChecklist, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((sezSubmissionChecklist)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<sezSubmissionChecklist, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<sezSubmissionChecklist, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(sezSubmissionChecklist)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<sezSubmissionChecklist, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<sezSubmissionChecklist, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<sezSubmissionChecklist, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<sezSubmissionChecklist, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<sezSubmissionChecklist, Object>>();

			attributeGetterFunctions.put(
				"sezSubmissionChecklistId",
				sezSubmissionChecklist::getSezSubmissionChecklistId);
			attributeGetterFunctions.put(
				"groupId", sezSubmissionChecklist::getGroupId);
			attributeGetterFunctions.put(
				"companyId", sezSubmissionChecklist::getCompanyId);
			attributeGetterFunctions.put(
				"userId", sezSubmissionChecklist::getUserId);
			attributeGetterFunctions.put(
				"userName", sezSubmissionChecklist::getUserName);
			attributeGetterFunctions.put(
				"createDate", sezSubmissionChecklist::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", sezSubmissionChecklist::getModifiedDate);
			attributeGetterFunctions.put(
				"selectedGeneral", sezSubmissionChecklist::getSelectedGeneral);
			attributeGetterFunctions.put(
				"selectedComInfoReq",
				sezSubmissionChecklist::getSelectedComInfoReq);
			attributeGetterFunctions.put(
				"paidShareCapProof",
				sezSubmissionChecklist::getPaidShareCapProof);
			attributeGetterFunctions.put(
				"selectedSwornStateReq",
				sezSubmissionChecklist::getSelectedSwornStateReq);
			attributeGetterFunctions.put(
				"selectedLandOccuReq",
				sezSubmissionChecklist::getSelectedLandOccuReq);
			attributeGetterFunctions.put(
				"selectedSafetyHealthReq",
				sezSubmissionChecklist::getSelectedSafetyHealthReq);
			attributeGetterFunctions.put(
				"selectedLandDevlopmentReq",
				sezSubmissionChecklist::getSelectedLandDevlopmentReq);
			attributeGetterFunctions.put(
				"selectedTechInfoReq",
				sezSubmissionChecklist::getSelectedTechInfoReq);
			attributeGetterFunctions.put(
				"selectedSezPreliminaryReq",
				sezSubmissionChecklist::getSelectedSezPreliminaryReq);
			attributeGetterFunctions.put(
				"selectedSezDevDetailReq",
				sezSubmissionChecklist::getSelectedSezDevDetailReq);
			attributeGetterFunctions.put(
				"selectedApprovalReq",
				sezSubmissionChecklist::getSelectedApprovalReq);
			attributeGetterFunctions.put(
				"nameReq", sezSubmissionChecklist::getNameReq);
			attributeGetterFunctions.put(
				"dateReq", sezSubmissionChecklist::getDateReq);
			attributeGetterFunctions.put(
				"sezStatusApplicationId",
				sezSubmissionChecklist::getSezStatusApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<sezSubmissionChecklist, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<sezSubmissionChecklist, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<sezSubmissionChecklist, ?>>();

			attributeSetterBiConsumers.put(
				"sezSubmissionChecklistId",
				(BiConsumer<sezSubmissionChecklist, Long>)
					sezSubmissionChecklist::setSezSubmissionChecklistId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<sezSubmissionChecklist, Long>)
					sezSubmissionChecklist::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<sezSubmissionChecklist, Long>)
					sezSubmissionChecklist::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<sezSubmissionChecklist, Long>)
					sezSubmissionChecklist::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<sezSubmissionChecklist, String>)
					sezSubmissionChecklist::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<sezSubmissionChecklist, Date>)
					sezSubmissionChecklist::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<sezSubmissionChecklist, Date>)
					sezSubmissionChecklist::setModifiedDate);
			attributeSetterBiConsumers.put(
				"selectedGeneral",
				(BiConsumer<sezSubmissionChecklist, String>)
					sezSubmissionChecklist::setSelectedGeneral);
			attributeSetterBiConsumers.put(
				"selectedComInfoReq",
				(BiConsumer<sezSubmissionChecklist, String>)
					sezSubmissionChecklist::setSelectedComInfoReq);
			attributeSetterBiConsumers.put(
				"paidShareCapProof",
				(BiConsumer<sezSubmissionChecklist, String>)
					sezSubmissionChecklist::setPaidShareCapProof);
			attributeSetterBiConsumers.put(
				"selectedSwornStateReq",
				(BiConsumer<sezSubmissionChecklist, String>)
					sezSubmissionChecklist::setSelectedSwornStateReq);
			attributeSetterBiConsumers.put(
				"selectedLandOccuReq",
				(BiConsumer<sezSubmissionChecklist, String>)
					sezSubmissionChecklist::setSelectedLandOccuReq);
			attributeSetterBiConsumers.put(
				"selectedSafetyHealthReq",
				(BiConsumer<sezSubmissionChecklist, String>)
					sezSubmissionChecklist::setSelectedSafetyHealthReq);
			attributeSetterBiConsumers.put(
				"selectedLandDevlopmentReq",
				(BiConsumer<sezSubmissionChecklist, String>)
					sezSubmissionChecklist::setSelectedLandDevlopmentReq);
			attributeSetterBiConsumers.put(
				"selectedTechInfoReq",
				(BiConsumer<sezSubmissionChecklist, String>)
					sezSubmissionChecklist::setSelectedTechInfoReq);
			attributeSetterBiConsumers.put(
				"selectedSezPreliminaryReq",
				(BiConsumer<sezSubmissionChecklist, String>)
					sezSubmissionChecklist::setSelectedSezPreliminaryReq);
			attributeSetterBiConsumers.put(
				"selectedSezDevDetailReq",
				(BiConsumer<sezSubmissionChecklist, String>)
					sezSubmissionChecklist::setSelectedSezDevDetailReq);
			attributeSetterBiConsumers.put(
				"selectedApprovalReq",
				(BiConsumer<sezSubmissionChecklist, String>)
					sezSubmissionChecklist::setSelectedApprovalReq);
			attributeSetterBiConsumers.put(
				"nameReq",
				(BiConsumer<sezSubmissionChecklist, String>)
					sezSubmissionChecklist::setNameReq);
			attributeSetterBiConsumers.put(
				"dateReq",
				(BiConsumer<sezSubmissionChecklist, Date>)
					sezSubmissionChecklist::setDateReq);
			attributeSetterBiConsumers.put(
				"sezStatusApplicationId",
				(BiConsumer<sezSubmissionChecklist, Long>)
					sezSubmissionChecklist::setSezStatusApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getSezSubmissionChecklistId() {
		return _sezSubmissionChecklistId;
	}

	@Override
	public void setSezSubmissionChecklistId(long sezSubmissionChecklistId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sezSubmissionChecklistId = sezSubmissionChecklistId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getSelectedGeneral() {
		if (_selectedGeneral == null) {
			return "";
		}
		else {
			return _selectedGeneral;
		}
	}

	@Override
	public void setSelectedGeneral(String selectedGeneral) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_selectedGeneral = selectedGeneral;
	}

	@JSON
	@Override
	public String getSelectedComInfoReq() {
		if (_selectedComInfoReq == null) {
			return "";
		}
		else {
			return _selectedComInfoReq;
		}
	}

	@Override
	public void setSelectedComInfoReq(String selectedComInfoReq) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_selectedComInfoReq = selectedComInfoReq;
	}

	@JSON
	@Override
	public String getPaidShareCapProof() {
		if (_paidShareCapProof == null) {
			return "";
		}
		else {
			return _paidShareCapProof;
		}
	}

	@Override
	public void setPaidShareCapProof(String paidShareCapProof) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_paidShareCapProof = paidShareCapProof;
	}

	@JSON
	@Override
	public String getSelectedSwornStateReq() {
		if (_selectedSwornStateReq == null) {
			return "";
		}
		else {
			return _selectedSwornStateReq;
		}
	}

	@Override
	public void setSelectedSwornStateReq(String selectedSwornStateReq) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_selectedSwornStateReq = selectedSwornStateReq;
	}

	@JSON
	@Override
	public String getSelectedLandOccuReq() {
		if (_selectedLandOccuReq == null) {
			return "";
		}
		else {
			return _selectedLandOccuReq;
		}
	}

	@Override
	public void setSelectedLandOccuReq(String selectedLandOccuReq) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_selectedLandOccuReq = selectedLandOccuReq;
	}

	@JSON
	@Override
	public String getSelectedSafetyHealthReq() {
		if (_selectedSafetyHealthReq == null) {
			return "";
		}
		else {
			return _selectedSafetyHealthReq;
		}
	}

	@Override
	public void setSelectedSafetyHealthReq(String selectedSafetyHealthReq) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_selectedSafetyHealthReq = selectedSafetyHealthReq;
	}

	@JSON
	@Override
	public String getSelectedLandDevlopmentReq() {
		if (_selectedLandDevlopmentReq == null) {
			return "";
		}
		else {
			return _selectedLandDevlopmentReq;
		}
	}

	@Override
	public void setSelectedLandDevlopmentReq(String selectedLandDevlopmentReq) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_selectedLandDevlopmentReq = selectedLandDevlopmentReq;
	}

	@JSON
	@Override
	public String getSelectedTechInfoReq() {
		if (_selectedTechInfoReq == null) {
			return "";
		}
		else {
			return _selectedTechInfoReq;
		}
	}

	@Override
	public void setSelectedTechInfoReq(String selectedTechInfoReq) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_selectedTechInfoReq = selectedTechInfoReq;
	}

	@JSON
	@Override
	public String getSelectedSezPreliminaryReq() {
		if (_selectedSezPreliminaryReq == null) {
			return "";
		}
		else {
			return _selectedSezPreliminaryReq;
		}
	}

	@Override
	public void setSelectedSezPreliminaryReq(String selectedSezPreliminaryReq) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_selectedSezPreliminaryReq = selectedSezPreliminaryReq;
	}

	@JSON
	@Override
	public String getSelectedSezDevDetailReq() {
		if (_selectedSezDevDetailReq == null) {
			return "";
		}
		else {
			return _selectedSezDevDetailReq;
		}
	}

	@Override
	public void setSelectedSezDevDetailReq(String selectedSezDevDetailReq) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_selectedSezDevDetailReq = selectedSezDevDetailReq;
	}

	@JSON
	@Override
	public String getSelectedApprovalReq() {
		if (_selectedApprovalReq == null) {
			return "";
		}
		else {
			return _selectedApprovalReq;
		}
	}

	@Override
	public void setSelectedApprovalReq(String selectedApprovalReq) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_selectedApprovalReq = selectedApprovalReq;
	}

	@JSON
	@Override
	public String getNameReq() {
		if (_nameReq == null) {
			return "";
		}
		else {
			return _nameReq;
		}
	}

	@Override
	public void setNameReq(String nameReq) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nameReq = nameReq;
	}

	@JSON
	@Override
	public Date getDateReq() {
		return _dateReq;
	}

	@Override
	public void setDateReq(Date dateReq) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dateReq = dateReq;
	}

	@JSON
	@Override
	public long getSezStatusApplicationId() {
		return _sezStatusApplicationId;
	}

	@Override
	public void setSezStatusApplicationId(long sezStatusApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sezStatusApplicationId = sezStatusApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalSezStatusApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("sezStatusApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), sezSubmissionChecklist.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public sezSubmissionChecklist toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, sezSubmissionChecklist>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		sezSubmissionChecklistImpl sezSubmissionChecklistImpl =
			new sezSubmissionChecklistImpl();

		sezSubmissionChecklistImpl.setSezSubmissionChecklistId(
			getSezSubmissionChecklistId());
		sezSubmissionChecklistImpl.setGroupId(getGroupId());
		sezSubmissionChecklistImpl.setCompanyId(getCompanyId());
		sezSubmissionChecklistImpl.setUserId(getUserId());
		sezSubmissionChecklistImpl.setUserName(getUserName());
		sezSubmissionChecklistImpl.setCreateDate(getCreateDate());
		sezSubmissionChecklistImpl.setModifiedDate(getModifiedDate());
		sezSubmissionChecklistImpl.setSelectedGeneral(getSelectedGeneral());
		sezSubmissionChecklistImpl.setSelectedComInfoReq(
			getSelectedComInfoReq());
		sezSubmissionChecklistImpl.setPaidShareCapProof(getPaidShareCapProof());
		sezSubmissionChecklistImpl.setSelectedSwornStateReq(
			getSelectedSwornStateReq());
		sezSubmissionChecklistImpl.setSelectedLandOccuReq(
			getSelectedLandOccuReq());
		sezSubmissionChecklistImpl.setSelectedSafetyHealthReq(
			getSelectedSafetyHealthReq());
		sezSubmissionChecklistImpl.setSelectedLandDevlopmentReq(
			getSelectedLandDevlopmentReq());
		sezSubmissionChecklistImpl.setSelectedTechInfoReq(
			getSelectedTechInfoReq());
		sezSubmissionChecklistImpl.setSelectedSezPreliminaryReq(
			getSelectedSezPreliminaryReq());
		sezSubmissionChecklistImpl.setSelectedSezDevDetailReq(
			getSelectedSezDevDetailReq());
		sezSubmissionChecklistImpl.setSelectedApprovalReq(
			getSelectedApprovalReq());
		sezSubmissionChecklistImpl.setNameReq(getNameReq());
		sezSubmissionChecklistImpl.setDateReq(getDateReq());
		sezSubmissionChecklistImpl.setSezStatusApplicationId(
			getSezStatusApplicationId());

		sezSubmissionChecklistImpl.resetOriginalValues();

		return sezSubmissionChecklistImpl;
	}

	@Override
	public sezSubmissionChecklist cloneWithOriginalValues() {
		sezSubmissionChecklistImpl sezSubmissionChecklistImpl =
			new sezSubmissionChecklistImpl();

		sezSubmissionChecklistImpl.setSezSubmissionChecklistId(
			this.<Long>getColumnOriginalValue("sezSubmissionChecklistId"));
		sezSubmissionChecklistImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		sezSubmissionChecklistImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		sezSubmissionChecklistImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		sezSubmissionChecklistImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		sezSubmissionChecklistImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		sezSubmissionChecklistImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		sezSubmissionChecklistImpl.setSelectedGeneral(
			this.<String>getColumnOriginalValue("selectedGeneral"));
		sezSubmissionChecklistImpl.setSelectedComInfoReq(
			this.<String>getColumnOriginalValue("selectedComInfoReq"));
		sezSubmissionChecklistImpl.setPaidShareCapProof(
			this.<String>getColumnOriginalValue("paidShareCapProof"));
		sezSubmissionChecklistImpl.setSelectedSwornStateReq(
			this.<String>getColumnOriginalValue("selectedSwornStateReq"));
		sezSubmissionChecklistImpl.setSelectedLandOccuReq(
			this.<String>getColumnOriginalValue("selectedLandOccuReq"));
		sezSubmissionChecklistImpl.setSelectedSafetyHealthReq(
			this.<String>getColumnOriginalValue("selectedSafetyHealthReq"));
		sezSubmissionChecklistImpl.setSelectedLandDevlopmentReq(
			this.<String>getColumnOriginalValue("selectedLandDevlopmentReq"));
		sezSubmissionChecklistImpl.setSelectedTechInfoReq(
			this.<String>getColumnOriginalValue("selectedTechInfoReq"));
		sezSubmissionChecklistImpl.setSelectedSezPreliminaryReq(
			this.<String>getColumnOriginalValue("selectedSezPreliminaryReq"));
		sezSubmissionChecklistImpl.setSelectedSezDevDetailReq(
			this.<String>getColumnOriginalValue("selectedSezDevDetailReq"));
		sezSubmissionChecklistImpl.setSelectedApprovalReq(
			this.<String>getColumnOriginalValue("selectedApprovalReq"));
		sezSubmissionChecklistImpl.setNameReq(
			this.<String>getColumnOriginalValue("nameReq"));
		sezSubmissionChecklistImpl.setDateReq(
			this.<Date>getColumnOriginalValue("dateReq"));
		sezSubmissionChecklistImpl.setSezStatusApplicationId(
			this.<Long>getColumnOriginalValue("sezStatusApplicationId"));

		return sezSubmissionChecklistImpl;
	}

	@Override
	public int compareTo(sezSubmissionChecklist sezSubmissionChecklist) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), sezSubmissionChecklist.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof sezSubmissionChecklist)) {
			return false;
		}

		sezSubmissionChecklist sezSubmissionChecklist =
			(sezSubmissionChecklist)object;

		long primaryKey = sezSubmissionChecklist.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<sezSubmissionChecklist> toCacheModel() {
		sezSubmissionChecklistCacheModel sezSubmissionChecklistCacheModel =
			new sezSubmissionChecklistCacheModel();

		sezSubmissionChecklistCacheModel.sezSubmissionChecklistId =
			getSezSubmissionChecklistId();

		sezSubmissionChecklistCacheModel.groupId = getGroupId();

		sezSubmissionChecklistCacheModel.companyId = getCompanyId();

		sezSubmissionChecklistCacheModel.userId = getUserId();

		sezSubmissionChecklistCacheModel.userName = getUserName();

		String userName = sezSubmissionChecklistCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			sezSubmissionChecklistCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			sezSubmissionChecklistCacheModel.createDate = createDate.getTime();
		}
		else {
			sezSubmissionChecklistCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			sezSubmissionChecklistCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			sezSubmissionChecklistCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		sezSubmissionChecklistCacheModel.selectedGeneral = getSelectedGeneral();

		String selectedGeneral =
			sezSubmissionChecklistCacheModel.selectedGeneral;

		if ((selectedGeneral != null) && (selectedGeneral.length() == 0)) {
			sezSubmissionChecklistCacheModel.selectedGeneral = null;
		}

		sezSubmissionChecklistCacheModel.selectedComInfoReq =
			getSelectedComInfoReq();

		String selectedComInfoReq =
			sezSubmissionChecklistCacheModel.selectedComInfoReq;

		if ((selectedComInfoReq != null) &&
			(selectedComInfoReq.length() == 0)) {

			sezSubmissionChecklistCacheModel.selectedComInfoReq = null;
		}

		sezSubmissionChecklistCacheModel.paidShareCapProof =
			getPaidShareCapProof();

		String paidShareCapProof =
			sezSubmissionChecklistCacheModel.paidShareCapProof;

		if ((paidShareCapProof != null) && (paidShareCapProof.length() == 0)) {
			sezSubmissionChecklistCacheModel.paidShareCapProof = null;
		}

		sezSubmissionChecklistCacheModel.selectedSwornStateReq =
			getSelectedSwornStateReq();

		String selectedSwornStateReq =
			sezSubmissionChecklistCacheModel.selectedSwornStateReq;

		if ((selectedSwornStateReq != null) &&
			(selectedSwornStateReq.length() == 0)) {

			sezSubmissionChecklistCacheModel.selectedSwornStateReq = null;
		}

		sezSubmissionChecklistCacheModel.selectedLandOccuReq =
			getSelectedLandOccuReq();

		String selectedLandOccuReq =
			sezSubmissionChecklistCacheModel.selectedLandOccuReq;

		if ((selectedLandOccuReq != null) &&
			(selectedLandOccuReq.length() == 0)) {

			sezSubmissionChecklistCacheModel.selectedLandOccuReq = null;
		}

		sezSubmissionChecklistCacheModel.selectedSafetyHealthReq =
			getSelectedSafetyHealthReq();

		String selectedSafetyHealthReq =
			sezSubmissionChecklistCacheModel.selectedSafetyHealthReq;

		if ((selectedSafetyHealthReq != null) &&
			(selectedSafetyHealthReq.length() == 0)) {

			sezSubmissionChecklistCacheModel.selectedSafetyHealthReq = null;
		}

		sezSubmissionChecklistCacheModel.selectedLandDevlopmentReq =
			getSelectedLandDevlopmentReq();

		String selectedLandDevlopmentReq =
			sezSubmissionChecklistCacheModel.selectedLandDevlopmentReq;

		if ((selectedLandDevlopmentReq != null) &&
			(selectedLandDevlopmentReq.length() == 0)) {

			sezSubmissionChecklistCacheModel.selectedLandDevlopmentReq = null;
		}

		sezSubmissionChecklistCacheModel.selectedTechInfoReq =
			getSelectedTechInfoReq();

		String selectedTechInfoReq =
			sezSubmissionChecklistCacheModel.selectedTechInfoReq;

		if ((selectedTechInfoReq != null) &&
			(selectedTechInfoReq.length() == 0)) {

			sezSubmissionChecklistCacheModel.selectedTechInfoReq = null;
		}

		sezSubmissionChecklistCacheModel.selectedSezPreliminaryReq =
			getSelectedSezPreliminaryReq();

		String selectedSezPreliminaryReq =
			sezSubmissionChecklistCacheModel.selectedSezPreliminaryReq;

		if ((selectedSezPreliminaryReq != null) &&
			(selectedSezPreliminaryReq.length() == 0)) {

			sezSubmissionChecklistCacheModel.selectedSezPreliminaryReq = null;
		}

		sezSubmissionChecklistCacheModel.selectedSezDevDetailReq =
			getSelectedSezDevDetailReq();

		String selectedSezDevDetailReq =
			sezSubmissionChecklistCacheModel.selectedSezDevDetailReq;

		if ((selectedSezDevDetailReq != null) &&
			(selectedSezDevDetailReq.length() == 0)) {

			sezSubmissionChecklistCacheModel.selectedSezDevDetailReq = null;
		}

		sezSubmissionChecklistCacheModel.selectedApprovalReq =
			getSelectedApprovalReq();

		String selectedApprovalReq =
			sezSubmissionChecklistCacheModel.selectedApprovalReq;

		if ((selectedApprovalReq != null) &&
			(selectedApprovalReq.length() == 0)) {

			sezSubmissionChecklistCacheModel.selectedApprovalReq = null;
		}

		sezSubmissionChecklistCacheModel.nameReq = getNameReq();

		String nameReq = sezSubmissionChecklistCacheModel.nameReq;

		if ((nameReq != null) && (nameReq.length() == 0)) {
			sezSubmissionChecklistCacheModel.nameReq = null;
		}

		Date dateReq = getDateReq();

		if (dateReq != null) {
			sezSubmissionChecklistCacheModel.dateReq = dateReq.getTime();
		}
		else {
			sezSubmissionChecklistCacheModel.dateReq = Long.MIN_VALUE;
		}

		sezSubmissionChecklistCacheModel.sezStatusApplicationId =
			getSezStatusApplicationId();

		return sezSubmissionChecklistCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<sezSubmissionChecklist, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<sezSubmissionChecklist, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<sezSubmissionChecklist, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(sezSubmissionChecklist)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, sezSubmissionChecklist>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					sezSubmissionChecklist.class, ModelWrapper.class);

	}

	private long _sezSubmissionChecklistId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _selectedGeneral;
	private String _selectedComInfoReq;
	private String _paidShareCapProof;
	private String _selectedSwornStateReq;
	private String _selectedLandOccuReq;
	private String _selectedSafetyHealthReq;
	private String _selectedLandDevlopmentReq;
	private String _selectedTechInfoReq;
	private String _selectedSezPreliminaryReq;
	private String _selectedSezDevDetailReq;
	private String _selectedApprovalReq;
	private String _nameReq;
	private Date _dateReq;
	private long _sezStatusApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<sezSubmissionChecklist, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((sezSubmissionChecklist)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"sezSubmissionChecklistId", _sezSubmissionChecklistId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("selectedGeneral", _selectedGeneral);
		_columnOriginalValues.put("selectedComInfoReq", _selectedComInfoReq);
		_columnOriginalValues.put("paidShareCapProof", _paidShareCapProof);
		_columnOriginalValues.put(
			"selectedSwornStateReq", _selectedSwornStateReq);
		_columnOriginalValues.put("selectedLandOccuReq", _selectedLandOccuReq);
		_columnOriginalValues.put(
			"selectedSafetyHealthReq", _selectedSafetyHealthReq);
		_columnOriginalValues.put(
			"selectedLandDevlopmentReq", _selectedLandDevlopmentReq);
		_columnOriginalValues.put("selectedTechInfoReq", _selectedTechInfoReq);
		_columnOriginalValues.put(
			"selectedSezPreliminaryReq", _selectedSezPreliminaryReq);
		_columnOriginalValues.put(
			"selectedSezDevDetailReq", _selectedSezDevDetailReq);
		_columnOriginalValues.put("selectedApprovalReq", _selectedApprovalReq);
		_columnOriginalValues.put("nameReq", _nameReq);
		_columnOriginalValues.put("dateReq", _dateReq);
		_columnOriginalValues.put(
			"sezStatusApplicationId", _sezStatusApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("sezSubmissionChecklistId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("selectedGeneral", 128L);

		columnBitmasks.put("selectedComInfoReq", 256L);

		columnBitmasks.put("paidShareCapProof", 512L);

		columnBitmasks.put("selectedSwornStateReq", 1024L);

		columnBitmasks.put("selectedLandOccuReq", 2048L);

		columnBitmasks.put("selectedSafetyHealthReq", 4096L);

		columnBitmasks.put("selectedLandDevlopmentReq", 8192L);

		columnBitmasks.put("selectedTechInfoReq", 16384L);

		columnBitmasks.put("selectedSezPreliminaryReq", 32768L);

		columnBitmasks.put("selectedSezDevDetailReq", 65536L);

		columnBitmasks.put("selectedApprovalReq", 131072L);

		columnBitmasks.put("nameReq", 262144L);

		columnBitmasks.put("dateReq", 524288L);

		columnBitmasks.put("sezStatusApplicationId", 1048576L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private sezSubmissionChecklist _escapedModel;

}