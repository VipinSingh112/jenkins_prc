/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.sez.status.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.sez.status.application.form.service.model.SezOccupantLocationAddBox;
import com.nbp.sez.status.application.form.service.model.SezOccupantLocationAddBoxModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the SezOccupantLocationAddBox service. Represents a row in the &quot;nbp_sez_occ_location_add_box&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>SezOccupantLocationAddBoxModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SezOccupantLocationAddBoxImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SezOccupantLocationAddBoxImpl
 * @generated
 */
@JSON(strict = true)
public class SezOccupantLocationAddBoxModelImpl
	extends BaseModelImpl<SezOccupantLocationAddBox>
	implements SezOccupantLocationAddBoxModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a sez occupant location add box model instance should use the <code>SezOccupantLocationAddBox</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_sez_occ_location_add_box";

	public static final Object[][] TABLE_COLUMNS = {
		{"sezOccLocationId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP},
		{"developerCodeLocation", Types.VARCHAR},
		{"descTypeOfAct", Types.VARCHAR}, {"locationCounter", Types.VARCHAR},
		{"sezStatusApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("sezOccLocationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("developerCodeLocation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("descTypeOfAct", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("locationCounter", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sezStatusApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_sez_occ_location_add_box (sezOccLocationId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,developerCodeLocation VARCHAR(75) null,descTypeOfAct VARCHAR(75) null,locationCounter VARCHAR(75) null,sezStatusApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_sez_occ_location_add_box";

	public static final String ORDER_BY_JPQL =
		" ORDER BY sezOccupantLocationAddBox.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_sez_occ_location_add_box.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SEZSTATUSAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public SezOccupantLocationAddBoxModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _sezOccLocationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSezOccLocationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _sezOccLocationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SezOccupantLocationAddBox.class;
	}

	@Override
	public String getModelClassName() {
		return SezOccupantLocationAddBox.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<SezOccupantLocationAddBox, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<SezOccupantLocationAddBox, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SezOccupantLocationAddBox, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((SezOccupantLocationAddBox)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<SezOccupantLocationAddBox, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<SezOccupantLocationAddBox, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(SezOccupantLocationAddBox)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<SezOccupantLocationAddBox, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<SezOccupantLocationAddBox, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<SezOccupantLocationAddBox, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<SezOccupantLocationAddBox, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<SezOccupantLocationAddBox, Object>>();

			attributeGetterFunctions.put(
				"sezOccLocationId",
				SezOccupantLocationAddBox::getSezOccLocationId);
			attributeGetterFunctions.put(
				"groupId", SezOccupantLocationAddBox::getGroupId);
			attributeGetterFunctions.put(
				"companyId", SezOccupantLocationAddBox::getCompanyId);
			attributeGetterFunctions.put(
				"userId", SezOccupantLocationAddBox::getUserId);
			attributeGetterFunctions.put(
				"userName", SezOccupantLocationAddBox::getUserName);
			attributeGetterFunctions.put(
				"createDate", SezOccupantLocationAddBox::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", SezOccupantLocationAddBox::getModifiedDate);
			attributeGetterFunctions.put(
				"developerCodeLocation",
				SezOccupantLocationAddBox::getDeveloperCodeLocation);
			attributeGetterFunctions.put(
				"descTypeOfAct", SezOccupantLocationAddBox::getDescTypeOfAct);
			attributeGetterFunctions.put(
				"locationCounter",
				SezOccupantLocationAddBox::getLocationCounter);
			attributeGetterFunctions.put(
				"sezStatusApplicationId",
				SezOccupantLocationAddBox::getSezStatusApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<SezOccupantLocationAddBox, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<SezOccupantLocationAddBox, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<SezOccupantLocationAddBox, ?>>();

			attributeSetterBiConsumers.put(
				"sezOccLocationId",
				(BiConsumer<SezOccupantLocationAddBox, Long>)
					SezOccupantLocationAddBox::setSezOccLocationId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<SezOccupantLocationAddBox, Long>)
					SezOccupantLocationAddBox::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<SezOccupantLocationAddBox, Long>)
					SezOccupantLocationAddBox::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<SezOccupantLocationAddBox, Long>)
					SezOccupantLocationAddBox::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<SezOccupantLocationAddBox, String>)
					SezOccupantLocationAddBox::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<SezOccupantLocationAddBox, Date>)
					SezOccupantLocationAddBox::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<SezOccupantLocationAddBox, Date>)
					SezOccupantLocationAddBox::setModifiedDate);
			attributeSetterBiConsumers.put(
				"developerCodeLocation",
				(BiConsumer<SezOccupantLocationAddBox, String>)
					SezOccupantLocationAddBox::setDeveloperCodeLocation);
			attributeSetterBiConsumers.put(
				"descTypeOfAct",
				(BiConsumer<SezOccupantLocationAddBox, String>)
					SezOccupantLocationAddBox::setDescTypeOfAct);
			attributeSetterBiConsumers.put(
				"locationCounter",
				(BiConsumer<SezOccupantLocationAddBox, String>)
					SezOccupantLocationAddBox::setLocationCounter);
			attributeSetterBiConsumers.put(
				"sezStatusApplicationId",
				(BiConsumer<SezOccupantLocationAddBox, Long>)
					SezOccupantLocationAddBox::setSezStatusApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getSezOccLocationId() {
		return _sezOccLocationId;
	}

	@Override
	public void setSezOccLocationId(long sezOccLocationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sezOccLocationId = sezOccLocationId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getDeveloperCodeLocation() {
		if (_developerCodeLocation == null) {
			return "";
		}
		else {
			return _developerCodeLocation;
		}
	}

	@Override
	public void setDeveloperCodeLocation(String developerCodeLocation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_developerCodeLocation = developerCodeLocation;
	}

	@JSON
	@Override
	public String getDescTypeOfAct() {
		if (_descTypeOfAct == null) {
			return "";
		}
		else {
			return _descTypeOfAct;
		}
	}

	@Override
	public void setDescTypeOfAct(String descTypeOfAct) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_descTypeOfAct = descTypeOfAct;
	}

	@JSON
	@Override
	public String getLocationCounter() {
		if (_locationCounter == null) {
			return "";
		}
		else {
			return _locationCounter;
		}
	}

	@Override
	public void setLocationCounter(String locationCounter) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_locationCounter = locationCounter;
	}

	@JSON
	@Override
	public long getSezStatusApplicationId() {
		return _sezStatusApplicationId;
	}

	@Override
	public void setSezStatusApplicationId(long sezStatusApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sezStatusApplicationId = sezStatusApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalSezStatusApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("sezStatusApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), SezOccupantLocationAddBox.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SezOccupantLocationAddBox toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, SezOccupantLocationAddBox>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SezOccupantLocationAddBoxImpl sezOccupantLocationAddBoxImpl =
			new SezOccupantLocationAddBoxImpl();

		sezOccupantLocationAddBoxImpl.setSezOccLocationId(
			getSezOccLocationId());
		sezOccupantLocationAddBoxImpl.setGroupId(getGroupId());
		sezOccupantLocationAddBoxImpl.setCompanyId(getCompanyId());
		sezOccupantLocationAddBoxImpl.setUserId(getUserId());
		sezOccupantLocationAddBoxImpl.setUserName(getUserName());
		sezOccupantLocationAddBoxImpl.setCreateDate(getCreateDate());
		sezOccupantLocationAddBoxImpl.setModifiedDate(getModifiedDate());
		sezOccupantLocationAddBoxImpl.setDeveloperCodeLocation(
			getDeveloperCodeLocation());
		sezOccupantLocationAddBoxImpl.setDescTypeOfAct(getDescTypeOfAct());
		sezOccupantLocationAddBoxImpl.setLocationCounter(getLocationCounter());
		sezOccupantLocationAddBoxImpl.setSezStatusApplicationId(
			getSezStatusApplicationId());

		sezOccupantLocationAddBoxImpl.resetOriginalValues();

		return sezOccupantLocationAddBoxImpl;
	}

	@Override
	public SezOccupantLocationAddBox cloneWithOriginalValues() {
		SezOccupantLocationAddBoxImpl sezOccupantLocationAddBoxImpl =
			new SezOccupantLocationAddBoxImpl();

		sezOccupantLocationAddBoxImpl.setSezOccLocationId(
			this.<Long>getColumnOriginalValue("sezOccLocationId"));
		sezOccupantLocationAddBoxImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		sezOccupantLocationAddBoxImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		sezOccupantLocationAddBoxImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		sezOccupantLocationAddBoxImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		sezOccupantLocationAddBoxImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		sezOccupantLocationAddBoxImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		sezOccupantLocationAddBoxImpl.setDeveloperCodeLocation(
			this.<String>getColumnOriginalValue("developerCodeLocation"));
		sezOccupantLocationAddBoxImpl.setDescTypeOfAct(
			this.<String>getColumnOriginalValue("descTypeOfAct"));
		sezOccupantLocationAddBoxImpl.setLocationCounter(
			this.<String>getColumnOriginalValue("locationCounter"));
		sezOccupantLocationAddBoxImpl.setSezStatusApplicationId(
			this.<Long>getColumnOriginalValue("sezStatusApplicationId"));

		return sezOccupantLocationAddBoxImpl;
	}

	@Override
	public int compareTo(SezOccupantLocationAddBox sezOccupantLocationAddBox) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), sezOccupantLocationAddBox.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof SezOccupantLocationAddBox)) {
			return false;
		}

		SezOccupantLocationAddBox sezOccupantLocationAddBox =
			(SezOccupantLocationAddBox)object;

		long primaryKey = sezOccupantLocationAddBox.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<SezOccupantLocationAddBox> toCacheModel() {
		SezOccupantLocationAddBoxCacheModel
			sezOccupantLocationAddBoxCacheModel =
				new SezOccupantLocationAddBoxCacheModel();

		sezOccupantLocationAddBoxCacheModel.sezOccLocationId =
			getSezOccLocationId();

		sezOccupantLocationAddBoxCacheModel.groupId = getGroupId();

		sezOccupantLocationAddBoxCacheModel.companyId = getCompanyId();

		sezOccupantLocationAddBoxCacheModel.userId = getUserId();

		sezOccupantLocationAddBoxCacheModel.userName = getUserName();

		String userName = sezOccupantLocationAddBoxCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			sezOccupantLocationAddBoxCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			sezOccupantLocationAddBoxCacheModel.createDate =
				createDate.getTime();
		}
		else {
			sezOccupantLocationAddBoxCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			sezOccupantLocationAddBoxCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			sezOccupantLocationAddBoxCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		sezOccupantLocationAddBoxCacheModel.developerCodeLocation =
			getDeveloperCodeLocation();

		String developerCodeLocation =
			sezOccupantLocationAddBoxCacheModel.developerCodeLocation;

		if ((developerCodeLocation != null) &&
			(developerCodeLocation.length() == 0)) {

			sezOccupantLocationAddBoxCacheModel.developerCodeLocation = null;
		}

		sezOccupantLocationAddBoxCacheModel.descTypeOfAct = getDescTypeOfAct();

		String descTypeOfAct =
			sezOccupantLocationAddBoxCacheModel.descTypeOfAct;

		if ((descTypeOfAct != null) && (descTypeOfAct.length() == 0)) {
			sezOccupantLocationAddBoxCacheModel.descTypeOfAct = null;
		}

		sezOccupantLocationAddBoxCacheModel.locationCounter =
			getLocationCounter();

		String locationCounter =
			sezOccupantLocationAddBoxCacheModel.locationCounter;

		if ((locationCounter != null) && (locationCounter.length() == 0)) {
			sezOccupantLocationAddBoxCacheModel.locationCounter = null;
		}

		sezOccupantLocationAddBoxCacheModel.sezStatusApplicationId =
			getSezStatusApplicationId();

		return sezOccupantLocationAddBoxCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<SezOccupantLocationAddBox, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<SezOccupantLocationAddBox, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SezOccupantLocationAddBox, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(SezOccupantLocationAddBox)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, SezOccupantLocationAddBox>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						SezOccupantLocationAddBox.class, ModelWrapper.class);

	}

	private long _sezOccLocationId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _developerCodeLocation;
	private String _descTypeOfAct;
	private String _locationCounter;
	private long _sezStatusApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<SezOccupantLocationAddBox, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((SezOccupantLocationAddBox)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("sezOccLocationId", _sezOccLocationId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"developerCodeLocation", _developerCodeLocation);
		_columnOriginalValues.put("descTypeOfAct", _descTypeOfAct);
		_columnOriginalValues.put("locationCounter", _locationCounter);
		_columnOriginalValues.put(
			"sezStatusApplicationId", _sezStatusApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("sezOccLocationId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("developerCodeLocation", 128L);

		columnBitmasks.put("descTypeOfAct", 256L);

		columnBitmasks.put("locationCounter", 512L);

		columnBitmasks.put("sezStatusApplicationId", 1024L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private SezOccupantLocationAddBox _escapedModel;

}