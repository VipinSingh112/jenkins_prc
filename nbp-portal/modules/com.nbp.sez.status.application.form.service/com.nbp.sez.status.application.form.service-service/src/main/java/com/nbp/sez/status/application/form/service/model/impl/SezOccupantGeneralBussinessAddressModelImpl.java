/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.sez.status.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.sez.status.application.form.service.model.SezOccupantGeneralBussinessAddress;
import com.nbp.sez.status.application.form.service.model.SezOccupantGeneralBussinessAddressModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the SezOccupantGeneralBussinessAddress service. Represents a row in the &quot;nbp_sez_occ_gen_buss_address&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>SezOccupantGeneralBussinessAddressModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SezOccupantGeneralBussinessAddressImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SezOccupantGeneralBussinessAddressImpl
 * @generated
 */
@JSON(strict = true)
public class SezOccupantGeneralBussinessAddressModelImpl
	extends BaseModelImpl<SezOccupantGeneralBussinessAddress>
	implements SezOccupantGeneralBussinessAddressModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a sez occupant general bussiness address model instance should use the <code>SezOccupantGeneralBussinessAddress</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_sez_occ_gen_buss_address";

	public static final Object[][] TABLE_COLUMNS = {
		{"sezOccGenBussAddressId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"occName", Types.VARCHAR},
		{"occStreetAddress", Types.VARCHAR}, {"occTown", Types.VARCHAR},
		{"occParish", Types.VARCHAR}, {"occCountry", Types.VARCHAR},
		{"addresstype", Types.VARCHAR}, {"sezOccGenBussId", Types.BIGINT},
		{"sezStatusApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("sezOccGenBussAddressId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("occName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("occStreetAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("occTown", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("occParish", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("occCountry", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("addresstype", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sezOccGenBussId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("sezStatusApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_sez_occ_gen_buss_address (sezOccGenBussAddressId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,occName VARCHAR(75) null,occStreetAddress VARCHAR(75) null,occTown VARCHAR(75) null,occParish VARCHAR(75) null,occCountry VARCHAR(75) null,addresstype VARCHAR(75) null,sezOccGenBussId LONG,sezStatusApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_sez_occ_gen_buss_address";

	public static final String ORDER_BY_JPQL =
		" ORDER BY sezOccupantGeneralBussinessAddress.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_sez_occ_gen_buss_address.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ADDRESSTYPE_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SEZOCCGENBUSSID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SEZSTATUSAPPLICATIONID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public SezOccupantGeneralBussinessAddressModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _sezOccGenBussAddressId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSezOccGenBussAddressId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _sezOccGenBussAddressId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SezOccupantGeneralBussinessAddress.class;
	}

	@Override
	public String getModelClassName() {
		return SezOccupantGeneralBussinessAddress.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<SezOccupantGeneralBussinessAddress, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry
				<String, Function<SezOccupantGeneralBussinessAddress, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SezOccupantGeneralBussinessAddress, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(SezOccupantGeneralBussinessAddress)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<SezOccupantGeneralBussinessAddress, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<SezOccupantGeneralBussinessAddress, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(SezOccupantGeneralBussinessAddress)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<SezOccupantGeneralBussinessAddress, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<SezOccupantGeneralBussinessAddress, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<SezOccupantGeneralBussinessAddress, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<SezOccupantGeneralBussinessAddress, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String,
						 Function
							 <SezOccupantGeneralBussinessAddress, Object>>();

			attributeGetterFunctions.put(
				"sezOccGenBussAddressId",
				SezOccupantGeneralBussinessAddress::getSezOccGenBussAddressId);
			attributeGetterFunctions.put(
				"groupId", SezOccupantGeneralBussinessAddress::getGroupId);
			attributeGetterFunctions.put(
				"companyId", SezOccupantGeneralBussinessAddress::getCompanyId);
			attributeGetterFunctions.put(
				"userId", SezOccupantGeneralBussinessAddress::getUserId);
			attributeGetterFunctions.put(
				"userName", SezOccupantGeneralBussinessAddress::getUserName);
			attributeGetterFunctions.put(
				"createDate",
				SezOccupantGeneralBussinessAddress::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate",
				SezOccupantGeneralBussinessAddress::getModifiedDate);
			attributeGetterFunctions.put(
				"occName", SezOccupantGeneralBussinessAddress::getOccName);
			attributeGetterFunctions.put(
				"occStreetAddress",
				SezOccupantGeneralBussinessAddress::getOccStreetAddress);
			attributeGetterFunctions.put(
				"occTown", SezOccupantGeneralBussinessAddress::getOccTown);
			attributeGetterFunctions.put(
				"occParish", SezOccupantGeneralBussinessAddress::getOccParish);
			attributeGetterFunctions.put(
				"occCountry",
				SezOccupantGeneralBussinessAddress::getOccCountry);
			attributeGetterFunctions.put(
				"addresstype",
				SezOccupantGeneralBussinessAddress::getAddresstype);
			attributeGetterFunctions.put(
				"sezOccGenBussId",
				SezOccupantGeneralBussinessAddress::getSezOccGenBussId);
			attributeGetterFunctions.put(
				"sezStatusApplicationId",
				SezOccupantGeneralBussinessAddress::getSezStatusApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<SezOccupantGeneralBussinessAddress, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<SezOccupantGeneralBussinessAddress, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String,
						 BiConsumer<SezOccupantGeneralBussinessAddress, ?>>();

			attributeSetterBiConsumers.put(
				"sezOccGenBussAddressId",
				(BiConsumer<SezOccupantGeneralBussinessAddress, Long>)
					SezOccupantGeneralBussinessAddress::
						setSezOccGenBussAddressId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<SezOccupantGeneralBussinessAddress, Long>)
					SezOccupantGeneralBussinessAddress::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<SezOccupantGeneralBussinessAddress, Long>)
					SezOccupantGeneralBussinessAddress::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<SezOccupantGeneralBussinessAddress, Long>)
					SezOccupantGeneralBussinessAddress::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<SezOccupantGeneralBussinessAddress, String>)
					SezOccupantGeneralBussinessAddress::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<SezOccupantGeneralBussinessAddress, Date>)
					SezOccupantGeneralBussinessAddress::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<SezOccupantGeneralBussinessAddress, Date>)
					SezOccupantGeneralBussinessAddress::setModifiedDate);
			attributeSetterBiConsumers.put(
				"occName",
				(BiConsumer<SezOccupantGeneralBussinessAddress, String>)
					SezOccupantGeneralBussinessAddress::setOccName);
			attributeSetterBiConsumers.put(
				"occStreetAddress",
				(BiConsumer<SezOccupantGeneralBussinessAddress, String>)
					SezOccupantGeneralBussinessAddress::setOccStreetAddress);
			attributeSetterBiConsumers.put(
				"occTown",
				(BiConsumer<SezOccupantGeneralBussinessAddress, String>)
					SezOccupantGeneralBussinessAddress::setOccTown);
			attributeSetterBiConsumers.put(
				"occParish",
				(BiConsumer<SezOccupantGeneralBussinessAddress, String>)
					SezOccupantGeneralBussinessAddress::setOccParish);
			attributeSetterBiConsumers.put(
				"occCountry",
				(BiConsumer<SezOccupantGeneralBussinessAddress, String>)
					SezOccupantGeneralBussinessAddress::setOccCountry);
			attributeSetterBiConsumers.put(
				"addresstype",
				(BiConsumer<SezOccupantGeneralBussinessAddress, String>)
					SezOccupantGeneralBussinessAddress::setAddresstype);
			attributeSetterBiConsumers.put(
				"sezOccGenBussId",
				(BiConsumer<SezOccupantGeneralBussinessAddress, Long>)
					SezOccupantGeneralBussinessAddress::setSezOccGenBussId);
			attributeSetterBiConsumers.put(
				"sezStatusApplicationId",
				(BiConsumer<SezOccupantGeneralBussinessAddress, Long>)
					SezOccupantGeneralBussinessAddress::
						setSezStatusApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getSezOccGenBussAddressId() {
		return _sezOccGenBussAddressId;
	}

	@Override
	public void setSezOccGenBussAddressId(long sezOccGenBussAddressId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sezOccGenBussAddressId = sezOccGenBussAddressId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getOccName() {
		if (_occName == null) {
			return "";
		}
		else {
			return _occName;
		}
	}

	@Override
	public void setOccName(String occName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_occName = occName;
	}

	@JSON
	@Override
	public String getOccStreetAddress() {
		if (_occStreetAddress == null) {
			return "";
		}
		else {
			return _occStreetAddress;
		}
	}

	@Override
	public void setOccStreetAddress(String occStreetAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_occStreetAddress = occStreetAddress;
	}

	@JSON
	@Override
	public String getOccTown() {
		if (_occTown == null) {
			return "";
		}
		else {
			return _occTown;
		}
	}

	@Override
	public void setOccTown(String occTown) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_occTown = occTown;
	}

	@JSON
	@Override
	public String getOccParish() {
		if (_occParish == null) {
			return "";
		}
		else {
			return _occParish;
		}
	}

	@Override
	public void setOccParish(String occParish) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_occParish = occParish;
	}

	@JSON
	@Override
	public String getOccCountry() {
		if (_occCountry == null) {
			return "";
		}
		else {
			return _occCountry;
		}
	}

	@Override
	public void setOccCountry(String occCountry) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_occCountry = occCountry;
	}

	@JSON
	@Override
	public String getAddresstype() {
		if (_addresstype == null) {
			return "";
		}
		else {
			return _addresstype;
		}
	}

	@Override
	public void setAddresstype(String addresstype) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_addresstype = addresstype;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalAddresstype() {
		return getColumnOriginalValue("addresstype");
	}

	@JSON
	@Override
	public long getSezOccGenBussId() {
		return _sezOccGenBussId;
	}

	@Override
	public void setSezOccGenBussId(long sezOccGenBussId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sezOccGenBussId = sezOccGenBussId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalSezOccGenBussId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("sezOccGenBussId"));
	}

	@JSON
	@Override
	public long getSezStatusApplicationId() {
		return _sezStatusApplicationId;
	}

	@Override
	public void setSezStatusApplicationId(long sezStatusApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sezStatusApplicationId = sezStatusApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalSezStatusApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("sezStatusApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), SezOccupantGeneralBussinessAddress.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SezOccupantGeneralBussinessAddress toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, SezOccupantGeneralBussinessAddress>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SezOccupantGeneralBussinessAddressImpl
			sezOccupantGeneralBussinessAddressImpl =
				new SezOccupantGeneralBussinessAddressImpl();

		sezOccupantGeneralBussinessAddressImpl.setSezOccGenBussAddressId(
			getSezOccGenBussAddressId());
		sezOccupantGeneralBussinessAddressImpl.setGroupId(getGroupId());
		sezOccupantGeneralBussinessAddressImpl.setCompanyId(getCompanyId());
		sezOccupantGeneralBussinessAddressImpl.setUserId(getUserId());
		sezOccupantGeneralBussinessAddressImpl.setUserName(getUserName());
		sezOccupantGeneralBussinessAddressImpl.setCreateDate(getCreateDate());
		sezOccupantGeneralBussinessAddressImpl.setModifiedDate(
			getModifiedDate());
		sezOccupantGeneralBussinessAddressImpl.setOccName(getOccName());
		sezOccupantGeneralBussinessAddressImpl.setOccStreetAddress(
			getOccStreetAddress());
		sezOccupantGeneralBussinessAddressImpl.setOccTown(getOccTown());
		sezOccupantGeneralBussinessAddressImpl.setOccParish(getOccParish());
		sezOccupantGeneralBussinessAddressImpl.setOccCountry(getOccCountry());
		sezOccupantGeneralBussinessAddressImpl.setAddresstype(getAddresstype());
		sezOccupantGeneralBussinessAddressImpl.setSezOccGenBussId(
			getSezOccGenBussId());
		sezOccupantGeneralBussinessAddressImpl.setSezStatusApplicationId(
			getSezStatusApplicationId());

		sezOccupantGeneralBussinessAddressImpl.resetOriginalValues();

		return sezOccupantGeneralBussinessAddressImpl;
	}

	@Override
	public SezOccupantGeneralBussinessAddress cloneWithOriginalValues() {
		SezOccupantGeneralBussinessAddressImpl
			sezOccupantGeneralBussinessAddressImpl =
				new SezOccupantGeneralBussinessAddressImpl();

		sezOccupantGeneralBussinessAddressImpl.setSezOccGenBussAddressId(
			this.<Long>getColumnOriginalValue("sezOccGenBussAddressId"));
		sezOccupantGeneralBussinessAddressImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		sezOccupantGeneralBussinessAddressImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		sezOccupantGeneralBussinessAddressImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		sezOccupantGeneralBussinessAddressImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		sezOccupantGeneralBussinessAddressImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		sezOccupantGeneralBussinessAddressImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		sezOccupantGeneralBussinessAddressImpl.setOccName(
			this.<String>getColumnOriginalValue("occName"));
		sezOccupantGeneralBussinessAddressImpl.setOccStreetAddress(
			this.<String>getColumnOriginalValue("occStreetAddress"));
		sezOccupantGeneralBussinessAddressImpl.setOccTown(
			this.<String>getColumnOriginalValue("occTown"));
		sezOccupantGeneralBussinessAddressImpl.setOccParish(
			this.<String>getColumnOriginalValue("occParish"));
		sezOccupantGeneralBussinessAddressImpl.setOccCountry(
			this.<String>getColumnOriginalValue("occCountry"));
		sezOccupantGeneralBussinessAddressImpl.setAddresstype(
			this.<String>getColumnOriginalValue("addresstype"));
		sezOccupantGeneralBussinessAddressImpl.setSezOccGenBussId(
			this.<Long>getColumnOriginalValue("sezOccGenBussId"));
		sezOccupantGeneralBussinessAddressImpl.setSezStatusApplicationId(
			this.<Long>getColumnOriginalValue("sezStatusApplicationId"));

		return sezOccupantGeneralBussinessAddressImpl;
	}

	@Override
	public int compareTo(
		SezOccupantGeneralBussinessAddress sezOccupantGeneralBussinessAddress) {

		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(),
			sezOccupantGeneralBussinessAddress.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof SezOccupantGeneralBussinessAddress)) {
			return false;
		}

		SezOccupantGeneralBussinessAddress sezOccupantGeneralBussinessAddress =
			(SezOccupantGeneralBussinessAddress)object;

		long primaryKey = sezOccupantGeneralBussinessAddress.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<SezOccupantGeneralBussinessAddress> toCacheModel() {
		SezOccupantGeneralBussinessAddressCacheModel
			sezOccupantGeneralBussinessAddressCacheModel =
				new SezOccupantGeneralBussinessAddressCacheModel();

		sezOccupantGeneralBussinessAddressCacheModel.sezOccGenBussAddressId =
			getSezOccGenBussAddressId();

		sezOccupantGeneralBussinessAddressCacheModel.groupId = getGroupId();

		sezOccupantGeneralBussinessAddressCacheModel.companyId = getCompanyId();

		sezOccupantGeneralBussinessAddressCacheModel.userId = getUserId();

		sezOccupantGeneralBussinessAddressCacheModel.userName = getUserName();

		String userName = sezOccupantGeneralBussinessAddressCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			sezOccupantGeneralBussinessAddressCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			sezOccupantGeneralBussinessAddressCacheModel.createDate =
				createDate.getTime();
		}
		else {
			sezOccupantGeneralBussinessAddressCacheModel.createDate =
				Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			sezOccupantGeneralBussinessAddressCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			sezOccupantGeneralBussinessAddressCacheModel.modifiedDate =
				Long.MIN_VALUE;
		}

		sezOccupantGeneralBussinessAddressCacheModel.occName = getOccName();

		String occName = sezOccupantGeneralBussinessAddressCacheModel.occName;

		if ((occName != null) && (occName.length() == 0)) {
			sezOccupantGeneralBussinessAddressCacheModel.occName = null;
		}

		sezOccupantGeneralBussinessAddressCacheModel.occStreetAddress =
			getOccStreetAddress();

		String occStreetAddress =
			sezOccupantGeneralBussinessAddressCacheModel.occStreetAddress;

		if ((occStreetAddress != null) && (occStreetAddress.length() == 0)) {
			sezOccupantGeneralBussinessAddressCacheModel.occStreetAddress =
				null;
		}

		sezOccupantGeneralBussinessAddressCacheModel.occTown = getOccTown();

		String occTown = sezOccupantGeneralBussinessAddressCacheModel.occTown;

		if ((occTown != null) && (occTown.length() == 0)) {
			sezOccupantGeneralBussinessAddressCacheModel.occTown = null;
		}

		sezOccupantGeneralBussinessAddressCacheModel.occParish = getOccParish();

		String occParish =
			sezOccupantGeneralBussinessAddressCacheModel.occParish;

		if ((occParish != null) && (occParish.length() == 0)) {
			sezOccupantGeneralBussinessAddressCacheModel.occParish = null;
		}

		sezOccupantGeneralBussinessAddressCacheModel.occCountry =
			getOccCountry();

		String occCountry =
			sezOccupantGeneralBussinessAddressCacheModel.occCountry;

		if ((occCountry != null) && (occCountry.length() == 0)) {
			sezOccupantGeneralBussinessAddressCacheModel.occCountry = null;
		}

		sezOccupantGeneralBussinessAddressCacheModel.addresstype =
			getAddresstype();

		String addresstype =
			sezOccupantGeneralBussinessAddressCacheModel.addresstype;

		if ((addresstype != null) && (addresstype.length() == 0)) {
			sezOccupantGeneralBussinessAddressCacheModel.addresstype = null;
		}

		sezOccupantGeneralBussinessAddressCacheModel.sezOccGenBussId =
			getSezOccGenBussId();

		sezOccupantGeneralBussinessAddressCacheModel.sezStatusApplicationId =
			getSezStatusApplicationId();

		return sezOccupantGeneralBussinessAddressCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<SezOccupantGeneralBussinessAddress, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry
				<String, Function<SezOccupantGeneralBussinessAddress, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SezOccupantGeneralBussinessAddress, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(SezOccupantGeneralBussinessAddress)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, SezOccupantGeneralBussinessAddress>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						SezOccupantGeneralBussinessAddress.class,
						ModelWrapper.class);

	}

	private long _sezOccGenBussAddressId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _occName;
	private String _occStreetAddress;
	private String _occTown;
	private String _occParish;
	private String _occCountry;
	private String _addresstype;
	private long _sezOccGenBussId;
	private long _sezStatusApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<SezOccupantGeneralBussinessAddress, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((SezOccupantGeneralBussinessAddress)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"sezOccGenBussAddressId", _sezOccGenBussAddressId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("occName", _occName);
		_columnOriginalValues.put("occStreetAddress", _occStreetAddress);
		_columnOriginalValues.put("occTown", _occTown);
		_columnOriginalValues.put("occParish", _occParish);
		_columnOriginalValues.put("occCountry", _occCountry);
		_columnOriginalValues.put("addresstype", _addresstype);
		_columnOriginalValues.put("sezOccGenBussId", _sezOccGenBussId);
		_columnOriginalValues.put(
			"sezStatusApplicationId", _sezStatusApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("sezOccGenBussAddressId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("occName", 128L);

		columnBitmasks.put("occStreetAddress", 256L);

		columnBitmasks.put("occTown", 512L);

		columnBitmasks.put("occParish", 1024L);

		columnBitmasks.put("occCountry", 2048L);

		columnBitmasks.put("addresstype", 4096L);

		columnBitmasks.put("sezOccGenBussId", 8192L);

		columnBitmasks.put("sezStatusApplicationId", 16384L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private SezOccupantGeneralBussinessAddress _escapedModel;

}