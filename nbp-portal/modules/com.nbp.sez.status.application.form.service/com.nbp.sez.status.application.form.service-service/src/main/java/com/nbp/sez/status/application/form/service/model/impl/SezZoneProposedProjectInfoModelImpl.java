/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.sez.status.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.sez.status.application.form.service.model.SezZoneProposedProjectInfo;
import com.nbp.sez.status.application.form.service.model.SezZoneProposedProjectInfoModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the SezZoneProposedProjectInfo service. Represents a row in the &quot;nbp_sez_zone_pro_proj_info&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>SezZoneProposedProjectInfoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SezZoneProposedProjectInfoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SezZoneProposedProjectInfoImpl
 * @generated
 */
@JSON(strict = true)
public class SezZoneProposedProjectInfoModelImpl
	extends BaseModelImpl<SezZoneProposedProjectInfo>
	implements SezZoneProposedProjectInfoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a sez zone proposed project info model instance should use the <code>SezZoneProposedProjectInfo</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_sez_zone_pro_proj_info";

	public static final Object[][] TABLE_COLUMNS = {
		{"sezZoneProposedProjectInfoId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"entityDeniedApproval", Types.VARCHAR},
		{"deniedApprovalDate", Types.TIMESTAMP},
		{"deniedApprovalProjectType", Types.VARCHAR},
		{"freeZoneLocation", Types.VARCHAR},
		{"leasedBuildingNum", Types.VARCHAR}, {"leasedTown", Types.VARCHAR},
		{"leasedParish", Types.VARCHAR}, {"leaseYears", Types.VARCHAR},
		{"volume", Types.VARCHAR}, {"folio", Types.VARCHAR},
		{"floorNum", Types.VARCHAR}, {"sezStatusApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("sezZoneProposedProjectInfoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("entityDeniedApproval", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("deniedApprovalDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("deniedApprovalProjectType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("freeZoneLocation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("leasedBuildingNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("leasedTown", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("leasedParish", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("leaseYears", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("volume", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("folio", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("floorNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sezStatusApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_sez_zone_pro_proj_info (sezZoneProposedProjectInfoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,entityDeniedApproval VARCHAR(75) null,deniedApprovalDate DATE null,deniedApprovalProjectType VARCHAR(75) null,freeZoneLocation VARCHAR(75) null,leasedBuildingNum VARCHAR(75) null,leasedTown VARCHAR(75) null,leasedParish VARCHAR(75) null,leaseYears VARCHAR(75) null,volume VARCHAR(75) null,folio VARCHAR(75) null,floorNum VARCHAR(75) null,sezStatusApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_sez_zone_pro_proj_info";

	public static final String ORDER_BY_JPQL =
		" ORDER BY sezZoneProposedProjectInfo.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_sez_zone_pro_proj_info.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SEZSTATUSAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public SezZoneProposedProjectInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _sezZoneProposedProjectInfoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSezZoneProposedProjectInfoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _sezZoneProposedProjectInfoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SezZoneProposedProjectInfo.class;
	}

	@Override
	public String getModelClassName() {
		return SezZoneProposedProjectInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<SezZoneProposedProjectInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<SezZoneProposedProjectInfo, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SezZoneProposedProjectInfo, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(SezZoneProposedProjectInfo)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<SezZoneProposedProjectInfo, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<SezZoneProposedProjectInfo, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(SezZoneProposedProjectInfo)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<SezZoneProposedProjectInfo, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<SezZoneProposedProjectInfo, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<SezZoneProposedProjectInfo, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<SezZoneProposedProjectInfo, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String,
						 Function<SezZoneProposedProjectInfo, Object>>();

			attributeGetterFunctions.put(
				"sezZoneProposedProjectInfoId",
				SezZoneProposedProjectInfo::getSezZoneProposedProjectInfoId);
			attributeGetterFunctions.put(
				"groupId", SezZoneProposedProjectInfo::getGroupId);
			attributeGetterFunctions.put(
				"companyId", SezZoneProposedProjectInfo::getCompanyId);
			attributeGetterFunctions.put(
				"userId", SezZoneProposedProjectInfo::getUserId);
			attributeGetterFunctions.put(
				"userName", SezZoneProposedProjectInfo::getUserName);
			attributeGetterFunctions.put(
				"createDate", SezZoneProposedProjectInfo::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", SezZoneProposedProjectInfo::getModifiedDate);
			attributeGetterFunctions.put(
				"entityDeniedApproval",
				SezZoneProposedProjectInfo::getEntityDeniedApproval);
			attributeGetterFunctions.put(
				"deniedApprovalDate",
				SezZoneProposedProjectInfo::getDeniedApprovalDate);
			attributeGetterFunctions.put(
				"deniedApprovalProjectType",
				SezZoneProposedProjectInfo::getDeniedApprovalProjectType);
			attributeGetterFunctions.put(
				"freeZoneLocation",
				SezZoneProposedProjectInfo::getFreeZoneLocation);
			attributeGetterFunctions.put(
				"leasedBuildingNum",
				SezZoneProposedProjectInfo::getLeasedBuildingNum);
			attributeGetterFunctions.put(
				"leasedTown", SezZoneProposedProjectInfo::getLeasedTown);
			attributeGetterFunctions.put(
				"leasedParish", SezZoneProposedProjectInfo::getLeasedParish);
			attributeGetterFunctions.put(
				"leaseYears", SezZoneProposedProjectInfo::getLeaseYears);
			attributeGetterFunctions.put(
				"volume", SezZoneProposedProjectInfo::getVolume);
			attributeGetterFunctions.put(
				"folio", SezZoneProposedProjectInfo::getFolio);
			attributeGetterFunctions.put(
				"floorNum", SezZoneProposedProjectInfo::getFloorNum);
			attributeGetterFunctions.put(
				"sezStatusApplicationId",
				SezZoneProposedProjectInfo::getSezStatusApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<SezZoneProposedProjectInfo, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<SezZoneProposedProjectInfo, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<SezZoneProposedProjectInfo, ?>>();

			attributeSetterBiConsumers.put(
				"sezZoneProposedProjectInfoId",
				(BiConsumer<SezZoneProposedProjectInfo, Long>)
					SezZoneProposedProjectInfo::
						setSezZoneProposedProjectInfoId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<SezZoneProposedProjectInfo, Long>)
					SezZoneProposedProjectInfo::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<SezZoneProposedProjectInfo, Long>)
					SezZoneProposedProjectInfo::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<SezZoneProposedProjectInfo, Long>)
					SezZoneProposedProjectInfo::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<SezZoneProposedProjectInfo, String>)
					SezZoneProposedProjectInfo::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<SezZoneProposedProjectInfo, Date>)
					SezZoneProposedProjectInfo::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<SezZoneProposedProjectInfo, Date>)
					SezZoneProposedProjectInfo::setModifiedDate);
			attributeSetterBiConsumers.put(
				"entityDeniedApproval",
				(BiConsumer<SezZoneProposedProjectInfo, String>)
					SezZoneProposedProjectInfo::setEntityDeniedApproval);
			attributeSetterBiConsumers.put(
				"deniedApprovalDate",
				(BiConsumer<SezZoneProposedProjectInfo, Date>)
					SezZoneProposedProjectInfo::setDeniedApprovalDate);
			attributeSetterBiConsumers.put(
				"deniedApprovalProjectType",
				(BiConsumer<SezZoneProposedProjectInfo, String>)
					SezZoneProposedProjectInfo::setDeniedApprovalProjectType);
			attributeSetterBiConsumers.put(
				"freeZoneLocation",
				(BiConsumer<SezZoneProposedProjectInfo, String>)
					SezZoneProposedProjectInfo::setFreeZoneLocation);
			attributeSetterBiConsumers.put(
				"leasedBuildingNum",
				(BiConsumer<SezZoneProposedProjectInfo, String>)
					SezZoneProposedProjectInfo::setLeasedBuildingNum);
			attributeSetterBiConsumers.put(
				"leasedTown",
				(BiConsumer<SezZoneProposedProjectInfo, String>)
					SezZoneProposedProjectInfo::setLeasedTown);
			attributeSetterBiConsumers.put(
				"leasedParish",
				(BiConsumer<SezZoneProposedProjectInfo, String>)
					SezZoneProposedProjectInfo::setLeasedParish);
			attributeSetterBiConsumers.put(
				"leaseYears",
				(BiConsumer<SezZoneProposedProjectInfo, String>)
					SezZoneProposedProjectInfo::setLeaseYears);
			attributeSetterBiConsumers.put(
				"volume",
				(BiConsumer<SezZoneProposedProjectInfo, String>)
					SezZoneProposedProjectInfo::setVolume);
			attributeSetterBiConsumers.put(
				"folio",
				(BiConsumer<SezZoneProposedProjectInfo, String>)
					SezZoneProposedProjectInfo::setFolio);
			attributeSetterBiConsumers.put(
				"floorNum",
				(BiConsumer<SezZoneProposedProjectInfo, String>)
					SezZoneProposedProjectInfo::setFloorNum);
			attributeSetterBiConsumers.put(
				"sezStatusApplicationId",
				(BiConsumer<SezZoneProposedProjectInfo, Long>)
					SezZoneProposedProjectInfo::setSezStatusApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getSezZoneProposedProjectInfoId() {
		return _sezZoneProposedProjectInfoId;
	}

	@Override
	public void setSezZoneProposedProjectInfoId(
		long sezZoneProposedProjectInfoId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sezZoneProposedProjectInfoId = sezZoneProposedProjectInfoId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getEntityDeniedApproval() {
		if (_entityDeniedApproval == null) {
			return "";
		}
		else {
			return _entityDeniedApproval;
		}
	}

	@Override
	public void setEntityDeniedApproval(String entityDeniedApproval) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_entityDeniedApproval = entityDeniedApproval;
	}

	@JSON
	@Override
	public Date getDeniedApprovalDate() {
		return _deniedApprovalDate;
	}

	@Override
	public void setDeniedApprovalDate(Date deniedApprovalDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_deniedApprovalDate = deniedApprovalDate;
	}

	@JSON
	@Override
	public String getDeniedApprovalProjectType() {
		if (_deniedApprovalProjectType == null) {
			return "";
		}
		else {
			return _deniedApprovalProjectType;
		}
	}

	@Override
	public void setDeniedApprovalProjectType(String deniedApprovalProjectType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_deniedApprovalProjectType = deniedApprovalProjectType;
	}

	@JSON
	@Override
	public String getFreeZoneLocation() {
		if (_freeZoneLocation == null) {
			return "";
		}
		else {
			return _freeZoneLocation;
		}
	}

	@Override
	public void setFreeZoneLocation(String freeZoneLocation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_freeZoneLocation = freeZoneLocation;
	}

	@JSON
	@Override
	public String getLeasedBuildingNum() {
		if (_leasedBuildingNum == null) {
			return "";
		}
		else {
			return _leasedBuildingNum;
		}
	}

	@Override
	public void setLeasedBuildingNum(String leasedBuildingNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_leasedBuildingNum = leasedBuildingNum;
	}

	@JSON
	@Override
	public String getLeasedTown() {
		if (_leasedTown == null) {
			return "";
		}
		else {
			return _leasedTown;
		}
	}

	@Override
	public void setLeasedTown(String leasedTown) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_leasedTown = leasedTown;
	}

	@JSON
	@Override
	public String getLeasedParish() {
		if (_leasedParish == null) {
			return "";
		}
		else {
			return _leasedParish;
		}
	}

	@Override
	public void setLeasedParish(String leasedParish) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_leasedParish = leasedParish;
	}

	@JSON
	@Override
	public String getLeaseYears() {
		if (_leaseYears == null) {
			return "";
		}
		else {
			return _leaseYears;
		}
	}

	@Override
	public void setLeaseYears(String leaseYears) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_leaseYears = leaseYears;
	}

	@JSON
	@Override
	public String getVolume() {
		if (_volume == null) {
			return "";
		}
		else {
			return _volume;
		}
	}

	@Override
	public void setVolume(String volume) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_volume = volume;
	}

	@JSON
	@Override
	public String getFolio() {
		if (_folio == null) {
			return "";
		}
		else {
			return _folio;
		}
	}

	@Override
	public void setFolio(String folio) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_folio = folio;
	}

	@JSON
	@Override
	public String getFloorNum() {
		if (_floorNum == null) {
			return "";
		}
		else {
			return _floorNum;
		}
	}

	@Override
	public void setFloorNum(String floorNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_floorNum = floorNum;
	}

	@JSON
	@Override
	public long getSezStatusApplicationId() {
		return _sezStatusApplicationId;
	}

	@Override
	public void setSezStatusApplicationId(long sezStatusApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sezStatusApplicationId = sezStatusApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalSezStatusApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("sezStatusApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), SezZoneProposedProjectInfo.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SezZoneProposedProjectInfo toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, SezZoneProposedProjectInfo>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SezZoneProposedProjectInfoImpl sezZoneProposedProjectInfoImpl =
			new SezZoneProposedProjectInfoImpl();

		sezZoneProposedProjectInfoImpl.setSezZoneProposedProjectInfoId(
			getSezZoneProposedProjectInfoId());
		sezZoneProposedProjectInfoImpl.setGroupId(getGroupId());
		sezZoneProposedProjectInfoImpl.setCompanyId(getCompanyId());
		sezZoneProposedProjectInfoImpl.setUserId(getUserId());
		sezZoneProposedProjectInfoImpl.setUserName(getUserName());
		sezZoneProposedProjectInfoImpl.setCreateDate(getCreateDate());
		sezZoneProposedProjectInfoImpl.setModifiedDate(getModifiedDate());
		sezZoneProposedProjectInfoImpl.setEntityDeniedApproval(
			getEntityDeniedApproval());
		sezZoneProposedProjectInfoImpl.setDeniedApprovalDate(
			getDeniedApprovalDate());
		sezZoneProposedProjectInfoImpl.setDeniedApprovalProjectType(
			getDeniedApprovalProjectType());
		sezZoneProposedProjectInfoImpl.setFreeZoneLocation(
			getFreeZoneLocation());
		sezZoneProposedProjectInfoImpl.setLeasedBuildingNum(
			getLeasedBuildingNum());
		sezZoneProposedProjectInfoImpl.setLeasedTown(getLeasedTown());
		sezZoneProposedProjectInfoImpl.setLeasedParish(getLeasedParish());
		sezZoneProposedProjectInfoImpl.setLeaseYears(getLeaseYears());
		sezZoneProposedProjectInfoImpl.setVolume(getVolume());
		sezZoneProposedProjectInfoImpl.setFolio(getFolio());
		sezZoneProposedProjectInfoImpl.setFloorNum(getFloorNum());
		sezZoneProposedProjectInfoImpl.setSezStatusApplicationId(
			getSezStatusApplicationId());

		sezZoneProposedProjectInfoImpl.resetOriginalValues();

		return sezZoneProposedProjectInfoImpl;
	}

	@Override
	public SezZoneProposedProjectInfo cloneWithOriginalValues() {
		SezZoneProposedProjectInfoImpl sezZoneProposedProjectInfoImpl =
			new SezZoneProposedProjectInfoImpl();

		sezZoneProposedProjectInfoImpl.setSezZoneProposedProjectInfoId(
			this.<Long>getColumnOriginalValue("sezZoneProposedProjectInfoId"));
		sezZoneProposedProjectInfoImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		sezZoneProposedProjectInfoImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		sezZoneProposedProjectInfoImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		sezZoneProposedProjectInfoImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		sezZoneProposedProjectInfoImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		sezZoneProposedProjectInfoImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		sezZoneProposedProjectInfoImpl.setEntityDeniedApproval(
			this.<String>getColumnOriginalValue("entityDeniedApproval"));
		sezZoneProposedProjectInfoImpl.setDeniedApprovalDate(
			this.<Date>getColumnOriginalValue("deniedApprovalDate"));
		sezZoneProposedProjectInfoImpl.setDeniedApprovalProjectType(
			this.<String>getColumnOriginalValue("deniedApprovalProjectType"));
		sezZoneProposedProjectInfoImpl.setFreeZoneLocation(
			this.<String>getColumnOriginalValue("freeZoneLocation"));
		sezZoneProposedProjectInfoImpl.setLeasedBuildingNum(
			this.<String>getColumnOriginalValue("leasedBuildingNum"));
		sezZoneProposedProjectInfoImpl.setLeasedTown(
			this.<String>getColumnOriginalValue("leasedTown"));
		sezZoneProposedProjectInfoImpl.setLeasedParish(
			this.<String>getColumnOriginalValue("leasedParish"));
		sezZoneProposedProjectInfoImpl.setLeaseYears(
			this.<String>getColumnOriginalValue("leaseYears"));
		sezZoneProposedProjectInfoImpl.setVolume(
			this.<String>getColumnOriginalValue("volume"));
		sezZoneProposedProjectInfoImpl.setFolio(
			this.<String>getColumnOriginalValue("folio"));
		sezZoneProposedProjectInfoImpl.setFloorNum(
			this.<String>getColumnOriginalValue("floorNum"));
		sezZoneProposedProjectInfoImpl.setSezStatusApplicationId(
			this.<Long>getColumnOriginalValue("sezStatusApplicationId"));

		return sezZoneProposedProjectInfoImpl;
	}

	@Override
	public int compareTo(
		SezZoneProposedProjectInfo sezZoneProposedProjectInfo) {

		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), sezZoneProposedProjectInfo.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof SezZoneProposedProjectInfo)) {
			return false;
		}

		SezZoneProposedProjectInfo sezZoneProposedProjectInfo =
			(SezZoneProposedProjectInfo)object;

		long primaryKey = sezZoneProposedProjectInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<SezZoneProposedProjectInfo> toCacheModel() {
		SezZoneProposedProjectInfoCacheModel
			sezZoneProposedProjectInfoCacheModel =
				new SezZoneProposedProjectInfoCacheModel();

		sezZoneProposedProjectInfoCacheModel.sezZoneProposedProjectInfoId =
			getSezZoneProposedProjectInfoId();

		sezZoneProposedProjectInfoCacheModel.groupId = getGroupId();

		sezZoneProposedProjectInfoCacheModel.companyId = getCompanyId();

		sezZoneProposedProjectInfoCacheModel.userId = getUserId();

		sezZoneProposedProjectInfoCacheModel.userName = getUserName();

		String userName = sezZoneProposedProjectInfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			sezZoneProposedProjectInfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			sezZoneProposedProjectInfoCacheModel.createDate =
				createDate.getTime();
		}
		else {
			sezZoneProposedProjectInfoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			sezZoneProposedProjectInfoCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			sezZoneProposedProjectInfoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		sezZoneProposedProjectInfoCacheModel.entityDeniedApproval =
			getEntityDeniedApproval();

		String entityDeniedApproval =
			sezZoneProposedProjectInfoCacheModel.entityDeniedApproval;

		if ((entityDeniedApproval != null) &&
			(entityDeniedApproval.length() == 0)) {

			sezZoneProposedProjectInfoCacheModel.entityDeniedApproval = null;
		}

		Date deniedApprovalDate = getDeniedApprovalDate();

		if (deniedApprovalDate != null) {
			sezZoneProposedProjectInfoCacheModel.deniedApprovalDate =
				deniedApprovalDate.getTime();
		}
		else {
			sezZoneProposedProjectInfoCacheModel.deniedApprovalDate =
				Long.MIN_VALUE;
		}

		sezZoneProposedProjectInfoCacheModel.deniedApprovalProjectType =
			getDeniedApprovalProjectType();

		String deniedApprovalProjectType =
			sezZoneProposedProjectInfoCacheModel.deniedApprovalProjectType;

		if ((deniedApprovalProjectType != null) &&
			(deniedApprovalProjectType.length() == 0)) {

			sezZoneProposedProjectInfoCacheModel.deniedApprovalProjectType =
				null;
		}

		sezZoneProposedProjectInfoCacheModel.freeZoneLocation =
			getFreeZoneLocation();

		String freeZoneLocation =
			sezZoneProposedProjectInfoCacheModel.freeZoneLocation;

		if ((freeZoneLocation != null) && (freeZoneLocation.length() == 0)) {
			sezZoneProposedProjectInfoCacheModel.freeZoneLocation = null;
		}

		sezZoneProposedProjectInfoCacheModel.leasedBuildingNum =
			getLeasedBuildingNum();

		String leasedBuildingNum =
			sezZoneProposedProjectInfoCacheModel.leasedBuildingNum;

		if ((leasedBuildingNum != null) && (leasedBuildingNum.length() == 0)) {
			sezZoneProposedProjectInfoCacheModel.leasedBuildingNum = null;
		}

		sezZoneProposedProjectInfoCacheModel.leasedTown = getLeasedTown();

		String leasedTown = sezZoneProposedProjectInfoCacheModel.leasedTown;

		if ((leasedTown != null) && (leasedTown.length() == 0)) {
			sezZoneProposedProjectInfoCacheModel.leasedTown = null;
		}

		sezZoneProposedProjectInfoCacheModel.leasedParish = getLeasedParish();

		String leasedParish = sezZoneProposedProjectInfoCacheModel.leasedParish;

		if ((leasedParish != null) && (leasedParish.length() == 0)) {
			sezZoneProposedProjectInfoCacheModel.leasedParish = null;
		}

		sezZoneProposedProjectInfoCacheModel.leaseYears = getLeaseYears();

		String leaseYears = sezZoneProposedProjectInfoCacheModel.leaseYears;

		if ((leaseYears != null) && (leaseYears.length() == 0)) {
			sezZoneProposedProjectInfoCacheModel.leaseYears = null;
		}

		sezZoneProposedProjectInfoCacheModel.volume = getVolume();

		String volume = sezZoneProposedProjectInfoCacheModel.volume;

		if ((volume != null) && (volume.length() == 0)) {
			sezZoneProposedProjectInfoCacheModel.volume = null;
		}

		sezZoneProposedProjectInfoCacheModel.folio = getFolio();

		String folio = sezZoneProposedProjectInfoCacheModel.folio;

		if ((folio != null) && (folio.length() == 0)) {
			sezZoneProposedProjectInfoCacheModel.folio = null;
		}

		sezZoneProposedProjectInfoCacheModel.floorNum = getFloorNum();

		String floorNum = sezZoneProposedProjectInfoCacheModel.floorNum;

		if ((floorNum != null) && (floorNum.length() == 0)) {
			sezZoneProposedProjectInfoCacheModel.floorNum = null;
		}

		sezZoneProposedProjectInfoCacheModel.sezStatusApplicationId =
			getSezStatusApplicationId();

		return sezZoneProposedProjectInfoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<SezZoneProposedProjectInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<SezZoneProposedProjectInfo, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SezZoneProposedProjectInfo, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(SezZoneProposedProjectInfo)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, SezZoneProposedProjectInfo>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						SezZoneProposedProjectInfo.class, ModelWrapper.class);

	}

	private long _sezZoneProposedProjectInfoId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _entityDeniedApproval;
	private Date _deniedApprovalDate;
	private String _deniedApprovalProjectType;
	private String _freeZoneLocation;
	private String _leasedBuildingNum;
	private String _leasedTown;
	private String _leasedParish;
	private String _leaseYears;
	private String _volume;
	private String _folio;
	private String _floorNum;
	private long _sezStatusApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<SezZoneProposedProjectInfo, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((SezZoneProposedProjectInfo)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"sezZoneProposedProjectInfoId", _sezZoneProposedProjectInfoId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"entityDeniedApproval", _entityDeniedApproval);
		_columnOriginalValues.put("deniedApprovalDate", _deniedApprovalDate);
		_columnOriginalValues.put(
			"deniedApprovalProjectType", _deniedApprovalProjectType);
		_columnOriginalValues.put("freeZoneLocation", _freeZoneLocation);
		_columnOriginalValues.put("leasedBuildingNum", _leasedBuildingNum);
		_columnOriginalValues.put("leasedTown", _leasedTown);
		_columnOriginalValues.put("leasedParish", _leasedParish);
		_columnOriginalValues.put("leaseYears", _leaseYears);
		_columnOriginalValues.put("volume", _volume);
		_columnOriginalValues.put("folio", _folio);
		_columnOriginalValues.put("floorNum", _floorNum);
		_columnOriginalValues.put(
			"sezStatusApplicationId", _sezStatusApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("sezZoneProposedProjectInfoId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("entityDeniedApproval", 128L);

		columnBitmasks.put("deniedApprovalDate", 256L);

		columnBitmasks.put("deniedApprovalProjectType", 512L);

		columnBitmasks.put("freeZoneLocation", 1024L);

		columnBitmasks.put("leasedBuildingNum", 2048L);

		columnBitmasks.put("leasedTown", 4096L);

		columnBitmasks.put("leasedParish", 8192L);

		columnBitmasks.put("leaseYears", 16384L);

		columnBitmasks.put("volume", 32768L);

		columnBitmasks.put("folio", 65536L);

		columnBitmasks.put("floorNum", 131072L);

		columnBitmasks.put("sezStatusApplicationId", 262144L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private SezZoneProposedProjectInfo _escapedModel;

}