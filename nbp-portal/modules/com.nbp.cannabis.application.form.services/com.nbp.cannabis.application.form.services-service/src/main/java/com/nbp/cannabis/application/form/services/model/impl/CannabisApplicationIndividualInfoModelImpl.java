/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.cannabis.application.form.services.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.cannabis.application.form.services.model.CannabisApplicationIndividualInfo;
import com.nbp.cannabis.application.form.services.model.CannabisApplicationIndividualInfoModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the CannabisApplicationIndividualInfo service. Represents a row in the &quot;nbp_cannabis_individaul_info&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>CannabisApplicationIndividualInfoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CannabisApplicationIndividualInfoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CannabisApplicationIndividualInfoImpl
 * @generated
 */
@JSON(strict = true)
public class CannabisApplicationIndividualInfoModelImpl
	extends BaseModelImpl<CannabisApplicationIndividualInfo>
	implements CannabisApplicationIndividualInfoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a cannabis application individual info model instance should use the <code>CannabisApplicationIndividualInfo</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_cannabis_individaul_info";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"individualInformationId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"firstName", Types.VARCHAR}, {"lastName", Types.VARCHAR},
		{"middleName", Types.VARCHAR}, {"otherName", Types.VARCHAR},
		{"maidenName", Types.VARCHAR}, {"motherMaidenName", Types.VARCHAR},
		{"gender", Types.VARCHAR}, {"maritalStatus", Types.VARCHAR},
		{"dob", Types.TIMESTAMP}, {"placeOfBirth", Types.VARCHAR},
		{"nationality", Types.VARCHAR}, {"durationInJamaika", Types.VARCHAR},
		{"trn", Types.VARCHAR}, {"currentOccupation", Types.VARCHAR},
		{"drivingLincenseNo", Types.VARCHAR}, {"passporNo", Types.VARCHAR},
		{"nationalIdentityNo", Types.VARCHAR}, {"contactHome", Types.VARCHAR},
		{"contactWork", Types.VARCHAR}, {"contactMobile", Types.VARCHAR},
		{"email", Types.VARCHAR}, {"identityNumber", Types.VARCHAR},
		{"status", Types.INTEGER}, {"applicationNumber", Types.VARCHAR},
		{"cannabisApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("individualInformationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("firstName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("lastName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("middleName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("otherName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("maidenName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("motherMaidenName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("gender", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("maritalStatus", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dob", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("placeOfBirth", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nationality", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("durationInJamaika", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("trn", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("currentOccupation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("drivingLincenseNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("passporNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nationalIdentityNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactHome", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactWork", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactMobile", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("email", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("identityNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("applicationNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cannabisApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_cannabis_individaul_info (uuid_ VARCHAR(75) null,individualInformationId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,firstName VARCHAR(75) null,lastName VARCHAR(75) null,middleName VARCHAR(75) null,otherName VARCHAR(75) null,maidenName VARCHAR(75) null,motherMaidenName VARCHAR(75) null,gender VARCHAR(75) null,maritalStatus VARCHAR(75) null,dob DATE null,placeOfBirth VARCHAR(75) null,nationality VARCHAR(75) null,durationInJamaika VARCHAR(75) null,trn VARCHAR(75) null,currentOccupation VARCHAR(75) null,drivingLincenseNo VARCHAR(75) null,passporNo VARCHAR(75) null,nationalIdentityNo VARCHAR(75) null,contactHome VARCHAR(75) null,contactWork VARCHAR(75) null,contactMobile VARCHAR(75) null,email VARCHAR(75) null,identityNumber VARCHAR(75) null,status INTEGER,applicationNumber VARCHAR(75) null,cannabisApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_cannabis_individaul_info";

	public static final String ORDER_BY_JPQL =
		" ORDER BY cannabisApplicationIndividualInfo.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_cannabis_individaul_info.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long APPLICATIONNUMBER_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CANNABISAPPLICATIONID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 32L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public CannabisApplicationIndividualInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _individualInformationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setIndividualInformationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _individualInformationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CannabisApplicationIndividualInfo.class;
	}

	@Override
	public String getModelClassName() {
		return CannabisApplicationIndividualInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<CannabisApplicationIndividualInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry
				<String, Function<CannabisApplicationIndividualInfo, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CannabisApplicationIndividualInfo, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(CannabisApplicationIndividualInfo)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<CannabisApplicationIndividualInfo, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<CannabisApplicationIndividualInfo, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(CannabisApplicationIndividualInfo)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<CannabisApplicationIndividualInfo, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<CannabisApplicationIndividualInfo, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<CannabisApplicationIndividualInfo, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<CannabisApplicationIndividualInfo, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String,
						 Function<CannabisApplicationIndividualInfo, Object>>();

			attributeGetterFunctions.put(
				"uuid", CannabisApplicationIndividualInfo::getUuid);
			attributeGetterFunctions.put(
				"individualInformationId",
				CannabisApplicationIndividualInfo::getIndividualInformationId);
			attributeGetterFunctions.put(
				"groupId", CannabisApplicationIndividualInfo::getGroupId);
			attributeGetterFunctions.put(
				"companyId", CannabisApplicationIndividualInfo::getCompanyId);
			attributeGetterFunctions.put(
				"userId", CannabisApplicationIndividualInfo::getUserId);
			attributeGetterFunctions.put(
				"userName", CannabisApplicationIndividualInfo::getUserName);
			attributeGetterFunctions.put(
				"createDate", CannabisApplicationIndividualInfo::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate",
				CannabisApplicationIndividualInfo::getModifiedDate);
			attributeGetterFunctions.put(
				"firstName", CannabisApplicationIndividualInfo::getFirstName);
			attributeGetterFunctions.put(
				"lastName", CannabisApplicationIndividualInfo::getLastName);
			attributeGetterFunctions.put(
				"middleName", CannabisApplicationIndividualInfo::getMiddleName);
			attributeGetterFunctions.put(
				"otherName", CannabisApplicationIndividualInfo::getOtherName);
			attributeGetterFunctions.put(
				"maidenName", CannabisApplicationIndividualInfo::getMaidenName);
			attributeGetterFunctions.put(
				"motherMaidenName",
				CannabisApplicationIndividualInfo::getMotherMaidenName);
			attributeGetterFunctions.put(
				"gender", CannabisApplicationIndividualInfo::getGender);
			attributeGetterFunctions.put(
				"maritalStatus",
				CannabisApplicationIndividualInfo::getMaritalStatus);
			attributeGetterFunctions.put(
				"dob", CannabisApplicationIndividualInfo::getDob);
			attributeGetterFunctions.put(
				"placeOfBirth",
				CannabisApplicationIndividualInfo::getPlaceOfBirth);
			attributeGetterFunctions.put(
				"nationality",
				CannabisApplicationIndividualInfo::getNationality);
			attributeGetterFunctions.put(
				"durationInJamaika",
				CannabisApplicationIndividualInfo::getDurationInJamaika);
			attributeGetterFunctions.put(
				"trn", CannabisApplicationIndividualInfo::getTrn);
			attributeGetterFunctions.put(
				"currentOccupation",
				CannabisApplicationIndividualInfo::getCurrentOccupation);
			attributeGetterFunctions.put(
				"drivingLincenseNo",
				CannabisApplicationIndividualInfo::getDrivingLincenseNo);
			attributeGetterFunctions.put(
				"passporNo", CannabisApplicationIndividualInfo::getPassporNo);
			attributeGetterFunctions.put(
				"nationalIdentityNo",
				CannabisApplicationIndividualInfo::getNationalIdentityNo);
			attributeGetterFunctions.put(
				"contactHome",
				CannabisApplicationIndividualInfo::getContactHome);
			attributeGetterFunctions.put(
				"contactWork",
				CannabisApplicationIndividualInfo::getContactWork);
			attributeGetterFunctions.put(
				"contactMobile",
				CannabisApplicationIndividualInfo::getContactMobile);
			attributeGetterFunctions.put(
				"email", CannabisApplicationIndividualInfo::getEmail);
			attributeGetterFunctions.put(
				"identityNumber",
				CannabisApplicationIndividualInfo::getIdentityNumber);
			attributeGetterFunctions.put(
				"status", CannabisApplicationIndividualInfo::getStatus);
			attributeGetterFunctions.put(
				"applicationNumber",
				CannabisApplicationIndividualInfo::getApplicationNumber);
			attributeGetterFunctions.put(
				"cannabisApplicationId",
				CannabisApplicationIndividualInfo::getCannabisApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<CannabisApplicationIndividualInfo, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<CannabisApplicationIndividualInfo, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String,
						 BiConsumer<CannabisApplicationIndividualInfo, ?>>();

			attributeSetterBiConsumers.put(
				"uuid",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setUuid);
			attributeSetterBiConsumers.put(
				"individualInformationId",
				(BiConsumer<CannabisApplicationIndividualInfo, Long>)
					CannabisApplicationIndividualInfo::
						setIndividualInformationId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<CannabisApplicationIndividualInfo, Long>)
					CannabisApplicationIndividualInfo::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<CannabisApplicationIndividualInfo, Long>)
					CannabisApplicationIndividualInfo::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<CannabisApplicationIndividualInfo, Long>)
					CannabisApplicationIndividualInfo::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<CannabisApplicationIndividualInfo, Date>)
					CannabisApplicationIndividualInfo::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<CannabisApplicationIndividualInfo, Date>)
					CannabisApplicationIndividualInfo::setModifiedDate);
			attributeSetterBiConsumers.put(
				"firstName",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setFirstName);
			attributeSetterBiConsumers.put(
				"lastName",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setLastName);
			attributeSetterBiConsumers.put(
				"middleName",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setMiddleName);
			attributeSetterBiConsumers.put(
				"otherName",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setOtherName);
			attributeSetterBiConsumers.put(
				"maidenName",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setMaidenName);
			attributeSetterBiConsumers.put(
				"motherMaidenName",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setMotherMaidenName);
			attributeSetterBiConsumers.put(
				"gender",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setGender);
			attributeSetterBiConsumers.put(
				"maritalStatus",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setMaritalStatus);
			attributeSetterBiConsumers.put(
				"dob",
				(BiConsumer<CannabisApplicationIndividualInfo, Date>)
					CannabisApplicationIndividualInfo::setDob);
			attributeSetterBiConsumers.put(
				"placeOfBirth",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setPlaceOfBirth);
			attributeSetterBiConsumers.put(
				"nationality",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setNationality);
			attributeSetterBiConsumers.put(
				"durationInJamaika",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setDurationInJamaika);
			attributeSetterBiConsumers.put(
				"trn",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setTrn);
			attributeSetterBiConsumers.put(
				"currentOccupation",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setCurrentOccupation);
			attributeSetterBiConsumers.put(
				"drivingLincenseNo",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setDrivingLincenseNo);
			attributeSetterBiConsumers.put(
				"passporNo",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setPassporNo);
			attributeSetterBiConsumers.put(
				"nationalIdentityNo",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setNationalIdentityNo);
			attributeSetterBiConsumers.put(
				"contactHome",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setContactHome);
			attributeSetterBiConsumers.put(
				"contactWork",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setContactWork);
			attributeSetterBiConsumers.put(
				"contactMobile",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setContactMobile);
			attributeSetterBiConsumers.put(
				"email",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setEmail);
			attributeSetterBiConsumers.put(
				"identityNumber",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setIdentityNumber);
			attributeSetterBiConsumers.put(
				"status",
				(BiConsumer<CannabisApplicationIndividualInfo, Integer>)
					CannabisApplicationIndividualInfo::setStatus);
			attributeSetterBiConsumers.put(
				"applicationNumber",
				(BiConsumer<CannabisApplicationIndividualInfo, String>)
					CannabisApplicationIndividualInfo::setApplicationNumber);
			attributeSetterBiConsumers.put(
				"cannabisApplicationId",
				(BiConsumer<CannabisApplicationIndividualInfo, Long>)
					CannabisApplicationIndividualInfo::
						setCannabisApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getIndividualInformationId() {
		return _individualInformationId;
	}

	@Override
	public void setIndividualInformationId(long individualInformationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_individualInformationId = individualInformationId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getFirstName() {
		if (_firstName == null) {
			return "";
		}
		else {
			return _firstName;
		}
	}

	@Override
	public void setFirstName(String firstName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_firstName = firstName;
	}

	@JSON
	@Override
	public String getLastName() {
		if (_lastName == null) {
			return "";
		}
		else {
			return _lastName;
		}
	}

	@Override
	public void setLastName(String lastName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_lastName = lastName;
	}

	@JSON
	@Override
	public String getMiddleName() {
		if (_middleName == null) {
			return "";
		}
		else {
			return _middleName;
		}
	}

	@Override
	public void setMiddleName(String middleName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_middleName = middleName;
	}

	@JSON
	@Override
	public String getOtherName() {
		if (_otherName == null) {
			return "";
		}
		else {
			return _otherName;
		}
	}

	@Override
	public void setOtherName(String otherName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_otherName = otherName;
	}

	@JSON
	@Override
	public String getMaidenName() {
		if (_maidenName == null) {
			return "";
		}
		else {
			return _maidenName;
		}
	}

	@Override
	public void setMaidenName(String maidenName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_maidenName = maidenName;
	}

	@JSON
	@Override
	public String getMotherMaidenName() {
		if (_motherMaidenName == null) {
			return "";
		}
		else {
			return _motherMaidenName;
		}
	}

	@Override
	public void setMotherMaidenName(String motherMaidenName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_motherMaidenName = motherMaidenName;
	}

	@JSON
	@Override
	public String getGender() {
		if (_gender == null) {
			return "";
		}
		else {
			return _gender;
		}
	}

	@Override
	public void setGender(String gender) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_gender = gender;
	}

	@JSON
	@Override
	public String getMaritalStatus() {
		if (_maritalStatus == null) {
			return "";
		}
		else {
			return _maritalStatus;
		}
	}

	@Override
	public void setMaritalStatus(String maritalStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_maritalStatus = maritalStatus;
	}

	@JSON
	@Override
	public Date getDob() {
		return _dob;
	}

	@Override
	public void setDob(Date dob) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dob = dob;
	}

	@JSON
	@Override
	public String getPlaceOfBirth() {
		if (_placeOfBirth == null) {
			return "";
		}
		else {
			return _placeOfBirth;
		}
	}

	@Override
	public void setPlaceOfBirth(String placeOfBirth) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_placeOfBirth = placeOfBirth;
	}

	@JSON
	@Override
	public String getNationality() {
		if (_nationality == null) {
			return "";
		}
		else {
			return _nationality;
		}
	}

	@Override
	public void setNationality(String nationality) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nationality = nationality;
	}

	@JSON
	@Override
	public String getDurationInJamaika() {
		if (_durationInJamaika == null) {
			return "";
		}
		else {
			return _durationInJamaika;
		}
	}

	@Override
	public void setDurationInJamaika(String durationInJamaika) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_durationInJamaika = durationInJamaika;
	}

	@JSON
	@Override
	public String getTrn() {
		if (_trn == null) {
			return "";
		}
		else {
			return _trn;
		}
	}

	@Override
	public void setTrn(String trn) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_trn = trn;
	}

	@JSON
	@Override
	public String getCurrentOccupation() {
		if (_currentOccupation == null) {
			return "";
		}
		else {
			return _currentOccupation;
		}
	}

	@Override
	public void setCurrentOccupation(String currentOccupation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_currentOccupation = currentOccupation;
	}

	@JSON
	@Override
	public String getDrivingLincenseNo() {
		if (_drivingLincenseNo == null) {
			return "";
		}
		else {
			return _drivingLincenseNo;
		}
	}

	@Override
	public void setDrivingLincenseNo(String drivingLincenseNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_drivingLincenseNo = drivingLincenseNo;
	}

	@JSON
	@Override
	public String getPassporNo() {
		if (_passporNo == null) {
			return "";
		}
		else {
			return _passporNo;
		}
	}

	@Override
	public void setPassporNo(String passporNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_passporNo = passporNo;
	}

	@JSON
	@Override
	public String getNationalIdentityNo() {
		if (_nationalIdentityNo == null) {
			return "";
		}
		else {
			return _nationalIdentityNo;
		}
	}

	@Override
	public void setNationalIdentityNo(String nationalIdentityNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nationalIdentityNo = nationalIdentityNo;
	}

	@JSON
	@Override
	public String getContactHome() {
		if (_contactHome == null) {
			return "";
		}
		else {
			return _contactHome;
		}
	}

	@Override
	public void setContactHome(String contactHome) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactHome = contactHome;
	}

	@JSON
	@Override
	public String getContactWork() {
		if (_contactWork == null) {
			return "";
		}
		else {
			return _contactWork;
		}
	}

	@Override
	public void setContactWork(String contactWork) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactWork = contactWork;
	}

	@JSON
	@Override
	public String getContactMobile() {
		if (_contactMobile == null) {
			return "";
		}
		else {
			return _contactMobile;
		}
	}

	@Override
	public void setContactMobile(String contactMobile) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactMobile = contactMobile;
	}

	@JSON
	@Override
	public String getEmail() {
		if (_email == null) {
			return "";
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_email = email;
	}

	@JSON
	@Override
	public String getIdentityNumber() {
		if (_identityNumber == null) {
			return "";
		}
		else {
			return _identityNumber;
		}
	}

	@Override
	public void setIdentityNumber(String identityNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_identityNumber = identityNumber;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_status = status;
	}

	@JSON
	@Override
	public String getApplicationNumber() {
		if (_applicationNumber == null) {
			return "";
		}
		else {
			return _applicationNumber;
		}
	}

	@Override
	public void setApplicationNumber(String applicationNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicationNumber = applicationNumber;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalApplicationNumber() {
		return getColumnOriginalValue("applicationNumber");
	}

	@JSON
	@Override
	public long getCannabisApplicationId() {
		return _cannabisApplicationId;
	}

	@Override
	public void setCannabisApplicationId(long cannabisApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cannabisApplicationId = cannabisApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCannabisApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("cannabisApplicationId"));
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(
				CannabisApplicationIndividualInfo.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), CannabisApplicationIndividualInfo.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CannabisApplicationIndividualInfo toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, CannabisApplicationIndividualInfo>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CannabisApplicationIndividualInfoImpl
			cannabisApplicationIndividualInfoImpl =
				new CannabisApplicationIndividualInfoImpl();

		cannabisApplicationIndividualInfoImpl.setUuid(getUuid());
		cannabisApplicationIndividualInfoImpl.setIndividualInformationId(
			getIndividualInformationId());
		cannabisApplicationIndividualInfoImpl.setGroupId(getGroupId());
		cannabisApplicationIndividualInfoImpl.setCompanyId(getCompanyId());
		cannabisApplicationIndividualInfoImpl.setUserId(getUserId());
		cannabisApplicationIndividualInfoImpl.setUserName(getUserName());
		cannabisApplicationIndividualInfoImpl.setCreateDate(getCreateDate());
		cannabisApplicationIndividualInfoImpl.setModifiedDate(
			getModifiedDate());
		cannabisApplicationIndividualInfoImpl.setFirstName(getFirstName());
		cannabisApplicationIndividualInfoImpl.setLastName(getLastName());
		cannabisApplicationIndividualInfoImpl.setMiddleName(getMiddleName());
		cannabisApplicationIndividualInfoImpl.setOtherName(getOtherName());
		cannabisApplicationIndividualInfoImpl.setMaidenName(getMaidenName());
		cannabisApplicationIndividualInfoImpl.setMotherMaidenName(
			getMotherMaidenName());
		cannabisApplicationIndividualInfoImpl.setGender(getGender());
		cannabisApplicationIndividualInfoImpl.setMaritalStatus(
			getMaritalStatus());
		cannabisApplicationIndividualInfoImpl.setDob(getDob());
		cannabisApplicationIndividualInfoImpl.setPlaceOfBirth(
			getPlaceOfBirth());
		cannabisApplicationIndividualInfoImpl.setNationality(getNationality());
		cannabisApplicationIndividualInfoImpl.setDurationInJamaika(
			getDurationInJamaika());
		cannabisApplicationIndividualInfoImpl.setTrn(getTrn());
		cannabisApplicationIndividualInfoImpl.setCurrentOccupation(
			getCurrentOccupation());
		cannabisApplicationIndividualInfoImpl.setDrivingLincenseNo(
			getDrivingLincenseNo());
		cannabisApplicationIndividualInfoImpl.setPassporNo(getPassporNo());
		cannabisApplicationIndividualInfoImpl.setNationalIdentityNo(
			getNationalIdentityNo());
		cannabisApplicationIndividualInfoImpl.setContactHome(getContactHome());
		cannabisApplicationIndividualInfoImpl.setContactWork(getContactWork());
		cannabisApplicationIndividualInfoImpl.setContactMobile(
			getContactMobile());
		cannabisApplicationIndividualInfoImpl.setEmail(getEmail());
		cannabisApplicationIndividualInfoImpl.setIdentityNumber(
			getIdentityNumber());
		cannabisApplicationIndividualInfoImpl.setStatus(getStatus());
		cannabisApplicationIndividualInfoImpl.setApplicationNumber(
			getApplicationNumber());
		cannabisApplicationIndividualInfoImpl.setCannabisApplicationId(
			getCannabisApplicationId());

		cannabisApplicationIndividualInfoImpl.resetOriginalValues();

		return cannabisApplicationIndividualInfoImpl;
	}

	@Override
	public CannabisApplicationIndividualInfo cloneWithOriginalValues() {
		CannabisApplicationIndividualInfoImpl
			cannabisApplicationIndividualInfoImpl =
				new CannabisApplicationIndividualInfoImpl();

		cannabisApplicationIndividualInfoImpl.setUuid(
			this.<String>getColumnOriginalValue("uuid_"));
		cannabisApplicationIndividualInfoImpl.setIndividualInformationId(
			this.<Long>getColumnOriginalValue("individualInformationId"));
		cannabisApplicationIndividualInfoImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		cannabisApplicationIndividualInfoImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		cannabisApplicationIndividualInfoImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		cannabisApplicationIndividualInfoImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		cannabisApplicationIndividualInfoImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		cannabisApplicationIndividualInfoImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		cannabisApplicationIndividualInfoImpl.setFirstName(
			this.<String>getColumnOriginalValue("firstName"));
		cannabisApplicationIndividualInfoImpl.setLastName(
			this.<String>getColumnOriginalValue("lastName"));
		cannabisApplicationIndividualInfoImpl.setMiddleName(
			this.<String>getColumnOriginalValue("middleName"));
		cannabisApplicationIndividualInfoImpl.setOtherName(
			this.<String>getColumnOriginalValue("otherName"));
		cannabisApplicationIndividualInfoImpl.setMaidenName(
			this.<String>getColumnOriginalValue("maidenName"));
		cannabisApplicationIndividualInfoImpl.setMotherMaidenName(
			this.<String>getColumnOriginalValue("motherMaidenName"));
		cannabisApplicationIndividualInfoImpl.setGender(
			this.<String>getColumnOriginalValue("gender"));
		cannabisApplicationIndividualInfoImpl.setMaritalStatus(
			this.<String>getColumnOriginalValue("maritalStatus"));
		cannabisApplicationIndividualInfoImpl.setDob(
			this.<Date>getColumnOriginalValue("dob"));
		cannabisApplicationIndividualInfoImpl.setPlaceOfBirth(
			this.<String>getColumnOriginalValue("placeOfBirth"));
		cannabisApplicationIndividualInfoImpl.setNationality(
			this.<String>getColumnOriginalValue("nationality"));
		cannabisApplicationIndividualInfoImpl.setDurationInJamaika(
			this.<String>getColumnOriginalValue("durationInJamaika"));
		cannabisApplicationIndividualInfoImpl.setTrn(
			this.<String>getColumnOriginalValue("trn"));
		cannabisApplicationIndividualInfoImpl.setCurrentOccupation(
			this.<String>getColumnOriginalValue("currentOccupation"));
		cannabisApplicationIndividualInfoImpl.setDrivingLincenseNo(
			this.<String>getColumnOriginalValue("drivingLincenseNo"));
		cannabisApplicationIndividualInfoImpl.setPassporNo(
			this.<String>getColumnOriginalValue("passporNo"));
		cannabisApplicationIndividualInfoImpl.setNationalIdentityNo(
			this.<String>getColumnOriginalValue("nationalIdentityNo"));
		cannabisApplicationIndividualInfoImpl.setContactHome(
			this.<String>getColumnOriginalValue("contactHome"));
		cannabisApplicationIndividualInfoImpl.setContactWork(
			this.<String>getColumnOriginalValue("contactWork"));
		cannabisApplicationIndividualInfoImpl.setContactMobile(
			this.<String>getColumnOriginalValue("contactMobile"));
		cannabisApplicationIndividualInfoImpl.setEmail(
			this.<String>getColumnOriginalValue("email"));
		cannabisApplicationIndividualInfoImpl.setIdentityNumber(
			this.<String>getColumnOriginalValue("identityNumber"));
		cannabisApplicationIndividualInfoImpl.setStatus(
			this.<Integer>getColumnOriginalValue("status"));
		cannabisApplicationIndividualInfoImpl.setApplicationNumber(
			this.<String>getColumnOriginalValue("applicationNumber"));
		cannabisApplicationIndividualInfoImpl.setCannabisApplicationId(
			this.<Long>getColumnOriginalValue("cannabisApplicationId"));

		return cannabisApplicationIndividualInfoImpl;
	}

	@Override
	public int compareTo(
		CannabisApplicationIndividualInfo cannabisApplicationIndividualInfo) {

		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), cannabisApplicationIndividualInfo.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof CannabisApplicationIndividualInfo)) {
			return false;
		}

		CannabisApplicationIndividualInfo cannabisApplicationIndividualInfo =
			(CannabisApplicationIndividualInfo)object;

		long primaryKey = cannabisApplicationIndividualInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<CannabisApplicationIndividualInfo> toCacheModel() {
		CannabisApplicationIndividualInfoCacheModel
			cannabisApplicationIndividualInfoCacheModel =
				new CannabisApplicationIndividualInfoCacheModel();

		cannabisApplicationIndividualInfoCacheModel.uuid = getUuid();

		String uuid = cannabisApplicationIndividualInfoCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.uuid = null;
		}

		cannabisApplicationIndividualInfoCacheModel.individualInformationId =
			getIndividualInformationId();

		cannabisApplicationIndividualInfoCacheModel.groupId = getGroupId();

		cannabisApplicationIndividualInfoCacheModel.companyId = getCompanyId();

		cannabisApplicationIndividualInfoCacheModel.userId = getUserId();

		cannabisApplicationIndividualInfoCacheModel.userName = getUserName();

		String userName = cannabisApplicationIndividualInfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			cannabisApplicationIndividualInfoCacheModel.createDate =
				createDate.getTime();
		}
		else {
			cannabisApplicationIndividualInfoCacheModel.createDate =
				Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			cannabisApplicationIndividualInfoCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			cannabisApplicationIndividualInfoCacheModel.modifiedDate =
				Long.MIN_VALUE;
		}

		cannabisApplicationIndividualInfoCacheModel.firstName = getFirstName();

		String firstName =
			cannabisApplicationIndividualInfoCacheModel.firstName;

		if ((firstName != null) && (firstName.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.firstName = null;
		}

		cannabisApplicationIndividualInfoCacheModel.lastName = getLastName();

		String lastName = cannabisApplicationIndividualInfoCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.lastName = null;
		}

		cannabisApplicationIndividualInfoCacheModel.middleName =
			getMiddleName();

		String middleName =
			cannabisApplicationIndividualInfoCacheModel.middleName;

		if ((middleName != null) && (middleName.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.middleName = null;
		}

		cannabisApplicationIndividualInfoCacheModel.otherName = getOtherName();

		String otherName =
			cannabisApplicationIndividualInfoCacheModel.otherName;

		if ((otherName != null) && (otherName.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.otherName = null;
		}

		cannabisApplicationIndividualInfoCacheModel.maidenName =
			getMaidenName();

		String maidenName =
			cannabisApplicationIndividualInfoCacheModel.maidenName;

		if ((maidenName != null) && (maidenName.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.maidenName = null;
		}

		cannabisApplicationIndividualInfoCacheModel.motherMaidenName =
			getMotherMaidenName();

		String motherMaidenName =
			cannabisApplicationIndividualInfoCacheModel.motherMaidenName;

		if ((motherMaidenName != null) && (motherMaidenName.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.motherMaidenName = null;
		}

		cannabisApplicationIndividualInfoCacheModel.gender = getGender();

		String gender = cannabisApplicationIndividualInfoCacheModel.gender;

		if ((gender != null) && (gender.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.gender = null;
		}

		cannabisApplicationIndividualInfoCacheModel.maritalStatus =
			getMaritalStatus();

		String maritalStatus =
			cannabisApplicationIndividualInfoCacheModel.maritalStatus;

		if ((maritalStatus != null) && (maritalStatus.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.maritalStatus = null;
		}

		Date dob = getDob();

		if (dob != null) {
			cannabisApplicationIndividualInfoCacheModel.dob = dob.getTime();
		}
		else {
			cannabisApplicationIndividualInfoCacheModel.dob = Long.MIN_VALUE;
		}

		cannabisApplicationIndividualInfoCacheModel.placeOfBirth =
			getPlaceOfBirth();

		String placeOfBirth =
			cannabisApplicationIndividualInfoCacheModel.placeOfBirth;

		if ((placeOfBirth != null) && (placeOfBirth.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.placeOfBirth = null;
		}

		cannabisApplicationIndividualInfoCacheModel.nationality =
			getNationality();

		String nationality =
			cannabisApplicationIndividualInfoCacheModel.nationality;

		if ((nationality != null) && (nationality.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.nationality = null;
		}

		cannabisApplicationIndividualInfoCacheModel.durationInJamaika =
			getDurationInJamaika();

		String durationInJamaika =
			cannabisApplicationIndividualInfoCacheModel.durationInJamaika;

		if ((durationInJamaika != null) && (durationInJamaika.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.durationInJamaika =
				null;
		}

		cannabisApplicationIndividualInfoCacheModel.trn = getTrn();

		String trn = cannabisApplicationIndividualInfoCacheModel.trn;

		if ((trn != null) && (trn.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.trn = null;
		}

		cannabisApplicationIndividualInfoCacheModel.currentOccupation =
			getCurrentOccupation();

		String currentOccupation =
			cannabisApplicationIndividualInfoCacheModel.currentOccupation;

		if ((currentOccupation != null) && (currentOccupation.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.currentOccupation =
				null;
		}

		cannabisApplicationIndividualInfoCacheModel.drivingLincenseNo =
			getDrivingLincenseNo();

		String drivingLincenseNo =
			cannabisApplicationIndividualInfoCacheModel.drivingLincenseNo;

		if ((drivingLincenseNo != null) && (drivingLincenseNo.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.drivingLincenseNo =
				null;
		}

		cannabisApplicationIndividualInfoCacheModel.passporNo = getPassporNo();

		String passporNo =
			cannabisApplicationIndividualInfoCacheModel.passporNo;

		if ((passporNo != null) && (passporNo.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.passporNo = null;
		}

		cannabisApplicationIndividualInfoCacheModel.nationalIdentityNo =
			getNationalIdentityNo();

		String nationalIdentityNo =
			cannabisApplicationIndividualInfoCacheModel.nationalIdentityNo;

		if ((nationalIdentityNo != null) &&
			(nationalIdentityNo.length() == 0)) {

			cannabisApplicationIndividualInfoCacheModel.nationalIdentityNo =
				null;
		}

		cannabisApplicationIndividualInfoCacheModel.contactHome =
			getContactHome();

		String contactHome =
			cannabisApplicationIndividualInfoCacheModel.contactHome;

		if ((contactHome != null) && (contactHome.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.contactHome = null;
		}

		cannabisApplicationIndividualInfoCacheModel.contactWork =
			getContactWork();

		String contactWork =
			cannabisApplicationIndividualInfoCacheModel.contactWork;

		if ((contactWork != null) && (contactWork.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.contactWork = null;
		}

		cannabisApplicationIndividualInfoCacheModel.contactMobile =
			getContactMobile();

		String contactMobile =
			cannabisApplicationIndividualInfoCacheModel.contactMobile;

		if ((contactMobile != null) && (contactMobile.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.contactMobile = null;
		}

		cannabisApplicationIndividualInfoCacheModel.email = getEmail();

		String email = cannabisApplicationIndividualInfoCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.email = null;
		}

		cannabisApplicationIndividualInfoCacheModel.identityNumber =
			getIdentityNumber();

		String identityNumber =
			cannabisApplicationIndividualInfoCacheModel.identityNumber;

		if ((identityNumber != null) && (identityNumber.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.identityNumber = null;
		}

		cannabisApplicationIndividualInfoCacheModel.status = getStatus();

		cannabisApplicationIndividualInfoCacheModel.applicationNumber =
			getApplicationNumber();

		String applicationNumber =
			cannabisApplicationIndividualInfoCacheModel.applicationNumber;

		if ((applicationNumber != null) && (applicationNumber.length() == 0)) {
			cannabisApplicationIndividualInfoCacheModel.applicationNumber =
				null;
		}

		cannabisApplicationIndividualInfoCacheModel.cannabisApplicationId =
			getCannabisApplicationId();

		return cannabisApplicationIndividualInfoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<CannabisApplicationIndividualInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry
				<String, Function<CannabisApplicationIndividualInfo, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CannabisApplicationIndividualInfo, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(CannabisApplicationIndividualInfo)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, CannabisApplicationIndividualInfo>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						CannabisApplicationIndividualInfo.class,
						ModelWrapper.class);

	}

	private String _uuid;
	private long _individualInformationId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _firstName;
	private String _lastName;
	private String _middleName;
	private String _otherName;
	private String _maidenName;
	private String _motherMaidenName;
	private String _gender;
	private String _maritalStatus;
	private Date _dob;
	private String _placeOfBirth;
	private String _nationality;
	private String _durationInJamaika;
	private String _trn;
	private String _currentOccupation;
	private String _drivingLincenseNo;
	private String _passporNo;
	private String _nationalIdentityNo;
	private String _contactHome;
	private String _contactWork;
	private String _contactMobile;
	private String _email;
	private String _identityNumber;
	private int _status;
	private String _applicationNumber;
	private long _cannabisApplicationId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<CannabisApplicationIndividualInfo, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((CannabisApplicationIndividualInfo)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put(
			"individualInformationId", _individualInformationId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("firstName", _firstName);
		_columnOriginalValues.put("lastName", _lastName);
		_columnOriginalValues.put("middleName", _middleName);
		_columnOriginalValues.put("otherName", _otherName);
		_columnOriginalValues.put("maidenName", _maidenName);
		_columnOriginalValues.put("motherMaidenName", _motherMaidenName);
		_columnOriginalValues.put("gender", _gender);
		_columnOriginalValues.put("maritalStatus", _maritalStatus);
		_columnOriginalValues.put("dob", _dob);
		_columnOriginalValues.put("placeOfBirth", _placeOfBirth);
		_columnOriginalValues.put("nationality", _nationality);
		_columnOriginalValues.put("durationInJamaika", _durationInJamaika);
		_columnOriginalValues.put("trn", _trn);
		_columnOriginalValues.put("currentOccupation", _currentOccupation);
		_columnOriginalValues.put("drivingLincenseNo", _drivingLincenseNo);
		_columnOriginalValues.put("passporNo", _passporNo);
		_columnOriginalValues.put("nationalIdentityNo", _nationalIdentityNo);
		_columnOriginalValues.put("contactHome", _contactHome);
		_columnOriginalValues.put("contactWork", _contactWork);
		_columnOriginalValues.put("contactMobile", _contactMobile);
		_columnOriginalValues.put("email", _email);
		_columnOriginalValues.put("identityNumber", _identityNumber);
		_columnOriginalValues.put("status", _status);
		_columnOriginalValues.put("applicationNumber", _applicationNumber);
		_columnOriginalValues.put(
			"cannabisApplicationId", _cannabisApplicationId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("individualInformationId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("userId", 16L);

		columnBitmasks.put("userName", 32L);

		columnBitmasks.put("createDate", 64L);

		columnBitmasks.put("modifiedDate", 128L);

		columnBitmasks.put("firstName", 256L);

		columnBitmasks.put("lastName", 512L);

		columnBitmasks.put("middleName", 1024L);

		columnBitmasks.put("otherName", 2048L);

		columnBitmasks.put("maidenName", 4096L);

		columnBitmasks.put("motherMaidenName", 8192L);

		columnBitmasks.put("gender", 16384L);

		columnBitmasks.put("maritalStatus", 32768L);

		columnBitmasks.put("dob", 65536L);

		columnBitmasks.put("placeOfBirth", 131072L);

		columnBitmasks.put("nationality", 262144L);

		columnBitmasks.put("durationInJamaika", 524288L);

		columnBitmasks.put("trn", 1048576L);

		columnBitmasks.put("currentOccupation", 2097152L);

		columnBitmasks.put("drivingLincenseNo", 4194304L);

		columnBitmasks.put("passporNo", 8388608L);

		columnBitmasks.put("nationalIdentityNo", 16777216L);

		columnBitmasks.put("contactHome", 33554432L);

		columnBitmasks.put("contactWork", 67108864L);

		columnBitmasks.put("contactMobile", 134217728L);

		columnBitmasks.put("email", 268435456L);

		columnBitmasks.put("identityNumber", 536870912L);

		columnBitmasks.put("status", 1073741824L);

		columnBitmasks.put("applicationNumber", 2147483648L);

		columnBitmasks.put("cannabisApplicationId", 4294967296L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private CannabisApplicationIndividualInfo _escapedModel;

}