/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.hsra.application.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.hsra.application.service.model.SealedSourcesAdd;
import com.nbp.hsra.application.service.model.SealedSourcesAddModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the SealedSourcesAdd service. Represents a row in the &quot;nbp_hsra_sealed_source&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>SealedSourcesAddModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SealedSourcesAddImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SealedSourcesAddImpl
 * @generated
 */
@JSON(strict = true)
public class SealedSourcesAddModelImpl
	extends BaseModelImpl<SealedSourcesAdd> implements SealedSourcesAddModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a sealed sources add model instance should use the <code>SealedSourcesAdd</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_hsra_sealed_source";

	public static final Object[][] TABLE_COLUMNS = {
		{"sealedSourcesAddId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP},
		{"sealedSourcesRadionu", Types.VARCHAR},
		{"sealedSourcesMaxActivity", Types.VARCHAR},
		{"sealedSourcesActivityDate", Types.TIMESTAMP},
		{"sealedSourcesCategories", Types.VARCHAR},
		{"sealedSourcesUse", Types.VARCHAR}, {"counter", Types.VARCHAR},
		{"hsraApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("sealedSourcesAddId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("sealedSourcesRadionu", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sealedSourcesMaxActivity", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sealedSourcesActivityDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("sealedSourcesCategories", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sealedSourcesUse", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("counter", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("hsraApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_hsra_sealed_source (sealedSourcesAddId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,sealedSourcesRadionu VARCHAR(75) null,sealedSourcesMaxActivity VARCHAR(75) null,sealedSourcesActivityDate DATE null,sealedSourcesCategories VARCHAR(75) null,sealedSourcesUse VARCHAR(75) null,counter VARCHAR(75) null,hsraApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_hsra_sealed_source";

	public static final String ORDER_BY_JPQL =
		" ORDER BY sealedSourcesAdd.createDate ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_hsra_sealed_source.createDate ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long HSRAAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public SealedSourcesAddModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _sealedSourcesAddId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSealedSourcesAddId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _sealedSourcesAddId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SealedSourcesAdd.class;
	}

	@Override
	public String getModelClassName() {
		return SealedSourcesAdd.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<SealedSourcesAdd, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<SealedSourcesAdd, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SealedSourcesAdd, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((SealedSourcesAdd)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<SealedSourcesAdd, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<SealedSourcesAdd, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(SealedSourcesAdd)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<SealedSourcesAdd, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<SealedSourcesAdd, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<SealedSourcesAdd, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<SealedSourcesAdd, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<SealedSourcesAdd, Object>>();

			attributeGetterFunctions.put(
				"sealedSourcesAddId", SealedSourcesAdd::getSealedSourcesAddId);
			attributeGetterFunctions.put(
				"groupId", SealedSourcesAdd::getGroupId);
			attributeGetterFunctions.put(
				"companyId", SealedSourcesAdd::getCompanyId);
			attributeGetterFunctions.put("userId", SealedSourcesAdd::getUserId);
			attributeGetterFunctions.put(
				"userName", SealedSourcesAdd::getUserName);
			attributeGetterFunctions.put(
				"createDate", SealedSourcesAdd::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", SealedSourcesAdd::getModifiedDate);
			attributeGetterFunctions.put(
				"sealedSourcesRadionu",
				SealedSourcesAdd::getSealedSourcesRadionu);
			attributeGetterFunctions.put(
				"sealedSourcesMaxActivity",
				SealedSourcesAdd::getSealedSourcesMaxActivity);
			attributeGetterFunctions.put(
				"sealedSourcesActivityDate",
				SealedSourcesAdd::getSealedSourcesActivityDate);
			attributeGetterFunctions.put(
				"sealedSourcesCategories",
				SealedSourcesAdd::getSealedSourcesCategories);
			attributeGetterFunctions.put(
				"sealedSourcesUse", SealedSourcesAdd::getSealedSourcesUse);
			attributeGetterFunctions.put(
				"counter", SealedSourcesAdd::getCounter);
			attributeGetterFunctions.put(
				"hsraApplicationId", SealedSourcesAdd::getHsraApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<SealedSourcesAdd, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<SealedSourcesAdd, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<SealedSourcesAdd, ?>>();

			attributeSetterBiConsumers.put(
				"sealedSourcesAddId",
				(BiConsumer<SealedSourcesAdd, Long>)
					SealedSourcesAdd::setSealedSourcesAddId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<SealedSourcesAdd, Long>)
					SealedSourcesAdd::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<SealedSourcesAdd, Long>)
					SealedSourcesAdd::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<SealedSourcesAdd, Long>)
					SealedSourcesAdd::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<SealedSourcesAdd, String>)
					SealedSourcesAdd::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<SealedSourcesAdd, Date>)
					SealedSourcesAdd::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<SealedSourcesAdd, Date>)
					SealedSourcesAdd::setModifiedDate);
			attributeSetterBiConsumers.put(
				"sealedSourcesRadionu",
				(BiConsumer<SealedSourcesAdd, String>)
					SealedSourcesAdd::setSealedSourcesRadionu);
			attributeSetterBiConsumers.put(
				"sealedSourcesMaxActivity",
				(BiConsumer<SealedSourcesAdd, String>)
					SealedSourcesAdd::setSealedSourcesMaxActivity);
			attributeSetterBiConsumers.put(
				"sealedSourcesActivityDate",
				(BiConsumer<SealedSourcesAdd, Date>)
					SealedSourcesAdd::setSealedSourcesActivityDate);
			attributeSetterBiConsumers.put(
				"sealedSourcesCategories",
				(BiConsumer<SealedSourcesAdd, String>)
					SealedSourcesAdd::setSealedSourcesCategories);
			attributeSetterBiConsumers.put(
				"sealedSourcesUse",
				(BiConsumer<SealedSourcesAdd, String>)
					SealedSourcesAdd::setSealedSourcesUse);
			attributeSetterBiConsumers.put(
				"counter",
				(BiConsumer<SealedSourcesAdd, String>)
					SealedSourcesAdd::setCounter);
			attributeSetterBiConsumers.put(
				"hsraApplicationId",
				(BiConsumer<SealedSourcesAdd, Long>)
					SealedSourcesAdd::setHsraApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getSealedSourcesAddId() {
		return _sealedSourcesAddId;
	}

	@Override
	public void setSealedSourcesAddId(long sealedSourcesAddId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sealedSourcesAddId = sealedSourcesAddId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getSealedSourcesRadionu() {
		if (_sealedSourcesRadionu == null) {
			return "";
		}
		else {
			return _sealedSourcesRadionu;
		}
	}

	@Override
	public void setSealedSourcesRadionu(String sealedSourcesRadionu) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sealedSourcesRadionu = sealedSourcesRadionu;
	}

	@JSON
	@Override
	public String getSealedSourcesMaxActivity() {
		if (_sealedSourcesMaxActivity == null) {
			return "";
		}
		else {
			return _sealedSourcesMaxActivity;
		}
	}

	@Override
	public void setSealedSourcesMaxActivity(String sealedSourcesMaxActivity) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sealedSourcesMaxActivity = sealedSourcesMaxActivity;
	}

	@JSON
	@Override
	public Date getSealedSourcesActivityDate() {
		return _sealedSourcesActivityDate;
	}

	@Override
	public void setSealedSourcesActivityDate(Date sealedSourcesActivityDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sealedSourcesActivityDate = sealedSourcesActivityDate;
	}

	@JSON
	@Override
	public String getSealedSourcesCategories() {
		if (_sealedSourcesCategories == null) {
			return "";
		}
		else {
			return _sealedSourcesCategories;
		}
	}

	@Override
	public void setSealedSourcesCategories(String sealedSourcesCategories) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sealedSourcesCategories = sealedSourcesCategories;
	}

	@JSON
	@Override
	public String getSealedSourcesUse() {
		if (_sealedSourcesUse == null) {
			return "";
		}
		else {
			return _sealedSourcesUse;
		}
	}

	@Override
	public void setSealedSourcesUse(String sealedSourcesUse) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sealedSourcesUse = sealedSourcesUse;
	}

	@JSON
	@Override
	public String getCounter() {
		if (_counter == null) {
			return "";
		}
		else {
			return _counter;
		}
	}

	@Override
	public void setCounter(String counter) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_counter = counter;
	}

	@JSON
	@Override
	public long getHsraApplicationId() {
		return _hsraApplicationId;
	}

	@Override
	public void setHsraApplicationId(long hsraApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_hsraApplicationId = hsraApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalHsraApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("hsraApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), SealedSourcesAdd.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SealedSourcesAdd toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, SealedSourcesAdd>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SealedSourcesAddImpl sealedSourcesAddImpl = new SealedSourcesAddImpl();

		sealedSourcesAddImpl.setSealedSourcesAddId(getSealedSourcesAddId());
		sealedSourcesAddImpl.setGroupId(getGroupId());
		sealedSourcesAddImpl.setCompanyId(getCompanyId());
		sealedSourcesAddImpl.setUserId(getUserId());
		sealedSourcesAddImpl.setUserName(getUserName());
		sealedSourcesAddImpl.setCreateDate(getCreateDate());
		sealedSourcesAddImpl.setModifiedDate(getModifiedDate());
		sealedSourcesAddImpl.setSealedSourcesRadionu(getSealedSourcesRadionu());
		sealedSourcesAddImpl.setSealedSourcesMaxActivity(
			getSealedSourcesMaxActivity());
		sealedSourcesAddImpl.setSealedSourcesActivityDate(
			getSealedSourcesActivityDate());
		sealedSourcesAddImpl.setSealedSourcesCategories(
			getSealedSourcesCategories());
		sealedSourcesAddImpl.setSealedSourcesUse(getSealedSourcesUse());
		sealedSourcesAddImpl.setCounter(getCounter());
		sealedSourcesAddImpl.setHsraApplicationId(getHsraApplicationId());

		sealedSourcesAddImpl.resetOriginalValues();

		return sealedSourcesAddImpl;
	}

	@Override
	public SealedSourcesAdd cloneWithOriginalValues() {
		SealedSourcesAddImpl sealedSourcesAddImpl = new SealedSourcesAddImpl();

		sealedSourcesAddImpl.setSealedSourcesAddId(
			this.<Long>getColumnOriginalValue("sealedSourcesAddId"));
		sealedSourcesAddImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		sealedSourcesAddImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		sealedSourcesAddImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		sealedSourcesAddImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		sealedSourcesAddImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		sealedSourcesAddImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		sealedSourcesAddImpl.setSealedSourcesRadionu(
			this.<String>getColumnOriginalValue("sealedSourcesRadionu"));
		sealedSourcesAddImpl.setSealedSourcesMaxActivity(
			this.<String>getColumnOriginalValue("sealedSourcesMaxActivity"));
		sealedSourcesAddImpl.setSealedSourcesActivityDate(
			this.<Date>getColumnOriginalValue("sealedSourcesActivityDate"));
		sealedSourcesAddImpl.setSealedSourcesCategories(
			this.<String>getColumnOriginalValue("sealedSourcesCategories"));
		sealedSourcesAddImpl.setSealedSourcesUse(
			this.<String>getColumnOriginalValue("sealedSourcesUse"));
		sealedSourcesAddImpl.setCounter(
			this.<String>getColumnOriginalValue("counter"));
		sealedSourcesAddImpl.setHsraApplicationId(
			this.<Long>getColumnOriginalValue("hsraApplicationId"));

		return sealedSourcesAddImpl;
	}

	@Override
	public int compareTo(SealedSourcesAdd sealedSourcesAdd) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), sealedSourcesAdd.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof SealedSourcesAdd)) {
			return false;
		}

		SealedSourcesAdd sealedSourcesAdd = (SealedSourcesAdd)object;

		long primaryKey = sealedSourcesAdd.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<SealedSourcesAdd> toCacheModel() {
		SealedSourcesAddCacheModel sealedSourcesAddCacheModel =
			new SealedSourcesAddCacheModel();

		sealedSourcesAddCacheModel.sealedSourcesAddId = getSealedSourcesAddId();

		sealedSourcesAddCacheModel.groupId = getGroupId();

		sealedSourcesAddCacheModel.companyId = getCompanyId();

		sealedSourcesAddCacheModel.userId = getUserId();

		sealedSourcesAddCacheModel.userName = getUserName();

		String userName = sealedSourcesAddCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			sealedSourcesAddCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			sealedSourcesAddCacheModel.createDate = createDate.getTime();
		}
		else {
			sealedSourcesAddCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			sealedSourcesAddCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			sealedSourcesAddCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		sealedSourcesAddCacheModel.sealedSourcesRadionu =
			getSealedSourcesRadionu();

		String sealedSourcesRadionu =
			sealedSourcesAddCacheModel.sealedSourcesRadionu;

		if ((sealedSourcesRadionu != null) &&
			(sealedSourcesRadionu.length() == 0)) {

			sealedSourcesAddCacheModel.sealedSourcesRadionu = null;
		}

		sealedSourcesAddCacheModel.sealedSourcesMaxActivity =
			getSealedSourcesMaxActivity();

		String sealedSourcesMaxActivity =
			sealedSourcesAddCacheModel.sealedSourcesMaxActivity;

		if ((sealedSourcesMaxActivity != null) &&
			(sealedSourcesMaxActivity.length() == 0)) {

			sealedSourcesAddCacheModel.sealedSourcesMaxActivity = null;
		}

		Date sealedSourcesActivityDate = getSealedSourcesActivityDate();

		if (sealedSourcesActivityDate != null) {
			sealedSourcesAddCacheModel.sealedSourcesActivityDate =
				sealedSourcesActivityDate.getTime();
		}
		else {
			sealedSourcesAddCacheModel.sealedSourcesActivityDate =
				Long.MIN_VALUE;
		}

		sealedSourcesAddCacheModel.sealedSourcesCategories =
			getSealedSourcesCategories();

		String sealedSourcesCategories =
			sealedSourcesAddCacheModel.sealedSourcesCategories;

		if ((sealedSourcesCategories != null) &&
			(sealedSourcesCategories.length() == 0)) {

			sealedSourcesAddCacheModel.sealedSourcesCategories = null;
		}

		sealedSourcesAddCacheModel.sealedSourcesUse = getSealedSourcesUse();

		String sealedSourcesUse = sealedSourcesAddCacheModel.sealedSourcesUse;

		if ((sealedSourcesUse != null) && (sealedSourcesUse.length() == 0)) {
			sealedSourcesAddCacheModel.sealedSourcesUse = null;
		}

		sealedSourcesAddCacheModel.counter = getCounter();

		String counter = sealedSourcesAddCacheModel.counter;

		if ((counter != null) && (counter.length() == 0)) {
			sealedSourcesAddCacheModel.counter = null;
		}

		sealedSourcesAddCacheModel.hsraApplicationId = getHsraApplicationId();

		return sealedSourcesAddCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<SealedSourcesAdd, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<SealedSourcesAdd, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SealedSourcesAdd, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(SealedSourcesAdd)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, SealedSourcesAdd>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					SealedSourcesAdd.class, ModelWrapper.class);

	}

	private long _sealedSourcesAddId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _sealedSourcesRadionu;
	private String _sealedSourcesMaxActivity;
	private Date _sealedSourcesActivityDate;
	private String _sealedSourcesCategories;
	private String _sealedSourcesUse;
	private String _counter;
	private long _hsraApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<SealedSourcesAdd, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((SealedSourcesAdd)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("sealedSourcesAddId", _sealedSourcesAddId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"sealedSourcesRadionu", _sealedSourcesRadionu);
		_columnOriginalValues.put(
			"sealedSourcesMaxActivity", _sealedSourcesMaxActivity);
		_columnOriginalValues.put(
			"sealedSourcesActivityDate", _sealedSourcesActivityDate);
		_columnOriginalValues.put(
			"sealedSourcesCategories", _sealedSourcesCategories);
		_columnOriginalValues.put("sealedSourcesUse", _sealedSourcesUse);
		_columnOriginalValues.put("counter", _counter);
		_columnOriginalValues.put("hsraApplicationId", _hsraApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("sealedSourcesAddId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("sealedSourcesRadionu", 128L);

		columnBitmasks.put("sealedSourcesMaxActivity", 256L);

		columnBitmasks.put("sealedSourcesActivityDate", 512L);

		columnBitmasks.put("sealedSourcesCategories", 1024L);

		columnBitmasks.put("sealedSourcesUse", 2048L);

		columnBitmasks.put("counter", 4096L);

		columnBitmasks.put("hsraApplicationId", 8192L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private SealedSourcesAdd _escapedModel;

}