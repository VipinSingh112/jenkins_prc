/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.hsra.application.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.hsra.application.service.model.QualifedExpertAdd;
import com.nbp.hsra.application.service.model.QualifedExpertAddModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the QualifedExpertAdd service. Represents a row in the &quot;nbp_hsra_qualified_expert_add&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>QualifedExpertAddModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link QualifedExpertAddImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see QualifedExpertAddImpl
 * @generated
 */
@JSON(strict = true)
public class QualifedExpertAddModelImpl
	extends BaseModelImpl<QualifedExpertAdd> implements QualifedExpertAddModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a qualifed expert add model instance should use the <code>QualifedExpertAdd</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_hsra_qualified_expert_add";

	public static final Object[][] TABLE_COLUMNS = {
		{"qualifedExpertAddId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"qualifedName", Types.VARCHAR},
		{"qualifedTitle", Types.VARCHAR}, {"qualifedTelephone", Types.VARCHAR},
		{"qualifedExt", Types.VARCHAR}, {"qualifedFax", Types.VARCHAR},
		{"qualifedEmailAdd", Types.VARCHAR},
		{"qualifedRegistrationNo", Types.VARCHAR},
		{"qualifedExpirationDate", Types.TIMESTAMP}, {"counter", Types.VARCHAR},
		{"hsraApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("qualifedExpertAddId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("qualifedName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("qualifedTitle", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("qualifedTelephone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("qualifedExt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("qualifedFax", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("qualifedEmailAdd", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("qualifedRegistrationNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("qualifedExpirationDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("counter", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("hsraApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_hsra_qualified_expert_add (qualifedExpertAddId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,qualifedName VARCHAR(75) null,qualifedTitle VARCHAR(75) null,qualifedTelephone VARCHAR(75) null,qualifedExt VARCHAR(75) null,qualifedFax VARCHAR(75) null,qualifedEmailAdd VARCHAR(75) null,qualifedRegistrationNo VARCHAR(75) null,qualifedExpirationDate DATE null,counter VARCHAR(75) null,hsraApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_hsra_qualified_expert_add";

	public static final String ORDER_BY_JPQL =
		" ORDER BY qualifedExpertAdd.createDate ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_hsra_qualified_expert_add.createDate ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long HSRAAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public QualifedExpertAddModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _qualifedExpertAddId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setQualifedExpertAddId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _qualifedExpertAddId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return QualifedExpertAdd.class;
	}

	@Override
	public String getModelClassName() {
		return QualifedExpertAdd.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<QualifedExpertAdd, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<QualifedExpertAdd, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<QualifedExpertAdd, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((QualifedExpertAdd)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<QualifedExpertAdd, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<QualifedExpertAdd, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(QualifedExpertAdd)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<QualifedExpertAdd, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<QualifedExpertAdd, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<QualifedExpertAdd, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<QualifedExpertAdd, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<QualifedExpertAdd, Object>>();

			attributeGetterFunctions.put(
				"qualifedExpertAddId",
				QualifedExpertAdd::getQualifedExpertAddId);
			attributeGetterFunctions.put(
				"groupId", QualifedExpertAdd::getGroupId);
			attributeGetterFunctions.put(
				"companyId", QualifedExpertAdd::getCompanyId);
			attributeGetterFunctions.put(
				"userId", QualifedExpertAdd::getUserId);
			attributeGetterFunctions.put(
				"userName", QualifedExpertAdd::getUserName);
			attributeGetterFunctions.put(
				"createDate", QualifedExpertAdd::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", QualifedExpertAdd::getModifiedDate);
			attributeGetterFunctions.put(
				"qualifedName", QualifedExpertAdd::getQualifedName);
			attributeGetterFunctions.put(
				"qualifedTitle", QualifedExpertAdd::getQualifedTitle);
			attributeGetterFunctions.put(
				"qualifedTelephone", QualifedExpertAdd::getQualifedTelephone);
			attributeGetterFunctions.put(
				"qualifedExt", QualifedExpertAdd::getQualifedExt);
			attributeGetterFunctions.put(
				"qualifedFax", QualifedExpertAdd::getQualifedFax);
			attributeGetterFunctions.put(
				"qualifedEmailAdd", QualifedExpertAdd::getQualifedEmailAdd);
			attributeGetterFunctions.put(
				"qualifedRegistrationNo",
				QualifedExpertAdd::getQualifedRegistrationNo);
			attributeGetterFunctions.put(
				"qualifedExpirationDate",
				QualifedExpertAdd::getQualifedExpirationDate);
			attributeGetterFunctions.put(
				"counter", QualifedExpertAdd::getCounter);
			attributeGetterFunctions.put(
				"hsraApplicationId", QualifedExpertAdd::getHsraApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<QualifedExpertAdd, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<QualifedExpertAdd, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<QualifedExpertAdd, ?>>();

			attributeSetterBiConsumers.put(
				"qualifedExpertAddId",
				(BiConsumer<QualifedExpertAdd, Long>)
					QualifedExpertAdd::setQualifedExpertAddId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<QualifedExpertAdd, Long>)
					QualifedExpertAdd::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<QualifedExpertAdd, Long>)
					QualifedExpertAdd::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<QualifedExpertAdd, Long>)
					QualifedExpertAdd::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<QualifedExpertAdd, String>)
					QualifedExpertAdd::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<QualifedExpertAdd, Date>)
					QualifedExpertAdd::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<QualifedExpertAdd, Date>)
					QualifedExpertAdd::setModifiedDate);
			attributeSetterBiConsumers.put(
				"qualifedName",
				(BiConsumer<QualifedExpertAdd, String>)
					QualifedExpertAdd::setQualifedName);
			attributeSetterBiConsumers.put(
				"qualifedTitle",
				(BiConsumer<QualifedExpertAdd, String>)
					QualifedExpertAdd::setQualifedTitle);
			attributeSetterBiConsumers.put(
				"qualifedTelephone",
				(BiConsumer<QualifedExpertAdd, String>)
					QualifedExpertAdd::setQualifedTelephone);
			attributeSetterBiConsumers.put(
				"qualifedExt",
				(BiConsumer<QualifedExpertAdd, String>)
					QualifedExpertAdd::setQualifedExt);
			attributeSetterBiConsumers.put(
				"qualifedFax",
				(BiConsumer<QualifedExpertAdd, String>)
					QualifedExpertAdd::setQualifedFax);
			attributeSetterBiConsumers.put(
				"qualifedEmailAdd",
				(BiConsumer<QualifedExpertAdd, String>)
					QualifedExpertAdd::setQualifedEmailAdd);
			attributeSetterBiConsumers.put(
				"qualifedRegistrationNo",
				(BiConsumer<QualifedExpertAdd, String>)
					QualifedExpertAdd::setQualifedRegistrationNo);
			attributeSetterBiConsumers.put(
				"qualifedExpirationDate",
				(BiConsumer<QualifedExpertAdd, Date>)
					QualifedExpertAdd::setQualifedExpirationDate);
			attributeSetterBiConsumers.put(
				"counter",
				(BiConsumer<QualifedExpertAdd, String>)
					QualifedExpertAdd::setCounter);
			attributeSetterBiConsumers.put(
				"hsraApplicationId",
				(BiConsumer<QualifedExpertAdd, Long>)
					QualifedExpertAdd::setHsraApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getQualifedExpertAddId() {
		return _qualifedExpertAddId;
	}

	@Override
	public void setQualifedExpertAddId(long qualifedExpertAddId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualifedExpertAddId = qualifedExpertAddId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getQualifedName() {
		if (_qualifedName == null) {
			return "";
		}
		else {
			return _qualifedName;
		}
	}

	@Override
	public void setQualifedName(String qualifedName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualifedName = qualifedName;
	}

	@JSON
	@Override
	public String getQualifedTitle() {
		if (_qualifedTitle == null) {
			return "";
		}
		else {
			return _qualifedTitle;
		}
	}

	@Override
	public void setQualifedTitle(String qualifedTitle) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualifedTitle = qualifedTitle;
	}

	@JSON
	@Override
	public String getQualifedTelephone() {
		if (_qualifedTelephone == null) {
			return "";
		}
		else {
			return _qualifedTelephone;
		}
	}

	@Override
	public void setQualifedTelephone(String qualifedTelephone) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualifedTelephone = qualifedTelephone;
	}

	@JSON
	@Override
	public String getQualifedExt() {
		if (_qualifedExt == null) {
			return "";
		}
		else {
			return _qualifedExt;
		}
	}

	@Override
	public void setQualifedExt(String qualifedExt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualifedExt = qualifedExt;
	}

	@JSON
	@Override
	public String getQualifedFax() {
		if (_qualifedFax == null) {
			return "";
		}
		else {
			return _qualifedFax;
		}
	}

	@Override
	public void setQualifedFax(String qualifedFax) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualifedFax = qualifedFax;
	}

	@JSON
	@Override
	public String getQualifedEmailAdd() {
		if (_qualifedEmailAdd == null) {
			return "";
		}
		else {
			return _qualifedEmailAdd;
		}
	}

	@Override
	public void setQualifedEmailAdd(String qualifedEmailAdd) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualifedEmailAdd = qualifedEmailAdd;
	}

	@JSON
	@Override
	public String getQualifedRegistrationNo() {
		if (_qualifedRegistrationNo == null) {
			return "";
		}
		else {
			return _qualifedRegistrationNo;
		}
	}

	@Override
	public void setQualifedRegistrationNo(String qualifedRegistrationNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualifedRegistrationNo = qualifedRegistrationNo;
	}

	@JSON
	@Override
	public Date getQualifedExpirationDate() {
		return _qualifedExpirationDate;
	}

	@Override
	public void setQualifedExpirationDate(Date qualifedExpirationDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualifedExpirationDate = qualifedExpirationDate;
	}

	@JSON
	@Override
	public String getCounter() {
		if (_counter == null) {
			return "";
		}
		else {
			return _counter;
		}
	}

	@Override
	public void setCounter(String counter) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_counter = counter;
	}

	@JSON
	@Override
	public long getHsraApplicationId() {
		return _hsraApplicationId;
	}

	@Override
	public void setHsraApplicationId(long hsraApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_hsraApplicationId = hsraApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalHsraApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("hsraApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), QualifedExpertAdd.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public QualifedExpertAdd toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, QualifedExpertAdd>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		QualifedExpertAddImpl qualifedExpertAddImpl =
			new QualifedExpertAddImpl();

		qualifedExpertAddImpl.setQualifedExpertAddId(getQualifedExpertAddId());
		qualifedExpertAddImpl.setGroupId(getGroupId());
		qualifedExpertAddImpl.setCompanyId(getCompanyId());
		qualifedExpertAddImpl.setUserId(getUserId());
		qualifedExpertAddImpl.setUserName(getUserName());
		qualifedExpertAddImpl.setCreateDate(getCreateDate());
		qualifedExpertAddImpl.setModifiedDate(getModifiedDate());
		qualifedExpertAddImpl.setQualifedName(getQualifedName());
		qualifedExpertAddImpl.setQualifedTitle(getQualifedTitle());
		qualifedExpertAddImpl.setQualifedTelephone(getQualifedTelephone());
		qualifedExpertAddImpl.setQualifedExt(getQualifedExt());
		qualifedExpertAddImpl.setQualifedFax(getQualifedFax());
		qualifedExpertAddImpl.setQualifedEmailAdd(getQualifedEmailAdd());
		qualifedExpertAddImpl.setQualifedRegistrationNo(
			getQualifedRegistrationNo());
		qualifedExpertAddImpl.setQualifedExpirationDate(
			getQualifedExpirationDate());
		qualifedExpertAddImpl.setCounter(getCounter());
		qualifedExpertAddImpl.setHsraApplicationId(getHsraApplicationId());

		qualifedExpertAddImpl.resetOriginalValues();

		return qualifedExpertAddImpl;
	}

	@Override
	public QualifedExpertAdd cloneWithOriginalValues() {
		QualifedExpertAddImpl qualifedExpertAddImpl =
			new QualifedExpertAddImpl();

		qualifedExpertAddImpl.setQualifedExpertAddId(
			this.<Long>getColumnOriginalValue("qualifedExpertAddId"));
		qualifedExpertAddImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		qualifedExpertAddImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		qualifedExpertAddImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		qualifedExpertAddImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		qualifedExpertAddImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		qualifedExpertAddImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		qualifedExpertAddImpl.setQualifedName(
			this.<String>getColumnOriginalValue("qualifedName"));
		qualifedExpertAddImpl.setQualifedTitle(
			this.<String>getColumnOriginalValue("qualifedTitle"));
		qualifedExpertAddImpl.setQualifedTelephone(
			this.<String>getColumnOriginalValue("qualifedTelephone"));
		qualifedExpertAddImpl.setQualifedExt(
			this.<String>getColumnOriginalValue("qualifedExt"));
		qualifedExpertAddImpl.setQualifedFax(
			this.<String>getColumnOriginalValue("qualifedFax"));
		qualifedExpertAddImpl.setQualifedEmailAdd(
			this.<String>getColumnOriginalValue("qualifedEmailAdd"));
		qualifedExpertAddImpl.setQualifedRegistrationNo(
			this.<String>getColumnOriginalValue("qualifedRegistrationNo"));
		qualifedExpertAddImpl.setQualifedExpirationDate(
			this.<Date>getColumnOriginalValue("qualifedExpirationDate"));
		qualifedExpertAddImpl.setCounter(
			this.<String>getColumnOriginalValue("counter"));
		qualifedExpertAddImpl.setHsraApplicationId(
			this.<Long>getColumnOriginalValue("hsraApplicationId"));

		return qualifedExpertAddImpl;
	}

	@Override
	public int compareTo(QualifedExpertAdd qualifedExpertAdd) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), qualifedExpertAdd.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof QualifedExpertAdd)) {
			return false;
		}

		QualifedExpertAdd qualifedExpertAdd = (QualifedExpertAdd)object;

		long primaryKey = qualifedExpertAdd.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<QualifedExpertAdd> toCacheModel() {
		QualifedExpertAddCacheModel qualifedExpertAddCacheModel =
			new QualifedExpertAddCacheModel();

		qualifedExpertAddCacheModel.qualifedExpertAddId =
			getQualifedExpertAddId();

		qualifedExpertAddCacheModel.groupId = getGroupId();

		qualifedExpertAddCacheModel.companyId = getCompanyId();

		qualifedExpertAddCacheModel.userId = getUserId();

		qualifedExpertAddCacheModel.userName = getUserName();

		String userName = qualifedExpertAddCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			qualifedExpertAddCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			qualifedExpertAddCacheModel.createDate = createDate.getTime();
		}
		else {
			qualifedExpertAddCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			qualifedExpertAddCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			qualifedExpertAddCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		qualifedExpertAddCacheModel.qualifedName = getQualifedName();

		String qualifedName = qualifedExpertAddCacheModel.qualifedName;

		if ((qualifedName != null) && (qualifedName.length() == 0)) {
			qualifedExpertAddCacheModel.qualifedName = null;
		}

		qualifedExpertAddCacheModel.qualifedTitle = getQualifedTitle();

		String qualifedTitle = qualifedExpertAddCacheModel.qualifedTitle;

		if ((qualifedTitle != null) && (qualifedTitle.length() == 0)) {
			qualifedExpertAddCacheModel.qualifedTitle = null;
		}

		qualifedExpertAddCacheModel.qualifedTelephone = getQualifedTelephone();

		String qualifedTelephone =
			qualifedExpertAddCacheModel.qualifedTelephone;

		if ((qualifedTelephone != null) && (qualifedTelephone.length() == 0)) {
			qualifedExpertAddCacheModel.qualifedTelephone = null;
		}

		qualifedExpertAddCacheModel.qualifedExt = getQualifedExt();

		String qualifedExt = qualifedExpertAddCacheModel.qualifedExt;

		if ((qualifedExt != null) && (qualifedExt.length() == 0)) {
			qualifedExpertAddCacheModel.qualifedExt = null;
		}

		qualifedExpertAddCacheModel.qualifedFax = getQualifedFax();

		String qualifedFax = qualifedExpertAddCacheModel.qualifedFax;

		if ((qualifedFax != null) && (qualifedFax.length() == 0)) {
			qualifedExpertAddCacheModel.qualifedFax = null;
		}

		qualifedExpertAddCacheModel.qualifedEmailAdd = getQualifedEmailAdd();

		String qualifedEmailAdd = qualifedExpertAddCacheModel.qualifedEmailAdd;

		if ((qualifedEmailAdd != null) && (qualifedEmailAdd.length() == 0)) {
			qualifedExpertAddCacheModel.qualifedEmailAdd = null;
		}

		qualifedExpertAddCacheModel.qualifedRegistrationNo =
			getQualifedRegistrationNo();

		String qualifedRegistrationNo =
			qualifedExpertAddCacheModel.qualifedRegistrationNo;

		if ((qualifedRegistrationNo != null) &&
			(qualifedRegistrationNo.length() == 0)) {

			qualifedExpertAddCacheModel.qualifedRegistrationNo = null;
		}

		Date qualifedExpirationDate = getQualifedExpirationDate();

		if (qualifedExpirationDate != null) {
			qualifedExpertAddCacheModel.qualifedExpirationDate =
				qualifedExpirationDate.getTime();
		}
		else {
			qualifedExpertAddCacheModel.qualifedExpirationDate = Long.MIN_VALUE;
		}

		qualifedExpertAddCacheModel.counter = getCounter();

		String counter = qualifedExpertAddCacheModel.counter;

		if ((counter != null) && (counter.length() == 0)) {
			qualifedExpertAddCacheModel.counter = null;
		}

		qualifedExpertAddCacheModel.hsraApplicationId = getHsraApplicationId();

		return qualifedExpertAddCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<QualifedExpertAdd, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<QualifedExpertAdd, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<QualifedExpertAdd, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(QualifedExpertAdd)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, QualifedExpertAdd>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					QualifedExpertAdd.class, ModelWrapper.class);

	}

	private long _qualifedExpertAddId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _qualifedName;
	private String _qualifedTitle;
	private String _qualifedTelephone;
	private String _qualifedExt;
	private String _qualifedFax;
	private String _qualifedEmailAdd;
	private String _qualifedRegistrationNo;
	private Date _qualifedExpirationDate;
	private String _counter;
	private long _hsraApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<QualifedExpertAdd, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((QualifedExpertAdd)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("qualifedExpertAddId", _qualifedExpertAddId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("qualifedName", _qualifedName);
		_columnOriginalValues.put("qualifedTitle", _qualifedTitle);
		_columnOriginalValues.put("qualifedTelephone", _qualifedTelephone);
		_columnOriginalValues.put("qualifedExt", _qualifedExt);
		_columnOriginalValues.put("qualifedFax", _qualifedFax);
		_columnOriginalValues.put("qualifedEmailAdd", _qualifedEmailAdd);
		_columnOriginalValues.put(
			"qualifedRegistrationNo", _qualifedRegistrationNo);
		_columnOriginalValues.put(
			"qualifedExpirationDate", _qualifedExpirationDate);
		_columnOriginalValues.put("counter", _counter);
		_columnOriginalValues.put("hsraApplicationId", _hsraApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("qualifedExpertAddId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("qualifedName", 128L);

		columnBitmasks.put("qualifedTitle", 256L);

		columnBitmasks.put("qualifedTelephone", 512L);

		columnBitmasks.put("qualifedExt", 1024L);

		columnBitmasks.put("qualifedFax", 2048L);

		columnBitmasks.put("qualifedEmailAdd", 4096L);

		columnBitmasks.put("qualifedRegistrationNo", 8192L);

		columnBitmasks.put("qualifedExpirationDate", 16384L);

		columnBitmasks.put("counter", 32768L);

		columnBitmasks.put("hsraApplicationId", 65536L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private QualifedExpertAdd _escapedModel;

}