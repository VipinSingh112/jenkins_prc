/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.hsra.application.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.hsra.application.service.model.RadiationSafetyLowRisk;
import com.nbp.hsra.application.service.model.RadiationSafetyLowRiskModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the RadiationSafetyLowRisk service. Represents a row in the &quot;nbp_hsra_low_risk_safety&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>RadiationSafetyLowRiskModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RadiationSafetyLowRiskImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see RadiationSafetyLowRiskImpl
 * @generated
 */
@JSON(strict = true)
public class RadiationSafetyLowRiskModelImpl
	extends BaseModelImpl<RadiationSafetyLowRisk>
	implements RadiationSafetyLowRiskModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a radiation safety low risk model instance should use the <code>RadiationSafetyLowRisk</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_hsra_low_risk_safety";

	public static final Object[][] TABLE_COLUMNS = {
		{"radiationSafetyLowRiskId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"appendixRsoName", Types.VARCHAR},
		{"appendixRsoTitle", Types.VARCHAR},
		{"appendixRsoTeleNo", Types.VARCHAR}, {"appendixRsoExt", Types.VARCHAR},
		{"appendixRsoFax", Types.VARCHAR}, {"appendixRsoEmail", Types.VARCHAR},
		{"appendixRsoDetails", Types.VARCHAR},
		{"qualifiedAppendixName", Types.VARCHAR},
		{"qualifiedAppendixTitle", Types.VARCHAR},
		{"qualifiedAppendixTele", Types.VARCHAR},
		{"qualifiedAppendixExt", Types.VARCHAR},
		{"qualifiedAppendixFax", Types.VARCHAR},
		{"qualifiedAppendixEmail", Types.VARCHAR},
		{"qualifiedAppendixRegstNo", Types.VARCHAR},
		{"qualifiedAppendixDate", Types.TIMESTAMP},
		{"qualifiedAppendixDetails", Types.VARCHAR},
		{"monitoringExposure", Types.VARCHAR}, {"recordSystem", Types.VARCHAR},
		{"securityAccess", Types.VARCHAR},
		{"trainingInformation", Types.VARCHAR}, {"leakTesting", Types.VARCHAR},
		{"emergencyProcedures", Types.VARCHAR},
		{"managementSourcesDis", Types.VARCHAR},
		{"hsraApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("radiationSafetyLowRiskId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("appendixRsoName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("appendixRsoTitle", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("appendixRsoTeleNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("appendixRsoExt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("appendixRsoFax", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("appendixRsoEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("appendixRsoDetails", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("qualifiedAppendixName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("qualifiedAppendixTitle", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("qualifiedAppendixTele", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("qualifiedAppendixExt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("qualifiedAppendixFax", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("qualifiedAppendixEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("qualifiedAppendixRegstNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("qualifiedAppendixDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("qualifiedAppendixDetails", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("monitoringExposure", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("recordSystem", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("securityAccess", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("trainingInformation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("leakTesting", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("emergencyProcedures", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("managementSourcesDis", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("hsraApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_hsra_low_risk_safety (radiationSafetyLowRiskId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,appendixRsoName VARCHAR(75) null,appendixRsoTitle VARCHAR(75) null,appendixRsoTeleNo VARCHAR(75) null,appendixRsoExt VARCHAR(75) null,appendixRsoFax VARCHAR(75) null,appendixRsoEmail VARCHAR(75) null,appendixRsoDetails VARCHAR(1000) null,qualifiedAppendixName VARCHAR(75) null,qualifiedAppendixTitle VARCHAR(75) null,qualifiedAppendixTele VARCHAR(75) null,qualifiedAppendixExt VARCHAR(75) null,qualifiedAppendixFax VARCHAR(75) null,qualifiedAppendixEmail VARCHAR(75) null,qualifiedAppendixRegstNo VARCHAR(75) null,qualifiedAppendixDate DATE null,qualifiedAppendixDetails VARCHAR(1000) null,monitoringExposure VARCHAR(1000) null,recordSystem VARCHAR(1000) null,securityAccess VARCHAR(1000) null,trainingInformation VARCHAR(1000) null,leakTesting VARCHAR(1000) null,emergencyProcedures VARCHAR(1000) null,managementSourcesDis VARCHAR(1000) null,hsraApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_hsra_low_risk_safety";

	public static final String ORDER_BY_JPQL =
		" ORDER BY radiationSafetyLowRisk.createDate ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_hsra_low_risk_safety.createDate ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long HSRAAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public RadiationSafetyLowRiskModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _radiationSafetyLowRiskId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setRadiationSafetyLowRiskId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _radiationSafetyLowRiskId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return RadiationSafetyLowRisk.class;
	}

	@Override
	public String getModelClassName() {
		return RadiationSafetyLowRisk.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<RadiationSafetyLowRisk, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<RadiationSafetyLowRisk, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RadiationSafetyLowRisk, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((RadiationSafetyLowRisk)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<RadiationSafetyLowRisk, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<RadiationSafetyLowRisk, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(RadiationSafetyLowRisk)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<RadiationSafetyLowRisk, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<RadiationSafetyLowRisk, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<RadiationSafetyLowRisk, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<RadiationSafetyLowRisk, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<RadiationSafetyLowRisk, Object>>();

			attributeGetterFunctions.put(
				"radiationSafetyLowRiskId",
				RadiationSafetyLowRisk::getRadiationSafetyLowRiskId);
			attributeGetterFunctions.put(
				"groupId", RadiationSafetyLowRisk::getGroupId);
			attributeGetterFunctions.put(
				"companyId", RadiationSafetyLowRisk::getCompanyId);
			attributeGetterFunctions.put(
				"userId", RadiationSafetyLowRisk::getUserId);
			attributeGetterFunctions.put(
				"userName", RadiationSafetyLowRisk::getUserName);
			attributeGetterFunctions.put(
				"createDate", RadiationSafetyLowRisk::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", RadiationSafetyLowRisk::getModifiedDate);
			attributeGetterFunctions.put(
				"appendixRsoName", RadiationSafetyLowRisk::getAppendixRsoName);
			attributeGetterFunctions.put(
				"appendixRsoTitle",
				RadiationSafetyLowRisk::getAppendixRsoTitle);
			attributeGetterFunctions.put(
				"appendixRsoTeleNo",
				RadiationSafetyLowRisk::getAppendixRsoTeleNo);
			attributeGetterFunctions.put(
				"appendixRsoExt", RadiationSafetyLowRisk::getAppendixRsoExt);
			attributeGetterFunctions.put(
				"appendixRsoFax", RadiationSafetyLowRisk::getAppendixRsoFax);
			attributeGetterFunctions.put(
				"appendixRsoEmail",
				RadiationSafetyLowRisk::getAppendixRsoEmail);
			attributeGetterFunctions.put(
				"appendixRsoDetails",
				RadiationSafetyLowRisk::getAppendixRsoDetails);
			attributeGetterFunctions.put(
				"qualifiedAppendixName",
				RadiationSafetyLowRisk::getQualifiedAppendixName);
			attributeGetterFunctions.put(
				"qualifiedAppendixTitle",
				RadiationSafetyLowRisk::getQualifiedAppendixTitle);
			attributeGetterFunctions.put(
				"qualifiedAppendixTele",
				RadiationSafetyLowRisk::getQualifiedAppendixTele);
			attributeGetterFunctions.put(
				"qualifiedAppendixExt",
				RadiationSafetyLowRisk::getQualifiedAppendixExt);
			attributeGetterFunctions.put(
				"qualifiedAppendixFax",
				RadiationSafetyLowRisk::getQualifiedAppendixFax);
			attributeGetterFunctions.put(
				"qualifiedAppendixEmail",
				RadiationSafetyLowRisk::getQualifiedAppendixEmail);
			attributeGetterFunctions.put(
				"qualifiedAppendixRegstNo",
				RadiationSafetyLowRisk::getQualifiedAppendixRegstNo);
			attributeGetterFunctions.put(
				"qualifiedAppendixDate",
				RadiationSafetyLowRisk::getQualifiedAppendixDate);
			attributeGetterFunctions.put(
				"qualifiedAppendixDetails",
				RadiationSafetyLowRisk::getQualifiedAppendixDetails);
			attributeGetterFunctions.put(
				"monitoringExposure",
				RadiationSafetyLowRisk::getMonitoringExposure);
			attributeGetterFunctions.put(
				"recordSystem", RadiationSafetyLowRisk::getRecordSystem);
			attributeGetterFunctions.put(
				"securityAccess", RadiationSafetyLowRisk::getSecurityAccess);
			attributeGetterFunctions.put(
				"trainingInformation",
				RadiationSafetyLowRisk::getTrainingInformation);
			attributeGetterFunctions.put(
				"leakTesting", RadiationSafetyLowRisk::getLeakTesting);
			attributeGetterFunctions.put(
				"emergencyProcedures",
				RadiationSafetyLowRisk::getEmergencyProcedures);
			attributeGetterFunctions.put(
				"managementSourcesDis",
				RadiationSafetyLowRisk::getManagementSourcesDis);
			attributeGetterFunctions.put(
				"hsraApplicationId",
				RadiationSafetyLowRisk::getHsraApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<RadiationSafetyLowRisk, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<RadiationSafetyLowRisk, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<RadiationSafetyLowRisk, ?>>();

			attributeSetterBiConsumers.put(
				"radiationSafetyLowRiskId",
				(BiConsumer<RadiationSafetyLowRisk, Long>)
					RadiationSafetyLowRisk::setRadiationSafetyLowRiskId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<RadiationSafetyLowRisk, Long>)
					RadiationSafetyLowRisk::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<RadiationSafetyLowRisk, Long>)
					RadiationSafetyLowRisk::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<RadiationSafetyLowRisk, Long>)
					RadiationSafetyLowRisk::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<RadiationSafetyLowRisk, Date>)
					RadiationSafetyLowRisk::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<RadiationSafetyLowRisk, Date>)
					RadiationSafetyLowRisk::setModifiedDate);
			attributeSetterBiConsumers.put(
				"appendixRsoName",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setAppendixRsoName);
			attributeSetterBiConsumers.put(
				"appendixRsoTitle",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setAppendixRsoTitle);
			attributeSetterBiConsumers.put(
				"appendixRsoTeleNo",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setAppendixRsoTeleNo);
			attributeSetterBiConsumers.put(
				"appendixRsoExt",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setAppendixRsoExt);
			attributeSetterBiConsumers.put(
				"appendixRsoFax",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setAppendixRsoFax);
			attributeSetterBiConsumers.put(
				"appendixRsoEmail",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setAppendixRsoEmail);
			attributeSetterBiConsumers.put(
				"appendixRsoDetails",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setAppendixRsoDetails);
			attributeSetterBiConsumers.put(
				"qualifiedAppendixName",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setQualifiedAppendixName);
			attributeSetterBiConsumers.put(
				"qualifiedAppendixTitle",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setQualifiedAppendixTitle);
			attributeSetterBiConsumers.put(
				"qualifiedAppendixTele",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setQualifiedAppendixTele);
			attributeSetterBiConsumers.put(
				"qualifiedAppendixExt",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setQualifiedAppendixExt);
			attributeSetterBiConsumers.put(
				"qualifiedAppendixFax",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setQualifiedAppendixFax);
			attributeSetterBiConsumers.put(
				"qualifiedAppendixEmail",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setQualifiedAppendixEmail);
			attributeSetterBiConsumers.put(
				"qualifiedAppendixRegstNo",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setQualifiedAppendixRegstNo);
			attributeSetterBiConsumers.put(
				"qualifiedAppendixDate",
				(BiConsumer<RadiationSafetyLowRisk, Date>)
					RadiationSafetyLowRisk::setQualifiedAppendixDate);
			attributeSetterBiConsumers.put(
				"qualifiedAppendixDetails",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setQualifiedAppendixDetails);
			attributeSetterBiConsumers.put(
				"monitoringExposure",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setMonitoringExposure);
			attributeSetterBiConsumers.put(
				"recordSystem",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setRecordSystem);
			attributeSetterBiConsumers.put(
				"securityAccess",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setSecurityAccess);
			attributeSetterBiConsumers.put(
				"trainingInformation",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setTrainingInformation);
			attributeSetterBiConsumers.put(
				"leakTesting",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setLeakTesting);
			attributeSetterBiConsumers.put(
				"emergencyProcedures",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setEmergencyProcedures);
			attributeSetterBiConsumers.put(
				"managementSourcesDis",
				(BiConsumer<RadiationSafetyLowRisk, String>)
					RadiationSafetyLowRisk::setManagementSourcesDis);
			attributeSetterBiConsumers.put(
				"hsraApplicationId",
				(BiConsumer<RadiationSafetyLowRisk, Long>)
					RadiationSafetyLowRisk::setHsraApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getRadiationSafetyLowRiskId() {
		return _radiationSafetyLowRiskId;
	}

	@Override
	public void setRadiationSafetyLowRiskId(long radiationSafetyLowRiskId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_radiationSafetyLowRiskId = radiationSafetyLowRiskId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getAppendixRsoName() {
		if (_appendixRsoName == null) {
			return "";
		}
		else {
			return _appendixRsoName;
		}
	}

	@Override
	public void setAppendixRsoName(String appendixRsoName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_appendixRsoName = appendixRsoName;
	}

	@JSON
	@Override
	public String getAppendixRsoTitle() {
		if (_appendixRsoTitle == null) {
			return "";
		}
		else {
			return _appendixRsoTitle;
		}
	}

	@Override
	public void setAppendixRsoTitle(String appendixRsoTitle) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_appendixRsoTitle = appendixRsoTitle;
	}

	@JSON
	@Override
	public String getAppendixRsoTeleNo() {
		if (_appendixRsoTeleNo == null) {
			return "";
		}
		else {
			return _appendixRsoTeleNo;
		}
	}

	@Override
	public void setAppendixRsoTeleNo(String appendixRsoTeleNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_appendixRsoTeleNo = appendixRsoTeleNo;
	}

	@JSON
	@Override
	public String getAppendixRsoExt() {
		if (_appendixRsoExt == null) {
			return "";
		}
		else {
			return _appendixRsoExt;
		}
	}

	@Override
	public void setAppendixRsoExt(String appendixRsoExt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_appendixRsoExt = appendixRsoExt;
	}

	@JSON
	@Override
	public String getAppendixRsoFax() {
		if (_appendixRsoFax == null) {
			return "";
		}
		else {
			return _appendixRsoFax;
		}
	}

	@Override
	public void setAppendixRsoFax(String appendixRsoFax) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_appendixRsoFax = appendixRsoFax;
	}

	@JSON
	@Override
	public String getAppendixRsoEmail() {
		if (_appendixRsoEmail == null) {
			return "";
		}
		else {
			return _appendixRsoEmail;
		}
	}

	@Override
	public void setAppendixRsoEmail(String appendixRsoEmail) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_appendixRsoEmail = appendixRsoEmail;
	}

	@JSON
	@Override
	public String getAppendixRsoDetails() {
		if (_appendixRsoDetails == null) {
			return "";
		}
		else {
			return _appendixRsoDetails;
		}
	}

	@Override
	public void setAppendixRsoDetails(String appendixRsoDetails) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_appendixRsoDetails = appendixRsoDetails;
	}

	@JSON
	@Override
	public String getQualifiedAppendixName() {
		if (_qualifiedAppendixName == null) {
			return "";
		}
		else {
			return _qualifiedAppendixName;
		}
	}

	@Override
	public void setQualifiedAppendixName(String qualifiedAppendixName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualifiedAppendixName = qualifiedAppendixName;
	}

	@JSON
	@Override
	public String getQualifiedAppendixTitle() {
		if (_qualifiedAppendixTitle == null) {
			return "";
		}
		else {
			return _qualifiedAppendixTitle;
		}
	}

	@Override
	public void setQualifiedAppendixTitle(String qualifiedAppendixTitle) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualifiedAppendixTitle = qualifiedAppendixTitle;
	}

	@JSON
	@Override
	public String getQualifiedAppendixTele() {
		if (_qualifiedAppendixTele == null) {
			return "";
		}
		else {
			return _qualifiedAppendixTele;
		}
	}

	@Override
	public void setQualifiedAppendixTele(String qualifiedAppendixTele) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualifiedAppendixTele = qualifiedAppendixTele;
	}

	@JSON
	@Override
	public String getQualifiedAppendixExt() {
		if (_qualifiedAppendixExt == null) {
			return "";
		}
		else {
			return _qualifiedAppendixExt;
		}
	}

	@Override
	public void setQualifiedAppendixExt(String qualifiedAppendixExt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualifiedAppendixExt = qualifiedAppendixExt;
	}

	@JSON
	@Override
	public String getQualifiedAppendixFax() {
		if (_qualifiedAppendixFax == null) {
			return "";
		}
		else {
			return _qualifiedAppendixFax;
		}
	}

	@Override
	public void setQualifiedAppendixFax(String qualifiedAppendixFax) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualifiedAppendixFax = qualifiedAppendixFax;
	}

	@JSON
	@Override
	public String getQualifiedAppendixEmail() {
		if (_qualifiedAppendixEmail == null) {
			return "";
		}
		else {
			return _qualifiedAppendixEmail;
		}
	}

	@Override
	public void setQualifiedAppendixEmail(String qualifiedAppendixEmail) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualifiedAppendixEmail = qualifiedAppendixEmail;
	}

	@JSON
	@Override
	public String getQualifiedAppendixRegstNo() {
		if (_qualifiedAppendixRegstNo == null) {
			return "";
		}
		else {
			return _qualifiedAppendixRegstNo;
		}
	}

	@Override
	public void setQualifiedAppendixRegstNo(String qualifiedAppendixRegstNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualifiedAppendixRegstNo = qualifiedAppendixRegstNo;
	}

	@JSON
	@Override
	public Date getQualifiedAppendixDate() {
		return _qualifiedAppendixDate;
	}

	@Override
	public void setQualifiedAppendixDate(Date qualifiedAppendixDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualifiedAppendixDate = qualifiedAppendixDate;
	}

	@JSON
	@Override
	public String getQualifiedAppendixDetails() {
		if (_qualifiedAppendixDetails == null) {
			return "";
		}
		else {
			return _qualifiedAppendixDetails;
		}
	}

	@Override
	public void setQualifiedAppendixDetails(String qualifiedAppendixDetails) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualifiedAppendixDetails = qualifiedAppendixDetails;
	}

	@JSON
	@Override
	public String getMonitoringExposure() {
		if (_monitoringExposure == null) {
			return "";
		}
		else {
			return _monitoringExposure;
		}
	}

	@Override
	public void setMonitoringExposure(String monitoringExposure) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_monitoringExposure = monitoringExposure;
	}

	@JSON
	@Override
	public String getRecordSystem() {
		if (_recordSystem == null) {
			return "";
		}
		else {
			return _recordSystem;
		}
	}

	@Override
	public void setRecordSystem(String recordSystem) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_recordSystem = recordSystem;
	}

	@JSON
	@Override
	public String getSecurityAccess() {
		if (_securityAccess == null) {
			return "";
		}
		else {
			return _securityAccess;
		}
	}

	@Override
	public void setSecurityAccess(String securityAccess) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_securityAccess = securityAccess;
	}

	@JSON
	@Override
	public String getTrainingInformation() {
		if (_trainingInformation == null) {
			return "";
		}
		else {
			return _trainingInformation;
		}
	}

	@Override
	public void setTrainingInformation(String trainingInformation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_trainingInformation = trainingInformation;
	}

	@JSON
	@Override
	public String getLeakTesting() {
		if (_leakTesting == null) {
			return "";
		}
		else {
			return _leakTesting;
		}
	}

	@Override
	public void setLeakTesting(String leakTesting) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_leakTesting = leakTesting;
	}

	@JSON
	@Override
	public String getEmergencyProcedures() {
		if (_emergencyProcedures == null) {
			return "";
		}
		else {
			return _emergencyProcedures;
		}
	}

	@Override
	public void setEmergencyProcedures(String emergencyProcedures) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_emergencyProcedures = emergencyProcedures;
	}

	@JSON
	@Override
	public String getManagementSourcesDis() {
		if (_managementSourcesDis == null) {
			return "";
		}
		else {
			return _managementSourcesDis;
		}
	}

	@Override
	public void setManagementSourcesDis(String managementSourcesDis) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_managementSourcesDis = managementSourcesDis;
	}

	@JSON
	@Override
	public long getHsraApplicationId() {
		return _hsraApplicationId;
	}

	@Override
	public void setHsraApplicationId(long hsraApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_hsraApplicationId = hsraApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalHsraApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("hsraApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), RadiationSafetyLowRisk.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public RadiationSafetyLowRisk toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, RadiationSafetyLowRisk>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RadiationSafetyLowRiskImpl radiationSafetyLowRiskImpl =
			new RadiationSafetyLowRiskImpl();

		radiationSafetyLowRiskImpl.setRadiationSafetyLowRiskId(
			getRadiationSafetyLowRiskId());
		radiationSafetyLowRiskImpl.setGroupId(getGroupId());
		radiationSafetyLowRiskImpl.setCompanyId(getCompanyId());
		radiationSafetyLowRiskImpl.setUserId(getUserId());
		radiationSafetyLowRiskImpl.setUserName(getUserName());
		radiationSafetyLowRiskImpl.setCreateDate(getCreateDate());
		radiationSafetyLowRiskImpl.setModifiedDate(getModifiedDate());
		radiationSafetyLowRiskImpl.setAppendixRsoName(getAppendixRsoName());
		radiationSafetyLowRiskImpl.setAppendixRsoTitle(getAppendixRsoTitle());
		radiationSafetyLowRiskImpl.setAppendixRsoTeleNo(getAppendixRsoTeleNo());
		radiationSafetyLowRiskImpl.setAppendixRsoExt(getAppendixRsoExt());
		radiationSafetyLowRiskImpl.setAppendixRsoFax(getAppendixRsoFax());
		radiationSafetyLowRiskImpl.setAppendixRsoEmail(getAppendixRsoEmail());
		radiationSafetyLowRiskImpl.setAppendixRsoDetails(
			getAppendixRsoDetails());
		radiationSafetyLowRiskImpl.setQualifiedAppendixName(
			getQualifiedAppendixName());
		radiationSafetyLowRiskImpl.setQualifiedAppendixTitle(
			getQualifiedAppendixTitle());
		radiationSafetyLowRiskImpl.setQualifiedAppendixTele(
			getQualifiedAppendixTele());
		radiationSafetyLowRiskImpl.setQualifiedAppendixExt(
			getQualifiedAppendixExt());
		radiationSafetyLowRiskImpl.setQualifiedAppendixFax(
			getQualifiedAppendixFax());
		radiationSafetyLowRiskImpl.setQualifiedAppendixEmail(
			getQualifiedAppendixEmail());
		radiationSafetyLowRiskImpl.setQualifiedAppendixRegstNo(
			getQualifiedAppendixRegstNo());
		radiationSafetyLowRiskImpl.setQualifiedAppendixDate(
			getQualifiedAppendixDate());
		radiationSafetyLowRiskImpl.setQualifiedAppendixDetails(
			getQualifiedAppendixDetails());
		radiationSafetyLowRiskImpl.setMonitoringExposure(
			getMonitoringExposure());
		radiationSafetyLowRiskImpl.setRecordSystem(getRecordSystem());
		radiationSafetyLowRiskImpl.setSecurityAccess(getSecurityAccess());
		radiationSafetyLowRiskImpl.setTrainingInformation(
			getTrainingInformation());
		radiationSafetyLowRiskImpl.setLeakTesting(getLeakTesting());
		radiationSafetyLowRiskImpl.setEmergencyProcedures(
			getEmergencyProcedures());
		radiationSafetyLowRiskImpl.setManagementSourcesDis(
			getManagementSourcesDis());
		radiationSafetyLowRiskImpl.setHsraApplicationId(getHsraApplicationId());

		radiationSafetyLowRiskImpl.resetOriginalValues();

		return radiationSafetyLowRiskImpl;
	}

	@Override
	public RadiationSafetyLowRisk cloneWithOriginalValues() {
		RadiationSafetyLowRiskImpl radiationSafetyLowRiskImpl =
			new RadiationSafetyLowRiskImpl();

		radiationSafetyLowRiskImpl.setRadiationSafetyLowRiskId(
			this.<Long>getColumnOriginalValue("radiationSafetyLowRiskId"));
		radiationSafetyLowRiskImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		radiationSafetyLowRiskImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		radiationSafetyLowRiskImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		radiationSafetyLowRiskImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		radiationSafetyLowRiskImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		radiationSafetyLowRiskImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		radiationSafetyLowRiskImpl.setAppendixRsoName(
			this.<String>getColumnOriginalValue("appendixRsoName"));
		radiationSafetyLowRiskImpl.setAppendixRsoTitle(
			this.<String>getColumnOriginalValue("appendixRsoTitle"));
		radiationSafetyLowRiskImpl.setAppendixRsoTeleNo(
			this.<String>getColumnOriginalValue("appendixRsoTeleNo"));
		radiationSafetyLowRiskImpl.setAppendixRsoExt(
			this.<String>getColumnOriginalValue("appendixRsoExt"));
		radiationSafetyLowRiskImpl.setAppendixRsoFax(
			this.<String>getColumnOriginalValue("appendixRsoFax"));
		radiationSafetyLowRiskImpl.setAppendixRsoEmail(
			this.<String>getColumnOriginalValue("appendixRsoEmail"));
		radiationSafetyLowRiskImpl.setAppendixRsoDetails(
			this.<String>getColumnOriginalValue("appendixRsoDetails"));
		radiationSafetyLowRiskImpl.setQualifiedAppendixName(
			this.<String>getColumnOriginalValue("qualifiedAppendixName"));
		radiationSafetyLowRiskImpl.setQualifiedAppendixTitle(
			this.<String>getColumnOriginalValue("qualifiedAppendixTitle"));
		radiationSafetyLowRiskImpl.setQualifiedAppendixTele(
			this.<String>getColumnOriginalValue("qualifiedAppendixTele"));
		radiationSafetyLowRiskImpl.setQualifiedAppendixExt(
			this.<String>getColumnOriginalValue("qualifiedAppendixExt"));
		radiationSafetyLowRiskImpl.setQualifiedAppendixFax(
			this.<String>getColumnOriginalValue("qualifiedAppendixFax"));
		radiationSafetyLowRiskImpl.setQualifiedAppendixEmail(
			this.<String>getColumnOriginalValue("qualifiedAppendixEmail"));
		radiationSafetyLowRiskImpl.setQualifiedAppendixRegstNo(
			this.<String>getColumnOriginalValue("qualifiedAppendixRegstNo"));
		radiationSafetyLowRiskImpl.setQualifiedAppendixDate(
			this.<Date>getColumnOriginalValue("qualifiedAppendixDate"));
		radiationSafetyLowRiskImpl.setQualifiedAppendixDetails(
			this.<String>getColumnOriginalValue("qualifiedAppendixDetails"));
		radiationSafetyLowRiskImpl.setMonitoringExposure(
			this.<String>getColumnOriginalValue("monitoringExposure"));
		radiationSafetyLowRiskImpl.setRecordSystem(
			this.<String>getColumnOriginalValue("recordSystem"));
		radiationSafetyLowRiskImpl.setSecurityAccess(
			this.<String>getColumnOriginalValue("securityAccess"));
		radiationSafetyLowRiskImpl.setTrainingInformation(
			this.<String>getColumnOriginalValue("trainingInformation"));
		radiationSafetyLowRiskImpl.setLeakTesting(
			this.<String>getColumnOriginalValue("leakTesting"));
		radiationSafetyLowRiskImpl.setEmergencyProcedures(
			this.<String>getColumnOriginalValue("emergencyProcedures"));
		radiationSafetyLowRiskImpl.setManagementSourcesDis(
			this.<String>getColumnOriginalValue("managementSourcesDis"));
		radiationSafetyLowRiskImpl.setHsraApplicationId(
			this.<Long>getColumnOriginalValue("hsraApplicationId"));

		return radiationSafetyLowRiskImpl;
	}

	@Override
	public int compareTo(RadiationSafetyLowRisk radiationSafetyLowRisk) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), radiationSafetyLowRisk.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof RadiationSafetyLowRisk)) {
			return false;
		}

		RadiationSafetyLowRisk radiationSafetyLowRisk =
			(RadiationSafetyLowRisk)object;

		long primaryKey = radiationSafetyLowRisk.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<RadiationSafetyLowRisk> toCacheModel() {
		RadiationSafetyLowRiskCacheModel radiationSafetyLowRiskCacheModel =
			new RadiationSafetyLowRiskCacheModel();

		radiationSafetyLowRiskCacheModel.radiationSafetyLowRiskId =
			getRadiationSafetyLowRiskId();

		radiationSafetyLowRiskCacheModel.groupId = getGroupId();

		radiationSafetyLowRiskCacheModel.companyId = getCompanyId();

		radiationSafetyLowRiskCacheModel.userId = getUserId();

		radiationSafetyLowRiskCacheModel.userName = getUserName();

		String userName = radiationSafetyLowRiskCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			radiationSafetyLowRiskCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			radiationSafetyLowRiskCacheModel.createDate = createDate.getTime();
		}
		else {
			radiationSafetyLowRiskCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			radiationSafetyLowRiskCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			radiationSafetyLowRiskCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		radiationSafetyLowRiskCacheModel.appendixRsoName = getAppendixRsoName();

		String appendixRsoName =
			radiationSafetyLowRiskCacheModel.appendixRsoName;

		if ((appendixRsoName != null) && (appendixRsoName.length() == 0)) {
			radiationSafetyLowRiskCacheModel.appendixRsoName = null;
		}

		radiationSafetyLowRiskCacheModel.appendixRsoTitle =
			getAppendixRsoTitle();

		String appendixRsoTitle =
			radiationSafetyLowRiskCacheModel.appendixRsoTitle;

		if ((appendixRsoTitle != null) && (appendixRsoTitle.length() == 0)) {
			radiationSafetyLowRiskCacheModel.appendixRsoTitle = null;
		}

		radiationSafetyLowRiskCacheModel.appendixRsoTeleNo =
			getAppendixRsoTeleNo();

		String appendixRsoTeleNo =
			radiationSafetyLowRiskCacheModel.appendixRsoTeleNo;

		if ((appendixRsoTeleNo != null) && (appendixRsoTeleNo.length() == 0)) {
			radiationSafetyLowRiskCacheModel.appendixRsoTeleNo = null;
		}

		radiationSafetyLowRiskCacheModel.appendixRsoExt = getAppendixRsoExt();

		String appendixRsoExt = radiationSafetyLowRiskCacheModel.appendixRsoExt;

		if ((appendixRsoExt != null) && (appendixRsoExt.length() == 0)) {
			radiationSafetyLowRiskCacheModel.appendixRsoExt = null;
		}

		radiationSafetyLowRiskCacheModel.appendixRsoFax = getAppendixRsoFax();

		String appendixRsoFax = radiationSafetyLowRiskCacheModel.appendixRsoFax;

		if ((appendixRsoFax != null) && (appendixRsoFax.length() == 0)) {
			radiationSafetyLowRiskCacheModel.appendixRsoFax = null;
		}

		radiationSafetyLowRiskCacheModel.appendixRsoEmail =
			getAppendixRsoEmail();

		String appendixRsoEmail =
			radiationSafetyLowRiskCacheModel.appendixRsoEmail;

		if ((appendixRsoEmail != null) && (appendixRsoEmail.length() == 0)) {
			radiationSafetyLowRiskCacheModel.appendixRsoEmail = null;
		}

		radiationSafetyLowRiskCacheModel.appendixRsoDetails =
			getAppendixRsoDetails();

		String appendixRsoDetails =
			radiationSafetyLowRiskCacheModel.appendixRsoDetails;

		if ((appendixRsoDetails != null) &&
			(appendixRsoDetails.length() == 0)) {

			radiationSafetyLowRiskCacheModel.appendixRsoDetails = null;
		}

		radiationSafetyLowRiskCacheModel.qualifiedAppendixName =
			getQualifiedAppendixName();

		String qualifiedAppendixName =
			radiationSafetyLowRiskCacheModel.qualifiedAppendixName;

		if ((qualifiedAppendixName != null) &&
			(qualifiedAppendixName.length() == 0)) {

			radiationSafetyLowRiskCacheModel.qualifiedAppendixName = null;
		}

		radiationSafetyLowRiskCacheModel.qualifiedAppendixTitle =
			getQualifiedAppendixTitle();

		String qualifiedAppendixTitle =
			radiationSafetyLowRiskCacheModel.qualifiedAppendixTitle;

		if ((qualifiedAppendixTitle != null) &&
			(qualifiedAppendixTitle.length() == 0)) {

			radiationSafetyLowRiskCacheModel.qualifiedAppendixTitle = null;
		}

		radiationSafetyLowRiskCacheModel.qualifiedAppendixTele =
			getQualifiedAppendixTele();

		String qualifiedAppendixTele =
			radiationSafetyLowRiskCacheModel.qualifiedAppendixTele;

		if ((qualifiedAppendixTele != null) &&
			(qualifiedAppendixTele.length() == 0)) {

			radiationSafetyLowRiskCacheModel.qualifiedAppendixTele = null;
		}

		radiationSafetyLowRiskCacheModel.qualifiedAppendixExt =
			getQualifiedAppendixExt();

		String qualifiedAppendixExt =
			radiationSafetyLowRiskCacheModel.qualifiedAppendixExt;

		if ((qualifiedAppendixExt != null) &&
			(qualifiedAppendixExt.length() == 0)) {

			radiationSafetyLowRiskCacheModel.qualifiedAppendixExt = null;
		}

		radiationSafetyLowRiskCacheModel.qualifiedAppendixFax =
			getQualifiedAppendixFax();

		String qualifiedAppendixFax =
			radiationSafetyLowRiskCacheModel.qualifiedAppendixFax;

		if ((qualifiedAppendixFax != null) &&
			(qualifiedAppendixFax.length() == 0)) {

			radiationSafetyLowRiskCacheModel.qualifiedAppendixFax = null;
		}

		radiationSafetyLowRiskCacheModel.qualifiedAppendixEmail =
			getQualifiedAppendixEmail();

		String qualifiedAppendixEmail =
			radiationSafetyLowRiskCacheModel.qualifiedAppendixEmail;

		if ((qualifiedAppendixEmail != null) &&
			(qualifiedAppendixEmail.length() == 0)) {

			radiationSafetyLowRiskCacheModel.qualifiedAppendixEmail = null;
		}

		radiationSafetyLowRiskCacheModel.qualifiedAppendixRegstNo =
			getQualifiedAppendixRegstNo();

		String qualifiedAppendixRegstNo =
			radiationSafetyLowRiskCacheModel.qualifiedAppendixRegstNo;

		if ((qualifiedAppendixRegstNo != null) &&
			(qualifiedAppendixRegstNo.length() == 0)) {

			radiationSafetyLowRiskCacheModel.qualifiedAppendixRegstNo = null;
		}

		Date qualifiedAppendixDate = getQualifiedAppendixDate();

		if (qualifiedAppendixDate != null) {
			radiationSafetyLowRiskCacheModel.qualifiedAppendixDate =
				qualifiedAppendixDate.getTime();
		}
		else {
			radiationSafetyLowRiskCacheModel.qualifiedAppendixDate =
				Long.MIN_VALUE;
		}

		radiationSafetyLowRiskCacheModel.qualifiedAppendixDetails =
			getQualifiedAppendixDetails();

		String qualifiedAppendixDetails =
			radiationSafetyLowRiskCacheModel.qualifiedAppendixDetails;

		if ((qualifiedAppendixDetails != null) &&
			(qualifiedAppendixDetails.length() == 0)) {

			radiationSafetyLowRiskCacheModel.qualifiedAppendixDetails = null;
		}

		radiationSafetyLowRiskCacheModel.monitoringExposure =
			getMonitoringExposure();

		String monitoringExposure =
			radiationSafetyLowRiskCacheModel.monitoringExposure;

		if ((monitoringExposure != null) &&
			(monitoringExposure.length() == 0)) {

			radiationSafetyLowRiskCacheModel.monitoringExposure = null;
		}

		radiationSafetyLowRiskCacheModel.recordSystem = getRecordSystem();

		String recordSystem = radiationSafetyLowRiskCacheModel.recordSystem;

		if ((recordSystem != null) && (recordSystem.length() == 0)) {
			radiationSafetyLowRiskCacheModel.recordSystem = null;
		}

		radiationSafetyLowRiskCacheModel.securityAccess = getSecurityAccess();

		String securityAccess = radiationSafetyLowRiskCacheModel.securityAccess;

		if ((securityAccess != null) && (securityAccess.length() == 0)) {
			radiationSafetyLowRiskCacheModel.securityAccess = null;
		}

		radiationSafetyLowRiskCacheModel.trainingInformation =
			getTrainingInformation();

		String trainingInformation =
			radiationSafetyLowRiskCacheModel.trainingInformation;

		if ((trainingInformation != null) &&
			(trainingInformation.length() == 0)) {

			radiationSafetyLowRiskCacheModel.trainingInformation = null;
		}

		radiationSafetyLowRiskCacheModel.leakTesting = getLeakTesting();

		String leakTesting = radiationSafetyLowRiskCacheModel.leakTesting;

		if ((leakTesting != null) && (leakTesting.length() == 0)) {
			radiationSafetyLowRiskCacheModel.leakTesting = null;
		}

		radiationSafetyLowRiskCacheModel.emergencyProcedures =
			getEmergencyProcedures();

		String emergencyProcedures =
			radiationSafetyLowRiskCacheModel.emergencyProcedures;

		if ((emergencyProcedures != null) &&
			(emergencyProcedures.length() == 0)) {

			radiationSafetyLowRiskCacheModel.emergencyProcedures = null;
		}

		radiationSafetyLowRiskCacheModel.managementSourcesDis =
			getManagementSourcesDis();

		String managementSourcesDis =
			radiationSafetyLowRiskCacheModel.managementSourcesDis;

		if ((managementSourcesDis != null) &&
			(managementSourcesDis.length() == 0)) {

			radiationSafetyLowRiskCacheModel.managementSourcesDis = null;
		}

		radiationSafetyLowRiskCacheModel.hsraApplicationId =
			getHsraApplicationId();

		return radiationSafetyLowRiskCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<RadiationSafetyLowRisk, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<RadiationSafetyLowRisk, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<RadiationSafetyLowRisk, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(RadiationSafetyLowRisk)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, RadiationSafetyLowRisk>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					RadiationSafetyLowRisk.class, ModelWrapper.class);

	}

	private long _radiationSafetyLowRiskId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _appendixRsoName;
	private String _appendixRsoTitle;
	private String _appendixRsoTeleNo;
	private String _appendixRsoExt;
	private String _appendixRsoFax;
	private String _appendixRsoEmail;
	private String _appendixRsoDetails;
	private String _qualifiedAppendixName;
	private String _qualifiedAppendixTitle;
	private String _qualifiedAppendixTele;
	private String _qualifiedAppendixExt;
	private String _qualifiedAppendixFax;
	private String _qualifiedAppendixEmail;
	private String _qualifiedAppendixRegstNo;
	private Date _qualifiedAppendixDate;
	private String _qualifiedAppendixDetails;
	private String _monitoringExposure;
	private String _recordSystem;
	private String _securityAccess;
	private String _trainingInformation;
	private String _leakTesting;
	private String _emergencyProcedures;
	private String _managementSourcesDis;
	private long _hsraApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<RadiationSafetyLowRisk, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((RadiationSafetyLowRisk)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"radiationSafetyLowRiskId", _radiationSafetyLowRiskId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("appendixRsoName", _appendixRsoName);
		_columnOriginalValues.put("appendixRsoTitle", _appendixRsoTitle);
		_columnOriginalValues.put("appendixRsoTeleNo", _appendixRsoTeleNo);
		_columnOriginalValues.put("appendixRsoExt", _appendixRsoExt);
		_columnOriginalValues.put("appendixRsoFax", _appendixRsoFax);
		_columnOriginalValues.put("appendixRsoEmail", _appendixRsoEmail);
		_columnOriginalValues.put("appendixRsoDetails", _appendixRsoDetails);
		_columnOriginalValues.put(
			"qualifiedAppendixName", _qualifiedAppendixName);
		_columnOriginalValues.put(
			"qualifiedAppendixTitle", _qualifiedAppendixTitle);
		_columnOriginalValues.put(
			"qualifiedAppendixTele", _qualifiedAppendixTele);
		_columnOriginalValues.put(
			"qualifiedAppendixExt", _qualifiedAppendixExt);
		_columnOriginalValues.put(
			"qualifiedAppendixFax", _qualifiedAppendixFax);
		_columnOriginalValues.put(
			"qualifiedAppendixEmail", _qualifiedAppendixEmail);
		_columnOriginalValues.put(
			"qualifiedAppendixRegstNo", _qualifiedAppendixRegstNo);
		_columnOriginalValues.put(
			"qualifiedAppendixDate", _qualifiedAppendixDate);
		_columnOriginalValues.put(
			"qualifiedAppendixDetails", _qualifiedAppendixDetails);
		_columnOriginalValues.put("monitoringExposure", _monitoringExposure);
		_columnOriginalValues.put("recordSystem", _recordSystem);
		_columnOriginalValues.put("securityAccess", _securityAccess);
		_columnOriginalValues.put("trainingInformation", _trainingInformation);
		_columnOriginalValues.put("leakTesting", _leakTesting);
		_columnOriginalValues.put("emergencyProcedures", _emergencyProcedures);
		_columnOriginalValues.put(
			"managementSourcesDis", _managementSourcesDis);
		_columnOriginalValues.put("hsraApplicationId", _hsraApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("radiationSafetyLowRiskId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("appendixRsoName", 128L);

		columnBitmasks.put("appendixRsoTitle", 256L);

		columnBitmasks.put("appendixRsoTeleNo", 512L);

		columnBitmasks.put("appendixRsoExt", 1024L);

		columnBitmasks.put("appendixRsoFax", 2048L);

		columnBitmasks.put("appendixRsoEmail", 4096L);

		columnBitmasks.put("appendixRsoDetails", 8192L);

		columnBitmasks.put("qualifiedAppendixName", 16384L);

		columnBitmasks.put("qualifiedAppendixTitle", 32768L);

		columnBitmasks.put("qualifiedAppendixTele", 65536L);

		columnBitmasks.put("qualifiedAppendixExt", 131072L);

		columnBitmasks.put("qualifiedAppendixFax", 262144L);

		columnBitmasks.put("qualifiedAppendixEmail", 524288L);

		columnBitmasks.put("qualifiedAppendixRegstNo", 1048576L);

		columnBitmasks.put("qualifiedAppendixDate", 2097152L);

		columnBitmasks.put("qualifiedAppendixDetails", 4194304L);

		columnBitmasks.put("monitoringExposure", 8388608L);

		columnBitmasks.put("recordSystem", 16777216L);

		columnBitmasks.put("securityAccess", 33554432L);

		columnBitmasks.put("trainingInformation", 67108864L);

		columnBitmasks.put("leakTesting", 134217728L);

		columnBitmasks.put("emergencyProcedures", 268435456L);

		columnBitmasks.put("managementSourcesDis", 536870912L);

		columnBitmasks.put("hsraApplicationId", 1073741824L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private RadiationSafetyLowRisk _escapedModel;

}