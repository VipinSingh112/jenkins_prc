/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.explosives.competency.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.explosives.competency.application.form.service.model.PyrotechnicCompetencyForm;
import com.nbp.explosives.competency.application.form.service.model.PyrotechnicCompetencyFormModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the PyrotechnicCompetencyForm service. Represents a row in the &quot;nbp_pyrotechnic_competency&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>PyrotechnicCompetencyFormModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PyrotechnicCompetencyFormImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PyrotechnicCompetencyFormImpl
 * @generated
 */
@JSON(strict = true)
public class PyrotechnicCompetencyFormModelImpl
	extends BaseModelImpl<PyrotechnicCompetencyForm>
	implements PyrotechnicCompetencyFormModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a pyrotechnic competency form model instance should use the <code>PyrotechnicCompetencyForm</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_pyrotechnic_competency";

	public static final Object[][] TABLE_COLUMNS = {
		{"pyrotechnicCompetencyFormId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"firstNamePyro", Types.VARCHAR}, {"surNamePyro", Types.VARCHAR},
		{"middleNamePyro", Types.VARCHAR}, {"genderPyro", Types.VARCHAR},
		{"officeNumberPyro", Types.VARCHAR}, {"cellNumPyro", Types.VARCHAR},
		{"trnNumPyro", Types.VARCHAR}, {"dateOfBirthPyro", Types.TIMESTAMP},
		{"addressPyro", Types.VARCHAR}, {"educationalBackPyro", Types.VARCHAR},
		{"blastingCoursePyro", Types.VARCHAR}, {"statePyro", Types.VARCHAR},
		{"nameOfCoursePyro", Types.VARCHAR},
		{"courseOrganiserPyro", Types.VARCHAR},
		{"dateAppliPyro", Types.VARCHAR},
		{"explosivesApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("pyrotechnicCompetencyFormId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("firstNamePyro", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("surNamePyro", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("middleNamePyro", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("genderPyro", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("officeNumberPyro", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cellNumPyro", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("trnNumPyro", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dateOfBirthPyro", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("addressPyro", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("educationalBackPyro", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("blastingCoursePyro", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("statePyro", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nameOfCoursePyro", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("courseOrganiserPyro", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dateAppliPyro", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("explosivesApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_pyrotechnic_competency (pyrotechnicCompetencyFormId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,firstNamePyro VARCHAR(75) null,surNamePyro VARCHAR(75) null,middleNamePyro VARCHAR(75) null,genderPyro VARCHAR(75) null,officeNumberPyro VARCHAR(75) null,cellNumPyro VARCHAR(75) null,trnNumPyro VARCHAR(75) null,dateOfBirthPyro DATE null,addressPyro VARCHAR(500) null,educationalBackPyro VARCHAR(75) null,blastingCoursePyro VARCHAR(75) null,statePyro VARCHAR(75) null,nameOfCoursePyro VARCHAR(75) null,courseOrganiserPyro VARCHAR(75) null,dateAppliPyro VARCHAR(75) null,explosivesApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_pyrotechnic_competency";

	public static final String ORDER_BY_JPQL =
		" ORDER BY pyrotechnicCompetencyForm.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_pyrotechnic_competency.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long EXPLOSIVESAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public PyrotechnicCompetencyFormModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _pyrotechnicCompetencyFormId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPyrotechnicCompetencyFormId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _pyrotechnicCompetencyFormId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PyrotechnicCompetencyForm.class;
	}

	@Override
	public String getModelClassName() {
		return PyrotechnicCompetencyForm.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<PyrotechnicCompetencyForm, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<PyrotechnicCompetencyForm, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<PyrotechnicCompetencyForm, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((PyrotechnicCompetencyForm)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<PyrotechnicCompetencyForm, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<PyrotechnicCompetencyForm, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(PyrotechnicCompetencyForm)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<PyrotechnicCompetencyForm, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<PyrotechnicCompetencyForm, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<PyrotechnicCompetencyForm, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<PyrotechnicCompetencyForm, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<PyrotechnicCompetencyForm, Object>>();

			attributeGetterFunctions.put(
				"pyrotechnicCompetencyFormId",
				PyrotechnicCompetencyForm::getPyrotechnicCompetencyFormId);
			attributeGetterFunctions.put(
				"groupId", PyrotechnicCompetencyForm::getGroupId);
			attributeGetterFunctions.put(
				"companyId", PyrotechnicCompetencyForm::getCompanyId);
			attributeGetterFunctions.put(
				"userId", PyrotechnicCompetencyForm::getUserId);
			attributeGetterFunctions.put(
				"userName", PyrotechnicCompetencyForm::getUserName);
			attributeGetterFunctions.put(
				"createDate", PyrotechnicCompetencyForm::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", PyrotechnicCompetencyForm::getModifiedDate);
			attributeGetterFunctions.put(
				"firstNamePyro", PyrotechnicCompetencyForm::getFirstNamePyro);
			attributeGetterFunctions.put(
				"surNamePyro", PyrotechnicCompetencyForm::getSurNamePyro);
			attributeGetterFunctions.put(
				"middleNamePyro", PyrotechnicCompetencyForm::getMiddleNamePyro);
			attributeGetterFunctions.put(
				"genderPyro", PyrotechnicCompetencyForm::getGenderPyro);
			attributeGetterFunctions.put(
				"officeNumberPyro",
				PyrotechnicCompetencyForm::getOfficeNumberPyro);
			attributeGetterFunctions.put(
				"cellNumPyro", PyrotechnicCompetencyForm::getCellNumPyro);
			attributeGetterFunctions.put(
				"trnNumPyro", PyrotechnicCompetencyForm::getTrnNumPyro);
			attributeGetterFunctions.put(
				"dateOfBirthPyro",
				PyrotechnicCompetencyForm::getDateOfBirthPyro);
			attributeGetterFunctions.put(
				"addressPyro", PyrotechnicCompetencyForm::getAddressPyro);
			attributeGetterFunctions.put(
				"educationalBackPyro",
				PyrotechnicCompetencyForm::getEducationalBackPyro);
			attributeGetterFunctions.put(
				"blastingCoursePyro",
				PyrotechnicCompetencyForm::getBlastingCoursePyro);
			attributeGetterFunctions.put(
				"statePyro", PyrotechnicCompetencyForm::getStatePyro);
			attributeGetterFunctions.put(
				"nameOfCoursePyro",
				PyrotechnicCompetencyForm::getNameOfCoursePyro);
			attributeGetterFunctions.put(
				"courseOrganiserPyro",
				PyrotechnicCompetencyForm::getCourseOrganiserPyro);
			attributeGetterFunctions.put(
				"dateAppliPyro", PyrotechnicCompetencyForm::getDateAppliPyro);
			attributeGetterFunctions.put(
				"explosivesApplicationId",
				PyrotechnicCompetencyForm::getExplosivesApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<PyrotechnicCompetencyForm, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<PyrotechnicCompetencyForm, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<PyrotechnicCompetencyForm, ?>>();

			attributeSetterBiConsumers.put(
				"pyrotechnicCompetencyFormId",
				(BiConsumer<PyrotechnicCompetencyForm, Long>)
					PyrotechnicCompetencyForm::setPyrotechnicCompetencyFormId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<PyrotechnicCompetencyForm, Long>)
					PyrotechnicCompetencyForm::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<PyrotechnicCompetencyForm, Long>)
					PyrotechnicCompetencyForm::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<PyrotechnicCompetencyForm, Long>)
					PyrotechnicCompetencyForm::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<PyrotechnicCompetencyForm, String>)
					PyrotechnicCompetencyForm::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<PyrotechnicCompetencyForm, Date>)
					PyrotechnicCompetencyForm::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<PyrotechnicCompetencyForm, Date>)
					PyrotechnicCompetencyForm::setModifiedDate);
			attributeSetterBiConsumers.put(
				"firstNamePyro",
				(BiConsumer<PyrotechnicCompetencyForm, String>)
					PyrotechnicCompetencyForm::setFirstNamePyro);
			attributeSetterBiConsumers.put(
				"surNamePyro",
				(BiConsumer<PyrotechnicCompetencyForm, String>)
					PyrotechnicCompetencyForm::setSurNamePyro);
			attributeSetterBiConsumers.put(
				"middleNamePyro",
				(BiConsumer<PyrotechnicCompetencyForm, String>)
					PyrotechnicCompetencyForm::setMiddleNamePyro);
			attributeSetterBiConsumers.put(
				"genderPyro",
				(BiConsumer<PyrotechnicCompetencyForm, String>)
					PyrotechnicCompetencyForm::setGenderPyro);
			attributeSetterBiConsumers.put(
				"officeNumberPyro",
				(BiConsumer<PyrotechnicCompetencyForm, String>)
					PyrotechnicCompetencyForm::setOfficeNumberPyro);
			attributeSetterBiConsumers.put(
				"cellNumPyro",
				(BiConsumer<PyrotechnicCompetencyForm, String>)
					PyrotechnicCompetencyForm::setCellNumPyro);
			attributeSetterBiConsumers.put(
				"trnNumPyro",
				(BiConsumer<PyrotechnicCompetencyForm, String>)
					PyrotechnicCompetencyForm::setTrnNumPyro);
			attributeSetterBiConsumers.put(
				"dateOfBirthPyro",
				(BiConsumer<PyrotechnicCompetencyForm, Date>)
					PyrotechnicCompetencyForm::setDateOfBirthPyro);
			attributeSetterBiConsumers.put(
				"addressPyro",
				(BiConsumer<PyrotechnicCompetencyForm, String>)
					PyrotechnicCompetencyForm::setAddressPyro);
			attributeSetterBiConsumers.put(
				"educationalBackPyro",
				(BiConsumer<PyrotechnicCompetencyForm, String>)
					PyrotechnicCompetencyForm::setEducationalBackPyro);
			attributeSetterBiConsumers.put(
				"blastingCoursePyro",
				(BiConsumer<PyrotechnicCompetencyForm, String>)
					PyrotechnicCompetencyForm::setBlastingCoursePyro);
			attributeSetterBiConsumers.put(
				"statePyro",
				(BiConsumer<PyrotechnicCompetencyForm, String>)
					PyrotechnicCompetencyForm::setStatePyro);
			attributeSetterBiConsumers.put(
				"nameOfCoursePyro",
				(BiConsumer<PyrotechnicCompetencyForm, String>)
					PyrotechnicCompetencyForm::setNameOfCoursePyro);
			attributeSetterBiConsumers.put(
				"courseOrganiserPyro",
				(BiConsumer<PyrotechnicCompetencyForm, String>)
					PyrotechnicCompetencyForm::setCourseOrganiserPyro);
			attributeSetterBiConsumers.put(
				"dateAppliPyro",
				(BiConsumer<PyrotechnicCompetencyForm, String>)
					PyrotechnicCompetencyForm::setDateAppliPyro);
			attributeSetterBiConsumers.put(
				"explosivesApplicationId",
				(BiConsumer<PyrotechnicCompetencyForm, Long>)
					PyrotechnicCompetencyForm::setExplosivesApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getPyrotechnicCompetencyFormId() {
		return _pyrotechnicCompetencyFormId;
	}

	@Override
	public void setPyrotechnicCompetencyFormId(
		long pyrotechnicCompetencyFormId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pyrotechnicCompetencyFormId = pyrotechnicCompetencyFormId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getFirstNamePyro() {
		if (_firstNamePyro == null) {
			return "";
		}
		else {
			return _firstNamePyro;
		}
	}

	@Override
	public void setFirstNamePyro(String firstNamePyro) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_firstNamePyro = firstNamePyro;
	}

	@JSON
	@Override
	public String getSurNamePyro() {
		if (_surNamePyro == null) {
			return "";
		}
		else {
			return _surNamePyro;
		}
	}

	@Override
	public void setSurNamePyro(String surNamePyro) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_surNamePyro = surNamePyro;
	}

	@JSON
	@Override
	public String getMiddleNamePyro() {
		if (_middleNamePyro == null) {
			return "";
		}
		else {
			return _middleNamePyro;
		}
	}

	@Override
	public void setMiddleNamePyro(String middleNamePyro) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_middleNamePyro = middleNamePyro;
	}

	@JSON
	@Override
	public String getGenderPyro() {
		if (_genderPyro == null) {
			return "";
		}
		else {
			return _genderPyro;
		}
	}

	@Override
	public void setGenderPyro(String genderPyro) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_genderPyro = genderPyro;
	}

	@JSON
	@Override
	public String getOfficeNumberPyro() {
		if (_officeNumberPyro == null) {
			return "";
		}
		else {
			return _officeNumberPyro;
		}
	}

	@Override
	public void setOfficeNumberPyro(String officeNumberPyro) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_officeNumberPyro = officeNumberPyro;
	}

	@JSON
	@Override
	public String getCellNumPyro() {
		if (_cellNumPyro == null) {
			return "";
		}
		else {
			return _cellNumPyro;
		}
	}

	@Override
	public void setCellNumPyro(String cellNumPyro) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cellNumPyro = cellNumPyro;
	}

	@JSON
	@Override
	public String getTrnNumPyro() {
		if (_trnNumPyro == null) {
			return "";
		}
		else {
			return _trnNumPyro;
		}
	}

	@Override
	public void setTrnNumPyro(String trnNumPyro) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_trnNumPyro = trnNumPyro;
	}

	@JSON
	@Override
	public Date getDateOfBirthPyro() {
		return _dateOfBirthPyro;
	}

	@Override
	public void setDateOfBirthPyro(Date dateOfBirthPyro) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dateOfBirthPyro = dateOfBirthPyro;
	}

	@JSON
	@Override
	public String getAddressPyro() {
		if (_addressPyro == null) {
			return "";
		}
		else {
			return _addressPyro;
		}
	}

	@Override
	public void setAddressPyro(String addressPyro) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_addressPyro = addressPyro;
	}

	@JSON
	@Override
	public String getEducationalBackPyro() {
		if (_educationalBackPyro == null) {
			return "";
		}
		else {
			return _educationalBackPyro;
		}
	}

	@Override
	public void setEducationalBackPyro(String educationalBackPyro) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_educationalBackPyro = educationalBackPyro;
	}

	@JSON
	@Override
	public String getBlastingCoursePyro() {
		if (_blastingCoursePyro == null) {
			return "";
		}
		else {
			return _blastingCoursePyro;
		}
	}

	@Override
	public void setBlastingCoursePyro(String blastingCoursePyro) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_blastingCoursePyro = blastingCoursePyro;
	}

	@JSON
	@Override
	public String getStatePyro() {
		if (_statePyro == null) {
			return "";
		}
		else {
			return _statePyro;
		}
	}

	@Override
	public void setStatePyro(String statePyro) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statePyro = statePyro;
	}

	@JSON
	@Override
	public String getNameOfCoursePyro() {
		if (_nameOfCoursePyro == null) {
			return "";
		}
		else {
			return _nameOfCoursePyro;
		}
	}

	@Override
	public void setNameOfCoursePyro(String nameOfCoursePyro) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nameOfCoursePyro = nameOfCoursePyro;
	}

	@JSON
	@Override
	public String getCourseOrganiserPyro() {
		if (_courseOrganiserPyro == null) {
			return "";
		}
		else {
			return _courseOrganiserPyro;
		}
	}

	@Override
	public void setCourseOrganiserPyro(String courseOrganiserPyro) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_courseOrganiserPyro = courseOrganiserPyro;
	}

	@JSON
	@Override
	public String getDateAppliPyro() {
		if (_dateAppliPyro == null) {
			return "";
		}
		else {
			return _dateAppliPyro;
		}
	}

	@Override
	public void setDateAppliPyro(String dateAppliPyro) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dateAppliPyro = dateAppliPyro;
	}

	@JSON
	@Override
	public long getExplosivesApplicationId() {
		return _explosivesApplicationId;
	}

	@Override
	public void setExplosivesApplicationId(long explosivesApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_explosivesApplicationId = explosivesApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalExplosivesApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("explosivesApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), PyrotechnicCompetencyForm.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PyrotechnicCompetencyForm toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, PyrotechnicCompetencyForm>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PyrotechnicCompetencyFormImpl pyrotechnicCompetencyFormImpl =
			new PyrotechnicCompetencyFormImpl();

		pyrotechnicCompetencyFormImpl.setPyrotechnicCompetencyFormId(
			getPyrotechnicCompetencyFormId());
		pyrotechnicCompetencyFormImpl.setGroupId(getGroupId());
		pyrotechnicCompetencyFormImpl.setCompanyId(getCompanyId());
		pyrotechnicCompetencyFormImpl.setUserId(getUserId());
		pyrotechnicCompetencyFormImpl.setUserName(getUserName());
		pyrotechnicCompetencyFormImpl.setCreateDate(getCreateDate());
		pyrotechnicCompetencyFormImpl.setModifiedDate(getModifiedDate());
		pyrotechnicCompetencyFormImpl.setFirstNamePyro(getFirstNamePyro());
		pyrotechnicCompetencyFormImpl.setSurNamePyro(getSurNamePyro());
		pyrotechnicCompetencyFormImpl.setMiddleNamePyro(getMiddleNamePyro());
		pyrotechnicCompetencyFormImpl.setGenderPyro(getGenderPyro());
		pyrotechnicCompetencyFormImpl.setOfficeNumberPyro(
			getOfficeNumberPyro());
		pyrotechnicCompetencyFormImpl.setCellNumPyro(getCellNumPyro());
		pyrotechnicCompetencyFormImpl.setTrnNumPyro(getTrnNumPyro());
		pyrotechnicCompetencyFormImpl.setDateOfBirthPyro(getDateOfBirthPyro());
		pyrotechnicCompetencyFormImpl.setAddressPyro(getAddressPyro());
		pyrotechnicCompetencyFormImpl.setEducationalBackPyro(
			getEducationalBackPyro());
		pyrotechnicCompetencyFormImpl.setBlastingCoursePyro(
			getBlastingCoursePyro());
		pyrotechnicCompetencyFormImpl.setStatePyro(getStatePyro());
		pyrotechnicCompetencyFormImpl.setNameOfCoursePyro(
			getNameOfCoursePyro());
		pyrotechnicCompetencyFormImpl.setCourseOrganiserPyro(
			getCourseOrganiserPyro());
		pyrotechnicCompetencyFormImpl.setDateAppliPyro(getDateAppliPyro());
		pyrotechnicCompetencyFormImpl.setExplosivesApplicationId(
			getExplosivesApplicationId());

		pyrotechnicCompetencyFormImpl.resetOriginalValues();

		return pyrotechnicCompetencyFormImpl;
	}

	@Override
	public PyrotechnicCompetencyForm cloneWithOriginalValues() {
		PyrotechnicCompetencyFormImpl pyrotechnicCompetencyFormImpl =
			new PyrotechnicCompetencyFormImpl();

		pyrotechnicCompetencyFormImpl.setPyrotechnicCompetencyFormId(
			this.<Long>getColumnOriginalValue("pyrotechnicCompetencyFormId"));
		pyrotechnicCompetencyFormImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		pyrotechnicCompetencyFormImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		pyrotechnicCompetencyFormImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		pyrotechnicCompetencyFormImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		pyrotechnicCompetencyFormImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		pyrotechnicCompetencyFormImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		pyrotechnicCompetencyFormImpl.setFirstNamePyro(
			this.<String>getColumnOriginalValue("firstNamePyro"));
		pyrotechnicCompetencyFormImpl.setSurNamePyro(
			this.<String>getColumnOriginalValue("surNamePyro"));
		pyrotechnicCompetencyFormImpl.setMiddleNamePyro(
			this.<String>getColumnOriginalValue("middleNamePyro"));
		pyrotechnicCompetencyFormImpl.setGenderPyro(
			this.<String>getColumnOriginalValue("genderPyro"));
		pyrotechnicCompetencyFormImpl.setOfficeNumberPyro(
			this.<String>getColumnOriginalValue("officeNumberPyro"));
		pyrotechnicCompetencyFormImpl.setCellNumPyro(
			this.<String>getColumnOriginalValue("cellNumPyro"));
		pyrotechnicCompetencyFormImpl.setTrnNumPyro(
			this.<String>getColumnOriginalValue("trnNumPyro"));
		pyrotechnicCompetencyFormImpl.setDateOfBirthPyro(
			this.<Date>getColumnOriginalValue("dateOfBirthPyro"));
		pyrotechnicCompetencyFormImpl.setAddressPyro(
			this.<String>getColumnOriginalValue("addressPyro"));
		pyrotechnicCompetencyFormImpl.setEducationalBackPyro(
			this.<String>getColumnOriginalValue("educationalBackPyro"));
		pyrotechnicCompetencyFormImpl.setBlastingCoursePyro(
			this.<String>getColumnOriginalValue("blastingCoursePyro"));
		pyrotechnicCompetencyFormImpl.setStatePyro(
			this.<String>getColumnOriginalValue("statePyro"));
		pyrotechnicCompetencyFormImpl.setNameOfCoursePyro(
			this.<String>getColumnOriginalValue("nameOfCoursePyro"));
		pyrotechnicCompetencyFormImpl.setCourseOrganiserPyro(
			this.<String>getColumnOriginalValue("courseOrganiserPyro"));
		pyrotechnicCompetencyFormImpl.setDateAppliPyro(
			this.<String>getColumnOriginalValue("dateAppliPyro"));
		pyrotechnicCompetencyFormImpl.setExplosivesApplicationId(
			this.<Long>getColumnOriginalValue("explosivesApplicationId"));

		return pyrotechnicCompetencyFormImpl;
	}

	@Override
	public int compareTo(PyrotechnicCompetencyForm pyrotechnicCompetencyForm) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), pyrotechnicCompetencyForm.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof PyrotechnicCompetencyForm)) {
			return false;
		}

		PyrotechnicCompetencyForm pyrotechnicCompetencyForm =
			(PyrotechnicCompetencyForm)object;

		long primaryKey = pyrotechnicCompetencyForm.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<PyrotechnicCompetencyForm> toCacheModel() {
		PyrotechnicCompetencyFormCacheModel
			pyrotechnicCompetencyFormCacheModel =
				new PyrotechnicCompetencyFormCacheModel();

		pyrotechnicCompetencyFormCacheModel.pyrotechnicCompetencyFormId =
			getPyrotechnicCompetencyFormId();

		pyrotechnicCompetencyFormCacheModel.groupId = getGroupId();

		pyrotechnicCompetencyFormCacheModel.companyId = getCompanyId();

		pyrotechnicCompetencyFormCacheModel.userId = getUserId();

		pyrotechnicCompetencyFormCacheModel.userName = getUserName();

		String userName = pyrotechnicCompetencyFormCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			pyrotechnicCompetencyFormCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			pyrotechnicCompetencyFormCacheModel.createDate =
				createDate.getTime();
		}
		else {
			pyrotechnicCompetencyFormCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			pyrotechnicCompetencyFormCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			pyrotechnicCompetencyFormCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		pyrotechnicCompetencyFormCacheModel.firstNamePyro = getFirstNamePyro();

		String firstNamePyro =
			pyrotechnicCompetencyFormCacheModel.firstNamePyro;

		if ((firstNamePyro != null) && (firstNamePyro.length() == 0)) {
			pyrotechnicCompetencyFormCacheModel.firstNamePyro = null;
		}

		pyrotechnicCompetencyFormCacheModel.surNamePyro = getSurNamePyro();

		String surNamePyro = pyrotechnicCompetencyFormCacheModel.surNamePyro;

		if ((surNamePyro != null) && (surNamePyro.length() == 0)) {
			pyrotechnicCompetencyFormCacheModel.surNamePyro = null;
		}

		pyrotechnicCompetencyFormCacheModel.middleNamePyro =
			getMiddleNamePyro();

		String middleNamePyro =
			pyrotechnicCompetencyFormCacheModel.middleNamePyro;

		if ((middleNamePyro != null) && (middleNamePyro.length() == 0)) {
			pyrotechnicCompetencyFormCacheModel.middleNamePyro = null;
		}

		pyrotechnicCompetencyFormCacheModel.genderPyro = getGenderPyro();

		String genderPyro = pyrotechnicCompetencyFormCacheModel.genderPyro;

		if ((genderPyro != null) && (genderPyro.length() == 0)) {
			pyrotechnicCompetencyFormCacheModel.genderPyro = null;
		}

		pyrotechnicCompetencyFormCacheModel.officeNumberPyro =
			getOfficeNumberPyro();

		String officeNumberPyro =
			pyrotechnicCompetencyFormCacheModel.officeNumberPyro;

		if ((officeNumberPyro != null) && (officeNumberPyro.length() == 0)) {
			pyrotechnicCompetencyFormCacheModel.officeNumberPyro = null;
		}

		pyrotechnicCompetencyFormCacheModel.cellNumPyro = getCellNumPyro();

		String cellNumPyro = pyrotechnicCompetencyFormCacheModel.cellNumPyro;

		if ((cellNumPyro != null) && (cellNumPyro.length() == 0)) {
			pyrotechnicCompetencyFormCacheModel.cellNumPyro = null;
		}

		pyrotechnicCompetencyFormCacheModel.trnNumPyro = getTrnNumPyro();

		String trnNumPyro = pyrotechnicCompetencyFormCacheModel.trnNumPyro;

		if ((trnNumPyro != null) && (trnNumPyro.length() == 0)) {
			pyrotechnicCompetencyFormCacheModel.trnNumPyro = null;
		}

		Date dateOfBirthPyro = getDateOfBirthPyro();

		if (dateOfBirthPyro != null) {
			pyrotechnicCompetencyFormCacheModel.dateOfBirthPyro =
				dateOfBirthPyro.getTime();
		}
		else {
			pyrotechnicCompetencyFormCacheModel.dateOfBirthPyro =
				Long.MIN_VALUE;
		}

		pyrotechnicCompetencyFormCacheModel.addressPyro = getAddressPyro();

		String addressPyro = pyrotechnicCompetencyFormCacheModel.addressPyro;

		if ((addressPyro != null) && (addressPyro.length() == 0)) {
			pyrotechnicCompetencyFormCacheModel.addressPyro = null;
		}

		pyrotechnicCompetencyFormCacheModel.educationalBackPyro =
			getEducationalBackPyro();

		String educationalBackPyro =
			pyrotechnicCompetencyFormCacheModel.educationalBackPyro;

		if ((educationalBackPyro != null) &&
			(educationalBackPyro.length() == 0)) {

			pyrotechnicCompetencyFormCacheModel.educationalBackPyro = null;
		}

		pyrotechnicCompetencyFormCacheModel.blastingCoursePyro =
			getBlastingCoursePyro();

		String blastingCoursePyro =
			pyrotechnicCompetencyFormCacheModel.blastingCoursePyro;

		if ((blastingCoursePyro != null) &&
			(blastingCoursePyro.length() == 0)) {

			pyrotechnicCompetencyFormCacheModel.blastingCoursePyro = null;
		}

		pyrotechnicCompetencyFormCacheModel.statePyro = getStatePyro();

		String statePyro = pyrotechnicCompetencyFormCacheModel.statePyro;

		if ((statePyro != null) && (statePyro.length() == 0)) {
			pyrotechnicCompetencyFormCacheModel.statePyro = null;
		}

		pyrotechnicCompetencyFormCacheModel.nameOfCoursePyro =
			getNameOfCoursePyro();

		String nameOfCoursePyro =
			pyrotechnicCompetencyFormCacheModel.nameOfCoursePyro;

		if ((nameOfCoursePyro != null) && (nameOfCoursePyro.length() == 0)) {
			pyrotechnicCompetencyFormCacheModel.nameOfCoursePyro = null;
		}

		pyrotechnicCompetencyFormCacheModel.courseOrganiserPyro =
			getCourseOrganiserPyro();

		String courseOrganiserPyro =
			pyrotechnicCompetencyFormCacheModel.courseOrganiserPyro;

		if ((courseOrganiserPyro != null) &&
			(courseOrganiserPyro.length() == 0)) {

			pyrotechnicCompetencyFormCacheModel.courseOrganiserPyro = null;
		}

		pyrotechnicCompetencyFormCacheModel.dateAppliPyro = getDateAppliPyro();

		String dateAppliPyro =
			pyrotechnicCompetencyFormCacheModel.dateAppliPyro;

		if ((dateAppliPyro != null) && (dateAppliPyro.length() == 0)) {
			pyrotechnicCompetencyFormCacheModel.dateAppliPyro = null;
		}

		pyrotechnicCompetencyFormCacheModel.explosivesApplicationId =
			getExplosivesApplicationId();

		return pyrotechnicCompetencyFormCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<PyrotechnicCompetencyForm, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<PyrotechnicCompetencyForm, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<PyrotechnicCompetencyForm, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(PyrotechnicCompetencyForm)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, PyrotechnicCompetencyForm>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						PyrotechnicCompetencyForm.class, ModelWrapper.class);

	}

	private long _pyrotechnicCompetencyFormId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _firstNamePyro;
	private String _surNamePyro;
	private String _middleNamePyro;
	private String _genderPyro;
	private String _officeNumberPyro;
	private String _cellNumPyro;
	private String _trnNumPyro;
	private Date _dateOfBirthPyro;
	private String _addressPyro;
	private String _educationalBackPyro;
	private String _blastingCoursePyro;
	private String _statePyro;
	private String _nameOfCoursePyro;
	private String _courseOrganiserPyro;
	private String _dateAppliPyro;
	private long _explosivesApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<PyrotechnicCompetencyForm, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((PyrotechnicCompetencyForm)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"pyrotechnicCompetencyFormId", _pyrotechnicCompetencyFormId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("firstNamePyro", _firstNamePyro);
		_columnOriginalValues.put("surNamePyro", _surNamePyro);
		_columnOriginalValues.put("middleNamePyro", _middleNamePyro);
		_columnOriginalValues.put("genderPyro", _genderPyro);
		_columnOriginalValues.put("officeNumberPyro", _officeNumberPyro);
		_columnOriginalValues.put("cellNumPyro", _cellNumPyro);
		_columnOriginalValues.put("trnNumPyro", _trnNumPyro);
		_columnOriginalValues.put("dateOfBirthPyro", _dateOfBirthPyro);
		_columnOriginalValues.put("addressPyro", _addressPyro);
		_columnOriginalValues.put("educationalBackPyro", _educationalBackPyro);
		_columnOriginalValues.put("blastingCoursePyro", _blastingCoursePyro);
		_columnOriginalValues.put("statePyro", _statePyro);
		_columnOriginalValues.put("nameOfCoursePyro", _nameOfCoursePyro);
		_columnOriginalValues.put("courseOrganiserPyro", _courseOrganiserPyro);
		_columnOriginalValues.put("dateAppliPyro", _dateAppliPyro);
		_columnOriginalValues.put(
			"explosivesApplicationId", _explosivesApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("pyrotechnicCompetencyFormId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("firstNamePyro", 128L);

		columnBitmasks.put("surNamePyro", 256L);

		columnBitmasks.put("middleNamePyro", 512L);

		columnBitmasks.put("genderPyro", 1024L);

		columnBitmasks.put("officeNumberPyro", 2048L);

		columnBitmasks.put("cellNumPyro", 4096L);

		columnBitmasks.put("trnNumPyro", 8192L);

		columnBitmasks.put("dateOfBirthPyro", 16384L);

		columnBitmasks.put("addressPyro", 32768L);

		columnBitmasks.put("educationalBackPyro", 65536L);

		columnBitmasks.put("blastingCoursePyro", 131072L);

		columnBitmasks.put("statePyro", 262144L);

		columnBitmasks.put("nameOfCoursePyro", 524288L);

		columnBitmasks.put("courseOrganiserPyro", 1048576L);

		columnBitmasks.put("dateAppliPyro", 2097152L);

		columnBitmasks.put("explosivesApplicationId", 4194304L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private PyrotechnicCompetencyForm _escapedModel;

}