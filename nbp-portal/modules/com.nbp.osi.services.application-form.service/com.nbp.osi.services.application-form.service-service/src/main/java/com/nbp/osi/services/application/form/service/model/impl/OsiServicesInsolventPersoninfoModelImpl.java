/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.osi.services.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.osi.services.application.form.service.model.OsiServicesInsolventPersoninfo;
import com.nbp.osi.services.application.form.service.model.OsiServicesInsolventPersoninfoModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the OsiServicesInsolventPersoninfo service. Represents a row in the &quot;nbp_osi_services_inso_per&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>OsiServicesInsolventPersoninfoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OsiServicesInsolventPersoninfoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see OsiServicesInsolventPersoninfoImpl
 * @generated
 */
@JSON(strict = true)
public class OsiServicesInsolventPersoninfoModelImpl
	extends BaseModelImpl<OsiServicesInsolventPersoninfo>
	implements OsiServicesInsolventPersoninfoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a osi services insolvent personinfo model instance should use the <code>OsiServicesInsolventPersoninfo</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_osi_services_inso_per";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"osiServicesInsoId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"insolventPersonNature", Types.VARCHAR},
		{"insolventIndiFirstName", Types.VARCHAR},
		{"insolventIndiLastName", Types.VARCHAR},
		{"insolventCompanyName", Types.VARCHAR},
		{"insolventAddress", Types.VARCHAR}, {"insolventParish", Types.VARCHAR},
		{"insolventEmailAddress", Types.VARCHAR},
		{"insolventTelephone", Types.VARCHAR},
		{"insolventApplicationDate", Types.TIMESTAMP},
		{"insolventTrnNumber", Types.VARCHAR},
		{"osiServicesApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("osiServicesInsoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("insolventPersonNature", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insolventIndiFirstName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insolventIndiLastName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insolventCompanyName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insolventAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insolventParish", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insolventEmailAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insolventTelephone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insolventApplicationDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("insolventTrnNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("osiServicesApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_osi_services_inso_per (uuid_ VARCHAR(75) null,osiServicesInsoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,insolventPersonNature VARCHAR(75) null,insolventIndiFirstName VARCHAR(75) null,insolventIndiLastName VARCHAR(75) null,insolventCompanyName VARCHAR(75) null,insolventAddress VARCHAR(500) null,insolventParish VARCHAR(75) null,insolventEmailAddress VARCHAR(75) null,insolventTelephone VARCHAR(75) null,insolventApplicationDate DATE null,insolventTrnNumber VARCHAR(75) null,osiServicesApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_osi_services_inso_per";

	public static final String ORDER_BY_JPQL =
		" ORDER BY osiServicesInsolventPersoninfo.osiServicesInsoId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_osi_services_inso_per.osiServicesInsoId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long OSISERVICESAPPLICATIONID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long OSISERVICESINSOID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public OsiServicesInsolventPersoninfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _osiServicesInsoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setOsiServicesInsoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _osiServicesInsoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return OsiServicesInsolventPersoninfo.class;
	}

	@Override
	public String getModelClassName() {
		return OsiServicesInsolventPersoninfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<OsiServicesInsolventPersoninfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<OsiServicesInsolventPersoninfo, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<OsiServicesInsolventPersoninfo, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(OsiServicesInsolventPersoninfo)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<OsiServicesInsolventPersoninfo, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<OsiServicesInsolventPersoninfo, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(OsiServicesInsolventPersoninfo)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<OsiServicesInsolventPersoninfo, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<OsiServicesInsolventPersoninfo, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<OsiServicesInsolventPersoninfo, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<OsiServicesInsolventPersoninfo, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String,
						 Function<OsiServicesInsolventPersoninfo, Object>>();

			attributeGetterFunctions.put(
				"uuid", OsiServicesInsolventPersoninfo::getUuid);
			attributeGetterFunctions.put(
				"osiServicesInsoId",
				OsiServicesInsolventPersoninfo::getOsiServicesInsoId);
			attributeGetterFunctions.put(
				"groupId", OsiServicesInsolventPersoninfo::getGroupId);
			attributeGetterFunctions.put(
				"companyId", OsiServicesInsolventPersoninfo::getCompanyId);
			attributeGetterFunctions.put(
				"userId", OsiServicesInsolventPersoninfo::getUserId);
			attributeGetterFunctions.put(
				"userName", OsiServicesInsolventPersoninfo::getUserName);
			attributeGetterFunctions.put(
				"createDate", OsiServicesInsolventPersoninfo::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate",
				OsiServicesInsolventPersoninfo::getModifiedDate);
			attributeGetterFunctions.put(
				"insolventPersonNature",
				OsiServicesInsolventPersoninfo::getInsolventPersonNature);
			attributeGetterFunctions.put(
				"insolventIndiFirstName",
				OsiServicesInsolventPersoninfo::getInsolventIndiFirstName);
			attributeGetterFunctions.put(
				"insolventIndiLastName",
				OsiServicesInsolventPersoninfo::getInsolventIndiLastName);
			attributeGetterFunctions.put(
				"insolventCompanyName",
				OsiServicesInsolventPersoninfo::getInsolventCompanyName);
			attributeGetterFunctions.put(
				"insolventAddress",
				OsiServicesInsolventPersoninfo::getInsolventAddress);
			attributeGetterFunctions.put(
				"insolventParish",
				OsiServicesInsolventPersoninfo::getInsolventParish);
			attributeGetterFunctions.put(
				"insolventEmailAddress",
				OsiServicesInsolventPersoninfo::getInsolventEmailAddress);
			attributeGetterFunctions.put(
				"insolventTelephone",
				OsiServicesInsolventPersoninfo::getInsolventTelephone);
			attributeGetterFunctions.put(
				"insolventApplicationDate",
				OsiServicesInsolventPersoninfo::getInsolventApplicationDate);
			attributeGetterFunctions.put(
				"insolventTrnNumber",
				OsiServicesInsolventPersoninfo::getInsolventTrnNumber);
			attributeGetterFunctions.put(
				"osiServicesApplicationId",
				OsiServicesInsolventPersoninfo::getOsiServicesApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<OsiServicesInsolventPersoninfo, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<OsiServicesInsolventPersoninfo, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String,
						 BiConsumer<OsiServicesInsolventPersoninfo, ?>>();

			attributeSetterBiConsumers.put(
				"uuid",
				(BiConsumer<OsiServicesInsolventPersoninfo, String>)
					OsiServicesInsolventPersoninfo::setUuid);
			attributeSetterBiConsumers.put(
				"osiServicesInsoId",
				(BiConsumer<OsiServicesInsolventPersoninfo, Long>)
					OsiServicesInsolventPersoninfo::setOsiServicesInsoId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<OsiServicesInsolventPersoninfo, Long>)
					OsiServicesInsolventPersoninfo::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<OsiServicesInsolventPersoninfo, Long>)
					OsiServicesInsolventPersoninfo::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<OsiServicesInsolventPersoninfo, Long>)
					OsiServicesInsolventPersoninfo::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<OsiServicesInsolventPersoninfo, String>)
					OsiServicesInsolventPersoninfo::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<OsiServicesInsolventPersoninfo, Date>)
					OsiServicesInsolventPersoninfo::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<OsiServicesInsolventPersoninfo, Date>)
					OsiServicesInsolventPersoninfo::setModifiedDate);
			attributeSetterBiConsumers.put(
				"insolventPersonNature",
				(BiConsumer<OsiServicesInsolventPersoninfo, String>)
					OsiServicesInsolventPersoninfo::setInsolventPersonNature);
			attributeSetterBiConsumers.put(
				"insolventIndiFirstName",
				(BiConsumer<OsiServicesInsolventPersoninfo, String>)
					OsiServicesInsolventPersoninfo::setInsolventIndiFirstName);
			attributeSetterBiConsumers.put(
				"insolventIndiLastName",
				(BiConsumer<OsiServicesInsolventPersoninfo, String>)
					OsiServicesInsolventPersoninfo::setInsolventIndiLastName);
			attributeSetterBiConsumers.put(
				"insolventCompanyName",
				(BiConsumer<OsiServicesInsolventPersoninfo, String>)
					OsiServicesInsolventPersoninfo::setInsolventCompanyName);
			attributeSetterBiConsumers.put(
				"insolventAddress",
				(BiConsumer<OsiServicesInsolventPersoninfo, String>)
					OsiServicesInsolventPersoninfo::setInsolventAddress);
			attributeSetterBiConsumers.put(
				"insolventParish",
				(BiConsumer<OsiServicesInsolventPersoninfo, String>)
					OsiServicesInsolventPersoninfo::setInsolventParish);
			attributeSetterBiConsumers.put(
				"insolventEmailAddress",
				(BiConsumer<OsiServicesInsolventPersoninfo, String>)
					OsiServicesInsolventPersoninfo::setInsolventEmailAddress);
			attributeSetterBiConsumers.put(
				"insolventTelephone",
				(BiConsumer<OsiServicesInsolventPersoninfo, String>)
					OsiServicesInsolventPersoninfo::setInsolventTelephone);
			attributeSetterBiConsumers.put(
				"insolventApplicationDate",
				(BiConsumer<OsiServicesInsolventPersoninfo, Date>)
					OsiServicesInsolventPersoninfo::
						setInsolventApplicationDate);
			attributeSetterBiConsumers.put(
				"insolventTrnNumber",
				(BiConsumer<OsiServicesInsolventPersoninfo, String>)
					OsiServicesInsolventPersoninfo::setInsolventTrnNumber);
			attributeSetterBiConsumers.put(
				"osiServicesApplicationId",
				(BiConsumer<OsiServicesInsolventPersoninfo, Long>)
					OsiServicesInsolventPersoninfo::
						setOsiServicesApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getOsiServicesInsoId() {
		return _osiServicesInsoId;
	}

	@Override
	public void setOsiServicesInsoId(long osiServicesInsoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_osiServicesInsoId = osiServicesInsoId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getInsolventPersonNature() {
		if (_insolventPersonNature == null) {
			return "";
		}
		else {
			return _insolventPersonNature;
		}
	}

	@Override
	public void setInsolventPersonNature(String insolventPersonNature) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insolventPersonNature = insolventPersonNature;
	}

	@JSON
	@Override
	public String getInsolventIndiFirstName() {
		if (_insolventIndiFirstName == null) {
			return "";
		}
		else {
			return _insolventIndiFirstName;
		}
	}

	@Override
	public void setInsolventIndiFirstName(String insolventIndiFirstName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insolventIndiFirstName = insolventIndiFirstName;
	}

	@JSON
	@Override
	public String getInsolventIndiLastName() {
		if (_insolventIndiLastName == null) {
			return "";
		}
		else {
			return _insolventIndiLastName;
		}
	}

	@Override
	public void setInsolventIndiLastName(String insolventIndiLastName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insolventIndiLastName = insolventIndiLastName;
	}

	@JSON
	@Override
	public String getInsolventCompanyName() {
		if (_insolventCompanyName == null) {
			return "";
		}
		else {
			return _insolventCompanyName;
		}
	}

	@Override
	public void setInsolventCompanyName(String insolventCompanyName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insolventCompanyName = insolventCompanyName;
	}

	@JSON
	@Override
	public String getInsolventAddress() {
		if (_insolventAddress == null) {
			return "";
		}
		else {
			return _insolventAddress;
		}
	}

	@Override
	public void setInsolventAddress(String insolventAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insolventAddress = insolventAddress;
	}

	@JSON
	@Override
	public String getInsolventParish() {
		if (_insolventParish == null) {
			return "";
		}
		else {
			return _insolventParish;
		}
	}

	@Override
	public void setInsolventParish(String insolventParish) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insolventParish = insolventParish;
	}

	@JSON
	@Override
	public String getInsolventEmailAddress() {
		if (_insolventEmailAddress == null) {
			return "";
		}
		else {
			return _insolventEmailAddress;
		}
	}

	@Override
	public void setInsolventEmailAddress(String insolventEmailAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insolventEmailAddress = insolventEmailAddress;
	}

	@JSON
	@Override
	public String getInsolventTelephone() {
		if (_insolventTelephone == null) {
			return "";
		}
		else {
			return _insolventTelephone;
		}
	}

	@Override
	public void setInsolventTelephone(String insolventTelephone) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insolventTelephone = insolventTelephone;
	}

	@JSON
	@Override
	public Date getInsolventApplicationDate() {
		return _insolventApplicationDate;
	}

	@Override
	public void setInsolventApplicationDate(Date insolventApplicationDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insolventApplicationDate = insolventApplicationDate;
	}

	@JSON
	@Override
	public String getInsolventTrnNumber() {
		if (_insolventTrnNumber == null) {
			return "";
		}
		else {
			return _insolventTrnNumber;
		}
	}

	@Override
	public void setInsolventTrnNumber(String insolventTrnNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_insolventTrnNumber = insolventTrnNumber;
	}

	@JSON
	@Override
	public long getOsiServicesApplicationId() {
		return _osiServicesApplicationId;
	}

	@Override
	public void setOsiServicesApplicationId(long osiServicesApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_osiServicesApplicationId = osiServicesApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalOsiServicesApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("osiServicesApplicationId"));
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(
				OsiServicesInsolventPersoninfo.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), OsiServicesInsolventPersoninfo.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public OsiServicesInsolventPersoninfo toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, OsiServicesInsolventPersoninfo>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OsiServicesInsolventPersoninfoImpl osiServicesInsolventPersoninfoImpl =
			new OsiServicesInsolventPersoninfoImpl();

		osiServicesInsolventPersoninfoImpl.setUuid(getUuid());
		osiServicesInsolventPersoninfoImpl.setOsiServicesInsoId(
			getOsiServicesInsoId());
		osiServicesInsolventPersoninfoImpl.setGroupId(getGroupId());
		osiServicesInsolventPersoninfoImpl.setCompanyId(getCompanyId());
		osiServicesInsolventPersoninfoImpl.setUserId(getUserId());
		osiServicesInsolventPersoninfoImpl.setUserName(getUserName());
		osiServicesInsolventPersoninfoImpl.setCreateDate(getCreateDate());
		osiServicesInsolventPersoninfoImpl.setModifiedDate(getModifiedDate());
		osiServicesInsolventPersoninfoImpl.setInsolventPersonNature(
			getInsolventPersonNature());
		osiServicesInsolventPersoninfoImpl.setInsolventIndiFirstName(
			getInsolventIndiFirstName());
		osiServicesInsolventPersoninfoImpl.setInsolventIndiLastName(
			getInsolventIndiLastName());
		osiServicesInsolventPersoninfoImpl.setInsolventCompanyName(
			getInsolventCompanyName());
		osiServicesInsolventPersoninfoImpl.setInsolventAddress(
			getInsolventAddress());
		osiServicesInsolventPersoninfoImpl.setInsolventParish(
			getInsolventParish());
		osiServicesInsolventPersoninfoImpl.setInsolventEmailAddress(
			getInsolventEmailAddress());
		osiServicesInsolventPersoninfoImpl.setInsolventTelephone(
			getInsolventTelephone());
		osiServicesInsolventPersoninfoImpl.setInsolventApplicationDate(
			getInsolventApplicationDate());
		osiServicesInsolventPersoninfoImpl.setInsolventTrnNumber(
			getInsolventTrnNumber());
		osiServicesInsolventPersoninfoImpl.setOsiServicesApplicationId(
			getOsiServicesApplicationId());

		osiServicesInsolventPersoninfoImpl.resetOriginalValues();

		return osiServicesInsolventPersoninfoImpl;
	}

	@Override
	public OsiServicesInsolventPersoninfo cloneWithOriginalValues() {
		OsiServicesInsolventPersoninfoImpl osiServicesInsolventPersoninfoImpl =
			new OsiServicesInsolventPersoninfoImpl();

		osiServicesInsolventPersoninfoImpl.setUuid(
			this.<String>getColumnOriginalValue("uuid_"));
		osiServicesInsolventPersoninfoImpl.setOsiServicesInsoId(
			this.<Long>getColumnOriginalValue("osiServicesInsoId"));
		osiServicesInsolventPersoninfoImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		osiServicesInsolventPersoninfoImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		osiServicesInsolventPersoninfoImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		osiServicesInsolventPersoninfoImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		osiServicesInsolventPersoninfoImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		osiServicesInsolventPersoninfoImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		osiServicesInsolventPersoninfoImpl.setInsolventPersonNature(
			this.<String>getColumnOriginalValue("insolventPersonNature"));
		osiServicesInsolventPersoninfoImpl.setInsolventIndiFirstName(
			this.<String>getColumnOriginalValue("insolventIndiFirstName"));
		osiServicesInsolventPersoninfoImpl.setInsolventIndiLastName(
			this.<String>getColumnOriginalValue("insolventIndiLastName"));
		osiServicesInsolventPersoninfoImpl.setInsolventCompanyName(
			this.<String>getColumnOriginalValue("insolventCompanyName"));
		osiServicesInsolventPersoninfoImpl.setInsolventAddress(
			this.<String>getColumnOriginalValue("insolventAddress"));
		osiServicesInsolventPersoninfoImpl.setInsolventParish(
			this.<String>getColumnOriginalValue("insolventParish"));
		osiServicesInsolventPersoninfoImpl.setInsolventEmailAddress(
			this.<String>getColumnOriginalValue("insolventEmailAddress"));
		osiServicesInsolventPersoninfoImpl.setInsolventTelephone(
			this.<String>getColumnOriginalValue("insolventTelephone"));
		osiServicesInsolventPersoninfoImpl.setInsolventApplicationDate(
			this.<Date>getColumnOriginalValue("insolventApplicationDate"));
		osiServicesInsolventPersoninfoImpl.setInsolventTrnNumber(
			this.<String>getColumnOriginalValue("insolventTrnNumber"));
		osiServicesInsolventPersoninfoImpl.setOsiServicesApplicationId(
			this.<Long>getColumnOriginalValue("osiServicesApplicationId"));

		return osiServicesInsolventPersoninfoImpl;
	}

	@Override
	public int compareTo(
		OsiServicesInsolventPersoninfo osiServicesInsolventPersoninfo) {

		long primaryKey = osiServicesInsolventPersoninfo.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof OsiServicesInsolventPersoninfo)) {
			return false;
		}

		OsiServicesInsolventPersoninfo osiServicesInsolventPersoninfo =
			(OsiServicesInsolventPersoninfo)object;

		long primaryKey = osiServicesInsolventPersoninfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<OsiServicesInsolventPersoninfo> toCacheModel() {
		OsiServicesInsolventPersoninfoCacheModel
			osiServicesInsolventPersoninfoCacheModel =
				new OsiServicesInsolventPersoninfoCacheModel();

		osiServicesInsolventPersoninfoCacheModel.uuid = getUuid();

		String uuid = osiServicesInsolventPersoninfoCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			osiServicesInsolventPersoninfoCacheModel.uuid = null;
		}

		osiServicesInsolventPersoninfoCacheModel.osiServicesInsoId =
			getOsiServicesInsoId();

		osiServicesInsolventPersoninfoCacheModel.groupId = getGroupId();

		osiServicesInsolventPersoninfoCacheModel.companyId = getCompanyId();

		osiServicesInsolventPersoninfoCacheModel.userId = getUserId();

		osiServicesInsolventPersoninfoCacheModel.userName = getUserName();

		String userName = osiServicesInsolventPersoninfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			osiServicesInsolventPersoninfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			osiServicesInsolventPersoninfoCacheModel.createDate =
				createDate.getTime();
		}
		else {
			osiServicesInsolventPersoninfoCacheModel.createDate =
				Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			osiServicesInsolventPersoninfoCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			osiServicesInsolventPersoninfoCacheModel.modifiedDate =
				Long.MIN_VALUE;
		}

		osiServicesInsolventPersoninfoCacheModel.insolventPersonNature =
			getInsolventPersonNature();

		String insolventPersonNature =
			osiServicesInsolventPersoninfoCacheModel.insolventPersonNature;

		if ((insolventPersonNature != null) &&
			(insolventPersonNature.length() == 0)) {

			osiServicesInsolventPersoninfoCacheModel.insolventPersonNature =
				null;
		}

		osiServicesInsolventPersoninfoCacheModel.insolventIndiFirstName =
			getInsolventIndiFirstName();

		String insolventIndiFirstName =
			osiServicesInsolventPersoninfoCacheModel.insolventIndiFirstName;

		if ((insolventIndiFirstName != null) &&
			(insolventIndiFirstName.length() == 0)) {

			osiServicesInsolventPersoninfoCacheModel.insolventIndiFirstName =
				null;
		}

		osiServicesInsolventPersoninfoCacheModel.insolventIndiLastName =
			getInsolventIndiLastName();

		String insolventIndiLastName =
			osiServicesInsolventPersoninfoCacheModel.insolventIndiLastName;

		if ((insolventIndiLastName != null) &&
			(insolventIndiLastName.length() == 0)) {

			osiServicesInsolventPersoninfoCacheModel.insolventIndiLastName =
				null;
		}

		osiServicesInsolventPersoninfoCacheModel.insolventCompanyName =
			getInsolventCompanyName();

		String insolventCompanyName =
			osiServicesInsolventPersoninfoCacheModel.insolventCompanyName;

		if ((insolventCompanyName != null) &&
			(insolventCompanyName.length() == 0)) {

			osiServicesInsolventPersoninfoCacheModel.insolventCompanyName =
				null;
		}

		osiServicesInsolventPersoninfoCacheModel.insolventAddress =
			getInsolventAddress();

		String insolventAddress =
			osiServicesInsolventPersoninfoCacheModel.insolventAddress;

		if ((insolventAddress != null) && (insolventAddress.length() == 0)) {
			osiServicesInsolventPersoninfoCacheModel.insolventAddress = null;
		}

		osiServicesInsolventPersoninfoCacheModel.insolventParish =
			getInsolventParish();

		String insolventParish =
			osiServicesInsolventPersoninfoCacheModel.insolventParish;

		if ((insolventParish != null) && (insolventParish.length() == 0)) {
			osiServicesInsolventPersoninfoCacheModel.insolventParish = null;
		}

		osiServicesInsolventPersoninfoCacheModel.insolventEmailAddress =
			getInsolventEmailAddress();

		String insolventEmailAddress =
			osiServicesInsolventPersoninfoCacheModel.insolventEmailAddress;

		if ((insolventEmailAddress != null) &&
			(insolventEmailAddress.length() == 0)) {

			osiServicesInsolventPersoninfoCacheModel.insolventEmailAddress =
				null;
		}

		osiServicesInsolventPersoninfoCacheModel.insolventTelephone =
			getInsolventTelephone();

		String insolventTelephone =
			osiServicesInsolventPersoninfoCacheModel.insolventTelephone;

		if ((insolventTelephone != null) &&
			(insolventTelephone.length() == 0)) {

			osiServicesInsolventPersoninfoCacheModel.insolventTelephone = null;
		}

		Date insolventApplicationDate = getInsolventApplicationDate();

		if (insolventApplicationDate != null) {
			osiServicesInsolventPersoninfoCacheModel.insolventApplicationDate =
				insolventApplicationDate.getTime();
		}
		else {
			osiServicesInsolventPersoninfoCacheModel.insolventApplicationDate =
				Long.MIN_VALUE;
		}

		osiServicesInsolventPersoninfoCacheModel.insolventTrnNumber =
			getInsolventTrnNumber();

		String insolventTrnNumber =
			osiServicesInsolventPersoninfoCacheModel.insolventTrnNumber;

		if ((insolventTrnNumber != null) &&
			(insolventTrnNumber.length() == 0)) {

			osiServicesInsolventPersoninfoCacheModel.insolventTrnNumber = null;
		}

		osiServicesInsolventPersoninfoCacheModel.osiServicesApplicationId =
			getOsiServicesApplicationId();

		return osiServicesInsolventPersoninfoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<OsiServicesInsolventPersoninfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<OsiServicesInsolventPersoninfo, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<OsiServicesInsolventPersoninfo, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(OsiServicesInsolventPersoninfo)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, OsiServicesInsolventPersoninfo>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						OsiServicesInsolventPersoninfo.class,
						ModelWrapper.class);

	}

	private String _uuid;
	private long _osiServicesInsoId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _insolventPersonNature;
	private String _insolventIndiFirstName;
	private String _insolventIndiLastName;
	private String _insolventCompanyName;
	private String _insolventAddress;
	private String _insolventParish;
	private String _insolventEmailAddress;
	private String _insolventTelephone;
	private Date _insolventApplicationDate;
	private String _insolventTrnNumber;
	private long _osiServicesApplicationId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<OsiServicesInsolventPersoninfo, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((OsiServicesInsolventPersoninfo)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("osiServicesInsoId", _osiServicesInsoId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"insolventPersonNature", _insolventPersonNature);
		_columnOriginalValues.put(
			"insolventIndiFirstName", _insolventIndiFirstName);
		_columnOriginalValues.put(
			"insolventIndiLastName", _insolventIndiLastName);
		_columnOriginalValues.put(
			"insolventCompanyName", _insolventCompanyName);
		_columnOriginalValues.put("insolventAddress", _insolventAddress);
		_columnOriginalValues.put("insolventParish", _insolventParish);
		_columnOriginalValues.put(
			"insolventEmailAddress", _insolventEmailAddress);
		_columnOriginalValues.put("insolventTelephone", _insolventTelephone);
		_columnOriginalValues.put(
			"insolventApplicationDate", _insolventApplicationDate);
		_columnOriginalValues.put("insolventTrnNumber", _insolventTrnNumber);
		_columnOriginalValues.put(
			"osiServicesApplicationId", _osiServicesApplicationId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("osiServicesInsoId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("userId", 16L);

		columnBitmasks.put("userName", 32L);

		columnBitmasks.put("createDate", 64L);

		columnBitmasks.put("modifiedDate", 128L);

		columnBitmasks.put("insolventPersonNature", 256L);

		columnBitmasks.put("insolventIndiFirstName", 512L);

		columnBitmasks.put("insolventIndiLastName", 1024L);

		columnBitmasks.put("insolventCompanyName", 2048L);

		columnBitmasks.put("insolventAddress", 4096L);

		columnBitmasks.put("insolventParish", 8192L);

		columnBitmasks.put("insolventEmailAddress", 16384L);

		columnBitmasks.put("insolventTelephone", 32768L);

		columnBitmasks.put("insolventApplicationDate", 65536L);

		columnBitmasks.put("insolventTrnNumber", 131072L);

		columnBitmasks.put("osiServicesApplicationId", 262144L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private OsiServicesInsolventPersoninfo _escapedModel;

}