/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.osi.services.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.osi.services.application.form.service.model.OsiServicesGeneralBenefitOfCreditorsinfo;
import com.nbp.osi.services.application.form.service.model.OsiServicesGeneralBenefitOfCreditorsinfoModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the OsiServicesGeneralBenefitOfCreditorsinfo service. Represents a row in the &quot;nbp_osi_services_benef_cred&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>OsiServicesGeneralBenefitOfCreditorsinfoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OsiServicesGeneralBenefitOfCreditorsinfoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see OsiServicesGeneralBenefitOfCreditorsinfoImpl
 * @generated
 */
@JSON(strict = true)
public class OsiServicesGeneralBenefitOfCreditorsinfoModelImpl
	extends BaseModelImpl<OsiServicesGeneralBenefitOfCreditorsinfo>
	implements OsiServicesGeneralBenefitOfCreditorsinfoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a osi services general benefit of creditorsinfo model instance should use the <code>OsiServicesGeneralBenefitOfCreditorsinfo</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_osi_services_benef_cred";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"osiBOCInsoId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"creditorName", Types.VARCHAR}, {"creditorDate", Types.TIMESTAMP},
		{"creditorAddress", Types.VARCHAR},
		{"osiServicesApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("osiBOCInsoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("creditorName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("creditorDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("creditorAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("osiServicesApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_osi_services_benef_cred (uuid_ VARCHAR(75) null,osiBOCInsoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,creditorName VARCHAR(75) null,creditorDate DATE null,creditorAddress VARCHAR(500) null,osiServicesApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_osi_services_benef_cred";

	public static final String ORDER_BY_JPQL =
		" ORDER BY osiServicesGeneralBenefitOfCreditorsinfo.osiBOCInsoId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_osi_services_benef_cred.osiBOCInsoId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long OSISERVICESAPPLICATIONID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long OSIBOCINSOID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public OsiServicesGeneralBenefitOfCreditorsinfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _osiBOCInsoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setOsiBOCInsoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _osiBOCInsoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return OsiServicesGeneralBenefitOfCreditorsinfo.class;
	}

	@Override
	public String getModelClassName() {
		return OsiServicesGeneralBenefitOfCreditorsinfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<OsiServicesGeneralBenefitOfCreditorsinfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry
				<String,
				 Function<OsiServicesGeneralBenefitOfCreditorsinfo, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<OsiServicesGeneralBenefitOfCreditorsinfo, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(OsiServicesGeneralBenefitOfCreditorsinfo)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map
			<String,
			 BiConsumer<OsiServicesGeneralBenefitOfCreditorsinfo, Object>>
				attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<OsiServicesGeneralBenefitOfCreditorsinfo, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(OsiServicesGeneralBenefitOfCreditorsinfo)this,
					entry.getValue());
			}
		}
	}

	public Map
		<String, Function<OsiServicesGeneralBenefitOfCreditorsinfo, Object>>
			getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map
		<String, BiConsumer<OsiServicesGeneralBenefitOfCreditorsinfo, Object>>
			getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<OsiServicesGeneralBenefitOfCreditorsinfo, Object>>
				_attributeGetterFunctions;

		static {
			Map
				<String,
				 Function<OsiServicesGeneralBenefitOfCreditorsinfo, Object>>
					attributeGetterFunctions =
						new LinkedHashMap
							<String,
							 Function
								 <OsiServicesGeneralBenefitOfCreditorsinfo,
								  Object>>();

			attributeGetterFunctions.put(
				"uuid", OsiServicesGeneralBenefitOfCreditorsinfo::getUuid);
			attributeGetterFunctions.put(
				"osiBOCInsoId",
				OsiServicesGeneralBenefitOfCreditorsinfo::getOsiBOCInsoId);
			attributeGetterFunctions.put(
				"groupId",
				OsiServicesGeneralBenefitOfCreditorsinfo::getGroupId);
			attributeGetterFunctions.put(
				"companyId",
				OsiServicesGeneralBenefitOfCreditorsinfo::getCompanyId);
			attributeGetterFunctions.put(
				"userId", OsiServicesGeneralBenefitOfCreditorsinfo::getUserId);
			attributeGetterFunctions.put(
				"userName",
				OsiServicesGeneralBenefitOfCreditorsinfo::getUserName);
			attributeGetterFunctions.put(
				"createDate",
				OsiServicesGeneralBenefitOfCreditorsinfo::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate",
				OsiServicesGeneralBenefitOfCreditorsinfo::getModifiedDate);
			attributeGetterFunctions.put(
				"creditorName",
				OsiServicesGeneralBenefitOfCreditorsinfo::getCreditorName);
			attributeGetterFunctions.put(
				"creditorDate",
				OsiServicesGeneralBenefitOfCreditorsinfo::getCreditorDate);
			attributeGetterFunctions.put(
				"creditorAddress",
				OsiServicesGeneralBenefitOfCreditorsinfo::getCreditorAddress);
			attributeGetterFunctions.put(
				"osiServicesApplicationId",
				OsiServicesGeneralBenefitOfCreditorsinfo::
					getOsiServicesApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String,
			 BiConsumer<OsiServicesGeneralBenefitOfCreditorsinfo, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<OsiServicesGeneralBenefitOfCreditorsinfo, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String,
						 BiConsumer
							 <OsiServicesGeneralBenefitOfCreditorsinfo, ?>>();

			attributeSetterBiConsumers.put(
				"uuid",
				(BiConsumer<OsiServicesGeneralBenefitOfCreditorsinfo, String>)
					OsiServicesGeneralBenefitOfCreditorsinfo::setUuid);
			attributeSetterBiConsumers.put(
				"osiBOCInsoId",
				(BiConsumer<OsiServicesGeneralBenefitOfCreditorsinfo, Long>)
					OsiServicesGeneralBenefitOfCreditorsinfo::setOsiBOCInsoId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<OsiServicesGeneralBenefitOfCreditorsinfo, Long>)
					OsiServicesGeneralBenefitOfCreditorsinfo::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<OsiServicesGeneralBenefitOfCreditorsinfo, Long>)
					OsiServicesGeneralBenefitOfCreditorsinfo::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<OsiServicesGeneralBenefitOfCreditorsinfo, Long>)
					OsiServicesGeneralBenefitOfCreditorsinfo::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<OsiServicesGeneralBenefitOfCreditorsinfo, String>)
					OsiServicesGeneralBenefitOfCreditorsinfo::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<OsiServicesGeneralBenefitOfCreditorsinfo, Date>)
					OsiServicesGeneralBenefitOfCreditorsinfo::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<OsiServicesGeneralBenefitOfCreditorsinfo, Date>)
					OsiServicesGeneralBenefitOfCreditorsinfo::setModifiedDate);
			attributeSetterBiConsumers.put(
				"creditorName",
				(BiConsumer<OsiServicesGeneralBenefitOfCreditorsinfo, String>)
					OsiServicesGeneralBenefitOfCreditorsinfo::setCreditorName);
			attributeSetterBiConsumers.put(
				"creditorDate",
				(BiConsumer<OsiServicesGeneralBenefitOfCreditorsinfo, Date>)
					OsiServicesGeneralBenefitOfCreditorsinfo::setCreditorDate);
			attributeSetterBiConsumers.put(
				"creditorAddress",
				(BiConsumer<OsiServicesGeneralBenefitOfCreditorsinfo, String>)
					OsiServicesGeneralBenefitOfCreditorsinfo::
						setCreditorAddress);
			attributeSetterBiConsumers.put(
				"osiServicesApplicationId",
				(BiConsumer<OsiServicesGeneralBenefitOfCreditorsinfo, Long>)
					OsiServicesGeneralBenefitOfCreditorsinfo::
						setOsiServicesApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getOsiBOCInsoId() {
		return _osiBOCInsoId;
	}

	@Override
	public void setOsiBOCInsoId(long osiBOCInsoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_osiBOCInsoId = osiBOCInsoId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getCreditorName() {
		if (_creditorName == null) {
			return "";
		}
		else {
			return _creditorName;
		}
	}

	@Override
	public void setCreditorName(String creditorName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_creditorName = creditorName;
	}

	@JSON
	@Override
	public Date getCreditorDate() {
		return _creditorDate;
	}

	@Override
	public void setCreditorDate(Date creditorDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_creditorDate = creditorDate;
	}

	@JSON
	@Override
	public String getCreditorAddress() {
		if (_creditorAddress == null) {
			return "";
		}
		else {
			return _creditorAddress;
		}
	}

	@Override
	public void setCreditorAddress(String creditorAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_creditorAddress = creditorAddress;
	}

	@JSON
	@Override
	public long getOsiServicesApplicationId() {
		return _osiServicesApplicationId;
	}

	@Override
	public void setOsiServicesApplicationId(long osiServicesApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_osiServicesApplicationId = osiServicesApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalOsiServicesApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("osiServicesApplicationId"));
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(
				OsiServicesGeneralBenefitOfCreditorsinfo.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(),
			OsiServicesGeneralBenefitOfCreditorsinfo.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public OsiServicesGeneralBenefitOfCreditorsinfo toEscapedModel() {
		if (_escapedModel == null) {
			Function
				<InvocationHandler, OsiServicesGeneralBenefitOfCreditorsinfo>
					escapedModelProxyProviderFunction =
						EscapedModelProxyProviderFunctionHolder.
							_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OsiServicesGeneralBenefitOfCreditorsinfoImpl
			osiServicesGeneralBenefitOfCreditorsinfoImpl =
				new OsiServicesGeneralBenefitOfCreditorsinfoImpl();

		osiServicesGeneralBenefitOfCreditorsinfoImpl.setUuid(getUuid());
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setOsiBOCInsoId(
			getOsiBOCInsoId());
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setGroupId(getGroupId());
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setCompanyId(
			getCompanyId());
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setUserId(getUserId());
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setUserName(getUserName());
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setCreateDate(
			getCreateDate());
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setModifiedDate(
			getModifiedDate());
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setCreditorName(
			getCreditorName());
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setCreditorDate(
			getCreditorDate());
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setCreditorAddress(
			getCreditorAddress());
		osiServicesGeneralBenefitOfCreditorsinfoImpl.
			setOsiServicesApplicationId(getOsiServicesApplicationId());

		osiServicesGeneralBenefitOfCreditorsinfoImpl.resetOriginalValues();

		return osiServicesGeneralBenefitOfCreditorsinfoImpl;
	}

	@Override
	public OsiServicesGeneralBenefitOfCreditorsinfo cloneWithOriginalValues() {
		OsiServicesGeneralBenefitOfCreditorsinfoImpl
			osiServicesGeneralBenefitOfCreditorsinfoImpl =
				new OsiServicesGeneralBenefitOfCreditorsinfoImpl();

		osiServicesGeneralBenefitOfCreditorsinfoImpl.setUuid(
			this.<String>getColumnOriginalValue("uuid_"));
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setOsiBOCInsoId(
			this.<Long>getColumnOriginalValue("osiBOCInsoId"));
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setCreditorName(
			this.<String>getColumnOriginalValue("creditorName"));
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setCreditorDate(
			this.<Date>getColumnOriginalValue("creditorDate"));
		osiServicesGeneralBenefitOfCreditorsinfoImpl.setCreditorAddress(
			this.<String>getColumnOriginalValue("creditorAddress"));
		osiServicesGeneralBenefitOfCreditorsinfoImpl.
			setOsiServicesApplicationId(
				this.<Long>getColumnOriginalValue("osiServicesApplicationId"));

		return osiServicesGeneralBenefitOfCreditorsinfoImpl;
	}

	@Override
	public int compareTo(
		OsiServicesGeneralBenefitOfCreditorsinfo
			osiServicesGeneralBenefitOfCreditorsinfo) {

		long primaryKey =
			osiServicesGeneralBenefitOfCreditorsinfo.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof OsiServicesGeneralBenefitOfCreditorsinfo)) {
			return false;
		}

		OsiServicesGeneralBenefitOfCreditorsinfo
			osiServicesGeneralBenefitOfCreditorsinfo =
				(OsiServicesGeneralBenefitOfCreditorsinfo)object;

		long primaryKey =
			osiServicesGeneralBenefitOfCreditorsinfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<OsiServicesGeneralBenefitOfCreditorsinfo> toCacheModel() {
		OsiServicesGeneralBenefitOfCreditorsinfoCacheModel
			osiServicesGeneralBenefitOfCreditorsinfoCacheModel =
				new OsiServicesGeneralBenefitOfCreditorsinfoCacheModel();

		osiServicesGeneralBenefitOfCreditorsinfoCacheModel.uuid = getUuid();

		String uuid = osiServicesGeneralBenefitOfCreditorsinfoCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			osiServicesGeneralBenefitOfCreditorsinfoCacheModel.uuid = null;
		}

		osiServicesGeneralBenefitOfCreditorsinfoCacheModel.osiBOCInsoId =
			getOsiBOCInsoId();

		osiServicesGeneralBenefitOfCreditorsinfoCacheModel.groupId =
			getGroupId();

		osiServicesGeneralBenefitOfCreditorsinfoCacheModel.companyId =
			getCompanyId();

		osiServicesGeneralBenefitOfCreditorsinfoCacheModel.userId = getUserId();

		osiServicesGeneralBenefitOfCreditorsinfoCacheModel.userName =
			getUserName();

		String userName =
			osiServicesGeneralBenefitOfCreditorsinfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			osiServicesGeneralBenefitOfCreditorsinfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			osiServicesGeneralBenefitOfCreditorsinfoCacheModel.createDate =
				createDate.getTime();
		}
		else {
			osiServicesGeneralBenefitOfCreditorsinfoCacheModel.createDate =
				Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			osiServicesGeneralBenefitOfCreditorsinfoCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			osiServicesGeneralBenefitOfCreditorsinfoCacheModel.modifiedDate =
				Long.MIN_VALUE;
		}

		osiServicesGeneralBenefitOfCreditorsinfoCacheModel.creditorName =
			getCreditorName();

		String creditorName =
			osiServicesGeneralBenefitOfCreditorsinfoCacheModel.creditorName;

		if ((creditorName != null) && (creditorName.length() == 0)) {
			osiServicesGeneralBenefitOfCreditorsinfoCacheModel.creditorName =
				null;
		}

		Date creditorDate = getCreditorDate();

		if (creditorDate != null) {
			osiServicesGeneralBenefitOfCreditorsinfoCacheModel.creditorDate =
				creditorDate.getTime();
		}
		else {
			osiServicesGeneralBenefitOfCreditorsinfoCacheModel.creditorDate =
				Long.MIN_VALUE;
		}

		osiServicesGeneralBenefitOfCreditorsinfoCacheModel.creditorAddress =
			getCreditorAddress();

		String creditorAddress =
			osiServicesGeneralBenefitOfCreditorsinfoCacheModel.creditorAddress;

		if ((creditorAddress != null) && (creditorAddress.length() == 0)) {
			osiServicesGeneralBenefitOfCreditorsinfoCacheModel.creditorAddress =
				null;
		}

		osiServicesGeneralBenefitOfCreditorsinfoCacheModel.
			osiServicesApplicationId = getOsiServicesApplicationId();

		return osiServicesGeneralBenefitOfCreditorsinfoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<OsiServicesGeneralBenefitOfCreditorsinfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry
				<String,
				 Function<OsiServicesGeneralBenefitOfCreditorsinfo, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<OsiServicesGeneralBenefitOfCreditorsinfo, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(OsiServicesGeneralBenefitOfCreditorsinfo)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, OsiServicesGeneralBenefitOfCreditorsinfo>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						OsiServicesGeneralBenefitOfCreditorsinfo.class,
						ModelWrapper.class);

	}

	private String _uuid;
	private long _osiBOCInsoId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _creditorName;
	private Date _creditorDate;
	private String _creditorAddress;
	private long _osiServicesApplicationId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<OsiServicesGeneralBenefitOfCreditorsinfo, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply(
			(OsiServicesGeneralBenefitOfCreditorsinfo)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("osiBOCInsoId", _osiBOCInsoId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("creditorName", _creditorName);
		_columnOriginalValues.put("creditorDate", _creditorDate);
		_columnOriginalValues.put("creditorAddress", _creditorAddress);
		_columnOriginalValues.put(
			"osiServicesApplicationId", _osiServicesApplicationId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("osiBOCInsoId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("userId", 16L);

		columnBitmasks.put("userName", 32L);

		columnBitmasks.put("createDate", 64L);

		columnBitmasks.put("modifiedDate", 128L);

		columnBitmasks.put("creditorName", 256L);

		columnBitmasks.put("creditorDate", 512L);

		columnBitmasks.put("creditorAddress", 1024L);

		columnBitmasks.put("osiServicesApplicationId", 2048L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private OsiServicesGeneralBenefitOfCreditorsinfo _escapedModel;

}