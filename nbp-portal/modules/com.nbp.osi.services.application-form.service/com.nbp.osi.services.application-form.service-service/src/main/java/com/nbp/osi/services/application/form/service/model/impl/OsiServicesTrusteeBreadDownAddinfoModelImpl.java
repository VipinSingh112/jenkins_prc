/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.osi.services.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.osi.services.application.form.service.model.OsiServicesTrusteeBreadDownAddinfo;
import com.nbp.osi.services.application.form.service.model.OsiServicesTrusteeBreadDownAddinfoModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the OsiServicesTrusteeBreadDownAddinfo service. Represents a row in the &quot;nbp_osi_services_tru_brak_add&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>OsiServicesTrusteeBreadDownAddinfoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OsiServicesTrusteeBreadDownAddinfoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see OsiServicesTrusteeBreadDownAddinfoImpl
 * @generated
 */
@JSON(strict = true)
public class OsiServicesTrusteeBreadDownAddinfoModelImpl
	extends BaseModelImpl<OsiServicesTrusteeBreadDownAddinfo>
	implements OsiServicesTrusteeBreadDownAddinfoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a osi services trustee bread down addinfo model instance should use the <code>OsiServicesTrusteeBreadDownAddinfo</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_osi_services_tru_brak_add";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"osiTrusId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"breakdownWorkingYear", Types.VARCHAR},
		{"workingBankrupties", Types.VARCHAR},
		{"workingProposal", Types.VARCHAR},
		{"workingComBankrupts", Types.VARCHAR},
		{"workingComProposal", Types.VARCHAR},
		{"workingInterimReceive", Types.VARCHAR},
		{"breakdownWorkingCreditors", Types.VARCHAR},
		{"breakdownWorkingOther", Types.VARCHAR}, {"counter", Types.VARCHAR},
		{"osiServicesApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("osiTrusId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("breakdownWorkingYear", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("workingBankrupties", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("workingProposal", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("workingComBankrupts", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("workingComProposal", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("workingInterimReceive", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("breakdownWorkingCreditors", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("breakdownWorkingOther", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("counter", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("osiServicesApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_osi_services_tru_brak_add (uuid_ VARCHAR(75) null,osiTrusId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,breakdownWorkingYear VARCHAR(75) null,workingBankrupties VARCHAR(75) null,workingProposal VARCHAR(75) null,workingComBankrupts VARCHAR(75) null,workingComProposal VARCHAR(75) null,workingInterimReceive VARCHAR(75) null,breakdownWorkingCreditors VARCHAR(75) null,breakdownWorkingOther VARCHAR(75) null,counter VARCHAR(75) null,osiServicesApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_osi_services_tru_brak_add";

	public static final String ORDER_BY_JPQL =
		" ORDER BY osiServicesTrusteeBreadDownAddinfo.osiTrusId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_osi_services_tru_brak_add.osiTrusId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long OSISERVICESAPPLICATIONID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long OSITRUSID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public OsiServicesTrusteeBreadDownAddinfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _osiTrusId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setOsiTrusId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _osiTrusId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return OsiServicesTrusteeBreadDownAddinfo.class;
	}

	@Override
	public String getModelClassName() {
		return OsiServicesTrusteeBreadDownAddinfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<OsiServicesTrusteeBreadDownAddinfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry
				<String, Function<OsiServicesTrusteeBreadDownAddinfo, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<OsiServicesTrusteeBreadDownAddinfo, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(OsiServicesTrusteeBreadDownAddinfo)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<OsiServicesTrusteeBreadDownAddinfo, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<OsiServicesTrusteeBreadDownAddinfo, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(OsiServicesTrusteeBreadDownAddinfo)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<OsiServicesTrusteeBreadDownAddinfo, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<OsiServicesTrusteeBreadDownAddinfo, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<OsiServicesTrusteeBreadDownAddinfo, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<OsiServicesTrusteeBreadDownAddinfo, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String,
						 Function
							 <OsiServicesTrusteeBreadDownAddinfo, Object>>();

			attributeGetterFunctions.put(
				"uuid", OsiServicesTrusteeBreadDownAddinfo::getUuid);
			attributeGetterFunctions.put(
				"osiTrusId", OsiServicesTrusteeBreadDownAddinfo::getOsiTrusId);
			attributeGetterFunctions.put(
				"groupId", OsiServicesTrusteeBreadDownAddinfo::getGroupId);
			attributeGetterFunctions.put(
				"companyId", OsiServicesTrusteeBreadDownAddinfo::getCompanyId);
			attributeGetterFunctions.put(
				"userId", OsiServicesTrusteeBreadDownAddinfo::getUserId);
			attributeGetterFunctions.put(
				"userName", OsiServicesTrusteeBreadDownAddinfo::getUserName);
			attributeGetterFunctions.put(
				"createDate",
				OsiServicesTrusteeBreadDownAddinfo::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate",
				OsiServicesTrusteeBreadDownAddinfo::getModifiedDate);
			attributeGetterFunctions.put(
				"breakdownWorkingYear",
				OsiServicesTrusteeBreadDownAddinfo::getBreakdownWorkingYear);
			attributeGetterFunctions.put(
				"workingBankrupties",
				OsiServicesTrusteeBreadDownAddinfo::getWorkingBankrupties);
			attributeGetterFunctions.put(
				"workingProposal",
				OsiServicesTrusteeBreadDownAddinfo::getWorkingProposal);
			attributeGetterFunctions.put(
				"workingComBankrupts",
				OsiServicesTrusteeBreadDownAddinfo::getWorkingComBankrupts);
			attributeGetterFunctions.put(
				"workingComProposal",
				OsiServicesTrusteeBreadDownAddinfo::getWorkingComProposal);
			attributeGetterFunctions.put(
				"workingInterimReceive",
				OsiServicesTrusteeBreadDownAddinfo::getWorkingInterimReceive);
			attributeGetterFunctions.put(
				"breakdownWorkingCreditors",
				OsiServicesTrusteeBreadDownAddinfo::
					getBreakdownWorkingCreditors);
			attributeGetterFunctions.put(
				"breakdownWorkingOther",
				OsiServicesTrusteeBreadDownAddinfo::getBreakdownWorkingOther);
			attributeGetterFunctions.put(
				"counter", OsiServicesTrusteeBreadDownAddinfo::getCounter);
			attributeGetterFunctions.put(
				"osiServicesApplicationId",
				OsiServicesTrusteeBreadDownAddinfo::
					getOsiServicesApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<OsiServicesTrusteeBreadDownAddinfo, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<OsiServicesTrusteeBreadDownAddinfo, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String,
						 BiConsumer<OsiServicesTrusteeBreadDownAddinfo, ?>>();

			attributeSetterBiConsumers.put(
				"uuid",
				(BiConsumer<OsiServicesTrusteeBreadDownAddinfo, String>)
					OsiServicesTrusteeBreadDownAddinfo::setUuid);
			attributeSetterBiConsumers.put(
				"osiTrusId",
				(BiConsumer<OsiServicesTrusteeBreadDownAddinfo, Long>)
					OsiServicesTrusteeBreadDownAddinfo::setOsiTrusId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<OsiServicesTrusteeBreadDownAddinfo, Long>)
					OsiServicesTrusteeBreadDownAddinfo::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<OsiServicesTrusteeBreadDownAddinfo, Long>)
					OsiServicesTrusteeBreadDownAddinfo::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<OsiServicesTrusteeBreadDownAddinfo, Long>)
					OsiServicesTrusteeBreadDownAddinfo::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<OsiServicesTrusteeBreadDownAddinfo, String>)
					OsiServicesTrusteeBreadDownAddinfo::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<OsiServicesTrusteeBreadDownAddinfo, Date>)
					OsiServicesTrusteeBreadDownAddinfo::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<OsiServicesTrusteeBreadDownAddinfo, Date>)
					OsiServicesTrusteeBreadDownAddinfo::setModifiedDate);
			attributeSetterBiConsumers.put(
				"breakdownWorkingYear",
				(BiConsumer<OsiServicesTrusteeBreadDownAddinfo, String>)
					OsiServicesTrusteeBreadDownAddinfo::
						setBreakdownWorkingYear);
			attributeSetterBiConsumers.put(
				"workingBankrupties",
				(BiConsumer<OsiServicesTrusteeBreadDownAddinfo, String>)
					OsiServicesTrusteeBreadDownAddinfo::setWorkingBankrupties);
			attributeSetterBiConsumers.put(
				"workingProposal",
				(BiConsumer<OsiServicesTrusteeBreadDownAddinfo, String>)
					OsiServicesTrusteeBreadDownAddinfo::setWorkingProposal);
			attributeSetterBiConsumers.put(
				"workingComBankrupts",
				(BiConsumer<OsiServicesTrusteeBreadDownAddinfo, String>)
					OsiServicesTrusteeBreadDownAddinfo::setWorkingComBankrupts);
			attributeSetterBiConsumers.put(
				"workingComProposal",
				(BiConsumer<OsiServicesTrusteeBreadDownAddinfo, String>)
					OsiServicesTrusteeBreadDownAddinfo::setWorkingComProposal);
			attributeSetterBiConsumers.put(
				"workingInterimReceive",
				(BiConsumer<OsiServicesTrusteeBreadDownAddinfo, String>)
					OsiServicesTrusteeBreadDownAddinfo::
						setWorkingInterimReceive);
			attributeSetterBiConsumers.put(
				"breakdownWorkingCreditors",
				(BiConsumer<OsiServicesTrusteeBreadDownAddinfo, String>)
					OsiServicesTrusteeBreadDownAddinfo::
						setBreakdownWorkingCreditors);
			attributeSetterBiConsumers.put(
				"breakdownWorkingOther",
				(BiConsumer<OsiServicesTrusteeBreadDownAddinfo, String>)
					OsiServicesTrusteeBreadDownAddinfo::
						setBreakdownWorkingOther);
			attributeSetterBiConsumers.put(
				"counter",
				(BiConsumer<OsiServicesTrusteeBreadDownAddinfo, String>)
					OsiServicesTrusteeBreadDownAddinfo::setCounter);
			attributeSetterBiConsumers.put(
				"osiServicesApplicationId",
				(BiConsumer<OsiServicesTrusteeBreadDownAddinfo, Long>)
					OsiServicesTrusteeBreadDownAddinfo::
						setOsiServicesApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getOsiTrusId() {
		return _osiTrusId;
	}

	@Override
	public void setOsiTrusId(long osiTrusId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_osiTrusId = osiTrusId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getBreakdownWorkingYear() {
		if (_breakdownWorkingYear == null) {
			return "";
		}
		else {
			return _breakdownWorkingYear;
		}
	}

	@Override
	public void setBreakdownWorkingYear(String breakdownWorkingYear) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_breakdownWorkingYear = breakdownWorkingYear;
	}

	@JSON
	@Override
	public String getWorkingBankrupties() {
		if (_workingBankrupties == null) {
			return "";
		}
		else {
			return _workingBankrupties;
		}
	}

	@Override
	public void setWorkingBankrupties(String workingBankrupties) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_workingBankrupties = workingBankrupties;
	}

	@JSON
	@Override
	public String getWorkingProposal() {
		if (_workingProposal == null) {
			return "";
		}
		else {
			return _workingProposal;
		}
	}

	@Override
	public void setWorkingProposal(String workingProposal) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_workingProposal = workingProposal;
	}

	@JSON
	@Override
	public String getWorkingComBankrupts() {
		if (_workingComBankrupts == null) {
			return "";
		}
		else {
			return _workingComBankrupts;
		}
	}

	@Override
	public void setWorkingComBankrupts(String workingComBankrupts) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_workingComBankrupts = workingComBankrupts;
	}

	@JSON
	@Override
	public String getWorkingComProposal() {
		if (_workingComProposal == null) {
			return "";
		}
		else {
			return _workingComProposal;
		}
	}

	@Override
	public void setWorkingComProposal(String workingComProposal) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_workingComProposal = workingComProposal;
	}

	@JSON
	@Override
	public String getWorkingInterimReceive() {
		if (_workingInterimReceive == null) {
			return "";
		}
		else {
			return _workingInterimReceive;
		}
	}

	@Override
	public void setWorkingInterimReceive(String workingInterimReceive) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_workingInterimReceive = workingInterimReceive;
	}

	@JSON
	@Override
	public String getBreakdownWorkingCreditors() {
		if (_breakdownWorkingCreditors == null) {
			return "";
		}
		else {
			return _breakdownWorkingCreditors;
		}
	}

	@Override
	public void setBreakdownWorkingCreditors(String breakdownWorkingCreditors) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_breakdownWorkingCreditors = breakdownWorkingCreditors;
	}

	@JSON
	@Override
	public String getBreakdownWorkingOther() {
		if (_breakdownWorkingOther == null) {
			return "";
		}
		else {
			return _breakdownWorkingOther;
		}
	}

	@Override
	public void setBreakdownWorkingOther(String breakdownWorkingOther) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_breakdownWorkingOther = breakdownWorkingOther;
	}

	@JSON
	@Override
	public String getCounter() {
		if (_counter == null) {
			return "";
		}
		else {
			return _counter;
		}
	}

	@Override
	public void setCounter(String counter) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_counter = counter;
	}

	@JSON
	@Override
	public long getOsiServicesApplicationId() {
		return _osiServicesApplicationId;
	}

	@Override
	public void setOsiServicesApplicationId(long osiServicesApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_osiServicesApplicationId = osiServicesApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalOsiServicesApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("osiServicesApplicationId"));
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(
				OsiServicesTrusteeBreadDownAddinfo.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), OsiServicesTrusteeBreadDownAddinfo.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public OsiServicesTrusteeBreadDownAddinfo toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, OsiServicesTrusteeBreadDownAddinfo>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OsiServicesTrusteeBreadDownAddinfoImpl
			osiServicesTrusteeBreadDownAddinfoImpl =
				new OsiServicesTrusteeBreadDownAddinfoImpl();

		osiServicesTrusteeBreadDownAddinfoImpl.setUuid(getUuid());
		osiServicesTrusteeBreadDownAddinfoImpl.setOsiTrusId(getOsiTrusId());
		osiServicesTrusteeBreadDownAddinfoImpl.setGroupId(getGroupId());
		osiServicesTrusteeBreadDownAddinfoImpl.setCompanyId(getCompanyId());
		osiServicesTrusteeBreadDownAddinfoImpl.setUserId(getUserId());
		osiServicesTrusteeBreadDownAddinfoImpl.setUserName(getUserName());
		osiServicesTrusteeBreadDownAddinfoImpl.setCreateDate(getCreateDate());
		osiServicesTrusteeBreadDownAddinfoImpl.setModifiedDate(
			getModifiedDate());
		osiServicesTrusteeBreadDownAddinfoImpl.setBreakdownWorkingYear(
			getBreakdownWorkingYear());
		osiServicesTrusteeBreadDownAddinfoImpl.setWorkingBankrupties(
			getWorkingBankrupties());
		osiServicesTrusteeBreadDownAddinfoImpl.setWorkingProposal(
			getWorkingProposal());
		osiServicesTrusteeBreadDownAddinfoImpl.setWorkingComBankrupts(
			getWorkingComBankrupts());
		osiServicesTrusteeBreadDownAddinfoImpl.setWorkingComProposal(
			getWorkingComProposal());
		osiServicesTrusteeBreadDownAddinfoImpl.setWorkingInterimReceive(
			getWorkingInterimReceive());
		osiServicesTrusteeBreadDownAddinfoImpl.setBreakdownWorkingCreditors(
			getBreakdownWorkingCreditors());
		osiServicesTrusteeBreadDownAddinfoImpl.setBreakdownWorkingOther(
			getBreakdownWorkingOther());
		osiServicesTrusteeBreadDownAddinfoImpl.setCounter(getCounter());
		osiServicesTrusteeBreadDownAddinfoImpl.setOsiServicesApplicationId(
			getOsiServicesApplicationId());

		osiServicesTrusteeBreadDownAddinfoImpl.resetOriginalValues();

		return osiServicesTrusteeBreadDownAddinfoImpl;
	}

	@Override
	public OsiServicesTrusteeBreadDownAddinfo cloneWithOriginalValues() {
		OsiServicesTrusteeBreadDownAddinfoImpl
			osiServicesTrusteeBreadDownAddinfoImpl =
				new OsiServicesTrusteeBreadDownAddinfoImpl();

		osiServicesTrusteeBreadDownAddinfoImpl.setUuid(
			this.<String>getColumnOriginalValue("uuid_"));
		osiServicesTrusteeBreadDownAddinfoImpl.setOsiTrusId(
			this.<Long>getColumnOriginalValue("osiTrusId"));
		osiServicesTrusteeBreadDownAddinfoImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		osiServicesTrusteeBreadDownAddinfoImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		osiServicesTrusteeBreadDownAddinfoImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		osiServicesTrusteeBreadDownAddinfoImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		osiServicesTrusteeBreadDownAddinfoImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		osiServicesTrusteeBreadDownAddinfoImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		osiServicesTrusteeBreadDownAddinfoImpl.setBreakdownWorkingYear(
			this.<String>getColumnOriginalValue("breakdownWorkingYear"));
		osiServicesTrusteeBreadDownAddinfoImpl.setWorkingBankrupties(
			this.<String>getColumnOriginalValue("workingBankrupties"));
		osiServicesTrusteeBreadDownAddinfoImpl.setWorkingProposal(
			this.<String>getColumnOriginalValue("workingProposal"));
		osiServicesTrusteeBreadDownAddinfoImpl.setWorkingComBankrupts(
			this.<String>getColumnOriginalValue("workingComBankrupts"));
		osiServicesTrusteeBreadDownAddinfoImpl.setWorkingComProposal(
			this.<String>getColumnOriginalValue("workingComProposal"));
		osiServicesTrusteeBreadDownAddinfoImpl.setWorkingInterimReceive(
			this.<String>getColumnOriginalValue("workingInterimReceive"));
		osiServicesTrusteeBreadDownAddinfoImpl.setBreakdownWorkingCreditors(
			this.<String>getColumnOriginalValue("breakdownWorkingCreditors"));
		osiServicesTrusteeBreadDownAddinfoImpl.setBreakdownWorkingOther(
			this.<String>getColumnOriginalValue("breakdownWorkingOther"));
		osiServicesTrusteeBreadDownAddinfoImpl.setCounter(
			this.<String>getColumnOriginalValue("counter"));
		osiServicesTrusteeBreadDownAddinfoImpl.setOsiServicesApplicationId(
			this.<Long>getColumnOriginalValue("osiServicesApplicationId"));

		return osiServicesTrusteeBreadDownAddinfoImpl;
	}

	@Override
	public int compareTo(
		OsiServicesTrusteeBreadDownAddinfo osiServicesTrusteeBreadDownAddinfo) {

		long primaryKey = osiServicesTrusteeBreadDownAddinfo.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof OsiServicesTrusteeBreadDownAddinfo)) {
			return false;
		}

		OsiServicesTrusteeBreadDownAddinfo osiServicesTrusteeBreadDownAddinfo =
			(OsiServicesTrusteeBreadDownAddinfo)object;

		long primaryKey = osiServicesTrusteeBreadDownAddinfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<OsiServicesTrusteeBreadDownAddinfo> toCacheModel() {
		OsiServicesTrusteeBreadDownAddinfoCacheModel
			osiServicesTrusteeBreadDownAddinfoCacheModel =
				new OsiServicesTrusteeBreadDownAddinfoCacheModel();

		osiServicesTrusteeBreadDownAddinfoCacheModel.uuid = getUuid();

		String uuid = osiServicesTrusteeBreadDownAddinfoCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			osiServicesTrusteeBreadDownAddinfoCacheModel.uuid = null;
		}

		osiServicesTrusteeBreadDownAddinfoCacheModel.osiTrusId = getOsiTrusId();

		osiServicesTrusteeBreadDownAddinfoCacheModel.groupId = getGroupId();

		osiServicesTrusteeBreadDownAddinfoCacheModel.companyId = getCompanyId();

		osiServicesTrusteeBreadDownAddinfoCacheModel.userId = getUserId();

		osiServicesTrusteeBreadDownAddinfoCacheModel.userName = getUserName();

		String userName = osiServicesTrusteeBreadDownAddinfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			osiServicesTrusteeBreadDownAddinfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			osiServicesTrusteeBreadDownAddinfoCacheModel.createDate =
				createDate.getTime();
		}
		else {
			osiServicesTrusteeBreadDownAddinfoCacheModel.createDate =
				Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			osiServicesTrusteeBreadDownAddinfoCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			osiServicesTrusteeBreadDownAddinfoCacheModel.modifiedDate =
				Long.MIN_VALUE;
		}

		osiServicesTrusteeBreadDownAddinfoCacheModel.breakdownWorkingYear =
			getBreakdownWorkingYear();

		String breakdownWorkingYear =
			osiServicesTrusteeBreadDownAddinfoCacheModel.breakdownWorkingYear;

		if ((breakdownWorkingYear != null) &&
			(breakdownWorkingYear.length() == 0)) {

			osiServicesTrusteeBreadDownAddinfoCacheModel.breakdownWorkingYear =
				null;
		}

		osiServicesTrusteeBreadDownAddinfoCacheModel.workingBankrupties =
			getWorkingBankrupties();

		String workingBankrupties =
			osiServicesTrusteeBreadDownAddinfoCacheModel.workingBankrupties;

		if ((workingBankrupties != null) &&
			(workingBankrupties.length() == 0)) {

			osiServicesTrusteeBreadDownAddinfoCacheModel.workingBankrupties =
				null;
		}

		osiServicesTrusteeBreadDownAddinfoCacheModel.workingProposal =
			getWorkingProposal();

		String workingProposal =
			osiServicesTrusteeBreadDownAddinfoCacheModel.workingProposal;

		if ((workingProposal != null) && (workingProposal.length() == 0)) {
			osiServicesTrusteeBreadDownAddinfoCacheModel.workingProposal = null;
		}

		osiServicesTrusteeBreadDownAddinfoCacheModel.workingComBankrupts =
			getWorkingComBankrupts();

		String workingComBankrupts =
			osiServicesTrusteeBreadDownAddinfoCacheModel.workingComBankrupts;

		if ((workingComBankrupts != null) &&
			(workingComBankrupts.length() == 0)) {

			osiServicesTrusteeBreadDownAddinfoCacheModel.workingComBankrupts =
				null;
		}

		osiServicesTrusteeBreadDownAddinfoCacheModel.workingComProposal =
			getWorkingComProposal();

		String workingComProposal =
			osiServicesTrusteeBreadDownAddinfoCacheModel.workingComProposal;

		if ((workingComProposal != null) &&
			(workingComProposal.length() == 0)) {

			osiServicesTrusteeBreadDownAddinfoCacheModel.workingComProposal =
				null;
		}

		osiServicesTrusteeBreadDownAddinfoCacheModel.workingInterimReceive =
			getWorkingInterimReceive();

		String workingInterimReceive =
			osiServicesTrusteeBreadDownAddinfoCacheModel.workingInterimReceive;

		if ((workingInterimReceive != null) &&
			(workingInterimReceive.length() == 0)) {

			osiServicesTrusteeBreadDownAddinfoCacheModel.workingInterimReceive =
				null;
		}

		osiServicesTrusteeBreadDownAddinfoCacheModel.breakdownWorkingCreditors =
			getBreakdownWorkingCreditors();

		String breakdownWorkingCreditors =
			osiServicesTrusteeBreadDownAddinfoCacheModel.
				breakdownWorkingCreditors;

		if ((breakdownWorkingCreditors != null) &&
			(breakdownWorkingCreditors.length() == 0)) {

			osiServicesTrusteeBreadDownAddinfoCacheModel.
				breakdownWorkingCreditors = null;
		}

		osiServicesTrusteeBreadDownAddinfoCacheModel.breakdownWorkingOther =
			getBreakdownWorkingOther();

		String breakdownWorkingOther =
			osiServicesTrusteeBreadDownAddinfoCacheModel.breakdownWorkingOther;

		if ((breakdownWorkingOther != null) &&
			(breakdownWorkingOther.length() == 0)) {

			osiServicesTrusteeBreadDownAddinfoCacheModel.breakdownWorkingOther =
				null;
		}

		osiServicesTrusteeBreadDownAddinfoCacheModel.counter = getCounter();

		String counter = osiServicesTrusteeBreadDownAddinfoCacheModel.counter;

		if ((counter != null) && (counter.length() == 0)) {
			osiServicesTrusteeBreadDownAddinfoCacheModel.counter = null;
		}

		osiServicesTrusteeBreadDownAddinfoCacheModel.osiServicesApplicationId =
			getOsiServicesApplicationId();

		return osiServicesTrusteeBreadDownAddinfoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<OsiServicesTrusteeBreadDownAddinfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry
				<String, Function<OsiServicesTrusteeBreadDownAddinfo, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<OsiServicesTrusteeBreadDownAddinfo, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(OsiServicesTrusteeBreadDownAddinfo)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, OsiServicesTrusteeBreadDownAddinfo>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						OsiServicesTrusteeBreadDownAddinfo.class,
						ModelWrapper.class);

	}

	private String _uuid;
	private long _osiTrusId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _breakdownWorkingYear;
	private String _workingBankrupties;
	private String _workingProposal;
	private String _workingComBankrupts;
	private String _workingComProposal;
	private String _workingInterimReceive;
	private String _breakdownWorkingCreditors;
	private String _breakdownWorkingOther;
	private String _counter;
	private long _osiServicesApplicationId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<OsiServicesTrusteeBreadDownAddinfo, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((OsiServicesTrusteeBreadDownAddinfo)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("osiTrusId", _osiTrusId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"breakdownWorkingYear", _breakdownWorkingYear);
		_columnOriginalValues.put("workingBankrupties", _workingBankrupties);
		_columnOriginalValues.put("workingProposal", _workingProposal);
		_columnOriginalValues.put("workingComBankrupts", _workingComBankrupts);
		_columnOriginalValues.put("workingComProposal", _workingComProposal);
		_columnOriginalValues.put(
			"workingInterimReceive", _workingInterimReceive);
		_columnOriginalValues.put(
			"breakdownWorkingCreditors", _breakdownWorkingCreditors);
		_columnOriginalValues.put(
			"breakdownWorkingOther", _breakdownWorkingOther);
		_columnOriginalValues.put("counter", _counter);
		_columnOriginalValues.put(
			"osiServicesApplicationId", _osiServicesApplicationId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("osiTrusId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("userId", 16L);

		columnBitmasks.put("userName", 32L);

		columnBitmasks.put("createDate", 64L);

		columnBitmasks.put("modifiedDate", 128L);

		columnBitmasks.put("breakdownWorkingYear", 256L);

		columnBitmasks.put("workingBankrupties", 512L);

		columnBitmasks.put("workingProposal", 1024L);

		columnBitmasks.put("workingComBankrupts", 2048L);

		columnBitmasks.put("workingComProposal", 4096L);

		columnBitmasks.put("workingInterimReceive", 8192L);

		columnBitmasks.put("breakdownWorkingCreditors", 16384L);

		columnBitmasks.put("breakdownWorkingOther", 32768L);

		columnBitmasks.put("counter", 65536L);

		columnBitmasks.put("osiServicesApplicationId", 131072L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private OsiServicesTrusteeBreadDownAddinfo _escapedModel;

}