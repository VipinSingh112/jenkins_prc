/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.mining.lease.application.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.mining.lease.application.service.model.MiningProspectingRights;
import com.nbp.mining.lease.application.service.model.MiningProspectingRightsModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the MiningProspectingRights service. Represents a row in the &quot;nbp_mining_prospect_rights&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>MiningProspectingRightsModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MiningProspectingRightsImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see MiningProspectingRightsImpl
 * @generated
 */
@JSON(strict = true)
public class MiningProspectingRightsModelImpl
	extends BaseModelImpl<MiningProspectingRights>
	implements MiningProspectingRightsModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a mining prospecting rights model instance should use the <code>MiningProspectingRights</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_mining_prospect_rights";

	public static final Object[][] TABLE_COLUMNS = {
		{"prospectingRightsId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"nameOfApplicant", Types.VARCHAR},
		{"trnNum", Types.VARCHAR}, {"nationalityOfApplicant", Types.VARCHAR},
		{"ageOfApplicant", Types.VARCHAR}, {"telephoneNum", Types.VARCHAR},
		{"emailAddr", Types.VARCHAR}, {"addressInJamaica", Types.VARCHAR},
		{"applicantProspectAcc", Types.VARCHAR},
		{"otherPersonName", Types.VARCHAR}, {"otherPersonAddr", Types.VARCHAR},
		{"prevApplication", Types.VARCHAR}, {"offenceMiningAct", Types.VARCHAR},
		{"validProspectRight", Types.VARCHAR},
		{"surrenderProspectRight", Types.VARCHAR},
		{"prospectRightsFeeCheck", Types.VARCHAR},
		{"miningLeaseApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("prospectingRightsId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("nameOfApplicant", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("trnNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nationalityOfApplicant", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ageOfApplicant", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("telephoneNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("emailAddr", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("addressInJamaica", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantProspectAcc", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("otherPersonName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("otherPersonAddr", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("prevApplication", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("offenceMiningAct", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("validProspectRight", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("surrenderProspectRight", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("prospectRightsFeeCheck", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("miningLeaseApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_mining_prospect_rights (prospectingRightsId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,nameOfApplicant VARCHAR(75) null,trnNum VARCHAR(75) null,nationalityOfApplicant VARCHAR(75) null,ageOfApplicant VARCHAR(75) null,telephoneNum VARCHAR(75) null,emailAddr VARCHAR(75) null,addressInJamaica VARCHAR(1000) null,applicantProspectAcc VARCHAR(75) null,otherPersonName VARCHAR(75) null,otherPersonAddr VARCHAR(1000) null,prevApplication VARCHAR(75) null,offenceMiningAct VARCHAR(75) null,validProspectRight VARCHAR(75) null,surrenderProspectRight VARCHAR(75) null,prospectRightsFeeCheck VARCHAR(75) null,miningLeaseApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_mining_prospect_rights";

	public static final String ORDER_BY_JPQL =
		" ORDER BY miningProspectingRights.createDate ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_mining_prospect_rights.createDate ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long MININGLEASEAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public MiningProspectingRightsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _prospectingRightsId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setProspectingRightsId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _prospectingRightsId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return MiningProspectingRights.class;
	}

	@Override
	public String getModelClassName() {
		return MiningProspectingRights.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<MiningProspectingRights, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<MiningProspectingRights, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<MiningProspectingRights, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((MiningProspectingRights)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<MiningProspectingRights, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<MiningProspectingRights, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(MiningProspectingRights)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<MiningProspectingRights, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<MiningProspectingRights, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<MiningProspectingRights, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<MiningProspectingRights, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<MiningProspectingRights, Object>>();

			attributeGetterFunctions.put(
				"prospectingRightsId",
				MiningProspectingRights::getProspectingRightsId);
			attributeGetterFunctions.put(
				"groupId", MiningProspectingRights::getGroupId);
			attributeGetterFunctions.put(
				"companyId", MiningProspectingRights::getCompanyId);
			attributeGetterFunctions.put(
				"userId", MiningProspectingRights::getUserId);
			attributeGetterFunctions.put(
				"userName", MiningProspectingRights::getUserName);
			attributeGetterFunctions.put(
				"createDate", MiningProspectingRights::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", MiningProspectingRights::getModifiedDate);
			attributeGetterFunctions.put(
				"nameOfApplicant", MiningProspectingRights::getNameOfApplicant);
			attributeGetterFunctions.put(
				"trnNum", MiningProspectingRights::getTrnNum);
			attributeGetterFunctions.put(
				"nationalityOfApplicant",
				MiningProspectingRights::getNationalityOfApplicant);
			attributeGetterFunctions.put(
				"ageOfApplicant", MiningProspectingRights::getAgeOfApplicant);
			attributeGetterFunctions.put(
				"telephoneNum", MiningProspectingRights::getTelephoneNum);
			attributeGetterFunctions.put(
				"emailAddr", MiningProspectingRights::getEmailAddr);
			attributeGetterFunctions.put(
				"addressInJamaica",
				MiningProspectingRights::getAddressInJamaica);
			attributeGetterFunctions.put(
				"applicantProspectAcc",
				MiningProspectingRights::getApplicantProspectAcc);
			attributeGetterFunctions.put(
				"otherPersonName", MiningProspectingRights::getOtherPersonName);
			attributeGetterFunctions.put(
				"otherPersonAddr", MiningProspectingRights::getOtherPersonAddr);
			attributeGetterFunctions.put(
				"prevApplication", MiningProspectingRights::getPrevApplication);
			attributeGetterFunctions.put(
				"offenceMiningAct",
				MiningProspectingRights::getOffenceMiningAct);
			attributeGetterFunctions.put(
				"validProspectRight",
				MiningProspectingRights::getValidProspectRight);
			attributeGetterFunctions.put(
				"surrenderProspectRight",
				MiningProspectingRights::getSurrenderProspectRight);
			attributeGetterFunctions.put(
				"prospectRightsFeeCheck",
				MiningProspectingRights::getProspectRightsFeeCheck);
			attributeGetterFunctions.put(
				"miningLeaseApplicationId",
				MiningProspectingRights::getMiningLeaseApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<MiningProspectingRights, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<MiningProspectingRights, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<MiningProspectingRights, ?>>();

			attributeSetterBiConsumers.put(
				"prospectingRightsId",
				(BiConsumer<MiningProspectingRights, Long>)
					MiningProspectingRights::setProspectingRightsId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<MiningProspectingRights, Long>)
					MiningProspectingRights::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<MiningProspectingRights, Long>)
					MiningProspectingRights::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<MiningProspectingRights, Long>)
					MiningProspectingRights::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<MiningProspectingRights, String>)
					MiningProspectingRights::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<MiningProspectingRights, Date>)
					MiningProspectingRights::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<MiningProspectingRights, Date>)
					MiningProspectingRights::setModifiedDate);
			attributeSetterBiConsumers.put(
				"nameOfApplicant",
				(BiConsumer<MiningProspectingRights, String>)
					MiningProspectingRights::setNameOfApplicant);
			attributeSetterBiConsumers.put(
				"trnNum",
				(BiConsumer<MiningProspectingRights, String>)
					MiningProspectingRights::setTrnNum);
			attributeSetterBiConsumers.put(
				"nationalityOfApplicant",
				(BiConsumer<MiningProspectingRights, String>)
					MiningProspectingRights::setNationalityOfApplicant);
			attributeSetterBiConsumers.put(
				"ageOfApplicant",
				(BiConsumer<MiningProspectingRights, String>)
					MiningProspectingRights::setAgeOfApplicant);
			attributeSetterBiConsumers.put(
				"telephoneNum",
				(BiConsumer<MiningProspectingRights, String>)
					MiningProspectingRights::setTelephoneNum);
			attributeSetterBiConsumers.put(
				"emailAddr",
				(BiConsumer<MiningProspectingRights, String>)
					MiningProspectingRights::setEmailAddr);
			attributeSetterBiConsumers.put(
				"addressInJamaica",
				(BiConsumer<MiningProspectingRights, String>)
					MiningProspectingRights::setAddressInJamaica);
			attributeSetterBiConsumers.put(
				"applicantProspectAcc",
				(BiConsumer<MiningProspectingRights, String>)
					MiningProspectingRights::setApplicantProspectAcc);
			attributeSetterBiConsumers.put(
				"otherPersonName",
				(BiConsumer<MiningProspectingRights, String>)
					MiningProspectingRights::setOtherPersonName);
			attributeSetterBiConsumers.put(
				"otherPersonAddr",
				(BiConsumer<MiningProspectingRights, String>)
					MiningProspectingRights::setOtherPersonAddr);
			attributeSetterBiConsumers.put(
				"prevApplication",
				(BiConsumer<MiningProspectingRights, String>)
					MiningProspectingRights::setPrevApplication);
			attributeSetterBiConsumers.put(
				"offenceMiningAct",
				(BiConsumer<MiningProspectingRights, String>)
					MiningProspectingRights::setOffenceMiningAct);
			attributeSetterBiConsumers.put(
				"validProspectRight",
				(BiConsumer<MiningProspectingRights, String>)
					MiningProspectingRights::setValidProspectRight);
			attributeSetterBiConsumers.put(
				"surrenderProspectRight",
				(BiConsumer<MiningProspectingRights, String>)
					MiningProspectingRights::setSurrenderProspectRight);
			attributeSetterBiConsumers.put(
				"prospectRightsFeeCheck",
				(BiConsumer<MiningProspectingRights, String>)
					MiningProspectingRights::setProspectRightsFeeCheck);
			attributeSetterBiConsumers.put(
				"miningLeaseApplicationId",
				(BiConsumer<MiningProspectingRights, Long>)
					MiningProspectingRights::setMiningLeaseApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getProspectingRightsId() {
		return _prospectingRightsId;
	}

	@Override
	public void setProspectingRightsId(long prospectingRightsId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_prospectingRightsId = prospectingRightsId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getNameOfApplicant() {
		if (_nameOfApplicant == null) {
			return "";
		}
		else {
			return _nameOfApplicant;
		}
	}

	@Override
	public void setNameOfApplicant(String nameOfApplicant) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nameOfApplicant = nameOfApplicant;
	}

	@JSON
	@Override
	public String getTrnNum() {
		if (_trnNum == null) {
			return "";
		}
		else {
			return _trnNum;
		}
	}

	@Override
	public void setTrnNum(String trnNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_trnNum = trnNum;
	}

	@JSON
	@Override
	public String getNationalityOfApplicant() {
		if (_nationalityOfApplicant == null) {
			return "";
		}
		else {
			return _nationalityOfApplicant;
		}
	}

	@Override
	public void setNationalityOfApplicant(String nationalityOfApplicant) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nationalityOfApplicant = nationalityOfApplicant;
	}

	@JSON
	@Override
	public String getAgeOfApplicant() {
		if (_ageOfApplicant == null) {
			return "";
		}
		else {
			return _ageOfApplicant;
		}
	}

	@Override
	public void setAgeOfApplicant(String ageOfApplicant) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ageOfApplicant = ageOfApplicant;
	}

	@JSON
	@Override
	public String getTelephoneNum() {
		if (_telephoneNum == null) {
			return "";
		}
		else {
			return _telephoneNum;
		}
	}

	@Override
	public void setTelephoneNum(String telephoneNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_telephoneNum = telephoneNum;
	}

	@JSON
	@Override
	public String getEmailAddr() {
		if (_emailAddr == null) {
			return "";
		}
		else {
			return _emailAddr;
		}
	}

	@Override
	public void setEmailAddr(String emailAddr) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_emailAddr = emailAddr;
	}

	@JSON
	@Override
	public String getAddressInJamaica() {
		if (_addressInJamaica == null) {
			return "";
		}
		else {
			return _addressInJamaica;
		}
	}

	@Override
	public void setAddressInJamaica(String addressInJamaica) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_addressInJamaica = addressInJamaica;
	}

	@JSON
	@Override
	public String getApplicantProspectAcc() {
		if (_applicantProspectAcc == null) {
			return "";
		}
		else {
			return _applicantProspectAcc;
		}
	}

	@Override
	public void setApplicantProspectAcc(String applicantProspectAcc) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicantProspectAcc = applicantProspectAcc;
	}

	@JSON
	@Override
	public String getOtherPersonName() {
		if (_otherPersonName == null) {
			return "";
		}
		else {
			return _otherPersonName;
		}
	}

	@Override
	public void setOtherPersonName(String otherPersonName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_otherPersonName = otherPersonName;
	}

	@JSON
	@Override
	public String getOtherPersonAddr() {
		if (_otherPersonAddr == null) {
			return "";
		}
		else {
			return _otherPersonAddr;
		}
	}

	@Override
	public void setOtherPersonAddr(String otherPersonAddr) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_otherPersonAddr = otherPersonAddr;
	}

	@JSON
	@Override
	public String getPrevApplication() {
		if (_prevApplication == null) {
			return "";
		}
		else {
			return _prevApplication;
		}
	}

	@Override
	public void setPrevApplication(String prevApplication) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_prevApplication = prevApplication;
	}

	@JSON
	@Override
	public String getOffenceMiningAct() {
		if (_offenceMiningAct == null) {
			return "";
		}
		else {
			return _offenceMiningAct;
		}
	}

	@Override
	public void setOffenceMiningAct(String offenceMiningAct) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_offenceMiningAct = offenceMiningAct;
	}

	@JSON
	@Override
	public String getValidProspectRight() {
		if (_validProspectRight == null) {
			return "";
		}
		else {
			return _validProspectRight;
		}
	}

	@Override
	public void setValidProspectRight(String validProspectRight) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_validProspectRight = validProspectRight;
	}

	@JSON
	@Override
	public String getSurrenderProspectRight() {
		if (_surrenderProspectRight == null) {
			return "";
		}
		else {
			return _surrenderProspectRight;
		}
	}

	@Override
	public void setSurrenderProspectRight(String surrenderProspectRight) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_surrenderProspectRight = surrenderProspectRight;
	}

	@JSON
	@Override
	public String getProspectRightsFeeCheck() {
		if (_prospectRightsFeeCheck == null) {
			return "";
		}
		else {
			return _prospectRightsFeeCheck;
		}
	}

	@Override
	public void setProspectRightsFeeCheck(String prospectRightsFeeCheck) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_prospectRightsFeeCheck = prospectRightsFeeCheck;
	}

	@JSON
	@Override
	public long getMiningLeaseApplicationId() {
		return _miningLeaseApplicationId;
	}

	@Override
	public void setMiningLeaseApplicationId(long miningLeaseApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_miningLeaseApplicationId = miningLeaseApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalMiningLeaseApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("miningLeaseApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), MiningProspectingRights.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public MiningProspectingRights toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, MiningProspectingRights>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		MiningProspectingRightsImpl miningProspectingRightsImpl =
			new MiningProspectingRightsImpl();

		miningProspectingRightsImpl.setProspectingRightsId(
			getProspectingRightsId());
		miningProspectingRightsImpl.setGroupId(getGroupId());
		miningProspectingRightsImpl.setCompanyId(getCompanyId());
		miningProspectingRightsImpl.setUserId(getUserId());
		miningProspectingRightsImpl.setUserName(getUserName());
		miningProspectingRightsImpl.setCreateDate(getCreateDate());
		miningProspectingRightsImpl.setModifiedDate(getModifiedDate());
		miningProspectingRightsImpl.setNameOfApplicant(getNameOfApplicant());
		miningProspectingRightsImpl.setTrnNum(getTrnNum());
		miningProspectingRightsImpl.setNationalityOfApplicant(
			getNationalityOfApplicant());
		miningProspectingRightsImpl.setAgeOfApplicant(getAgeOfApplicant());
		miningProspectingRightsImpl.setTelephoneNum(getTelephoneNum());
		miningProspectingRightsImpl.setEmailAddr(getEmailAddr());
		miningProspectingRightsImpl.setAddressInJamaica(getAddressInJamaica());
		miningProspectingRightsImpl.setApplicantProspectAcc(
			getApplicantProspectAcc());
		miningProspectingRightsImpl.setOtherPersonName(getOtherPersonName());
		miningProspectingRightsImpl.setOtherPersonAddr(getOtherPersonAddr());
		miningProspectingRightsImpl.setPrevApplication(getPrevApplication());
		miningProspectingRightsImpl.setOffenceMiningAct(getOffenceMiningAct());
		miningProspectingRightsImpl.setValidProspectRight(
			getValidProspectRight());
		miningProspectingRightsImpl.setSurrenderProspectRight(
			getSurrenderProspectRight());
		miningProspectingRightsImpl.setProspectRightsFeeCheck(
			getProspectRightsFeeCheck());
		miningProspectingRightsImpl.setMiningLeaseApplicationId(
			getMiningLeaseApplicationId());

		miningProspectingRightsImpl.resetOriginalValues();

		return miningProspectingRightsImpl;
	}

	@Override
	public MiningProspectingRights cloneWithOriginalValues() {
		MiningProspectingRightsImpl miningProspectingRightsImpl =
			new MiningProspectingRightsImpl();

		miningProspectingRightsImpl.setProspectingRightsId(
			this.<Long>getColumnOriginalValue("prospectingRightsId"));
		miningProspectingRightsImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		miningProspectingRightsImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		miningProspectingRightsImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		miningProspectingRightsImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		miningProspectingRightsImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		miningProspectingRightsImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		miningProspectingRightsImpl.setNameOfApplicant(
			this.<String>getColumnOriginalValue("nameOfApplicant"));
		miningProspectingRightsImpl.setTrnNum(
			this.<String>getColumnOriginalValue("trnNum"));
		miningProspectingRightsImpl.setNationalityOfApplicant(
			this.<String>getColumnOriginalValue("nationalityOfApplicant"));
		miningProspectingRightsImpl.setAgeOfApplicant(
			this.<String>getColumnOriginalValue("ageOfApplicant"));
		miningProspectingRightsImpl.setTelephoneNum(
			this.<String>getColumnOriginalValue("telephoneNum"));
		miningProspectingRightsImpl.setEmailAddr(
			this.<String>getColumnOriginalValue("emailAddr"));
		miningProspectingRightsImpl.setAddressInJamaica(
			this.<String>getColumnOriginalValue("addressInJamaica"));
		miningProspectingRightsImpl.setApplicantProspectAcc(
			this.<String>getColumnOriginalValue("applicantProspectAcc"));
		miningProspectingRightsImpl.setOtherPersonName(
			this.<String>getColumnOriginalValue("otherPersonName"));
		miningProspectingRightsImpl.setOtherPersonAddr(
			this.<String>getColumnOriginalValue("otherPersonAddr"));
		miningProspectingRightsImpl.setPrevApplication(
			this.<String>getColumnOriginalValue("prevApplication"));
		miningProspectingRightsImpl.setOffenceMiningAct(
			this.<String>getColumnOriginalValue("offenceMiningAct"));
		miningProspectingRightsImpl.setValidProspectRight(
			this.<String>getColumnOriginalValue("validProspectRight"));
		miningProspectingRightsImpl.setSurrenderProspectRight(
			this.<String>getColumnOriginalValue("surrenderProspectRight"));
		miningProspectingRightsImpl.setProspectRightsFeeCheck(
			this.<String>getColumnOriginalValue("prospectRightsFeeCheck"));
		miningProspectingRightsImpl.setMiningLeaseApplicationId(
			this.<Long>getColumnOriginalValue("miningLeaseApplicationId"));

		return miningProspectingRightsImpl;
	}

	@Override
	public int compareTo(MiningProspectingRights miningProspectingRights) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), miningProspectingRights.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof MiningProspectingRights)) {
			return false;
		}

		MiningProspectingRights miningProspectingRights =
			(MiningProspectingRights)object;

		long primaryKey = miningProspectingRights.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<MiningProspectingRights> toCacheModel() {
		MiningProspectingRightsCacheModel miningProspectingRightsCacheModel =
			new MiningProspectingRightsCacheModel();

		miningProspectingRightsCacheModel.prospectingRightsId =
			getProspectingRightsId();

		miningProspectingRightsCacheModel.groupId = getGroupId();

		miningProspectingRightsCacheModel.companyId = getCompanyId();

		miningProspectingRightsCacheModel.userId = getUserId();

		miningProspectingRightsCacheModel.userName = getUserName();

		String userName = miningProspectingRightsCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			miningProspectingRightsCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			miningProspectingRightsCacheModel.createDate = createDate.getTime();
		}
		else {
			miningProspectingRightsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			miningProspectingRightsCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			miningProspectingRightsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		miningProspectingRightsCacheModel.nameOfApplicant =
			getNameOfApplicant();

		String nameOfApplicant =
			miningProspectingRightsCacheModel.nameOfApplicant;

		if ((nameOfApplicant != null) && (nameOfApplicant.length() == 0)) {
			miningProspectingRightsCacheModel.nameOfApplicant = null;
		}

		miningProspectingRightsCacheModel.trnNum = getTrnNum();

		String trnNum = miningProspectingRightsCacheModel.trnNum;

		if ((trnNum != null) && (trnNum.length() == 0)) {
			miningProspectingRightsCacheModel.trnNum = null;
		}

		miningProspectingRightsCacheModel.nationalityOfApplicant =
			getNationalityOfApplicant();

		String nationalityOfApplicant =
			miningProspectingRightsCacheModel.nationalityOfApplicant;

		if ((nationalityOfApplicant != null) &&
			(nationalityOfApplicant.length() == 0)) {

			miningProspectingRightsCacheModel.nationalityOfApplicant = null;
		}

		miningProspectingRightsCacheModel.ageOfApplicant = getAgeOfApplicant();

		String ageOfApplicant =
			miningProspectingRightsCacheModel.ageOfApplicant;

		if ((ageOfApplicant != null) && (ageOfApplicant.length() == 0)) {
			miningProspectingRightsCacheModel.ageOfApplicant = null;
		}

		miningProspectingRightsCacheModel.telephoneNum = getTelephoneNum();

		String telephoneNum = miningProspectingRightsCacheModel.telephoneNum;

		if ((telephoneNum != null) && (telephoneNum.length() == 0)) {
			miningProspectingRightsCacheModel.telephoneNum = null;
		}

		miningProspectingRightsCacheModel.emailAddr = getEmailAddr();

		String emailAddr = miningProspectingRightsCacheModel.emailAddr;

		if ((emailAddr != null) && (emailAddr.length() == 0)) {
			miningProspectingRightsCacheModel.emailAddr = null;
		}

		miningProspectingRightsCacheModel.addressInJamaica =
			getAddressInJamaica();

		String addressInJamaica =
			miningProspectingRightsCacheModel.addressInJamaica;

		if ((addressInJamaica != null) && (addressInJamaica.length() == 0)) {
			miningProspectingRightsCacheModel.addressInJamaica = null;
		}

		miningProspectingRightsCacheModel.applicantProspectAcc =
			getApplicantProspectAcc();

		String applicantProspectAcc =
			miningProspectingRightsCacheModel.applicantProspectAcc;

		if ((applicantProspectAcc != null) &&
			(applicantProspectAcc.length() == 0)) {

			miningProspectingRightsCacheModel.applicantProspectAcc = null;
		}

		miningProspectingRightsCacheModel.otherPersonName =
			getOtherPersonName();

		String otherPersonName =
			miningProspectingRightsCacheModel.otherPersonName;

		if ((otherPersonName != null) && (otherPersonName.length() == 0)) {
			miningProspectingRightsCacheModel.otherPersonName = null;
		}

		miningProspectingRightsCacheModel.otherPersonAddr =
			getOtherPersonAddr();

		String otherPersonAddr =
			miningProspectingRightsCacheModel.otherPersonAddr;

		if ((otherPersonAddr != null) && (otherPersonAddr.length() == 0)) {
			miningProspectingRightsCacheModel.otherPersonAddr = null;
		}

		miningProspectingRightsCacheModel.prevApplication =
			getPrevApplication();

		String prevApplication =
			miningProspectingRightsCacheModel.prevApplication;

		if ((prevApplication != null) && (prevApplication.length() == 0)) {
			miningProspectingRightsCacheModel.prevApplication = null;
		}

		miningProspectingRightsCacheModel.offenceMiningAct =
			getOffenceMiningAct();

		String offenceMiningAct =
			miningProspectingRightsCacheModel.offenceMiningAct;

		if ((offenceMiningAct != null) && (offenceMiningAct.length() == 0)) {
			miningProspectingRightsCacheModel.offenceMiningAct = null;
		}

		miningProspectingRightsCacheModel.validProspectRight =
			getValidProspectRight();

		String validProspectRight =
			miningProspectingRightsCacheModel.validProspectRight;

		if ((validProspectRight != null) &&
			(validProspectRight.length() == 0)) {

			miningProspectingRightsCacheModel.validProspectRight = null;
		}

		miningProspectingRightsCacheModel.surrenderProspectRight =
			getSurrenderProspectRight();

		String surrenderProspectRight =
			miningProspectingRightsCacheModel.surrenderProspectRight;

		if ((surrenderProspectRight != null) &&
			(surrenderProspectRight.length() == 0)) {

			miningProspectingRightsCacheModel.surrenderProspectRight = null;
		}

		miningProspectingRightsCacheModel.prospectRightsFeeCheck =
			getProspectRightsFeeCheck();

		String prospectRightsFeeCheck =
			miningProspectingRightsCacheModel.prospectRightsFeeCheck;

		if ((prospectRightsFeeCheck != null) &&
			(prospectRightsFeeCheck.length() == 0)) {

			miningProspectingRightsCacheModel.prospectRightsFeeCheck = null;
		}

		miningProspectingRightsCacheModel.miningLeaseApplicationId =
			getMiningLeaseApplicationId();

		return miningProspectingRightsCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<MiningProspectingRights, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<MiningProspectingRights, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<MiningProspectingRights, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(MiningProspectingRights)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, MiningProspectingRights>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						MiningProspectingRights.class, ModelWrapper.class);

	}

	private long _prospectingRightsId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _nameOfApplicant;
	private String _trnNum;
	private String _nationalityOfApplicant;
	private String _ageOfApplicant;
	private String _telephoneNum;
	private String _emailAddr;
	private String _addressInJamaica;
	private String _applicantProspectAcc;
	private String _otherPersonName;
	private String _otherPersonAddr;
	private String _prevApplication;
	private String _offenceMiningAct;
	private String _validProspectRight;
	private String _surrenderProspectRight;
	private String _prospectRightsFeeCheck;
	private long _miningLeaseApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<MiningProspectingRights, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((MiningProspectingRights)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("prospectingRightsId", _prospectingRightsId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("nameOfApplicant", _nameOfApplicant);
		_columnOriginalValues.put("trnNum", _trnNum);
		_columnOriginalValues.put(
			"nationalityOfApplicant", _nationalityOfApplicant);
		_columnOriginalValues.put("ageOfApplicant", _ageOfApplicant);
		_columnOriginalValues.put("telephoneNum", _telephoneNum);
		_columnOriginalValues.put("emailAddr", _emailAddr);
		_columnOriginalValues.put("addressInJamaica", _addressInJamaica);
		_columnOriginalValues.put(
			"applicantProspectAcc", _applicantProspectAcc);
		_columnOriginalValues.put("otherPersonName", _otherPersonName);
		_columnOriginalValues.put("otherPersonAddr", _otherPersonAddr);
		_columnOriginalValues.put("prevApplication", _prevApplication);
		_columnOriginalValues.put("offenceMiningAct", _offenceMiningAct);
		_columnOriginalValues.put("validProspectRight", _validProspectRight);
		_columnOriginalValues.put(
			"surrenderProspectRight", _surrenderProspectRight);
		_columnOriginalValues.put(
			"prospectRightsFeeCheck", _prospectRightsFeeCheck);
		_columnOriginalValues.put(
			"miningLeaseApplicationId", _miningLeaseApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("prospectingRightsId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("nameOfApplicant", 128L);

		columnBitmasks.put("trnNum", 256L);

		columnBitmasks.put("nationalityOfApplicant", 512L);

		columnBitmasks.put("ageOfApplicant", 1024L);

		columnBitmasks.put("telephoneNum", 2048L);

		columnBitmasks.put("emailAddr", 4096L);

		columnBitmasks.put("addressInJamaica", 8192L);

		columnBitmasks.put("applicantProspectAcc", 16384L);

		columnBitmasks.put("otherPersonName", 32768L);

		columnBitmasks.put("otherPersonAddr", 65536L);

		columnBitmasks.put("prevApplication", 131072L);

		columnBitmasks.put("offenceMiningAct", 262144L);

		columnBitmasks.put("validProspectRight", 524288L);

		columnBitmasks.put("surrenderProspectRight", 1048576L);

		columnBitmasks.put("prospectRightsFeeCheck", 2097152L);

		columnBitmasks.put("miningLeaseApplicationId", 4194304L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private MiningProspectingRights _escapedModel;

}