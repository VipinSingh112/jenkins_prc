/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.mining.lease.application.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.mining.lease.application.service.model.MiningFormFiveDelineation;
import com.nbp.mining.lease.application.service.model.MiningFormFiveDelineationModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the MiningFormFiveDelineation service. Represents a row in the &quot;nbp_delineation_area&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>MiningFormFiveDelineationModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MiningFormFiveDelineationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see MiningFormFiveDelineationImpl
 * @generated
 */
@JSON(strict = true)
public class MiningFormFiveDelineationModelImpl
	extends BaseModelImpl<MiningFormFiveDelineation>
	implements MiningFormFiveDelineationModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a mining form five delineation model instance should use the <code>MiningFormFiveDelineation</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_delineation_area";

	public static final Object[][] TABLE_COLUMNS = {
		{"miningFormFiveDelineationId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"approximatelyArea", Types.VARCHAR}, {"location", Types.VARCHAR},
		{"coordinates", Types.VARCHAR}, {"northSide", Types.VARCHAR},
		{"eastSide", Types.VARCHAR}, {"firstNorthSide", Types.VARCHAR},
		{"firstEastSide", Types.VARCHAR}, {"firstLocationGrid", Types.VARCHAR},
		{"firstDegrees", Types.VARCHAR}, {"secondNorthSide", Types.VARCHAR},
		{"secondEastSide", Types.VARCHAR},
		{"secondLocationGrid", Types.VARCHAR}, {"secondDegrees", Types.VARCHAR},
		{"thirdCoordinates", Types.VARCHAR}, {"thirdNorthSide", Types.VARCHAR},
		{"thirdEastSide", Types.VARCHAR}, {"thirdDegrees", Types.VARCHAR},
		{"thirdGridLoc", Types.VARCHAR}, {"thirdGridL", Types.VARCHAR},
		{"fourthCoordinates", Types.VARCHAR},
		{"fourthNorthSide", Types.VARCHAR}, {"fourthEastSide", Types.VARCHAR},
		{"fourthDegrees", Types.VARCHAR}, {"fourthGridLoc", Types.VARCHAR},
		{"fourthGridL", Types.VARCHAR}, {"fifthCoordinates", Types.VARCHAR},
		{"fifthNorthSide", Types.VARCHAR}, {"fifthEastSide", Types.VARCHAR},
		{"fifthDegrees", Types.VARCHAR}, {"fifthGridLoc", Types.VARCHAR},
		{"fifthGridL", Types.VARCHAR},
		{"miningLeaseApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("miningFormFiveDelineationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("approximatelyArea", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("location", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("coordinates", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("northSide", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("eastSide", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("firstNorthSide", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("firstEastSide", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("firstLocationGrid", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("firstDegrees", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("secondNorthSide", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("secondEastSide", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("secondLocationGrid", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("secondDegrees", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("thirdCoordinates", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("thirdNorthSide", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("thirdEastSide", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("thirdDegrees", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("thirdGridLoc", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("thirdGridL", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fourthCoordinates", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fourthNorthSide", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fourthEastSide", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fourthDegrees", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fourthGridLoc", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fourthGridL", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fifthCoordinates", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fifthNorthSide", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fifthEastSide", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fifthDegrees", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fifthGridLoc", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fifthGridL", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("miningLeaseApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_delineation_area (miningFormFiveDelineationId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,approximatelyArea VARCHAR(75) null,location VARCHAR(75) null,coordinates VARCHAR(75) null,northSide VARCHAR(75) null,eastSide VARCHAR(75) null,firstNorthSide VARCHAR(75) null,firstEastSide VARCHAR(75) null,firstLocationGrid VARCHAR(75) null,firstDegrees VARCHAR(75) null,secondNorthSide VARCHAR(75) null,secondEastSide VARCHAR(75) null,secondLocationGrid VARCHAR(75) null,secondDegrees VARCHAR(75) null,thirdCoordinates VARCHAR(75) null,thirdNorthSide VARCHAR(75) null,thirdEastSide VARCHAR(75) null,thirdDegrees VARCHAR(75) null,thirdGridLoc VARCHAR(75) null,thirdGridL VARCHAR(75) null,fourthCoordinates VARCHAR(75) null,fourthNorthSide VARCHAR(75) null,fourthEastSide VARCHAR(75) null,fourthDegrees VARCHAR(75) null,fourthGridLoc VARCHAR(75) null,fourthGridL VARCHAR(75) null,fifthCoordinates VARCHAR(75) null,fifthNorthSide VARCHAR(75) null,fifthEastSide VARCHAR(75) null,fifthDegrees VARCHAR(75) null,fifthGridLoc VARCHAR(75) null,fifthGridL VARCHAR(75) null,miningLeaseApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_delineation_area";

	public static final String ORDER_BY_JPQL =
		" ORDER BY miningFormFiveDelineation.miningFormFiveDelineationId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_delineation_area.miningFormFiveDelineationId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long MININGLEASEAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long MININGFORMFIVEDELINEATIONID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public MiningFormFiveDelineationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _miningFormFiveDelineationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setMiningFormFiveDelineationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _miningFormFiveDelineationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return MiningFormFiveDelineation.class;
	}

	@Override
	public String getModelClassName() {
		return MiningFormFiveDelineation.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<MiningFormFiveDelineation, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<MiningFormFiveDelineation, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<MiningFormFiveDelineation, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((MiningFormFiveDelineation)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<MiningFormFiveDelineation, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<MiningFormFiveDelineation, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(MiningFormFiveDelineation)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<MiningFormFiveDelineation, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<MiningFormFiveDelineation, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<MiningFormFiveDelineation, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<MiningFormFiveDelineation, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<MiningFormFiveDelineation, Object>>();

			attributeGetterFunctions.put(
				"miningFormFiveDelineationId",
				MiningFormFiveDelineation::getMiningFormFiveDelineationId);
			attributeGetterFunctions.put(
				"groupId", MiningFormFiveDelineation::getGroupId);
			attributeGetterFunctions.put(
				"companyId", MiningFormFiveDelineation::getCompanyId);
			attributeGetterFunctions.put(
				"userId", MiningFormFiveDelineation::getUserId);
			attributeGetterFunctions.put(
				"userName", MiningFormFiveDelineation::getUserName);
			attributeGetterFunctions.put(
				"createDate", MiningFormFiveDelineation::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", MiningFormFiveDelineation::getModifiedDate);
			attributeGetterFunctions.put(
				"approximatelyArea",
				MiningFormFiveDelineation::getApproximatelyArea);
			attributeGetterFunctions.put(
				"location", MiningFormFiveDelineation::getLocation);
			attributeGetterFunctions.put(
				"coordinates", MiningFormFiveDelineation::getCoordinates);
			attributeGetterFunctions.put(
				"northSide", MiningFormFiveDelineation::getNorthSide);
			attributeGetterFunctions.put(
				"eastSide", MiningFormFiveDelineation::getEastSide);
			attributeGetterFunctions.put(
				"firstNorthSide", MiningFormFiveDelineation::getFirstNorthSide);
			attributeGetterFunctions.put(
				"firstEastSide", MiningFormFiveDelineation::getFirstEastSide);
			attributeGetterFunctions.put(
				"firstLocationGrid",
				MiningFormFiveDelineation::getFirstLocationGrid);
			attributeGetterFunctions.put(
				"firstDegrees", MiningFormFiveDelineation::getFirstDegrees);
			attributeGetterFunctions.put(
				"secondNorthSide",
				MiningFormFiveDelineation::getSecondNorthSide);
			attributeGetterFunctions.put(
				"secondEastSide", MiningFormFiveDelineation::getSecondEastSide);
			attributeGetterFunctions.put(
				"secondLocationGrid",
				MiningFormFiveDelineation::getSecondLocationGrid);
			attributeGetterFunctions.put(
				"secondDegrees", MiningFormFiveDelineation::getSecondDegrees);
			attributeGetterFunctions.put(
				"thirdCoordinates",
				MiningFormFiveDelineation::getThirdCoordinates);
			attributeGetterFunctions.put(
				"thirdNorthSide", MiningFormFiveDelineation::getThirdNorthSide);
			attributeGetterFunctions.put(
				"thirdEastSide", MiningFormFiveDelineation::getThirdEastSide);
			attributeGetterFunctions.put(
				"thirdDegrees", MiningFormFiveDelineation::getThirdDegrees);
			attributeGetterFunctions.put(
				"thirdGridLoc", MiningFormFiveDelineation::getThirdGridLoc);
			attributeGetterFunctions.put(
				"thirdGridL", MiningFormFiveDelineation::getThirdGridL);
			attributeGetterFunctions.put(
				"fourthCoordinates",
				MiningFormFiveDelineation::getFourthCoordinates);
			attributeGetterFunctions.put(
				"fourthNorthSide",
				MiningFormFiveDelineation::getFourthNorthSide);
			attributeGetterFunctions.put(
				"fourthEastSide", MiningFormFiveDelineation::getFourthEastSide);
			attributeGetterFunctions.put(
				"fourthDegrees", MiningFormFiveDelineation::getFourthDegrees);
			attributeGetterFunctions.put(
				"fourthGridLoc", MiningFormFiveDelineation::getFourthGridLoc);
			attributeGetterFunctions.put(
				"fourthGridL", MiningFormFiveDelineation::getFourthGridL);
			attributeGetterFunctions.put(
				"fifthCoordinates",
				MiningFormFiveDelineation::getFifthCoordinates);
			attributeGetterFunctions.put(
				"fifthNorthSide", MiningFormFiveDelineation::getFifthNorthSide);
			attributeGetterFunctions.put(
				"fifthEastSide", MiningFormFiveDelineation::getFifthEastSide);
			attributeGetterFunctions.put(
				"fifthDegrees", MiningFormFiveDelineation::getFifthDegrees);
			attributeGetterFunctions.put(
				"fifthGridLoc", MiningFormFiveDelineation::getFifthGridLoc);
			attributeGetterFunctions.put(
				"fifthGridL", MiningFormFiveDelineation::getFifthGridL);
			attributeGetterFunctions.put(
				"miningLeaseApplicationId",
				MiningFormFiveDelineation::getMiningLeaseApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<MiningFormFiveDelineation, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<MiningFormFiveDelineation, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<MiningFormFiveDelineation, ?>>();

			attributeSetterBiConsumers.put(
				"miningFormFiveDelineationId",
				(BiConsumer<MiningFormFiveDelineation, Long>)
					MiningFormFiveDelineation::setMiningFormFiveDelineationId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<MiningFormFiveDelineation, Long>)
					MiningFormFiveDelineation::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<MiningFormFiveDelineation, Long>)
					MiningFormFiveDelineation::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<MiningFormFiveDelineation, Long>)
					MiningFormFiveDelineation::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<MiningFormFiveDelineation, Date>)
					MiningFormFiveDelineation::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<MiningFormFiveDelineation, Date>)
					MiningFormFiveDelineation::setModifiedDate);
			attributeSetterBiConsumers.put(
				"approximatelyArea",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setApproximatelyArea);
			attributeSetterBiConsumers.put(
				"location",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setLocation);
			attributeSetterBiConsumers.put(
				"coordinates",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setCoordinates);
			attributeSetterBiConsumers.put(
				"northSide",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setNorthSide);
			attributeSetterBiConsumers.put(
				"eastSide",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setEastSide);
			attributeSetterBiConsumers.put(
				"firstNorthSide",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setFirstNorthSide);
			attributeSetterBiConsumers.put(
				"firstEastSide",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setFirstEastSide);
			attributeSetterBiConsumers.put(
				"firstLocationGrid",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setFirstLocationGrid);
			attributeSetterBiConsumers.put(
				"firstDegrees",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setFirstDegrees);
			attributeSetterBiConsumers.put(
				"secondNorthSide",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setSecondNorthSide);
			attributeSetterBiConsumers.put(
				"secondEastSide",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setSecondEastSide);
			attributeSetterBiConsumers.put(
				"secondLocationGrid",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setSecondLocationGrid);
			attributeSetterBiConsumers.put(
				"secondDegrees",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setSecondDegrees);
			attributeSetterBiConsumers.put(
				"thirdCoordinates",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setThirdCoordinates);
			attributeSetterBiConsumers.put(
				"thirdNorthSide",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setThirdNorthSide);
			attributeSetterBiConsumers.put(
				"thirdEastSide",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setThirdEastSide);
			attributeSetterBiConsumers.put(
				"thirdDegrees",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setThirdDegrees);
			attributeSetterBiConsumers.put(
				"thirdGridLoc",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setThirdGridLoc);
			attributeSetterBiConsumers.put(
				"thirdGridL",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setThirdGridL);
			attributeSetterBiConsumers.put(
				"fourthCoordinates",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setFourthCoordinates);
			attributeSetterBiConsumers.put(
				"fourthNorthSide",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setFourthNorthSide);
			attributeSetterBiConsumers.put(
				"fourthEastSide",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setFourthEastSide);
			attributeSetterBiConsumers.put(
				"fourthDegrees",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setFourthDegrees);
			attributeSetterBiConsumers.put(
				"fourthGridLoc",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setFourthGridLoc);
			attributeSetterBiConsumers.put(
				"fourthGridL",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setFourthGridL);
			attributeSetterBiConsumers.put(
				"fifthCoordinates",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setFifthCoordinates);
			attributeSetterBiConsumers.put(
				"fifthNorthSide",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setFifthNorthSide);
			attributeSetterBiConsumers.put(
				"fifthEastSide",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setFifthEastSide);
			attributeSetterBiConsumers.put(
				"fifthDegrees",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setFifthDegrees);
			attributeSetterBiConsumers.put(
				"fifthGridLoc",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setFifthGridLoc);
			attributeSetterBiConsumers.put(
				"fifthGridL",
				(BiConsumer<MiningFormFiveDelineation, String>)
					MiningFormFiveDelineation::setFifthGridL);
			attributeSetterBiConsumers.put(
				"miningLeaseApplicationId",
				(BiConsumer<MiningFormFiveDelineation, Long>)
					MiningFormFiveDelineation::setMiningLeaseApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getMiningFormFiveDelineationId() {
		return _miningFormFiveDelineationId;
	}

	@Override
	public void setMiningFormFiveDelineationId(
		long miningFormFiveDelineationId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_miningFormFiveDelineationId = miningFormFiveDelineationId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getApproximatelyArea() {
		if (_approximatelyArea == null) {
			return "";
		}
		else {
			return _approximatelyArea;
		}
	}

	@Override
	public void setApproximatelyArea(String approximatelyArea) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_approximatelyArea = approximatelyArea;
	}

	@JSON
	@Override
	public String getLocation() {
		if (_location == null) {
			return "";
		}
		else {
			return _location;
		}
	}

	@Override
	public void setLocation(String location) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_location = location;
	}

	@JSON
	@Override
	public String getCoordinates() {
		if (_coordinates == null) {
			return "";
		}
		else {
			return _coordinates;
		}
	}

	@Override
	public void setCoordinates(String coordinates) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_coordinates = coordinates;
	}

	@JSON
	@Override
	public String getNorthSide() {
		if (_northSide == null) {
			return "";
		}
		else {
			return _northSide;
		}
	}

	@Override
	public void setNorthSide(String northSide) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_northSide = northSide;
	}

	@JSON
	@Override
	public String getEastSide() {
		if (_eastSide == null) {
			return "";
		}
		else {
			return _eastSide;
		}
	}

	@Override
	public void setEastSide(String eastSide) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_eastSide = eastSide;
	}

	@JSON
	@Override
	public String getFirstNorthSide() {
		if (_firstNorthSide == null) {
			return "";
		}
		else {
			return _firstNorthSide;
		}
	}

	@Override
	public void setFirstNorthSide(String firstNorthSide) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_firstNorthSide = firstNorthSide;
	}

	@JSON
	@Override
	public String getFirstEastSide() {
		if (_firstEastSide == null) {
			return "";
		}
		else {
			return _firstEastSide;
		}
	}

	@Override
	public void setFirstEastSide(String firstEastSide) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_firstEastSide = firstEastSide;
	}

	@JSON
	@Override
	public String getFirstLocationGrid() {
		if (_firstLocationGrid == null) {
			return "";
		}
		else {
			return _firstLocationGrid;
		}
	}

	@Override
	public void setFirstLocationGrid(String firstLocationGrid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_firstLocationGrid = firstLocationGrid;
	}

	@JSON
	@Override
	public String getFirstDegrees() {
		if (_firstDegrees == null) {
			return "";
		}
		else {
			return _firstDegrees;
		}
	}

	@Override
	public void setFirstDegrees(String firstDegrees) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_firstDegrees = firstDegrees;
	}

	@JSON
	@Override
	public String getSecondNorthSide() {
		if (_secondNorthSide == null) {
			return "";
		}
		else {
			return _secondNorthSide;
		}
	}

	@Override
	public void setSecondNorthSide(String secondNorthSide) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_secondNorthSide = secondNorthSide;
	}

	@JSON
	@Override
	public String getSecondEastSide() {
		if (_secondEastSide == null) {
			return "";
		}
		else {
			return _secondEastSide;
		}
	}

	@Override
	public void setSecondEastSide(String secondEastSide) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_secondEastSide = secondEastSide;
	}

	@JSON
	@Override
	public String getSecondLocationGrid() {
		if (_secondLocationGrid == null) {
			return "";
		}
		else {
			return _secondLocationGrid;
		}
	}

	@Override
	public void setSecondLocationGrid(String secondLocationGrid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_secondLocationGrid = secondLocationGrid;
	}

	@JSON
	@Override
	public String getSecondDegrees() {
		if (_secondDegrees == null) {
			return "";
		}
		else {
			return _secondDegrees;
		}
	}

	@Override
	public void setSecondDegrees(String secondDegrees) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_secondDegrees = secondDegrees;
	}

	@JSON
	@Override
	public String getThirdCoordinates() {
		if (_thirdCoordinates == null) {
			return "";
		}
		else {
			return _thirdCoordinates;
		}
	}

	@Override
	public void setThirdCoordinates(String thirdCoordinates) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_thirdCoordinates = thirdCoordinates;
	}

	@JSON
	@Override
	public String getThirdNorthSide() {
		if (_thirdNorthSide == null) {
			return "";
		}
		else {
			return _thirdNorthSide;
		}
	}

	@Override
	public void setThirdNorthSide(String thirdNorthSide) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_thirdNorthSide = thirdNorthSide;
	}

	@JSON
	@Override
	public String getThirdEastSide() {
		if (_thirdEastSide == null) {
			return "";
		}
		else {
			return _thirdEastSide;
		}
	}

	@Override
	public void setThirdEastSide(String thirdEastSide) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_thirdEastSide = thirdEastSide;
	}

	@JSON
	@Override
	public String getThirdDegrees() {
		if (_thirdDegrees == null) {
			return "";
		}
		else {
			return _thirdDegrees;
		}
	}

	@Override
	public void setThirdDegrees(String thirdDegrees) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_thirdDegrees = thirdDegrees;
	}

	@JSON
	@Override
	public String getThirdGridLoc() {
		if (_thirdGridLoc == null) {
			return "";
		}
		else {
			return _thirdGridLoc;
		}
	}

	@Override
	public void setThirdGridLoc(String thirdGridLoc) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_thirdGridLoc = thirdGridLoc;
	}

	@JSON
	@Override
	public String getThirdGridL() {
		if (_thirdGridL == null) {
			return "";
		}
		else {
			return _thirdGridL;
		}
	}

	@Override
	public void setThirdGridL(String thirdGridL) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_thirdGridL = thirdGridL;
	}

	@JSON
	@Override
	public String getFourthCoordinates() {
		if (_fourthCoordinates == null) {
			return "";
		}
		else {
			return _fourthCoordinates;
		}
	}

	@Override
	public void setFourthCoordinates(String fourthCoordinates) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fourthCoordinates = fourthCoordinates;
	}

	@JSON
	@Override
	public String getFourthNorthSide() {
		if (_fourthNorthSide == null) {
			return "";
		}
		else {
			return _fourthNorthSide;
		}
	}

	@Override
	public void setFourthNorthSide(String fourthNorthSide) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fourthNorthSide = fourthNorthSide;
	}

	@JSON
	@Override
	public String getFourthEastSide() {
		if (_fourthEastSide == null) {
			return "";
		}
		else {
			return _fourthEastSide;
		}
	}

	@Override
	public void setFourthEastSide(String fourthEastSide) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fourthEastSide = fourthEastSide;
	}

	@JSON
	@Override
	public String getFourthDegrees() {
		if (_fourthDegrees == null) {
			return "";
		}
		else {
			return _fourthDegrees;
		}
	}

	@Override
	public void setFourthDegrees(String fourthDegrees) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fourthDegrees = fourthDegrees;
	}

	@JSON
	@Override
	public String getFourthGridLoc() {
		if (_fourthGridLoc == null) {
			return "";
		}
		else {
			return _fourthGridLoc;
		}
	}

	@Override
	public void setFourthGridLoc(String fourthGridLoc) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fourthGridLoc = fourthGridLoc;
	}

	@JSON
	@Override
	public String getFourthGridL() {
		if (_fourthGridL == null) {
			return "";
		}
		else {
			return _fourthGridL;
		}
	}

	@Override
	public void setFourthGridL(String fourthGridL) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fourthGridL = fourthGridL;
	}

	@JSON
	@Override
	public String getFifthCoordinates() {
		if (_fifthCoordinates == null) {
			return "";
		}
		else {
			return _fifthCoordinates;
		}
	}

	@Override
	public void setFifthCoordinates(String fifthCoordinates) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fifthCoordinates = fifthCoordinates;
	}

	@JSON
	@Override
	public String getFifthNorthSide() {
		if (_fifthNorthSide == null) {
			return "";
		}
		else {
			return _fifthNorthSide;
		}
	}

	@Override
	public void setFifthNorthSide(String fifthNorthSide) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fifthNorthSide = fifthNorthSide;
	}

	@JSON
	@Override
	public String getFifthEastSide() {
		if (_fifthEastSide == null) {
			return "";
		}
		else {
			return _fifthEastSide;
		}
	}

	@Override
	public void setFifthEastSide(String fifthEastSide) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fifthEastSide = fifthEastSide;
	}

	@JSON
	@Override
	public String getFifthDegrees() {
		if (_fifthDegrees == null) {
			return "";
		}
		else {
			return _fifthDegrees;
		}
	}

	@Override
	public void setFifthDegrees(String fifthDegrees) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fifthDegrees = fifthDegrees;
	}

	@JSON
	@Override
	public String getFifthGridLoc() {
		if (_fifthGridLoc == null) {
			return "";
		}
		else {
			return _fifthGridLoc;
		}
	}

	@Override
	public void setFifthGridLoc(String fifthGridLoc) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fifthGridLoc = fifthGridLoc;
	}

	@JSON
	@Override
	public String getFifthGridL() {
		if (_fifthGridL == null) {
			return "";
		}
		else {
			return _fifthGridL;
		}
	}

	@Override
	public void setFifthGridL(String fifthGridL) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fifthGridL = fifthGridL;
	}

	@JSON
	@Override
	public long getMiningLeaseApplicationId() {
		return _miningLeaseApplicationId;
	}

	@Override
	public void setMiningLeaseApplicationId(long miningLeaseApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_miningLeaseApplicationId = miningLeaseApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalMiningLeaseApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("miningLeaseApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), MiningFormFiveDelineation.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public MiningFormFiveDelineation toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, MiningFormFiveDelineation>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		MiningFormFiveDelineationImpl miningFormFiveDelineationImpl =
			new MiningFormFiveDelineationImpl();

		miningFormFiveDelineationImpl.setMiningFormFiveDelineationId(
			getMiningFormFiveDelineationId());
		miningFormFiveDelineationImpl.setGroupId(getGroupId());
		miningFormFiveDelineationImpl.setCompanyId(getCompanyId());
		miningFormFiveDelineationImpl.setUserId(getUserId());
		miningFormFiveDelineationImpl.setUserName(getUserName());
		miningFormFiveDelineationImpl.setCreateDate(getCreateDate());
		miningFormFiveDelineationImpl.setModifiedDate(getModifiedDate());
		miningFormFiveDelineationImpl.setApproximatelyArea(
			getApproximatelyArea());
		miningFormFiveDelineationImpl.setLocation(getLocation());
		miningFormFiveDelineationImpl.setCoordinates(getCoordinates());
		miningFormFiveDelineationImpl.setNorthSide(getNorthSide());
		miningFormFiveDelineationImpl.setEastSide(getEastSide());
		miningFormFiveDelineationImpl.setFirstNorthSide(getFirstNorthSide());
		miningFormFiveDelineationImpl.setFirstEastSide(getFirstEastSide());
		miningFormFiveDelineationImpl.setFirstLocationGrid(
			getFirstLocationGrid());
		miningFormFiveDelineationImpl.setFirstDegrees(getFirstDegrees());
		miningFormFiveDelineationImpl.setSecondNorthSide(getSecondNorthSide());
		miningFormFiveDelineationImpl.setSecondEastSide(getSecondEastSide());
		miningFormFiveDelineationImpl.setSecondLocationGrid(
			getSecondLocationGrid());
		miningFormFiveDelineationImpl.setSecondDegrees(getSecondDegrees());
		miningFormFiveDelineationImpl.setThirdCoordinates(
			getThirdCoordinates());
		miningFormFiveDelineationImpl.setThirdNorthSide(getThirdNorthSide());
		miningFormFiveDelineationImpl.setThirdEastSide(getThirdEastSide());
		miningFormFiveDelineationImpl.setThirdDegrees(getThirdDegrees());
		miningFormFiveDelineationImpl.setThirdGridLoc(getThirdGridLoc());
		miningFormFiveDelineationImpl.setThirdGridL(getThirdGridL());
		miningFormFiveDelineationImpl.setFourthCoordinates(
			getFourthCoordinates());
		miningFormFiveDelineationImpl.setFourthNorthSide(getFourthNorthSide());
		miningFormFiveDelineationImpl.setFourthEastSide(getFourthEastSide());
		miningFormFiveDelineationImpl.setFourthDegrees(getFourthDegrees());
		miningFormFiveDelineationImpl.setFourthGridLoc(getFourthGridLoc());
		miningFormFiveDelineationImpl.setFourthGridL(getFourthGridL());
		miningFormFiveDelineationImpl.setFifthCoordinates(
			getFifthCoordinates());
		miningFormFiveDelineationImpl.setFifthNorthSide(getFifthNorthSide());
		miningFormFiveDelineationImpl.setFifthEastSide(getFifthEastSide());
		miningFormFiveDelineationImpl.setFifthDegrees(getFifthDegrees());
		miningFormFiveDelineationImpl.setFifthGridLoc(getFifthGridLoc());
		miningFormFiveDelineationImpl.setFifthGridL(getFifthGridL());
		miningFormFiveDelineationImpl.setMiningLeaseApplicationId(
			getMiningLeaseApplicationId());

		miningFormFiveDelineationImpl.resetOriginalValues();

		return miningFormFiveDelineationImpl;
	}

	@Override
	public MiningFormFiveDelineation cloneWithOriginalValues() {
		MiningFormFiveDelineationImpl miningFormFiveDelineationImpl =
			new MiningFormFiveDelineationImpl();

		miningFormFiveDelineationImpl.setMiningFormFiveDelineationId(
			this.<Long>getColumnOriginalValue("miningFormFiveDelineationId"));
		miningFormFiveDelineationImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		miningFormFiveDelineationImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		miningFormFiveDelineationImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		miningFormFiveDelineationImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		miningFormFiveDelineationImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		miningFormFiveDelineationImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		miningFormFiveDelineationImpl.setApproximatelyArea(
			this.<String>getColumnOriginalValue("approximatelyArea"));
		miningFormFiveDelineationImpl.setLocation(
			this.<String>getColumnOriginalValue("location"));
		miningFormFiveDelineationImpl.setCoordinates(
			this.<String>getColumnOriginalValue("coordinates"));
		miningFormFiveDelineationImpl.setNorthSide(
			this.<String>getColumnOriginalValue("northSide"));
		miningFormFiveDelineationImpl.setEastSide(
			this.<String>getColumnOriginalValue("eastSide"));
		miningFormFiveDelineationImpl.setFirstNorthSide(
			this.<String>getColumnOriginalValue("firstNorthSide"));
		miningFormFiveDelineationImpl.setFirstEastSide(
			this.<String>getColumnOriginalValue("firstEastSide"));
		miningFormFiveDelineationImpl.setFirstLocationGrid(
			this.<String>getColumnOriginalValue("firstLocationGrid"));
		miningFormFiveDelineationImpl.setFirstDegrees(
			this.<String>getColumnOriginalValue("firstDegrees"));
		miningFormFiveDelineationImpl.setSecondNorthSide(
			this.<String>getColumnOriginalValue("secondNorthSide"));
		miningFormFiveDelineationImpl.setSecondEastSide(
			this.<String>getColumnOriginalValue("secondEastSide"));
		miningFormFiveDelineationImpl.setSecondLocationGrid(
			this.<String>getColumnOriginalValue("secondLocationGrid"));
		miningFormFiveDelineationImpl.setSecondDegrees(
			this.<String>getColumnOriginalValue("secondDegrees"));
		miningFormFiveDelineationImpl.setThirdCoordinates(
			this.<String>getColumnOriginalValue("thirdCoordinates"));
		miningFormFiveDelineationImpl.setThirdNorthSide(
			this.<String>getColumnOriginalValue("thirdNorthSide"));
		miningFormFiveDelineationImpl.setThirdEastSide(
			this.<String>getColumnOriginalValue("thirdEastSide"));
		miningFormFiveDelineationImpl.setThirdDegrees(
			this.<String>getColumnOriginalValue("thirdDegrees"));
		miningFormFiveDelineationImpl.setThirdGridLoc(
			this.<String>getColumnOriginalValue("thirdGridLoc"));
		miningFormFiveDelineationImpl.setThirdGridL(
			this.<String>getColumnOriginalValue("thirdGridL"));
		miningFormFiveDelineationImpl.setFourthCoordinates(
			this.<String>getColumnOriginalValue("fourthCoordinates"));
		miningFormFiveDelineationImpl.setFourthNorthSide(
			this.<String>getColumnOriginalValue("fourthNorthSide"));
		miningFormFiveDelineationImpl.setFourthEastSide(
			this.<String>getColumnOriginalValue("fourthEastSide"));
		miningFormFiveDelineationImpl.setFourthDegrees(
			this.<String>getColumnOriginalValue("fourthDegrees"));
		miningFormFiveDelineationImpl.setFourthGridLoc(
			this.<String>getColumnOriginalValue("fourthGridLoc"));
		miningFormFiveDelineationImpl.setFourthGridL(
			this.<String>getColumnOriginalValue("fourthGridL"));
		miningFormFiveDelineationImpl.setFifthCoordinates(
			this.<String>getColumnOriginalValue("fifthCoordinates"));
		miningFormFiveDelineationImpl.setFifthNorthSide(
			this.<String>getColumnOriginalValue("fifthNorthSide"));
		miningFormFiveDelineationImpl.setFifthEastSide(
			this.<String>getColumnOriginalValue("fifthEastSide"));
		miningFormFiveDelineationImpl.setFifthDegrees(
			this.<String>getColumnOriginalValue("fifthDegrees"));
		miningFormFiveDelineationImpl.setFifthGridLoc(
			this.<String>getColumnOriginalValue("fifthGridLoc"));
		miningFormFiveDelineationImpl.setFifthGridL(
			this.<String>getColumnOriginalValue("fifthGridL"));
		miningFormFiveDelineationImpl.setMiningLeaseApplicationId(
			this.<Long>getColumnOriginalValue("miningLeaseApplicationId"));

		return miningFormFiveDelineationImpl;
	}

	@Override
	public int compareTo(MiningFormFiveDelineation miningFormFiveDelineation) {
		long primaryKey = miningFormFiveDelineation.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof MiningFormFiveDelineation)) {
			return false;
		}

		MiningFormFiveDelineation miningFormFiveDelineation =
			(MiningFormFiveDelineation)object;

		long primaryKey = miningFormFiveDelineation.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<MiningFormFiveDelineation> toCacheModel() {
		MiningFormFiveDelineationCacheModel
			miningFormFiveDelineationCacheModel =
				new MiningFormFiveDelineationCacheModel();

		miningFormFiveDelineationCacheModel.miningFormFiveDelineationId =
			getMiningFormFiveDelineationId();

		miningFormFiveDelineationCacheModel.groupId = getGroupId();

		miningFormFiveDelineationCacheModel.companyId = getCompanyId();

		miningFormFiveDelineationCacheModel.userId = getUserId();

		miningFormFiveDelineationCacheModel.userName = getUserName();

		String userName = miningFormFiveDelineationCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			miningFormFiveDelineationCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			miningFormFiveDelineationCacheModel.createDate =
				createDate.getTime();
		}
		else {
			miningFormFiveDelineationCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			miningFormFiveDelineationCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			miningFormFiveDelineationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		miningFormFiveDelineationCacheModel.approximatelyArea =
			getApproximatelyArea();

		String approximatelyArea =
			miningFormFiveDelineationCacheModel.approximatelyArea;

		if ((approximatelyArea != null) && (approximatelyArea.length() == 0)) {
			miningFormFiveDelineationCacheModel.approximatelyArea = null;
		}

		miningFormFiveDelineationCacheModel.location = getLocation();

		String location = miningFormFiveDelineationCacheModel.location;

		if ((location != null) && (location.length() == 0)) {
			miningFormFiveDelineationCacheModel.location = null;
		}

		miningFormFiveDelineationCacheModel.coordinates = getCoordinates();

		String coordinates = miningFormFiveDelineationCacheModel.coordinates;

		if ((coordinates != null) && (coordinates.length() == 0)) {
			miningFormFiveDelineationCacheModel.coordinates = null;
		}

		miningFormFiveDelineationCacheModel.northSide = getNorthSide();

		String northSide = miningFormFiveDelineationCacheModel.northSide;

		if ((northSide != null) && (northSide.length() == 0)) {
			miningFormFiveDelineationCacheModel.northSide = null;
		}

		miningFormFiveDelineationCacheModel.eastSide = getEastSide();

		String eastSide = miningFormFiveDelineationCacheModel.eastSide;

		if ((eastSide != null) && (eastSide.length() == 0)) {
			miningFormFiveDelineationCacheModel.eastSide = null;
		}

		miningFormFiveDelineationCacheModel.firstNorthSide =
			getFirstNorthSide();

		String firstNorthSide =
			miningFormFiveDelineationCacheModel.firstNorthSide;

		if ((firstNorthSide != null) && (firstNorthSide.length() == 0)) {
			miningFormFiveDelineationCacheModel.firstNorthSide = null;
		}

		miningFormFiveDelineationCacheModel.firstEastSide = getFirstEastSide();

		String firstEastSide =
			miningFormFiveDelineationCacheModel.firstEastSide;

		if ((firstEastSide != null) && (firstEastSide.length() == 0)) {
			miningFormFiveDelineationCacheModel.firstEastSide = null;
		}

		miningFormFiveDelineationCacheModel.firstLocationGrid =
			getFirstLocationGrid();

		String firstLocationGrid =
			miningFormFiveDelineationCacheModel.firstLocationGrid;

		if ((firstLocationGrid != null) && (firstLocationGrid.length() == 0)) {
			miningFormFiveDelineationCacheModel.firstLocationGrid = null;
		}

		miningFormFiveDelineationCacheModel.firstDegrees = getFirstDegrees();

		String firstDegrees = miningFormFiveDelineationCacheModel.firstDegrees;

		if ((firstDegrees != null) && (firstDegrees.length() == 0)) {
			miningFormFiveDelineationCacheModel.firstDegrees = null;
		}

		miningFormFiveDelineationCacheModel.secondNorthSide =
			getSecondNorthSide();

		String secondNorthSide =
			miningFormFiveDelineationCacheModel.secondNorthSide;

		if ((secondNorthSide != null) && (secondNorthSide.length() == 0)) {
			miningFormFiveDelineationCacheModel.secondNorthSide = null;
		}

		miningFormFiveDelineationCacheModel.secondEastSide =
			getSecondEastSide();

		String secondEastSide =
			miningFormFiveDelineationCacheModel.secondEastSide;

		if ((secondEastSide != null) && (secondEastSide.length() == 0)) {
			miningFormFiveDelineationCacheModel.secondEastSide = null;
		}

		miningFormFiveDelineationCacheModel.secondLocationGrid =
			getSecondLocationGrid();

		String secondLocationGrid =
			miningFormFiveDelineationCacheModel.secondLocationGrid;

		if ((secondLocationGrid != null) &&
			(secondLocationGrid.length() == 0)) {

			miningFormFiveDelineationCacheModel.secondLocationGrid = null;
		}

		miningFormFiveDelineationCacheModel.secondDegrees = getSecondDegrees();

		String secondDegrees =
			miningFormFiveDelineationCacheModel.secondDegrees;

		if ((secondDegrees != null) && (secondDegrees.length() == 0)) {
			miningFormFiveDelineationCacheModel.secondDegrees = null;
		}

		miningFormFiveDelineationCacheModel.thirdCoordinates =
			getThirdCoordinates();

		String thirdCoordinates =
			miningFormFiveDelineationCacheModel.thirdCoordinates;

		if ((thirdCoordinates != null) && (thirdCoordinates.length() == 0)) {
			miningFormFiveDelineationCacheModel.thirdCoordinates = null;
		}

		miningFormFiveDelineationCacheModel.thirdNorthSide =
			getThirdNorthSide();

		String thirdNorthSide =
			miningFormFiveDelineationCacheModel.thirdNorthSide;

		if ((thirdNorthSide != null) && (thirdNorthSide.length() == 0)) {
			miningFormFiveDelineationCacheModel.thirdNorthSide = null;
		}

		miningFormFiveDelineationCacheModel.thirdEastSide = getThirdEastSide();

		String thirdEastSide =
			miningFormFiveDelineationCacheModel.thirdEastSide;

		if ((thirdEastSide != null) && (thirdEastSide.length() == 0)) {
			miningFormFiveDelineationCacheModel.thirdEastSide = null;
		}

		miningFormFiveDelineationCacheModel.thirdDegrees = getThirdDegrees();

		String thirdDegrees = miningFormFiveDelineationCacheModel.thirdDegrees;

		if ((thirdDegrees != null) && (thirdDegrees.length() == 0)) {
			miningFormFiveDelineationCacheModel.thirdDegrees = null;
		}

		miningFormFiveDelineationCacheModel.thirdGridLoc = getThirdGridLoc();

		String thirdGridLoc = miningFormFiveDelineationCacheModel.thirdGridLoc;

		if ((thirdGridLoc != null) && (thirdGridLoc.length() == 0)) {
			miningFormFiveDelineationCacheModel.thirdGridLoc = null;
		}

		miningFormFiveDelineationCacheModel.thirdGridL = getThirdGridL();

		String thirdGridL = miningFormFiveDelineationCacheModel.thirdGridL;

		if ((thirdGridL != null) && (thirdGridL.length() == 0)) {
			miningFormFiveDelineationCacheModel.thirdGridL = null;
		}

		miningFormFiveDelineationCacheModel.fourthCoordinates =
			getFourthCoordinates();

		String fourthCoordinates =
			miningFormFiveDelineationCacheModel.fourthCoordinates;

		if ((fourthCoordinates != null) && (fourthCoordinates.length() == 0)) {
			miningFormFiveDelineationCacheModel.fourthCoordinates = null;
		}

		miningFormFiveDelineationCacheModel.fourthNorthSide =
			getFourthNorthSide();

		String fourthNorthSide =
			miningFormFiveDelineationCacheModel.fourthNorthSide;

		if ((fourthNorthSide != null) && (fourthNorthSide.length() == 0)) {
			miningFormFiveDelineationCacheModel.fourthNorthSide = null;
		}

		miningFormFiveDelineationCacheModel.fourthEastSide =
			getFourthEastSide();

		String fourthEastSide =
			miningFormFiveDelineationCacheModel.fourthEastSide;

		if ((fourthEastSide != null) && (fourthEastSide.length() == 0)) {
			miningFormFiveDelineationCacheModel.fourthEastSide = null;
		}

		miningFormFiveDelineationCacheModel.fourthDegrees = getFourthDegrees();

		String fourthDegrees =
			miningFormFiveDelineationCacheModel.fourthDegrees;

		if ((fourthDegrees != null) && (fourthDegrees.length() == 0)) {
			miningFormFiveDelineationCacheModel.fourthDegrees = null;
		}

		miningFormFiveDelineationCacheModel.fourthGridLoc = getFourthGridLoc();

		String fourthGridLoc =
			miningFormFiveDelineationCacheModel.fourthGridLoc;

		if ((fourthGridLoc != null) && (fourthGridLoc.length() == 0)) {
			miningFormFiveDelineationCacheModel.fourthGridLoc = null;
		}

		miningFormFiveDelineationCacheModel.fourthGridL = getFourthGridL();

		String fourthGridL = miningFormFiveDelineationCacheModel.fourthGridL;

		if ((fourthGridL != null) && (fourthGridL.length() == 0)) {
			miningFormFiveDelineationCacheModel.fourthGridL = null;
		}

		miningFormFiveDelineationCacheModel.fifthCoordinates =
			getFifthCoordinates();

		String fifthCoordinates =
			miningFormFiveDelineationCacheModel.fifthCoordinates;

		if ((fifthCoordinates != null) && (fifthCoordinates.length() == 0)) {
			miningFormFiveDelineationCacheModel.fifthCoordinates = null;
		}

		miningFormFiveDelineationCacheModel.fifthNorthSide =
			getFifthNorthSide();

		String fifthNorthSide =
			miningFormFiveDelineationCacheModel.fifthNorthSide;

		if ((fifthNorthSide != null) && (fifthNorthSide.length() == 0)) {
			miningFormFiveDelineationCacheModel.fifthNorthSide = null;
		}

		miningFormFiveDelineationCacheModel.fifthEastSide = getFifthEastSide();

		String fifthEastSide =
			miningFormFiveDelineationCacheModel.fifthEastSide;

		if ((fifthEastSide != null) && (fifthEastSide.length() == 0)) {
			miningFormFiveDelineationCacheModel.fifthEastSide = null;
		}

		miningFormFiveDelineationCacheModel.fifthDegrees = getFifthDegrees();

		String fifthDegrees = miningFormFiveDelineationCacheModel.fifthDegrees;

		if ((fifthDegrees != null) && (fifthDegrees.length() == 0)) {
			miningFormFiveDelineationCacheModel.fifthDegrees = null;
		}

		miningFormFiveDelineationCacheModel.fifthGridLoc = getFifthGridLoc();

		String fifthGridLoc = miningFormFiveDelineationCacheModel.fifthGridLoc;

		if ((fifthGridLoc != null) && (fifthGridLoc.length() == 0)) {
			miningFormFiveDelineationCacheModel.fifthGridLoc = null;
		}

		miningFormFiveDelineationCacheModel.fifthGridL = getFifthGridL();

		String fifthGridL = miningFormFiveDelineationCacheModel.fifthGridL;

		if ((fifthGridL != null) && (fifthGridL.length() == 0)) {
			miningFormFiveDelineationCacheModel.fifthGridL = null;
		}

		miningFormFiveDelineationCacheModel.miningLeaseApplicationId =
			getMiningLeaseApplicationId();

		return miningFormFiveDelineationCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<MiningFormFiveDelineation, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<MiningFormFiveDelineation, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<MiningFormFiveDelineation, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(MiningFormFiveDelineation)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, MiningFormFiveDelineation>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						MiningFormFiveDelineation.class, ModelWrapper.class);

	}

	private long _miningFormFiveDelineationId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _approximatelyArea;
	private String _location;
	private String _coordinates;
	private String _northSide;
	private String _eastSide;
	private String _firstNorthSide;
	private String _firstEastSide;
	private String _firstLocationGrid;
	private String _firstDegrees;
	private String _secondNorthSide;
	private String _secondEastSide;
	private String _secondLocationGrid;
	private String _secondDegrees;
	private String _thirdCoordinates;
	private String _thirdNorthSide;
	private String _thirdEastSide;
	private String _thirdDegrees;
	private String _thirdGridLoc;
	private String _thirdGridL;
	private String _fourthCoordinates;
	private String _fourthNorthSide;
	private String _fourthEastSide;
	private String _fourthDegrees;
	private String _fourthGridLoc;
	private String _fourthGridL;
	private String _fifthCoordinates;
	private String _fifthNorthSide;
	private String _fifthEastSide;
	private String _fifthDegrees;
	private String _fifthGridLoc;
	private String _fifthGridL;
	private long _miningLeaseApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<MiningFormFiveDelineation, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((MiningFormFiveDelineation)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"miningFormFiveDelineationId", _miningFormFiveDelineationId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("approximatelyArea", _approximatelyArea);
		_columnOriginalValues.put("location", _location);
		_columnOriginalValues.put("coordinates", _coordinates);
		_columnOriginalValues.put("northSide", _northSide);
		_columnOriginalValues.put("eastSide", _eastSide);
		_columnOriginalValues.put("firstNorthSide", _firstNorthSide);
		_columnOriginalValues.put("firstEastSide", _firstEastSide);
		_columnOriginalValues.put("firstLocationGrid", _firstLocationGrid);
		_columnOriginalValues.put("firstDegrees", _firstDegrees);
		_columnOriginalValues.put("secondNorthSide", _secondNorthSide);
		_columnOriginalValues.put("secondEastSide", _secondEastSide);
		_columnOriginalValues.put("secondLocationGrid", _secondLocationGrid);
		_columnOriginalValues.put("secondDegrees", _secondDegrees);
		_columnOriginalValues.put("thirdCoordinates", _thirdCoordinates);
		_columnOriginalValues.put("thirdNorthSide", _thirdNorthSide);
		_columnOriginalValues.put("thirdEastSide", _thirdEastSide);
		_columnOriginalValues.put("thirdDegrees", _thirdDegrees);
		_columnOriginalValues.put("thirdGridLoc", _thirdGridLoc);
		_columnOriginalValues.put("thirdGridL", _thirdGridL);
		_columnOriginalValues.put("fourthCoordinates", _fourthCoordinates);
		_columnOriginalValues.put("fourthNorthSide", _fourthNorthSide);
		_columnOriginalValues.put("fourthEastSide", _fourthEastSide);
		_columnOriginalValues.put("fourthDegrees", _fourthDegrees);
		_columnOriginalValues.put("fourthGridLoc", _fourthGridLoc);
		_columnOriginalValues.put("fourthGridL", _fourthGridL);
		_columnOriginalValues.put("fifthCoordinates", _fifthCoordinates);
		_columnOriginalValues.put("fifthNorthSide", _fifthNorthSide);
		_columnOriginalValues.put("fifthEastSide", _fifthEastSide);
		_columnOriginalValues.put("fifthDegrees", _fifthDegrees);
		_columnOriginalValues.put("fifthGridLoc", _fifthGridLoc);
		_columnOriginalValues.put("fifthGridL", _fifthGridL);
		_columnOriginalValues.put(
			"miningLeaseApplicationId", _miningLeaseApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("miningFormFiveDelineationId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("approximatelyArea", 128L);

		columnBitmasks.put("location", 256L);

		columnBitmasks.put("coordinates", 512L);

		columnBitmasks.put("northSide", 1024L);

		columnBitmasks.put("eastSide", 2048L);

		columnBitmasks.put("firstNorthSide", 4096L);

		columnBitmasks.put("firstEastSide", 8192L);

		columnBitmasks.put("firstLocationGrid", 16384L);

		columnBitmasks.put("firstDegrees", 32768L);

		columnBitmasks.put("secondNorthSide", 65536L);

		columnBitmasks.put("secondEastSide", 131072L);

		columnBitmasks.put("secondLocationGrid", 262144L);

		columnBitmasks.put("secondDegrees", 524288L);

		columnBitmasks.put("thirdCoordinates", 1048576L);

		columnBitmasks.put("thirdNorthSide", 2097152L);

		columnBitmasks.put("thirdEastSide", 4194304L);

		columnBitmasks.put("thirdDegrees", 8388608L);

		columnBitmasks.put("thirdGridLoc", 16777216L);

		columnBitmasks.put("thirdGridL", 33554432L);

		columnBitmasks.put("fourthCoordinates", 67108864L);

		columnBitmasks.put("fourthNorthSide", 134217728L);

		columnBitmasks.put("fourthEastSide", 268435456L);

		columnBitmasks.put("fourthDegrees", 536870912L);

		columnBitmasks.put("fourthGridLoc", 1073741824L);

		columnBitmasks.put("fourthGridL", 2147483648L);

		columnBitmasks.put("fifthCoordinates", 4294967296L);

		columnBitmasks.put("fifthNorthSide", 8589934592L);

		columnBitmasks.put("fifthEastSide", 17179869184L);

		columnBitmasks.put("fifthDegrees", 34359738368L);

		columnBitmasks.put("fifthGridLoc", 68719476736L);

		columnBitmasks.put("fifthGridL", 137438953472L);

		columnBitmasks.put("miningLeaseApplicationId", 274877906944L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private MiningFormFiveDelineation _escapedModel;

}