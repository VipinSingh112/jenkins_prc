/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.mining.lease.application.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.mining.lease.application.service.model.MiningExclusiveLicFormFive;
import com.nbp.mining.lease.application.service.model.MiningExclusiveLicFormFiveModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the MiningExclusiveLicFormFive service. Represents a row in the &quot;nbp_exclusive_form_five&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>MiningExclusiveLicFormFiveModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MiningExclusiveLicFormFiveImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see MiningExclusiveLicFormFiveImpl
 * @generated
 */
@JSON(strict = true)
public class MiningExclusiveLicFormFiveModelImpl
	extends BaseModelImpl<MiningExclusiveLicFormFive>
	implements MiningExclusiveLicFormFiveModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a mining exclusive lic form five model instance should use the <code>MiningExclusiveLicFormFive</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_exclusive_form_five";

	public static final Object[][] TABLE_COLUMNS = {
		{"miningExclusiveLicFormFiveId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"applicantNameLicence", Types.VARCHAR},
		{"trnNumberLicence", Types.VARCHAR},
		{"applicantNationalityLicence", Types.VARCHAR},
		{"applicantAddressLicence", Types.VARCHAR},
		{"applicantTelephoneLicence", Types.VARCHAR},
		{"applicantEmailLicence", Types.VARCHAR},
		{"applicantNumberLicence", Types.VARCHAR},
		{"agentNameLicence", Types.VARCHAR},
		{"numProspectingLicence", Types.VARCHAR},
		{"agentNameLicenceGrant", Types.VARCHAR},
		{"applicantLicence", Types.VARCHAR},
		{"justicePeaceParish", Types.VARCHAR},
		{"applicantLandmarkLicence", Types.VARCHAR},
		{"applicantAreaLicence", Types.VARCHAR},
		{"applicantDesires", Types.VARCHAR},
		{"dateLocationLic", Types.TIMESTAMP},
		{"incorporationLodged", Types.VARCHAR},
		{"miningLeaseApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("miningExclusiveLicFormFiveId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("applicantNameLicence", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("trnNumberLicence", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantNationalityLicence", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantAddressLicence", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantTelephoneLicence", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantEmailLicence", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantNumberLicence", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("agentNameLicence", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("numProspectingLicence", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("agentNameLicenceGrant", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantLicence", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("justicePeaceParish", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantLandmarkLicence", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantAreaLicence", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantDesires", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dateLocationLic", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("incorporationLodged", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("miningLeaseApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_exclusive_form_five (miningExclusiveLicFormFiveId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,applicantNameLicence VARCHAR(75) null,trnNumberLicence VARCHAR(75) null,applicantNationalityLicence VARCHAR(75) null,applicantAddressLicence VARCHAR(500) null,applicantTelephoneLicence VARCHAR(75) null,applicantEmailLicence VARCHAR(75) null,applicantNumberLicence VARCHAR(75) null,agentNameLicence VARCHAR(75) null,numProspectingLicence VARCHAR(75) null,agentNameLicenceGrant VARCHAR(500) null,applicantLicence VARCHAR(75) null,justicePeaceParish VARCHAR(75) null,applicantLandmarkLicence VARCHAR(75) null,applicantAreaLicence VARCHAR(75) null,applicantDesires VARCHAR(500) null,dateLocationLic DATE null,incorporationLodged VARCHAR(75) null,miningLeaseApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_exclusive_form_five";

	public static final String ORDER_BY_JPQL =
		" ORDER BY miningExclusiveLicFormFive.miningExclusiveLicFormFiveId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_exclusive_form_five.miningExclusiveLicFormFiveId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long MININGLEASEAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long MININGEXCLUSIVELICFORMFIVEID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public MiningExclusiveLicFormFiveModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _miningExclusiveLicFormFiveId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setMiningExclusiveLicFormFiveId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _miningExclusiveLicFormFiveId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return MiningExclusiveLicFormFive.class;
	}

	@Override
	public String getModelClassName() {
		return MiningExclusiveLicFormFive.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<MiningExclusiveLicFormFive, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<MiningExclusiveLicFormFive, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<MiningExclusiveLicFormFive, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(MiningExclusiveLicFormFive)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<MiningExclusiveLicFormFive, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<MiningExclusiveLicFormFive, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(MiningExclusiveLicFormFive)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<MiningExclusiveLicFormFive, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<MiningExclusiveLicFormFive, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<MiningExclusiveLicFormFive, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<MiningExclusiveLicFormFive, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String,
						 Function<MiningExclusiveLicFormFive, Object>>();

			attributeGetterFunctions.put(
				"miningExclusiveLicFormFiveId",
				MiningExclusiveLicFormFive::getMiningExclusiveLicFormFiveId);
			attributeGetterFunctions.put(
				"groupId", MiningExclusiveLicFormFive::getGroupId);
			attributeGetterFunctions.put(
				"companyId", MiningExclusiveLicFormFive::getCompanyId);
			attributeGetterFunctions.put(
				"userId", MiningExclusiveLicFormFive::getUserId);
			attributeGetterFunctions.put(
				"userName", MiningExclusiveLicFormFive::getUserName);
			attributeGetterFunctions.put(
				"createDate", MiningExclusiveLicFormFive::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", MiningExclusiveLicFormFive::getModifiedDate);
			attributeGetterFunctions.put(
				"applicantNameLicence",
				MiningExclusiveLicFormFive::getApplicantNameLicence);
			attributeGetterFunctions.put(
				"trnNumberLicence",
				MiningExclusiveLicFormFive::getTrnNumberLicence);
			attributeGetterFunctions.put(
				"applicantNationalityLicence",
				MiningExclusiveLicFormFive::getApplicantNationalityLicence);
			attributeGetterFunctions.put(
				"applicantAddressLicence",
				MiningExclusiveLicFormFive::getApplicantAddressLicence);
			attributeGetterFunctions.put(
				"applicantTelephoneLicence",
				MiningExclusiveLicFormFive::getApplicantTelephoneLicence);
			attributeGetterFunctions.put(
				"applicantEmailLicence",
				MiningExclusiveLicFormFive::getApplicantEmailLicence);
			attributeGetterFunctions.put(
				"applicantNumberLicence",
				MiningExclusiveLicFormFive::getApplicantNumberLicence);
			attributeGetterFunctions.put(
				"agentNameLicence",
				MiningExclusiveLicFormFive::getAgentNameLicence);
			attributeGetterFunctions.put(
				"numProspectingLicence",
				MiningExclusiveLicFormFive::getNumProspectingLicence);
			attributeGetterFunctions.put(
				"agentNameLicenceGrant",
				MiningExclusiveLicFormFive::getAgentNameLicenceGrant);
			attributeGetterFunctions.put(
				"applicantLicence",
				MiningExclusiveLicFormFive::getApplicantLicence);
			attributeGetterFunctions.put(
				"justicePeaceParish",
				MiningExclusiveLicFormFive::getJusticePeaceParish);
			attributeGetterFunctions.put(
				"applicantLandmarkLicence",
				MiningExclusiveLicFormFive::getApplicantLandmarkLicence);
			attributeGetterFunctions.put(
				"applicantAreaLicence",
				MiningExclusiveLicFormFive::getApplicantAreaLicence);
			attributeGetterFunctions.put(
				"applicantDesires",
				MiningExclusiveLicFormFive::getApplicantDesires);
			attributeGetterFunctions.put(
				"dateLocationLic",
				MiningExclusiveLicFormFive::getDateLocationLic);
			attributeGetterFunctions.put(
				"incorporationLodged",
				MiningExclusiveLicFormFive::getIncorporationLodged);
			attributeGetterFunctions.put(
				"miningLeaseApplicationId",
				MiningExclusiveLicFormFive::getMiningLeaseApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<MiningExclusiveLicFormFive, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<MiningExclusiveLicFormFive, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<MiningExclusiveLicFormFive, ?>>();

			attributeSetterBiConsumers.put(
				"miningExclusiveLicFormFiveId",
				(BiConsumer<MiningExclusiveLicFormFive, Long>)
					MiningExclusiveLicFormFive::
						setMiningExclusiveLicFormFiveId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<MiningExclusiveLicFormFive, Long>)
					MiningExclusiveLicFormFive::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<MiningExclusiveLicFormFive, Long>)
					MiningExclusiveLicFormFive::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<MiningExclusiveLicFormFive, Long>)
					MiningExclusiveLicFormFive::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<MiningExclusiveLicFormFive, String>)
					MiningExclusiveLicFormFive::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<MiningExclusiveLicFormFive, Date>)
					MiningExclusiveLicFormFive::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<MiningExclusiveLicFormFive, Date>)
					MiningExclusiveLicFormFive::setModifiedDate);
			attributeSetterBiConsumers.put(
				"applicantNameLicence",
				(BiConsumer<MiningExclusiveLicFormFive, String>)
					MiningExclusiveLicFormFive::setApplicantNameLicence);
			attributeSetterBiConsumers.put(
				"trnNumberLicence",
				(BiConsumer<MiningExclusiveLicFormFive, String>)
					MiningExclusiveLicFormFive::setTrnNumberLicence);
			attributeSetterBiConsumers.put(
				"applicantNationalityLicence",
				(BiConsumer<MiningExclusiveLicFormFive, String>)
					MiningExclusiveLicFormFive::setApplicantNationalityLicence);
			attributeSetterBiConsumers.put(
				"applicantAddressLicence",
				(BiConsumer<MiningExclusiveLicFormFive, String>)
					MiningExclusiveLicFormFive::setApplicantAddressLicence);
			attributeSetterBiConsumers.put(
				"applicantTelephoneLicence",
				(BiConsumer<MiningExclusiveLicFormFive, String>)
					MiningExclusiveLicFormFive::setApplicantTelephoneLicence);
			attributeSetterBiConsumers.put(
				"applicantEmailLicence",
				(BiConsumer<MiningExclusiveLicFormFive, String>)
					MiningExclusiveLicFormFive::setApplicantEmailLicence);
			attributeSetterBiConsumers.put(
				"applicantNumberLicence",
				(BiConsumer<MiningExclusiveLicFormFive, String>)
					MiningExclusiveLicFormFive::setApplicantNumberLicence);
			attributeSetterBiConsumers.put(
				"agentNameLicence",
				(BiConsumer<MiningExclusiveLicFormFive, String>)
					MiningExclusiveLicFormFive::setAgentNameLicence);
			attributeSetterBiConsumers.put(
				"numProspectingLicence",
				(BiConsumer<MiningExclusiveLicFormFive, String>)
					MiningExclusiveLicFormFive::setNumProspectingLicence);
			attributeSetterBiConsumers.put(
				"agentNameLicenceGrant",
				(BiConsumer<MiningExclusiveLicFormFive, String>)
					MiningExclusiveLicFormFive::setAgentNameLicenceGrant);
			attributeSetterBiConsumers.put(
				"applicantLicence",
				(BiConsumer<MiningExclusiveLicFormFive, String>)
					MiningExclusiveLicFormFive::setApplicantLicence);
			attributeSetterBiConsumers.put(
				"justicePeaceParish",
				(BiConsumer<MiningExclusiveLicFormFive, String>)
					MiningExclusiveLicFormFive::setJusticePeaceParish);
			attributeSetterBiConsumers.put(
				"applicantLandmarkLicence",
				(BiConsumer<MiningExclusiveLicFormFive, String>)
					MiningExclusiveLicFormFive::setApplicantLandmarkLicence);
			attributeSetterBiConsumers.put(
				"applicantAreaLicence",
				(BiConsumer<MiningExclusiveLicFormFive, String>)
					MiningExclusiveLicFormFive::setApplicantAreaLicence);
			attributeSetterBiConsumers.put(
				"applicantDesires",
				(BiConsumer<MiningExclusiveLicFormFive, String>)
					MiningExclusiveLicFormFive::setApplicantDesires);
			attributeSetterBiConsumers.put(
				"dateLocationLic",
				(BiConsumer<MiningExclusiveLicFormFive, Date>)
					MiningExclusiveLicFormFive::setDateLocationLic);
			attributeSetterBiConsumers.put(
				"incorporationLodged",
				(BiConsumer<MiningExclusiveLicFormFive, String>)
					MiningExclusiveLicFormFive::setIncorporationLodged);
			attributeSetterBiConsumers.put(
				"miningLeaseApplicationId",
				(BiConsumer<MiningExclusiveLicFormFive, Long>)
					MiningExclusiveLicFormFive::setMiningLeaseApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getMiningExclusiveLicFormFiveId() {
		return _miningExclusiveLicFormFiveId;
	}

	@Override
	public void setMiningExclusiveLicFormFiveId(
		long miningExclusiveLicFormFiveId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_miningExclusiveLicFormFiveId = miningExclusiveLicFormFiveId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getApplicantNameLicence() {
		if (_applicantNameLicence == null) {
			return "";
		}
		else {
			return _applicantNameLicence;
		}
	}

	@Override
	public void setApplicantNameLicence(String applicantNameLicence) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicantNameLicence = applicantNameLicence;
	}

	@JSON
	@Override
	public String getTrnNumberLicence() {
		if (_trnNumberLicence == null) {
			return "";
		}
		else {
			return _trnNumberLicence;
		}
	}

	@Override
	public void setTrnNumberLicence(String trnNumberLicence) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_trnNumberLicence = trnNumberLicence;
	}

	@JSON
	@Override
	public String getApplicantNationalityLicence() {
		if (_applicantNationalityLicence == null) {
			return "";
		}
		else {
			return _applicantNationalityLicence;
		}
	}

	@Override
	public void setApplicantNationalityLicence(
		String applicantNationalityLicence) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicantNationalityLicence = applicantNationalityLicence;
	}

	@JSON
	@Override
	public String getApplicantAddressLicence() {
		if (_applicantAddressLicence == null) {
			return "";
		}
		else {
			return _applicantAddressLicence;
		}
	}

	@Override
	public void setApplicantAddressLicence(String applicantAddressLicence) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicantAddressLicence = applicantAddressLicence;
	}

	@JSON
	@Override
	public String getApplicantTelephoneLicence() {
		if (_applicantTelephoneLicence == null) {
			return "";
		}
		else {
			return _applicantTelephoneLicence;
		}
	}

	@Override
	public void setApplicantTelephoneLicence(String applicantTelephoneLicence) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicantTelephoneLicence = applicantTelephoneLicence;
	}

	@JSON
	@Override
	public String getApplicantEmailLicence() {
		if (_applicantEmailLicence == null) {
			return "";
		}
		else {
			return _applicantEmailLicence;
		}
	}

	@Override
	public void setApplicantEmailLicence(String applicantEmailLicence) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicantEmailLicence = applicantEmailLicence;
	}

	@JSON
	@Override
	public String getApplicantNumberLicence() {
		if (_applicantNumberLicence == null) {
			return "";
		}
		else {
			return _applicantNumberLicence;
		}
	}

	@Override
	public void setApplicantNumberLicence(String applicantNumberLicence) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicantNumberLicence = applicantNumberLicence;
	}

	@JSON
	@Override
	public String getAgentNameLicence() {
		if (_agentNameLicence == null) {
			return "";
		}
		else {
			return _agentNameLicence;
		}
	}

	@Override
	public void setAgentNameLicence(String agentNameLicence) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_agentNameLicence = agentNameLicence;
	}

	@JSON
	@Override
	public String getNumProspectingLicence() {
		if (_numProspectingLicence == null) {
			return "";
		}
		else {
			return _numProspectingLicence;
		}
	}

	@Override
	public void setNumProspectingLicence(String numProspectingLicence) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_numProspectingLicence = numProspectingLicence;
	}

	@JSON
	@Override
	public String getAgentNameLicenceGrant() {
		if (_agentNameLicenceGrant == null) {
			return "";
		}
		else {
			return _agentNameLicenceGrant;
		}
	}

	@Override
	public void setAgentNameLicenceGrant(String agentNameLicenceGrant) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_agentNameLicenceGrant = agentNameLicenceGrant;
	}

	@JSON
	@Override
	public String getApplicantLicence() {
		if (_applicantLicence == null) {
			return "";
		}
		else {
			return _applicantLicence;
		}
	}

	@Override
	public void setApplicantLicence(String applicantLicence) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicantLicence = applicantLicence;
	}

	@JSON
	@Override
	public String getJusticePeaceParish() {
		if (_justicePeaceParish == null) {
			return "";
		}
		else {
			return _justicePeaceParish;
		}
	}

	@Override
	public void setJusticePeaceParish(String justicePeaceParish) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_justicePeaceParish = justicePeaceParish;
	}

	@JSON
	@Override
	public String getApplicantLandmarkLicence() {
		if (_applicantLandmarkLicence == null) {
			return "";
		}
		else {
			return _applicantLandmarkLicence;
		}
	}

	@Override
	public void setApplicantLandmarkLicence(String applicantLandmarkLicence) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicantLandmarkLicence = applicantLandmarkLicence;
	}

	@JSON
	@Override
	public String getApplicantAreaLicence() {
		if (_applicantAreaLicence == null) {
			return "";
		}
		else {
			return _applicantAreaLicence;
		}
	}

	@Override
	public void setApplicantAreaLicence(String applicantAreaLicence) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicantAreaLicence = applicantAreaLicence;
	}

	@JSON
	@Override
	public String getApplicantDesires() {
		if (_applicantDesires == null) {
			return "";
		}
		else {
			return _applicantDesires;
		}
	}

	@Override
	public void setApplicantDesires(String applicantDesires) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicantDesires = applicantDesires;
	}

	@JSON
	@Override
	public Date getDateLocationLic() {
		return _dateLocationLic;
	}

	@Override
	public void setDateLocationLic(Date dateLocationLic) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dateLocationLic = dateLocationLic;
	}

	@JSON
	@Override
	public String getIncorporationLodged() {
		if (_incorporationLodged == null) {
			return "";
		}
		else {
			return _incorporationLodged;
		}
	}

	@Override
	public void setIncorporationLodged(String incorporationLodged) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_incorporationLodged = incorporationLodged;
	}

	@JSON
	@Override
	public long getMiningLeaseApplicationId() {
		return _miningLeaseApplicationId;
	}

	@Override
	public void setMiningLeaseApplicationId(long miningLeaseApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_miningLeaseApplicationId = miningLeaseApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalMiningLeaseApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("miningLeaseApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), MiningExclusiveLicFormFive.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public MiningExclusiveLicFormFive toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, MiningExclusiveLicFormFive>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		MiningExclusiveLicFormFiveImpl miningExclusiveLicFormFiveImpl =
			new MiningExclusiveLicFormFiveImpl();

		miningExclusiveLicFormFiveImpl.setMiningExclusiveLicFormFiveId(
			getMiningExclusiveLicFormFiveId());
		miningExclusiveLicFormFiveImpl.setGroupId(getGroupId());
		miningExclusiveLicFormFiveImpl.setCompanyId(getCompanyId());
		miningExclusiveLicFormFiveImpl.setUserId(getUserId());
		miningExclusiveLicFormFiveImpl.setUserName(getUserName());
		miningExclusiveLicFormFiveImpl.setCreateDate(getCreateDate());
		miningExclusiveLicFormFiveImpl.setModifiedDate(getModifiedDate());
		miningExclusiveLicFormFiveImpl.setApplicantNameLicence(
			getApplicantNameLicence());
		miningExclusiveLicFormFiveImpl.setTrnNumberLicence(
			getTrnNumberLicence());
		miningExclusiveLicFormFiveImpl.setApplicantNationalityLicence(
			getApplicantNationalityLicence());
		miningExclusiveLicFormFiveImpl.setApplicantAddressLicence(
			getApplicantAddressLicence());
		miningExclusiveLicFormFiveImpl.setApplicantTelephoneLicence(
			getApplicantTelephoneLicence());
		miningExclusiveLicFormFiveImpl.setApplicantEmailLicence(
			getApplicantEmailLicence());
		miningExclusiveLicFormFiveImpl.setApplicantNumberLicence(
			getApplicantNumberLicence());
		miningExclusiveLicFormFiveImpl.setAgentNameLicence(
			getAgentNameLicence());
		miningExclusiveLicFormFiveImpl.setNumProspectingLicence(
			getNumProspectingLicence());
		miningExclusiveLicFormFiveImpl.setAgentNameLicenceGrant(
			getAgentNameLicenceGrant());
		miningExclusiveLicFormFiveImpl.setApplicantLicence(
			getApplicantLicence());
		miningExclusiveLicFormFiveImpl.setJusticePeaceParish(
			getJusticePeaceParish());
		miningExclusiveLicFormFiveImpl.setApplicantLandmarkLicence(
			getApplicantLandmarkLicence());
		miningExclusiveLicFormFiveImpl.setApplicantAreaLicence(
			getApplicantAreaLicence());
		miningExclusiveLicFormFiveImpl.setApplicantDesires(
			getApplicantDesires());
		miningExclusiveLicFormFiveImpl.setDateLocationLic(getDateLocationLic());
		miningExclusiveLicFormFiveImpl.setIncorporationLodged(
			getIncorporationLodged());
		miningExclusiveLicFormFiveImpl.setMiningLeaseApplicationId(
			getMiningLeaseApplicationId());

		miningExclusiveLicFormFiveImpl.resetOriginalValues();

		return miningExclusiveLicFormFiveImpl;
	}

	@Override
	public MiningExclusiveLicFormFive cloneWithOriginalValues() {
		MiningExclusiveLicFormFiveImpl miningExclusiveLicFormFiveImpl =
			new MiningExclusiveLicFormFiveImpl();

		miningExclusiveLicFormFiveImpl.setMiningExclusiveLicFormFiveId(
			this.<Long>getColumnOriginalValue("miningExclusiveLicFormFiveId"));
		miningExclusiveLicFormFiveImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		miningExclusiveLicFormFiveImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		miningExclusiveLicFormFiveImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		miningExclusiveLicFormFiveImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		miningExclusiveLicFormFiveImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		miningExclusiveLicFormFiveImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		miningExclusiveLicFormFiveImpl.setApplicantNameLicence(
			this.<String>getColumnOriginalValue("applicantNameLicence"));
		miningExclusiveLicFormFiveImpl.setTrnNumberLicence(
			this.<String>getColumnOriginalValue("trnNumberLicence"));
		miningExclusiveLicFormFiveImpl.setApplicantNationalityLicence(
			this.<String>getColumnOriginalValue("applicantNationalityLicence"));
		miningExclusiveLicFormFiveImpl.setApplicantAddressLicence(
			this.<String>getColumnOriginalValue("applicantAddressLicence"));
		miningExclusiveLicFormFiveImpl.setApplicantTelephoneLicence(
			this.<String>getColumnOriginalValue("applicantTelephoneLicence"));
		miningExclusiveLicFormFiveImpl.setApplicantEmailLicence(
			this.<String>getColumnOriginalValue("applicantEmailLicence"));
		miningExclusiveLicFormFiveImpl.setApplicantNumberLicence(
			this.<String>getColumnOriginalValue("applicantNumberLicence"));
		miningExclusiveLicFormFiveImpl.setAgentNameLicence(
			this.<String>getColumnOriginalValue("agentNameLicence"));
		miningExclusiveLicFormFiveImpl.setNumProspectingLicence(
			this.<String>getColumnOriginalValue("numProspectingLicence"));
		miningExclusiveLicFormFiveImpl.setAgentNameLicenceGrant(
			this.<String>getColumnOriginalValue("agentNameLicenceGrant"));
		miningExclusiveLicFormFiveImpl.setApplicantLicence(
			this.<String>getColumnOriginalValue("applicantLicence"));
		miningExclusiveLicFormFiveImpl.setJusticePeaceParish(
			this.<String>getColumnOriginalValue("justicePeaceParish"));
		miningExclusiveLicFormFiveImpl.setApplicantLandmarkLicence(
			this.<String>getColumnOriginalValue("applicantLandmarkLicence"));
		miningExclusiveLicFormFiveImpl.setApplicantAreaLicence(
			this.<String>getColumnOriginalValue("applicantAreaLicence"));
		miningExclusiveLicFormFiveImpl.setApplicantDesires(
			this.<String>getColumnOriginalValue("applicantDesires"));
		miningExclusiveLicFormFiveImpl.setDateLocationLic(
			this.<Date>getColumnOriginalValue("dateLocationLic"));
		miningExclusiveLicFormFiveImpl.setIncorporationLodged(
			this.<String>getColumnOriginalValue("incorporationLodged"));
		miningExclusiveLicFormFiveImpl.setMiningLeaseApplicationId(
			this.<Long>getColumnOriginalValue("miningLeaseApplicationId"));

		return miningExclusiveLicFormFiveImpl;
	}

	@Override
	public int compareTo(
		MiningExclusiveLicFormFive miningExclusiveLicFormFive) {

		long primaryKey = miningExclusiveLicFormFive.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof MiningExclusiveLicFormFive)) {
			return false;
		}

		MiningExclusiveLicFormFive miningExclusiveLicFormFive =
			(MiningExclusiveLicFormFive)object;

		long primaryKey = miningExclusiveLicFormFive.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<MiningExclusiveLicFormFive> toCacheModel() {
		MiningExclusiveLicFormFiveCacheModel
			miningExclusiveLicFormFiveCacheModel =
				new MiningExclusiveLicFormFiveCacheModel();

		miningExclusiveLicFormFiveCacheModel.miningExclusiveLicFormFiveId =
			getMiningExclusiveLicFormFiveId();

		miningExclusiveLicFormFiveCacheModel.groupId = getGroupId();

		miningExclusiveLicFormFiveCacheModel.companyId = getCompanyId();

		miningExclusiveLicFormFiveCacheModel.userId = getUserId();

		miningExclusiveLicFormFiveCacheModel.userName = getUserName();

		String userName = miningExclusiveLicFormFiveCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			miningExclusiveLicFormFiveCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			miningExclusiveLicFormFiveCacheModel.createDate =
				createDate.getTime();
		}
		else {
			miningExclusiveLicFormFiveCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			miningExclusiveLicFormFiveCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			miningExclusiveLicFormFiveCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		miningExclusiveLicFormFiveCacheModel.applicantNameLicence =
			getApplicantNameLicence();

		String applicantNameLicence =
			miningExclusiveLicFormFiveCacheModel.applicantNameLicence;

		if ((applicantNameLicence != null) &&
			(applicantNameLicence.length() == 0)) {

			miningExclusiveLicFormFiveCacheModel.applicantNameLicence = null;
		}

		miningExclusiveLicFormFiveCacheModel.trnNumberLicence =
			getTrnNumberLicence();

		String trnNumberLicence =
			miningExclusiveLicFormFiveCacheModel.trnNumberLicence;

		if ((trnNumberLicence != null) && (trnNumberLicence.length() == 0)) {
			miningExclusiveLicFormFiveCacheModel.trnNumberLicence = null;
		}

		miningExclusiveLicFormFiveCacheModel.applicantNationalityLicence =
			getApplicantNationalityLicence();

		String applicantNationalityLicence =
			miningExclusiveLicFormFiveCacheModel.applicantNationalityLicence;

		if ((applicantNationalityLicence != null) &&
			(applicantNationalityLicence.length() == 0)) {

			miningExclusiveLicFormFiveCacheModel.applicantNationalityLicence =
				null;
		}

		miningExclusiveLicFormFiveCacheModel.applicantAddressLicence =
			getApplicantAddressLicence();

		String applicantAddressLicence =
			miningExclusiveLicFormFiveCacheModel.applicantAddressLicence;

		if ((applicantAddressLicence != null) &&
			(applicantAddressLicence.length() == 0)) {

			miningExclusiveLicFormFiveCacheModel.applicantAddressLicence = null;
		}

		miningExclusiveLicFormFiveCacheModel.applicantTelephoneLicence =
			getApplicantTelephoneLicence();

		String applicantTelephoneLicence =
			miningExclusiveLicFormFiveCacheModel.applicantTelephoneLicence;

		if ((applicantTelephoneLicence != null) &&
			(applicantTelephoneLicence.length() == 0)) {

			miningExclusiveLicFormFiveCacheModel.applicantTelephoneLicence =
				null;
		}

		miningExclusiveLicFormFiveCacheModel.applicantEmailLicence =
			getApplicantEmailLicence();

		String applicantEmailLicence =
			miningExclusiveLicFormFiveCacheModel.applicantEmailLicence;

		if ((applicantEmailLicence != null) &&
			(applicantEmailLicence.length() == 0)) {

			miningExclusiveLicFormFiveCacheModel.applicantEmailLicence = null;
		}

		miningExclusiveLicFormFiveCacheModel.applicantNumberLicence =
			getApplicantNumberLicence();

		String applicantNumberLicence =
			miningExclusiveLicFormFiveCacheModel.applicantNumberLicence;

		if ((applicantNumberLicence != null) &&
			(applicantNumberLicence.length() == 0)) {

			miningExclusiveLicFormFiveCacheModel.applicantNumberLicence = null;
		}

		miningExclusiveLicFormFiveCacheModel.agentNameLicence =
			getAgentNameLicence();

		String agentNameLicence =
			miningExclusiveLicFormFiveCacheModel.agentNameLicence;

		if ((agentNameLicence != null) && (agentNameLicence.length() == 0)) {
			miningExclusiveLicFormFiveCacheModel.agentNameLicence = null;
		}

		miningExclusiveLicFormFiveCacheModel.numProspectingLicence =
			getNumProspectingLicence();

		String numProspectingLicence =
			miningExclusiveLicFormFiveCacheModel.numProspectingLicence;

		if ((numProspectingLicence != null) &&
			(numProspectingLicence.length() == 0)) {

			miningExclusiveLicFormFiveCacheModel.numProspectingLicence = null;
		}

		miningExclusiveLicFormFiveCacheModel.agentNameLicenceGrant =
			getAgentNameLicenceGrant();

		String agentNameLicenceGrant =
			miningExclusiveLicFormFiveCacheModel.agentNameLicenceGrant;

		if ((agentNameLicenceGrant != null) &&
			(agentNameLicenceGrant.length() == 0)) {

			miningExclusiveLicFormFiveCacheModel.agentNameLicenceGrant = null;
		}

		miningExclusiveLicFormFiveCacheModel.applicantLicence =
			getApplicantLicence();

		String applicantLicence =
			miningExclusiveLicFormFiveCacheModel.applicantLicence;

		if ((applicantLicence != null) && (applicantLicence.length() == 0)) {
			miningExclusiveLicFormFiveCacheModel.applicantLicence = null;
		}

		miningExclusiveLicFormFiveCacheModel.justicePeaceParish =
			getJusticePeaceParish();

		String justicePeaceParish =
			miningExclusiveLicFormFiveCacheModel.justicePeaceParish;

		if ((justicePeaceParish != null) &&
			(justicePeaceParish.length() == 0)) {

			miningExclusiveLicFormFiveCacheModel.justicePeaceParish = null;
		}

		miningExclusiveLicFormFiveCacheModel.applicantLandmarkLicence =
			getApplicantLandmarkLicence();

		String applicantLandmarkLicence =
			miningExclusiveLicFormFiveCacheModel.applicantLandmarkLicence;

		if ((applicantLandmarkLicence != null) &&
			(applicantLandmarkLicence.length() == 0)) {

			miningExclusiveLicFormFiveCacheModel.applicantLandmarkLicence =
				null;
		}

		miningExclusiveLicFormFiveCacheModel.applicantAreaLicence =
			getApplicantAreaLicence();

		String applicantAreaLicence =
			miningExclusiveLicFormFiveCacheModel.applicantAreaLicence;

		if ((applicantAreaLicence != null) &&
			(applicantAreaLicence.length() == 0)) {

			miningExclusiveLicFormFiveCacheModel.applicantAreaLicence = null;
		}

		miningExclusiveLicFormFiveCacheModel.applicantDesires =
			getApplicantDesires();

		String applicantDesires =
			miningExclusiveLicFormFiveCacheModel.applicantDesires;

		if ((applicantDesires != null) && (applicantDesires.length() == 0)) {
			miningExclusiveLicFormFiveCacheModel.applicantDesires = null;
		}

		Date dateLocationLic = getDateLocationLic();

		if (dateLocationLic != null) {
			miningExclusiveLicFormFiveCacheModel.dateLocationLic =
				dateLocationLic.getTime();
		}
		else {
			miningExclusiveLicFormFiveCacheModel.dateLocationLic =
				Long.MIN_VALUE;
		}

		miningExclusiveLicFormFiveCacheModel.incorporationLodged =
			getIncorporationLodged();

		String incorporationLodged =
			miningExclusiveLicFormFiveCacheModel.incorporationLodged;

		if ((incorporationLodged != null) &&
			(incorporationLodged.length() == 0)) {

			miningExclusiveLicFormFiveCacheModel.incorporationLodged = null;
		}

		miningExclusiveLicFormFiveCacheModel.miningLeaseApplicationId =
			getMiningLeaseApplicationId();

		return miningExclusiveLicFormFiveCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<MiningExclusiveLicFormFive, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<MiningExclusiveLicFormFive, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<MiningExclusiveLicFormFive, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(MiningExclusiveLicFormFive)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, MiningExclusiveLicFormFive>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						MiningExclusiveLicFormFive.class, ModelWrapper.class);

	}

	private long _miningExclusiveLicFormFiveId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _applicantNameLicence;
	private String _trnNumberLicence;
	private String _applicantNationalityLicence;
	private String _applicantAddressLicence;
	private String _applicantTelephoneLicence;
	private String _applicantEmailLicence;
	private String _applicantNumberLicence;
	private String _agentNameLicence;
	private String _numProspectingLicence;
	private String _agentNameLicenceGrant;
	private String _applicantLicence;
	private String _justicePeaceParish;
	private String _applicantLandmarkLicence;
	private String _applicantAreaLicence;
	private String _applicantDesires;
	private Date _dateLocationLic;
	private String _incorporationLodged;
	private long _miningLeaseApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<MiningExclusiveLicFormFive, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((MiningExclusiveLicFormFive)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"miningExclusiveLicFormFiveId", _miningExclusiveLicFormFiveId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"applicantNameLicence", _applicantNameLicence);
		_columnOriginalValues.put("trnNumberLicence", _trnNumberLicence);
		_columnOriginalValues.put(
			"applicantNationalityLicence", _applicantNationalityLicence);
		_columnOriginalValues.put(
			"applicantAddressLicence", _applicantAddressLicence);
		_columnOriginalValues.put(
			"applicantTelephoneLicence", _applicantTelephoneLicence);
		_columnOriginalValues.put(
			"applicantEmailLicence", _applicantEmailLicence);
		_columnOriginalValues.put(
			"applicantNumberLicence", _applicantNumberLicence);
		_columnOriginalValues.put("agentNameLicence", _agentNameLicence);
		_columnOriginalValues.put(
			"numProspectingLicence", _numProspectingLicence);
		_columnOriginalValues.put(
			"agentNameLicenceGrant", _agentNameLicenceGrant);
		_columnOriginalValues.put("applicantLicence", _applicantLicence);
		_columnOriginalValues.put("justicePeaceParish", _justicePeaceParish);
		_columnOriginalValues.put(
			"applicantLandmarkLicence", _applicantLandmarkLicence);
		_columnOriginalValues.put(
			"applicantAreaLicence", _applicantAreaLicence);
		_columnOriginalValues.put("applicantDesires", _applicantDesires);
		_columnOriginalValues.put("dateLocationLic", _dateLocationLic);
		_columnOriginalValues.put("incorporationLodged", _incorporationLodged);
		_columnOriginalValues.put(
			"miningLeaseApplicationId", _miningLeaseApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("miningExclusiveLicFormFiveId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("applicantNameLicence", 128L);

		columnBitmasks.put("trnNumberLicence", 256L);

		columnBitmasks.put("applicantNationalityLicence", 512L);

		columnBitmasks.put("applicantAddressLicence", 1024L);

		columnBitmasks.put("applicantTelephoneLicence", 2048L);

		columnBitmasks.put("applicantEmailLicence", 4096L);

		columnBitmasks.put("applicantNumberLicence", 8192L);

		columnBitmasks.put("agentNameLicence", 16384L);

		columnBitmasks.put("numProspectingLicence", 32768L);

		columnBitmasks.put("agentNameLicenceGrant", 65536L);

		columnBitmasks.put("applicantLicence", 131072L);

		columnBitmasks.put("justicePeaceParish", 262144L);

		columnBitmasks.put("applicantLandmarkLicence", 524288L);

		columnBitmasks.put("applicantAreaLicence", 1048576L);

		columnBitmasks.put("applicantDesires", 2097152L);

		columnBitmasks.put("dateLocationLic", 4194304L);

		columnBitmasks.put("incorporationLodged", 8388608L);

		columnBitmasks.put("miningLeaseApplicationId", 16777216L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private MiningExclusiveLicFormFive _escapedModel;

}