/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.creative.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.creative.application.form.service.model.CreativeIndividualDetails;
import com.nbp.creative.application.form.service.model.CreativeIndividualDetailsModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the CreativeIndividualDetails service. Represents a row in the &quot;nbp_creative_individual_detail&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>CreativeIndividualDetailsModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CreativeIndividualDetailsImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CreativeIndividualDetailsImpl
 * @generated
 */
@JSON(strict = true)
public class CreativeIndividualDetailsModelImpl
	extends BaseModelImpl<CreativeIndividualDetails>
	implements CreativeIndividualDetailsModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a creative individual details model instance should use the <code>CreativeIndividualDetails</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_creative_individual_detail";

	public static final Object[][] TABLE_COLUMNS = {
		{"creativeIndividualDetailsId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"sectorOfPractice", Types.VARCHAR}, {"firstName", Types.VARCHAR},
		{"middleName", Types.VARCHAR}, {"lastName", Types.VARCHAR},
		{"trn", Types.VARCHAR}, {"city", Types.VARCHAR},
		{"country", Types.VARCHAR}, {"sex", Types.VARCHAR},
		{"cell", Types.VARCHAR}, {"email", Types.VARCHAR},
		{"areYouStudent", Types.VARCHAR}, {"companyEmail", Types.VARCHAR},
		{"companyWebsite", Types.VARCHAR},
		{"CreativeApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("creativeIndividualDetailsId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("sectorOfPractice", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("firstName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("middleName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("lastName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("trn", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("city", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("country", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sex", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cell", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("email", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("areYouStudent", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyWebsite", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CreativeApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_creative_individual_detail (creativeIndividualDetailsId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,sectorOfPractice VARCHAR(75) null,firstName VARCHAR(75) null,middleName VARCHAR(75) null,lastName VARCHAR(75) null,trn VARCHAR(75) null,city VARCHAR(75) null,country VARCHAR(75) null,sex VARCHAR(75) null,cell VARCHAR(75) null,email VARCHAR(75) null,areYouStudent VARCHAR(75) null,companyEmail VARCHAR(75) null,companyWebsite VARCHAR(75) null,CreativeApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_creative_individual_detail";

	public static final String ORDER_BY_JPQL =
		" ORDER BY creativeIndividualDetails.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_creative_individual_detail.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATIVEAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public CreativeIndividualDetailsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _creativeIndividualDetailsId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCreativeIndividualDetailsId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _creativeIndividualDetailsId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CreativeIndividualDetails.class;
	}

	@Override
	public String getModelClassName() {
		return CreativeIndividualDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<CreativeIndividualDetails, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<CreativeIndividualDetails, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CreativeIndividualDetails, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((CreativeIndividualDetails)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<CreativeIndividualDetails, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<CreativeIndividualDetails, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(CreativeIndividualDetails)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<CreativeIndividualDetails, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<CreativeIndividualDetails, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<CreativeIndividualDetails, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<CreativeIndividualDetails, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<CreativeIndividualDetails, Object>>();

			attributeGetterFunctions.put(
				"creativeIndividualDetailsId",
				CreativeIndividualDetails::getCreativeIndividualDetailsId);
			attributeGetterFunctions.put(
				"groupId", CreativeIndividualDetails::getGroupId);
			attributeGetterFunctions.put(
				"companyId", CreativeIndividualDetails::getCompanyId);
			attributeGetterFunctions.put(
				"userId", CreativeIndividualDetails::getUserId);
			attributeGetterFunctions.put(
				"userName", CreativeIndividualDetails::getUserName);
			attributeGetterFunctions.put(
				"createDate", CreativeIndividualDetails::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", CreativeIndividualDetails::getModifiedDate);
			attributeGetterFunctions.put(
				"sectorOfPractice",
				CreativeIndividualDetails::getSectorOfPractice);
			attributeGetterFunctions.put(
				"firstName", CreativeIndividualDetails::getFirstName);
			attributeGetterFunctions.put(
				"middleName", CreativeIndividualDetails::getMiddleName);
			attributeGetterFunctions.put(
				"lastName", CreativeIndividualDetails::getLastName);
			attributeGetterFunctions.put(
				"trn", CreativeIndividualDetails::getTrn);
			attributeGetterFunctions.put(
				"city", CreativeIndividualDetails::getCity);
			attributeGetterFunctions.put(
				"country", CreativeIndividualDetails::getCountry);
			attributeGetterFunctions.put(
				"sex", CreativeIndividualDetails::getSex);
			attributeGetterFunctions.put(
				"cell", CreativeIndividualDetails::getCell);
			attributeGetterFunctions.put(
				"email", CreativeIndividualDetails::getEmail);
			attributeGetterFunctions.put(
				"areYouStudent", CreativeIndividualDetails::getAreYouStudent);
			attributeGetterFunctions.put(
				"companyEmail", CreativeIndividualDetails::getCompanyEmail);
			attributeGetterFunctions.put(
				"companyWebsite", CreativeIndividualDetails::getCompanyWebsite);
			attributeGetterFunctions.put(
				"CreativeApplicationId",
				CreativeIndividualDetails::getCreativeApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<CreativeIndividualDetails, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<CreativeIndividualDetails, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<CreativeIndividualDetails, ?>>();

			attributeSetterBiConsumers.put(
				"creativeIndividualDetailsId",
				(BiConsumer<CreativeIndividualDetails, Long>)
					CreativeIndividualDetails::setCreativeIndividualDetailsId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<CreativeIndividualDetails, Long>)
					CreativeIndividualDetails::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<CreativeIndividualDetails, Long>)
					CreativeIndividualDetails::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<CreativeIndividualDetails, Long>)
					CreativeIndividualDetails::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<CreativeIndividualDetails, String>)
					CreativeIndividualDetails::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<CreativeIndividualDetails, Date>)
					CreativeIndividualDetails::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<CreativeIndividualDetails, Date>)
					CreativeIndividualDetails::setModifiedDate);
			attributeSetterBiConsumers.put(
				"sectorOfPractice",
				(BiConsumer<CreativeIndividualDetails, String>)
					CreativeIndividualDetails::setSectorOfPractice);
			attributeSetterBiConsumers.put(
				"firstName",
				(BiConsumer<CreativeIndividualDetails, String>)
					CreativeIndividualDetails::setFirstName);
			attributeSetterBiConsumers.put(
				"middleName",
				(BiConsumer<CreativeIndividualDetails, String>)
					CreativeIndividualDetails::setMiddleName);
			attributeSetterBiConsumers.put(
				"lastName",
				(BiConsumer<CreativeIndividualDetails, String>)
					CreativeIndividualDetails::setLastName);
			attributeSetterBiConsumers.put(
				"trn",
				(BiConsumer<CreativeIndividualDetails, String>)
					CreativeIndividualDetails::setTrn);
			attributeSetterBiConsumers.put(
				"city",
				(BiConsumer<CreativeIndividualDetails, String>)
					CreativeIndividualDetails::setCity);
			attributeSetterBiConsumers.put(
				"country",
				(BiConsumer<CreativeIndividualDetails, String>)
					CreativeIndividualDetails::setCountry);
			attributeSetterBiConsumers.put(
				"sex",
				(BiConsumer<CreativeIndividualDetails, String>)
					CreativeIndividualDetails::setSex);
			attributeSetterBiConsumers.put(
				"cell",
				(BiConsumer<CreativeIndividualDetails, String>)
					CreativeIndividualDetails::setCell);
			attributeSetterBiConsumers.put(
				"email",
				(BiConsumer<CreativeIndividualDetails, String>)
					CreativeIndividualDetails::setEmail);
			attributeSetterBiConsumers.put(
				"areYouStudent",
				(BiConsumer<CreativeIndividualDetails, String>)
					CreativeIndividualDetails::setAreYouStudent);
			attributeSetterBiConsumers.put(
				"companyEmail",
				(BiConsumer<CreativeIndividualDetails, String>)
					CreativeIndividualDetails::setCompanyEmail);
			attributeSetterBiConsumers.put(
				"companyWebsite",
				(BiConsumer<CreativeIndividualDetails, String>)
					CreativeIndividualDetails::setCompanyWebsite);
			attributeSetterBiConsumers.put(
				"CreativeApplicationId",
				(BiConsumer<CreativeIndividualDetails, Long>)
					CreativeIndividualDetails::setCreativeApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getCreativeIndividualDetailsId() {
		return _creativeIndividualDetailsId;
	}

	@Override
	public void setCreativeIndividualDetailsId(
		long creativeIndividualDetailsId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_creativeIndividualDetailsId = creativeIndividualDetailsId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getSectorOfPractice() {
		if (_sectorOfPractice == null) {
			return "";
		}
		else {
			return _sectorOfPractice;
		}
	}

	@Override
	public void setSectorOfPractice(String sectorOfPractice) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sectorOfPractice = sectorOfPractice;
	}

	@JSON
	@Override
	public String getFirstName() {
		if (_firstName == null) {
			return "";
		}
		else {
			return _firstName;
		}
	}

	@Override
	public void setFirstName(String firstName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_firstName = firstName;
	}

	@JSON
	@Override
	public String getMiddleName() {
		if (_middleName == null) {
			return "";
		}
		else {
			return _middleName;
		}
	}

	@Override
	public void setMiddleName(String middleName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_middleName = middleName;
	}

	@JSON
	@Override
	public String getLastName() {
		if (_lastName == null) {
			return "";
		}
		else {
			return _lastName;
		}
	}

	@Override
	public void setLastName(String lastName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_lastName = lastName;
	}

	@JSON
	@Override
	public String getTrn() {
		if (_trn == null) {
			return "";
		}
		else {
			return _trn;
		}
	}

	@Override
	public void setTrn(String trn) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_trn = trn;
	}

	@JSON
	@Override
	public String getCity() {
		if (_city == null) {
			return "";
		}
		else {
			return _city;
		}
	}

	@Override
	public void setCity(String city) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_city = city;
	}

	@JSON
	@Override
	public String getCountry() {
		if (_country == null) {
			return "";
		}
		else {
			return _country;
		}
	}

	@Override
	public void setCountry(String country) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_country = country;
	}

	@JSON
	@Override
	public String getSex() {
		if (_sex == null) {
			return "";
		}
		else {
			return _sex;
		}
	}

	@Override
	public void setSex(String sex) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sex = sex;
	}

	@JSON
	@Override
	public String getCell() {
		if (_cell == null) {
			return "";
		}
		else {
			return _cell;
		}
	}

	@Override
	public void setCell(String cell) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cell = cell;
	}

	@JSON
	@Override
	public String getEmail() {
		if (_email == null) {
			return "";
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_email = email;
	}

	@JSON
	@Override
	public String getAreYouStudent() {
		if (_areYouStudent == null) {
			return "";
		}
		else {
			return _areYouStudent;
		}
	}

	@Override
	public void setAreYouStudent(String areYouStudent) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_areYouStudent = areYouStudent;
	}

	@JSON
	@Override
	public String getCompanyEmail() {
		if (_companyEmail == null) {
			return "";
		}
		else {
			return _companyEmail;
		}
	}

	@Override
	public void setCompanyEmail(String companyEmail) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyEmail = companyEmail;
	}

	@JSON
	@Override
	public String getCompanyWebsite() {
		if (_companyWebsite == null) {
			return "";
		}
		else {
			return _companyWebsite;
		}
	}

	@Override
	public void setCompanyWebsite(String companyWebsite) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyWebsite = companyWebsite;
	}

	@JSON
	@Override
	public long getCreativeApplicationId() {
		return _CreativeApplicationId;
	}

	@Override
	public void setCreativeApplicationId(long CreativeApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_CreativeApplicationId = CreativeApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCreativeApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("CreativeApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), CreativeIndividualDetails.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CreativeIndividualDetails toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, CreativeIndividualDetails>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CreativeIndividualDetailsImpl creativeIndividualDetailsImpl =
			new CreativeIndividualDetailsImpl();

		creativeIndividualDetailsImpl.setCreativeIndividualDetailsId(
			getCreativeIndividualDetailsId());
		creativeIndividualDetailsImpl.setGroupId(getGroupId());
		creativeIndividualDetailsImpl.setCompanyId(getCompanyId());
		creativeIndividualDetailsImpl.setUserId(getUserId());
		creativeIndividualDetailsImpl.setUserName(getUserName());
		creativeIndividualDetailsImpl.setCreateDate(getCreateDate());
		creativeIndividualDetailsImpl.setModifiedDate(getModifiedDate());
		creativeIndividualDetailsImpl.setSectorOfPractice(
			getSectorOfPractice());
		creativeIndividualDetailsImpl.setFirstName(getFirstName());
		creativeIndividualDetailsImpl.setMiddleName(getMiddleName());
		creativeIndividualDetailsImpl.setLastName(getLastName());
		creativeIndividualDetailsImpl.setTrn(getTrn());
		creativeIndividualDetailsImpl.setCity(getCity());
		creativeIndividualDetailsImpl.setCountry(getCountry());
		creativeIndividualDetailsImpl.setSex(getSex());
		creativeIndividualDetailsImpl.setCell(getCell());
		creativeIndividualDetailsImpl.setEmail(getEmail());
		creativeIndividualDetailsImpl.setAreYouStudent(getAreYouStudent());
		creativeIndividualDetailsImpl.setCompanyEmail(getCompanyEmail());
		creativeIndividualDetailsImpl.setCompanyWebsite(getCompanyWebsite());
		creativeIndividualDetailsImpl.setCreativeApplicationId(
			getCreativeApplicationId());

		creativeIndividualDetailsImpl.resetOriginalValues();

		return creativeIndividualDetailsImpl;
	}

	@Override
	public CreativeIndividualDetails cloneWithOriginalValues() {
		CreativeIndividualDetailsImpl creativeIndividualDetailsImpl =
			new CreativeIndividualDetailsImpl();

		creativeIndividualDetailsImpl.setCreativeIndividualDetailsId(
			this.<Long>getColumnOriginalValue("creativeIndividualDetailsId"));
		creativeIndividualDetailsImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		creativeIndividualDetailsImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		creativeIndividualDetailsImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		creativeIndividualDetailsImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		creativeIndividualDetailsImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		creativeIndividualDetailsImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		creativeIndividualDetailsImpl.setSectorOfPractice(
			this.<String>getColumnOriginalValue("sectorOfPractice"));
		creativeIndividualDetailsImpl.setFirstName(
			this.<String>getColumnOriginalValue("firstName"));
		creativeIndividualDetailsImpl.setMiddleName(
			this.<String>getColumnOriginalValue("middleName"));
		creativeIndividualDetailsImpl.setLastName(
			this.<String>getColumnOriginalValue("lastName"));
		creativeIndividualDetailsImpl.setTrn(
			this.<String>getColumnOriginalValue("trn"));
		creativeIndividualDetailsImpl.setCity(
			this.<String>getColumnOriginalValue("city"));
		creativeIndividualDetailsImpl.setCountry(
			this.<String>getColumnOriginalValue("country"));
		creativeIndividualDetailsImpl.setSex(
			this.<String>getColumnOriginalValue("sex"));
		creativeIndividualDetailsImpl.setCell(
			this.<String>getColumnOriginalValue("cell"));
		creativeIndividualDetailsImpl.setEmail(
			this.<String>getColumnOriginalValue("email"));
		creativeIndividualDetailsImpl.setAreYouStudent(
			this.<String>getColumnOriginalValue("areYouStudent"));
		creativeIndividualDetailsImpl.setCompanyEmail(
			this.<String>getColumnOriginalValue("companyEmail"));
		creativeIndividualDetailsImpl.setCompanyWebsite(
			this.<String>getColumnOriginalValue("companyWebsite"));
		creativeIndividualDetailsImpl.setCreativeApplicationId(
			this.<Long>getColumnOriginalValue("CreativeApplicationId"));

		return creativeIndividualDetailsImpl;
	}

	@Override
	public int compareTo(CreativeIndividualDetails creativeIndividualDetails) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), creativeIndividualDetails.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof CreativeIndividualDetails)) {
			return false;
		}

		CreativeIndividualDetails creativeIndividualDetails =
			(CreativeIndividualDetails)object;

		long primaryKey = creativeIndividualDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<CreativeIndividualDetails> toCacheModel() {
		CreativeIndividualDetailsCacheModel
			creativeIndividualDetailsCacheModel =
				new CreativeIndividualDetailsCacheModel();

		creativeIndividualDetailsCacheModel.creativeIndividualDetailsId =
			getCreativeIndividualDetailsId();

		creativeIndividualDetailsCacheModel.groupId = getGroupId();

		creativeIndividualDetailsCacheModel.companyId = getCompanyId();

		creativeIndividualDetailsCacheModel.userId = getUserId();

		creativeIndividualDetailsCacheModel.userName = getUserName();

		String userName = creativeIndividualDetailsCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			creativeIndividualDetailsCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			creativeIndividualDetailsCacheModel.createDate =
				createDate.getTime();
		}
		else {
			creativeIndividualDetailsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			creativeIndividualDetailsCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			creativeIndividualDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		creativeIndividualDetailsCacheModel.sectorOfPractice =
			getSectorOfPractice();

		String sectorOfPractice =
			creativeIndividualDetailsCacheModel.sectorOfPractice;

		if ((sectorOfPractice != null) && (sectorOfPractice.length() == 0)) {
			creativeIndividualDetailsCacheModel.sectorOfPractice = null;
		}

		creativeIndividualDetailsCacheModel.firstName = getFirstName();

		String firstName = creativeIndividualDetailsCacheModel.firstName;

		if ((firstName != null) && (firstName.length() == 0)) {
			creativeIndividualDetailsCacheModel.firstName = null;
		}

		creativeIndividualDetailsCacheModel.middleName = getMiddleName();

		String middleName = creativeIndividualDetailsCacheModel.middleName;

		if ((middleName != null) && (middleName.length() == 0)) {
			creativeIndividualDetailsCacheModel.middleName = null;
		}

		creativeIndividualDetailsCacheModel.lastName = getLastName();

		String lastName = creativeIndividualDetailsCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			creativeIndividualDetailsCacheModel.lastName = null;
		}

		creativeIndividualDetailsCacheModel.trn = getTrn();

		String trn = creativeIndividualDetailsCacheModel.trn;

		if ((trn != null) && (trn.length() == 0)) {
			creativeIndividualDetailsCacheModel.trn = null;
		}

		creativeIndividualDetailsCacheModel.city = getCity();

		String city = creativeIndividualDetailsCacheModel.city;

		if ((city != null) && (city.length() == 0)) {
			creativeIndividualDetailsCacheModel.city = null;
		}

		creativeIndividualDetailsCacheModel.country = getCountry();

		String country = creativeIndividualDetailsCacheModel.country;

		if ((country != null) && (country.length() == 0)) {
			creativeIndividualDetailsCacheModel.country = null;
		}

		creativeIndividualDetailsCacheModel.sex = getSex();

		String sex = creativeIndividualDetailsCacheModel.sex;

		if ((sex != null) && (sex.length() == 0)) {
			creativeIndividualDetailsCacheModel.sex = null;
		}

		creativeIndividualDetailsCacheModel.cell = getCell();

		String cell = creativeIndividualDetailsCacheModel.cell;

		if ((cell != null) && (cell.length() == 0)) {
			creativeIndividualDetailsCacheModel.cell = null;
		}

		creativeIndividualDetailsCacheModel.email = getEmail();

		String email = creativeIndividualDetailsCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			creativeIndividualDetailsCacheModel.email = null;
		}

		creativeIndividualDetailsCacheModel.areYouStudent = getAreYouStudent();

		String areYouStudent =
			creativeIndividualDetailsCacheModel.areYouStudent;

		if ((areYouStudent != null) && (areYouStudent.length() == 0)) {
			creativeIndividualDetailsCacheModel.areYouStudent = null;
		}

		creativeIndividualDetailsCacheModel.companyEmail = getCompanyEmail();

		String companyEmail = creativeIndividualDetailsCacheModel.companyEmail;

		if ((companyEmail != null) && (companyEmail.length() == 0)) {
			creativeIndividualDetailsCacheModel.companyEmail = null;
		}

		creativeIndividualDetailsCacheModel.companyWebsite =
			getCompanyWebsite();

		String companyWebsite =
			creativeIndividualDetailsCacheModel.companyWebsite;

		if ((companyWebsite != null) && (companyWebsite.length() == 0)) {
			creativeIndividualDetailsCacheModel.companyWebsite = null;
		}

		creativeIndividualDetailsCacheModel.CreativeApplicationId =
			getCreativeApplicationId();

		return creativeIndividualDetailsCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<CreativeIndividualDetails, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<CreativeIndividualDetails, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CreativeIndividualDetails, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(CreativeIndividualDetails)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, CreativeIndividualDetails>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						CreativeIndividualDetails.class, ModelWrapper.class);

	}

	private long _creativeIndividualDetailsId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _sectorOfPractice;
	private String _firstName;
	private String _middleName;
	private String _lastName;
	private String _trn;
	private String _city;
	private String _country;
	private String _sex;
	private String _cell;
	private String _email;
	private String _areYouStudent;
	private String _companyEmail;
	private String _companyWebsite;
	private long _CreativeApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<CreativeIndividualDetails, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((CreativeIndividualDetails)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"creativeIndividualDetailsId", _creativeIndividualDetailsId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("sectorOfPractice", _sectorOfPractice);
		_columnOriginalValues.put("firstName", _firstName);
		_columnOriginalValues.put("middleName", _middleName);
		_columnOriginalValues.put("lastName", _lastName);
		_columnOriginalValues.put("trn", _trn);
		_columnOriginalValues.put("city", _city);
		_columnOriginalValues.put("country", _country);
		_columnOriginalValues.put("sex", _sex);
		_columnOriginalValues.put("cell", _cell);
		_columnOriginalValues.put("email", _email);
		_columnOriginalValues.put("areYouStudent", _areYouStudent);
		_columnOriginalValues.put("companyEmail", _companyEmail);
		_columnOriginalValues.put("companyWebsite", _companyWebsite);
		_columnOriginalValues.put(
			"CreativeApplicationId", _CreativeApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("creativeIndividualDetailsId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("sectorOfPractice", 128L);

		columnBitmasks.put("firstName", 256L);

		columnBitmasks.put("middleName", 512L);

		columnBitmasks.put("lastName", 1024L);

		columnBitmasks.put("trn", 2048L);

		columnBitmasks.put("city", 4096L);

		columnBitmasks.put("country", 8192L);

		columnBitmasks.put("sex", 16384L);

		columnBitmasks.put("cell", 32768L);

		columnBitmasks.put("email", 65536L);

		columnBitmasks.put("areYouStudent", 131072L);

		columnBitmasks.put("companyEmail", 262144L);

		columnBitmasks.put("companyWebsite", 524288L);

		columnBitmasks.put("CreativeApplicationId", 1048576L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private CreativeIndividualDetails _escapedModel;

}