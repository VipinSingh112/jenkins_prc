/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.creative.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.creative.application.form.service.model.CreativeCompanyDetails;
import com.nbp.creative.application.form.service.model.CreativeCompanyDetailsModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the CreativeCompanyDetails service. Represents a row in the &quot;nbp_creative_company_detail&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>CreativeCompanyDetailsModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CreativeCompanyDetailsImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CreativeCompanyDetailsImpl
 * @generated
 */
@JSON(strict = true)
public class CreativeCompanyDetailsModelImpl
	extends BaseModelImpl<CreativeCompanyDetails>
	implements CreativeCompanyDetailsModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a creative company details model instance should use the <code>CreativeCompanyDetails</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_creative_company_detail";

	public static final Object[][] TABLE_COLUMNS = {
		{"creativeCompanyDetailsId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"companyName", Types.VARCHAR},
		{"companyBusinessRegistrationNo", Types.VARCHAR},
		{"dateOfCompanyRegistration", Types.TIMESTAMP},
		{"companyTrn", Types.VARCHAR}, {"companyTcc", Types.VARCHAR},
		{"companyProfile", Types.VARCHAR},
		{"CreativeApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("creativeCompanyDetailsId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("companyName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyBusinessRegistrationNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dateOfCompanyRegistration", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("companyTrn", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyTcc", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyProfile", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CreativeApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_creative_company_detail (creativeCompanyDetailsId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,companyName VARCHAR(75) null,companyBusinessRegistrationNo VARCHAR(75) null,dateOfCompanyRegistration DATE null,companyTrn VARCHAR(75) null,companyTcc VARCHAR(75) null,companyProfile VARCHAR(75) null,CreativeApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_creative_company_detail";

	public static final String ORDER_BY_JPQL =
		" ORDER BY creativeCompanyDetails.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_creative_company_detail.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATIVEAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public CreativeCompanyDetailsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _creativeCompanyDetailsId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCreativeCompanyDetailsId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _creativeCompanyDetailsId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CreativeCompanyDetails.class;
	}

	@Override
	public String getModelClassName() {
		return CreativeCompanyDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<CreativeCompanyDetails, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<CreativeCompanyDetails, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CreativeCompanyDetails, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((CreativeCompanyDetails)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<CreativeCompanyDetails, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<CreativeCompanyDetails, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(CreativeCompanyDetails)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<CreativeCompanyDetails, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<CreativeCompanyDetails, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<CreativeCompanyDetails, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<CreativeCompanyDetails, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<CreativeCompanyDetails, Object>>();

			attributeGetterFunctions.put(
				"creativeCompanyDetailsId",
				CreativeCompanyDetails::getCreativeCompanyDetailsId);
			attributeGetterFunctions.put(
				"groupId", CreativeCompanyDetails::getGroupId);
			attributeGetterFunctions.put(
				"companyId", CreativeCompanyDetails::getCompanyId);
			attributeGetterFunctions.put(
				"userId", CreativeCompanyDetails::getUserId);
			attributeGetterFunctions.put(
				"userName", CreativeCompanyDetails::getUserName);
			attributeGetterFunctions.put(
				"createDate", CreativeCompanyDetails::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", CreativeCompanyDetails::getModifiedDate);
			attributeGetterFunctions.put(
				"companyName", CreativeCompanyDetails::getCompanyName);
			attributeGetterFunctions.put(
				"companyBusinessRegistrationNo",
				CreativeCompanyDetails::getCompanyBusinessRegistrationNo);
			attributeGetterFunctions.put(
				"dateOfCompanyRegistration",
				CreativeCompanyDetails::getDateOfCompanyRegistration);
			attributeGetterFunctions.put(
				"companyTrn", CreativeCompanyDetails::getCompanyTrn);
			attributeGetterFunctions.put(
				"companyTcc", CreativeCompanyDetails::getCompanyTcc);
			attributeGetterFunctions.put(
				"companyProfile", CreativeCompanyDetails::getCompanyProfile);
			attributeGetterFunctions.put(
				"CreativeApplicationId",
				CreativeCompanyDetails::getCreativeApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<CreativeCompanyDetails, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<CreativeCompanyDetails, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<CreativeCompanyDetails, ?>>();

			attributeSetterBiConsumers.put(
				"creativeCompanyDetailsId",
				(BiConsumer<CreativeCompanyDetails, Long>)
					CreativeCompanyDetails::setCreativeCompanyDetailsId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<CreativeCompanyDetails, Long>)
					CreativeCompanyDetails::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<CreativeCompanyDetails, Long>)
					CreativeCompanyDetails::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<CreativeCompanyDetails, Long>)
					CreativeCompanyDetails::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<CreativeCompanyDetails, String>)
					CreativeCompanyDetails::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<CreativeCompanyDetails, Date>)
					CreativeCompanyDetails::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<CreativeCompanyDetails, Date>)
					CreativeCompanyDetails::setModifiedDate);
			attributeSetterBiConsumers.put(
				"companyName",
				(BiConsumer<CreativeCompanyDetails, String>)
					CreativeCompanyDetails::setCompanyName);
			attributeSetterBiConsumers.put(
				"companyBusinessRegistrationNo",
				(BiConsumer<CreativeCompanyDetails, String>)
					CreativeCompanyDetails::setCompanyBusinessRegistrationNo);
			attributeSetterBiConsumers.put(
				"dateOfCompanyRegistration",
				(BiConsumer<CreativeCompanyDetails, Date>)
					CreativeCompanyDetails::setDateOfCompanyRegistration);
			attributeSetterBiConsumers.put(
				"companyTrn",
				(BiConsumer<CreativeCompanyDetails, String>)
					CreativeCompanyDetails::setCompanyTrn);
			attributeSetterBiConsumers.put(
				"companyTcc",
				(BiConsumer<CreativeCompanyDetails, String>)
					CreativeCompanyDetails::setCompanyTcc);
			attributeSetterBiConsumers.put(
				"companyProfile",
				(BiConsumer<CreativeCompanyDetails, String>)
					CreativeCompanyDetails::setCompanyProfile);
			attributeSetterBiConsumers.put(
				"CreativeApplicationId",
				(BiConsumer<CreativeCompanyDetails, Long>)
					CreativeCompanyDetails::setCreativeApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getCreativeCompanyDetailsId() {
		return _creativeCompanyDetailsId;
	}

	@Override
	public void setCreativeCompanyDetailsId(long creativeCompanyDetailsId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_creativeCompanyDetailsId = creativeCompanyDetailsId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getCompanyName() {
		if (_companyName == null) {
			return "";
		}
		else {
			return _companyName;
		}
	}

	@Override
	public void setCompanyName(String companyName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyName = companyName;
	}

	@JSON
	@Override
	public String getCompanyBusinessRegistrationNo() {
		if (_companyBusinessRegistrationNo == null) {
			return "";
		}
		else {
			return _companyBusinessRegistrationNo;
		}
	}

	@Override
	public void setCompanyBusinessRegistrationNo(
		String companyBusinessRegistrationNo) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyBusinessRegistrationNo = companyBusinessRegistrationNo;
	}

	@JSON
	@Override
	public Date getDateOfCompanyRegistration() {
		return _dateOfCompanyRegistration;
	}

	@Override
	public void setDateOfCompanyRegistration(Date dateOfCompanyRegistration) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dateOfCompanyRegistration = dateOfCompanyRegistration;
	}

	@JSON
	@Override
	public String getCompanyTrn() {
		if (_companyTrn == null) {
			return "";
		}
		else {
			return _companyTrn;
		}
	}

	@Override
	public void setCompanyTrn(String companyTrn) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyTrn = companyTrn;
	}

	@JSON
	@Override
	public String getCompanyTcc() {
		if (_companyTcc == null) {
			return "";
		}
		else {
			return _companyTcc;
		}
	}

	@Override
	public void setCompanyTcc(String companyTcc) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyTcc = companyTcc;
	}

	@JSON
	@Override
	public String getCompanyProfile() {
		if (_companyProfile == null) {
			return "";
		}
		else {
			return _companyProfile;
		}
	}

	@Override
	public void setCompanyProfile(String companyProfile) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyProfile = companyProfile;
	}

	@JSON
	@Override
	public long getCreativeApplicationId() {
		return _CreativeApplicationId;
	}

	@Override
	public void setCreativeApplicationId(long CreativeApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_CreativeApplicationId = CreativeApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCreativeApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("CreativeApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), CreativeCompanyDetails.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CreativeCompanyDetails toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, CreativeCompanyDetails>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CreativeCompanyDetailsImpl creativeCompanyDetailsImpl =
			new CreativeCompanyDetailsImpl();

		creativeCompanyDetailsImpl.setCreativeCompanyDetailsId(
			getCreativeCompanyDetailsId());
		creativeCompanyDetailsImpl.setGroupId(getGroupId());
		creativeCompanyDetailsImpl.setCompanyId(getCompanyId());
		creativeCompanyDetailsImpl.setUserId(getUserId());
		creativeCompanyDetailsImpl.setUserName(getUserName());
		creativeCompanyDetailsImpl.setCreateDate(getCreateDate());
		creativeCompanyDetailsImpl.setModifiedDate(getModifiedDate());
		creativeCompanyDetailsImpl.setCompanyName(getCompanyName());
		creativeCompanyDetailsImpl.setCompanyBusinessRegistrationNo(
			getCompanyBusinessRegistrationNo());
		creativeCompanyDetailsImpl.setDateOfCompanyRegistration(
			getDateOfCompanyRegistration());
		creativeCompanyDetailsImpl.setCompanyTrn(getCompanyTrn());
		creativeCompanyDetailsImpl.setCompanyTcc(getCompanyTcc());
		creativeCompanyDetailsImpl.setCompanyProfile(getCompanyProfile());
		creativeCompanyDetailsImpl.setCreativeApplicationId(
			getCreativeApplicationId());

		creativeCompanyDetailsImpl.resetOriginalValues();

		return creativeCompanyDetailsImpl;
	}

	@Override
	public CreativeCompanyDetails cloneWithOriginalValues() {
		CreativeCompanyDetailsImpl creativeCompanyDetailsImpl =
			new CreativeCompanyDetailsImpl();

		creativeCompanyDetailsImpl.setCreativeCompanyDetailsId(
			this.<Long>getColumnOriginalValue("creativeCompanyDetailsId"));
		creativeCompanyDetailsImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		creativeCompanyDetailsImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		creativeCompanyDetailsImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		creativeCompanyDetailsImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		creativeCompanyDetailsImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		creativeCompanyDetailsImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		creativeCompanyDetailsImpl.setCompanyName(
			this.<String>getColumnOriginalValue("companyName"));
		creativeCompanyDetailsImpl.setCompanyBusinessRegistrationNo(
			this.<String>getColumnOriginalValue(
				"companyBusinessRegistrationNo"));
		creativeCompanyDetailsImpl.setDateOfCompanyRegistration(
			this.<Date>getColumnOriginalValue("dateOfCompanyRegistration"));
		creativeCompanyDetailsImpl.setCompanyTrn(
			this.<String>getColumnOriginalValue("companyTrn"));
		creativeCompanyDetailsImpl.setCompanyTcc(
			this.<String>getColumnOriginalValue("companyTcc"));
		creativeCompanyDetailsImpl.setCompanyProfile(
			this.<String>getColumnOriginalValue("companyProfile"));
		creativeCompanyDetailsImpl.setCreativeApplicationId(
			this.<Long>getColumnOriginalValue("CreativeApplicationId"));

		return creativeCompanyDetailsImpl;
	}

	@Override
	public int compareTo(CreativeCompanyDetails creativeCompanyDetails) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), creativeCompanyDetails.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof CreativeCompanyDetails)) {
			return false;
		}

		CreativeCompanyDetails creativeCompanyDetails =
			(CreativeCompanyDetails)object;

		long primaryKey = creativeCompanyDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<CreativeCompanyDetails> toCacheModel() {
		CreativeCompanyDetailsCacheModel creativeCompanyDetailsCacheModel =
			new CreativeCompanyDetailsCacheModel();

		creativeCompanyDetailsCacheModel.creativeCompanyDetailsId =
			getCreativeCompanyDetailsId();

		creativeCompanyDetailsCacheModel.groupId = getGroupId();

		creativeCompanyDetailsCacheModel.companyId = getCompanyId();

		creativeCompanyDetailsCacheModel.userId = getUserId();

		creativeCompanyDetailsCacheModel.userName = getUserName();

		String userName = creativeCompanyDetailsCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			creativeCompanyDetailsCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			creativeCompanyDetailsCacheModel.createDate = createDate.getTime();
		}
		else {
			creativeCompanyDetailsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			creativeCompanyDetailsCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			creativeCompanyDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		creativeCompanyDetailsCacheModel.companyName = getCompanyName();

		String companyName = creativeCompanyDetailsCacheModel.companyName;

		if ((companyName != null) && (companyName.length() == 0)) {
			creativeCompanyDetailsCacheModel.companyName = null;
		}

		creativeCompanyDetailsCacheModel.companyBusinessRegistrationNo =
			getCompanyBusinessRegistrationNo();

		String companyBusinessRegistrationNo =
			creativeCompanyDetailsCacheModel.companyBusinessRegistrationNo;

		if ((companyBusinessRegistrationNo != null) &&
			(companyBusinessRegistrationNo.length() == 0)) {

			creativeCompanyDetailsCacheModel.companyBusinessRegistrationNo =
				null;
		}

		Date dateOfCompanyRegistration = getDateOfCompanyRegistration();

		if (dateOfCompanyRegistration != null) {
			creativeCompanyDetailsCacheModel.dateOfCompanyRegistration =
				dateOfCompanyRegistration.getTime();
		}
		else {
			creativeCompanyDetailsCacheModel.dateOfCompanyRegistration =
				Long.MIN_VALUE;
		}

		creativeCompanyDetailsCacheModel.companyTrn = getCompanyTrn();

		String companyTrn = creativeCompanyDetailsCacheModel.companyTrn;

		if ((companyTrn != null) && (companyTrn.length() == 0)) {
			creativeCompanyDetailsCacheModel.companyTrn = null;
		}

		creativeCompanyDetailsCacheModel.companyTcc = getCompanyTcc();

		String companyTcc = creativeCompanyDetailsCacheModel.companyTcc;

		if ((companyTcc != null) && (companyTcc.length() == 0)) {
			creativeCompanyDetailsCacheModel.companyTcc = null;
		}

		creativeCompanyDetailsCacheModel.companyProfile = getCompanyProfile();

		String companyProfile = creativeCompanyDetailsCacheModel.companyProfile;

		if ((companyProfile != null) && (companyProfile.length() == 0)) {
			creativeCompanyDetailsCacheModel.companyProfile = null;
		}

		creativeCompanyDetailsCacheModel.CreativeApplicationId =
			getCreativeApplicationId();

		return creativeCompanyDetailsCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<CreativeCompanyDetails, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<CreativeCompanyDetails, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CreativeCompanyDetails, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(CreativeCompanyDetails)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, CreativeCompanyDetails>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					CreativeCompanyDetails.class, ModelWrapper.class);

	}

	private long _creativeCompanyDetailsId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _companyName;
	private String _companyBusinessRegistrationNo;
	private Date _dateOfCompanyRegistration;
	private String _companyTrn;
	private String _companyTcc;
	private String _companyProfile;
	private long _CreativeApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<CreativeCompanyDetails, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((CreativeCompanyDetails)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"creativeCompanyDetailsId", _creativeCompanyDetailsId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("companyName", _companyName);
		_columnOriginalValues.put(
			"companyBusinessRegistrationNo", _companyBusinessRegistrationNo);
		_columnOriginalValues.put(
			"dateOfCompanyRegistration", _dateOfCompanyRegistration);
		_columnOriginalValues.put("companyTrn", _companyTrn);
		_columnOriginalValues.put("companyTcc", _companyTcc);
		_columnOriginalValues.put("companyProfile", _companyProfile);
		_columnOriginalValues.put(
			"CreativeApplicationId", _CreativeApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("creativeCompanyDetailsId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("companyName", 128L);

		columnBitmasks.put("companyBusinessRegistrationNo", 256L);

		columnBitmasks.put("dateOfCompanyRegistration", 512L);

		columnBitmasks.put("companyTrn", 1024L);

		columnBitmasks.put("companyTcc", 2048L);

		columnBitmasks.put("companyProfile", 4096L);

		columnBitmasks.put("CreativeApplicationId", 8192L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private CreativeCompanyDetails _escapedModel;

}