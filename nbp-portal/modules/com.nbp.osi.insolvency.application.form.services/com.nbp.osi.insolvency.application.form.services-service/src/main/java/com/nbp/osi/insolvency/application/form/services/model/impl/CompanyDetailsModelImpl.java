/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.osi.insolvency.application.form.services.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.osi.insolvency.application.form.services.model.CompanyDetails;
import com.nbp.osi.insolvency.application.form.services.model.CompanyDetailsModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the CompanyDetails service. Represents a row in the &quot;nbp_osi_company_details&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>CompanyDetailsModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CompanyDetailsImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CompanyDetailsImpl
 * @generated
 */
@JSON(strict = true)
public class CompanyDetailsModelImpl
	extends BaseModelImpl<CompanyDetails> implements CompanyDetailsModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a company details model instance should use the <code>CompanyDetails</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_osi_company_details";

	public static final Object[][] TABLE_COLUMNS = {
		{"companyDetailsId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"companyDate", Types.TIMESTAMP},
		{"companyName", Types.VARCHAR}, {"companyAddress", Types.VARCHAR},
		{"companyEmail", Types.VARCHAR}, {"companyTelNum", Types.VARCHAR},
		{"companyTrn", Types.VARCHAR}, {"companyDateInco", Types.TIMESTAMP},
		{"companyTypeOfCo", Types.VARCHAR}, {"companyCore", Types.VARCHAR},
		{"companyEmployees", Types.VARCHAR},
		{"companyLastReturn", Types.TIMESTAMP},
		{"companyTurnover", Types.VARCHAR}, {"companyShares", Types.VARCHAR},
		{"osiInsolvencyId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("companyDetailsId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("companyDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("companyName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyTelNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyTrn", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyDateInco", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("companyTypeOfCo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyCore", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyEmployees", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyLastReturn", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("companyTurnover", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyShares", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("osiInsolvencyId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_osi_company_details (companyDetailsId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,companyDate DATE null,companyName VARCHAR(75) null,companyAddress VARCHAR(500) null,companyEmail VARCHAR(75) null,companyTelNum VARCHAR(75) null,companyTrn VARCHAR(75) null,companyDateInco DATE null,companyTypeOfCo VARCHAR(75) null,companyCore VARCHAR(75) null,companyEmployees VARCHAR(75) null,companyLastReturn DATE null,companyTurnover VARCHAR(75) null,companyShares VARCHAR(75) null,osiInsolvencyId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_osi_company_details";

	public static final String ORDER_BY_JPQL =
		" ORDER BY companyDetails.companyDetailsId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_osi_company_details.companyDetailsId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long OSIINSOLVENCYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYDETAILSID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public CompanyDetailsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _companyDetailsId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCompanyDetailsId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _companyDetailsId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CompanyDetails.class;
	}

	@Override
	public String getModelClassName() {
		return CompanyDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<CompanyDetails, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<CompanyDetails, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CompanyDetails, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((CompanyDetails)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<CompanyDetails, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<CompanyDetails, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(CompanyDetails)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<CompanyDetails, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<CompanyDetails, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<CompanyDetails, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<CompanyDetails, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<CompanyDetails, Object>>();

			attributeGetterFunctions.put(
				"companyDetailsId", CompanyDetails::getCompanyDetailsId);
			attributeGetterFunctions.put("groupId", CompanyDetails::getGroupId);
			attributeGetterFunctions.put(
				"companyId", CompanyDetails::getCompanyId);
			attributeGetterFunctions.put("userId", CompanyDetails::getUserId);
			attributeGetterFunctions.put(
				"userName", CompanyDetails::getUserName);
			attributeGetterFunctions.put(
				"createDate", CompanyDetails::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", CompanyDetails::getModifiedDate);
			attributeGetterFunctions.put(
				"companyDate", CompanyDetails::getCompanyDate);
			attributeGetterFunctions.put(
				"companyName", CompanyDetails::getCompanyName);
			attributeGetterFunctions.put(
				"companyAddress", CompanyDetails::getCompanyAddress);
			attributeGetterFunctions.put(
				"companyEmail", CompanyDetails::getCompanyEmail);
			attributeGetterFunctions.put(
				"companyTelNum", CompanyDetails::getCompanyTelNum);
			attributeGetterFunctions.put(
				"companyTrn", CompanyDetails::getCompanyTrn);
			attributeGetterFunctions.put(
				"companyDateInco", CompanyDetails::getCompanyDateInco);
			attributeGetterFunctions.put(
				"companyTypeOfCo", CompanyDetails::getCompanyTypeOfCo);
			attributeGetterFunctions.put(
				"companyCore", CompanyDetails::getCompanyCore);
			attributeGetterFunctions.put(
				"companyEmployees", CompanyDetails::getCompanyEmployees);
			attributeGetterFunctions.put(
				"companyLastReturn", CompanyDetails::getCompanyLastReturn);
			attributeGetterFunctions.put(
				"companyTurnover", CompanyDetails::getCompanyTurnover);
			attributeGetterFunctions.put(
				"companyShares", CompanyDetails::getCompanyShares);
			attributeGetterFunctions.put(
				"osiInsolvencyId", CompanyDetails::getOsiInsolvencyId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<CompanyDetails, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<CompanyDetails, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap<String, BiConsumer<CompanyDetails, ?>>();

			attributeSetterBiConsumers.put(
				"companyDetailsId",
				(BiConsumer<CompanyDetails, Long>)
					CompanyDetails::setCompanyDetailsId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<CompanyDetails, Long>)CompanyDetails::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<CompanyDetails, Long>)CompanyDetails::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<CompanyDetails, Long>)CompanyDetails::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<CompanyDetails, String>)
					CompanyDetails::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<CompanyDetails, Date>)
					CompanyDetails::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<CompanyDetails, Date>)
					CompanyDetails::setModifiedDate);
			attributeSetterBiConsumers.put(
				"companyDate",
				(BiConsumer<CompanyDetails, Date>)
					CompanyDetails::setCompanyDate);
			attributeSetterBiConsumers.put(
				"companyName",
				(BiConsumer<CompanyDetails, String>)
					CompanyDetails::setCompanyName);
			attributeSetterBiConsumers.put(
				"companyAddress",
				(BiConsumer<CompanyDetails, String>)
					CompanyDetails::setCompanyAddress);
			attributeSetterBiConsumers.put(
				"companyEmail",
				(BiConsumer<CompanyDetails, String>)
					CompanyDetails::setCompanyEmail);
			attributeSetterBiConsumers.put(
				"companyTelNum",
				(BiConsumer<CompanyDetails, String>)
					CompanyDetails::setCompanyTelNum);
			attributeSetterBiConsumers.put(
				"companyTrn",
				(BiConsumer<CompanyDetails, String>)
					CompanyDetails::setCompanyTrn);
			attributeSetterBiConsumers.put(
				"companyDateInco",
				(BiConsumer<CompanyDetails, Date>)
					CompanyDetails::setCompanyDateInco);
			attributeSetterBiConsumers.put(
				"companyTypeOfCo",
				(BiConsumer<CompanyDetails, String>)
					CompanyDetails::setCompanyTypeOfCo);
			attributeSetterBiConsumers.put(
				"companyCore",
				(BiConsumer<CompanyDetails, String>)
					CompanyDetails::setCompanyCore);
			attributeSetterBiConsumers.put(
				"companyEmployees",
				(BiConsumer<CompanyDetails, String>)
					CompanyDetails::setCompanyEmployees);
			attributeSetterBiConsumers.put(
				"companyLastReturn",
				(BiConsumer<CompanyDetails, Date>)
					CompanyDetails::setCompanyLastReturn);
			attributeSetterBiConsumers.put(
				"companyTurnover",
				(BiConsumer<CompanyDetails, String>)
					CompanyDetails::setCompanyTurnover);
			attributeSetterBiConsumers.put(
				"companyShares",
				(BiConsumer<CompanyDetails, String>)
					CompanyDetails::setCompanyShares);
			attributeSetterBiConsumers.put(
				"osiInsolvencyId",
				(BiConsumer<CompanyDetails, Long>)
					CompanyDetails::setOsiInsolvencyId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getCompanyDetailsId() {
		return _companyDetailsId;
	}

	@Override
	public void setCompanyDetailsId(long companyDetailsId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyDetailsId = companyDetailsId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public Date getCompanyDate() {
		return _companyDate;
	}

	@Override
	public void setCompanyDate(Date companyDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyDate = companyDate;
	}

	@JSON
	@Override
	public String getCompanyName() {
		if (_companyName == null) {
			return "";
		}
		else {
			return _companyName;
		}
	}

	@Override
	public void setCompanyName(String companyName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyName = companyName;
	}

	@JSON
	@Override
	public String getCompanyAddress() {
		if (_companyAddress == null) {
			return "";
		}
		else {
			return _companyAddress;
		}
	}

	@Override
	public void setCompanyAddress(String companyAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyAddress = companyAddress;
	}

	@JSON
	@Override
	public String getCompanyEmail() {
		if (_companyEmail == null) {
			return "";
		}
		else {
			return _companyEmail;
		}
	}

	@Override
	public void setCompanyEmail(String companyEmail) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyEmail = companyEmail;
	}

	@JSON
	@Override
	public String getCompanyTelNum() {
		if (_companyTelNum == null) {
			return "";
		}
		else {
			return _companyTelNum;
		}
	}

	@Override
	public void setCompanyTelNum(String companyTelNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyTelNum = companyTelNum;
	}

	@JSON
	@Override
	public String getCompanyTrn() {
		if (_companyTrn == null) {
			return "";
		}
		else {
			return _companyTrn;
		}
	}

	@Override
	public void setCompanyTrn(String companyTrn) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyTrn = companyTrn;
	}

	@JSON
	@Override
	public Date getCompanyDateInco() {
		return _companyDateInco;
	}

	@Override
	public void setCompanyDateInco(Date companyDateInco) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyDateInco = companyDateInco;
	}

	@JSON
	@Override
	public String getCompanyTypeOfCo() {
		if (_companyTypeOfCo == null) {
			return "";
		}
		else {
			return _companyTypeOfCo;
		}
	}

	@Override
	public void setCompanyTypeOfCo(String companyTypeOfCo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyTypeOfCo = companyTypeOfCo;
	}

	@JSON
	@Override
	public String getCompanyCore() {
		if (_companyCore == null) {
			return "";
		}
		else {
			return _companyCore;
		}
	}

	@Override
	public void setCompanyCore(String companyCore) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyCore = companyCore;
	}

	@JSON
	@Override
	public String getCompanyEmployees() {
		if (_companyEmployees == null) {
			return "";
		}
		else {
			return _companyEmployees;
		}
	}

	@Override
	public void setCompanyEmployees(String companyEmployees) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyEmployees = companyEmployees;
	}

	@JSON
	@Override
	public Date getCompanyLastReturn() {
		return _companyLastReturn;
	}

	@Override
	public void setCompanyLastReturn(Date companyLastReturn) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyLastReturn = companyLastReturn;
	}

	@JSON
	@Override
	public String getCompanyTurnover() {
		if (_companyTurnover == null) {
			return "";
		}
		else {
			return _companyTurnover;
		}
	}

	@Override
	public void setCompanyTurnover(String companyTurnover) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyTurnover = companyTurnover;
	}

	@JSON
	@Override
	public String getCompanyShares() {
		if (_companyShares == null) {
			return "";
		}
		else {
			return _companyShares;
		}
	}

	@Override
	public void setCompanyShares(String companyShares) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyShares = companyShares;
	}

	@JSON
	@Override
	public long getOsiInsolvencyId() {
		return _osiInsolvencyId;
	}

	@Override
	public void setOsiInsolvencyId(long osiInsolvencyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_osiInsolvencyId = osiInsolvencyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalOsiInsolvencyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("osiInsolvencyId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), CompanyDetails.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CompanyDetails toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, CompanyDetails>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CompanyDetailsImpl companyDetailsImpl = new CompanyDetailsImpl();

		companyDetailsImpl.setCompanyDetailsId(getCompanyDetailsId());
		companyDetailsImpl.setGroupId(getGroupId());
		companyDetailsImpl.setCompanyId(getCompanyId());
		companyDetailsImpl.setUserId(getUserId());
		companyDetailsImpl.setUserName(getUserName());
		companyDetailsImpl.setCreateDate(getCreateDate());
		companyDetailsImpl.setModifiedDate(getModifiedDate());
		companyDetailsImpl.setCompanyDate(getCompanyDate());
		companyDetailsImpl.setCompanyName(getCompanyName());
		companyDetailsImpl.setCompanyAddress(getCompanyAddress());
		companyDetailsImpl.setCompanyEmail(getCompanyEmail());
		companyDetailsImpl.setCompanyTelNum(getCompanyTelNum());
		companyDetailsImpl.setCompanyTrn(getCompanyTrn());
		companyDetailsImpl.setCompanyDateInco(getCompanyDateInco());
		companyDetailsImpl.setCompanyTypeOfCo(getCompanyTypeOfCo());
		companyDetailsImpl.setCompanyCore(getCompanyCore());
		companyDetailsImpl.setCompanyEmployees(getCompanyEmployees());
		companyDetailsImpl.setCompanyLastReturn(getCompanyLastReturn());
		companyDetailsImpl.setCompanyTurnover(getCompanyTurnover());
		companyDetailsImpl.setCompanyShares(getCompanyShares());
		companyDetailsImpl.setOsiInsolvencyId(getOsiInsolvencyId());

		companyDetailsImpl.resetOriginalValues();

		return companyDetailsImpl;
	}

	@Override
	public CompanyDetails cloneWithOriginalValues() {
		CompanyDetailsImpl companyDetailsImpl = new CompanyDetailsImpl();

		companyDetailsImpl.setCompanyDetailsId(
			this.<Long>getColumnOriginalValue("companyDetailsId"));
		companyDetailsImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		companyDetailsImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		companyDetailsImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		companyDetailsImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		companyDetailsImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		companyDetailsImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		companyDetailsImpl.setCompanyDate(
			this.<Date>getColumnOriginalValue("companyDate"));
		companyDetailsImpl.setCompanyName(
			this.<String>getColumnOriginalValue("companyName"));
		companyDetailsImpl.setCompanyAddress(
			this.<String>getColumnOriginalValue("companyAddress"));
		companyDetailsImpl.setCompanyEmail(
			this.<String>getColumnOriginalValue("companyEmail"));
		companyDetailsImpl.setCompanyTelNum(
			this.<String>getColumnOriginalValue("companyTelNum"));
		companyDetailsImpl.setCompanyTrn(
			this.<String>getColumnOriginalValue("companyTrn"));
		companyDetailsImpl.setCompanyDateInco(
			this.<Date>getColumnOriginalValue("companyDateInco"));
		companyDetailsImpl.setCompanyTypeOfCo(
			this.<String>getColumnOriginalValue("companyTypeOfCo"));
		companyDetailsImpl.setCompanyCore(
			this.<String>getColumnOriginalValue("companyCore"));
		companyDetailsImpl.setCompanyEmployees(
			this.<String>getColumnOriginalValue("companyEmployees"));
		companyDetailsImpl.setCompanyLastReturn(
			this.<Date>getColumnOriginalValue("companyLastReturn"));
		companyDetailsImpl.setCompanyTurnover(
			this.<String>getColumnOriginalValue("companyTurnover"));
		companyDetailsImpl.setCompanyShares(
			this.<String>getColumnOriginalValue("companyShares"));
		companyDetailsImpl.setOsiInsolvencyId(
			this.<Long>getColumnOriginalValue("osiInsolvencyId"));

		return companyDetailsImpl;
	}

	@Override
	public int compareTo(CompanyDetails companyDetails) {
		long primaryKey = companyDetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof CompanyDetails)) {
			return false;
		}

		CompanyDetails companyDetails = (CompanyDetails)object;

		long primaryKey = companyDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<CompanyDetails> toCacheModel() {
		CompanyDetailsCacheModel companyDetailsCacheModel =
			new CompanyDetailsCacheModel();

		companyDetailsCacheModel.companyDetailsId = getCompanyDetailsId();

		companyDetailsCacheModel.groupId = getGroupId();

		companyDetailsCacheModel.companyId = getCompanyId();

		companyDetailsCacheModel.userId = getUserId();

		companyDetailsCacheModel.userName = getUserName();

		String userName = companyDetailsCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			companyDetailsCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			companyDetailsCacheModel.createDate = createDate.getTime();
		}
		else {
			companyDetailsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			companyDetailsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			companyDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		Date companyDate = getCompanyDate();

		if (companyDate != null) {
			companyDetailsCacheModel.companyDate = companyDate.getTime();
		}
		else {
			companyDetailsCacheModel.companyDate = Long.MIN_VALUE;
		}

		companyDetailsCacheModel.companyName = getCompanyName();

		String companyName = companyDetailsCacheModel.companyName;

		if ((companyName != null) && (companyName.length() == 0)) {
			companyDetailsCacheModel.companyName = null;
		}

		companyDetailsCacheModel.companyAddress = getCompanyAddress();

		String companyAddress = companyDetailsCacheModel.companyAddress;

		if ((companyAddress != null) && (companyAddress.length() == 0)) {
			companyDetailsCacheModel.companyAddress = null;
		}

		companyDetailsCacheModel.companyEmail = getCompanyEmail();

		String companyEmail = companyDetailsCacheModel.companyEmail;

		if ((companyEmail != null) && (companyEmail.length() == 0)) {
			companyDetailsCacheModel.companyEmail = null;
		}

		companyDetailsCacheModel.companyTelNum = getCompanyTelNum();

		String companyTelNum = companyDetailsCacheModel.companyTelNum;

		if ((companyTelNum != null) && (companyTelNum.length() == 0)) {
			companyDetailsCacheModel.companyTelNum = null;
		}

		companyDetailsCacheModel.companyTrn = getCompanyTrn();

		String companyTrn = companyDetailsCacheModel.companyTrn;

		if ((companyTrn != null) && (companyTrn.length() == 0)) {
			companyDetailsCacheModel.companyTrn = null;
		}

		Date companyDateInco = getCompanyDateInco();

		if (companyDateInco != null) {
			companyDetailsCacheModel.companyDateInco =
				companyDateInco.getTime();
		}
		else {
			companyDetailsCacheModel.companyDateInco = Long.MIN_VALUE;
		}

		companyDetailsCacheModel.companyTypeOfCo = getCompanyTypeOfCo();

		String companyTypeOfCo = companyDetailsCacheModel.companyTypeOfCo;

		if ((companyTypeOfCo != null) && (companyTypeOfCo.length() == 0)) {
			companyDetailsCacheModel.companyTypeOfCo = null;
		}

		companyDetailsCacheModel.companyCore = getCompanyCore();

		String companyCore = companyDetailsCacheModel.companyCore;

		if ((companyCore != null) && (companyCore.length() == 0)) {
			companyDetailsCacheModel.companyCore = null;
		}

		companyDetailsCacheModel.companyEmployees = getCompanyEmployees();

		String companyEmployees = companyDetailsCacheModel.companyEmployees;

		if ((companyEmployees != null) && (companyEmployees.length() == 0)) {
			companyDetailsCacheModel.companyEmployees = null;
		}

		Date companyLastReturn = getCompanyLastReturn();

		if (companyLastReturn != null) {
			companyDetailsCacheModel.companyLastReturn =
				companyLastReturn.getTime();
		}
		else {
			companyDetailsCacheModel.companyLastReturn = Long.MIN_VALUE;
		}

		companyDetailsCacheModel.companyTurnover = getCompanyTurnover();

		String companyTurnover = companyDetailsCacheModel.companyTurnover;

		if ((companyTurnover != null) && (companyTurnover.length() == 0)) {
			companyDetailsCacheModel.companyTurnover = null;
		}

		companyDetailsCacheModel.companyShares = getCompanyShares();

		String companyShares = companyDetailsCacheModel.companyShares;

		if ((companyShares != null) && (companyShares.length() == 0)) {
			companyDetailsCacheModel.companyShares = null;
		}

		companyDetailsCacheModel.osiInsolvencyId = getOsiInsolvencyId();

		return companyDetailsCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<CompanyDetails, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<CompanyDetails, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CompanyDetails, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((CompanyDetails)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, CompanyDetails>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					CompanyDetails.class, ModelWrapper.class);

	}

	private long _companyDetailsId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private Date _companyDate;
	private String _companyName;
	private String _companyAddress;
	private String _companyEmail;
	private String _companyTelNum;
	private String _companyTrn;
	private Date _companyDateInco;
	private String _companyTypeOfCo;
	private String _companyCore;
	private String _companyEmployees;
	private Date _companyLastReturn;
	private String _companyTurnover;
	private String _companyShares;
	private long _osiInsolvencyId;

	public <T> T getColumnValue(String columnName) {
		Function<CompanyDetails, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((CompanyDetails)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("companyDetailsId", _companyDetailsId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("companyDate", _companyDate);
		_columnOriginalValues.put("companyName", _companyName);
		_columnOriginalValues.put("companyAddress", _companyAddress);
		_columnOriginalValues.put("companyEmail", _companyEmail);
		_columnOriginalValues.put("companyTelNum", _companyTelNum);
		_columnOriginalValues.put("companyTrn", _companyTrn);
		_columnOriginalValues.put("companyDateInco", _companyDateInco);
		_columnOriginalValues.put("companyTypeOfCo", _companyTypeOfCo);
		_columnOriginalValues.put("companyCore", _companyCore);
		_columnOriginalValues.put("companyEmployees", _companyEmployees);
		_columnOriginalValues.put("companyLastReturn", _companyLastReturn);
		_columnOriginalValues.put("companyTurnover", _companyTurnover);
		_columnOriginalValues.put("companyShares", _companyShares);
		_columnOriginalValues.put("osiInsolvencyId", _osiInsolvencyId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("companyDetailsId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("companyDate", 128L);

		columnBitmasks.put("companyName", 256L);

		columnBitmasks.put("companyAddress", 512L);

		columnBitmasks.put("companyEmail", 1024L);

		columnBitmasks.put("companyTelNum", 2048L);

		columnBitmasks.put("companyTrn", 4096L);

		columnBitmasks.put("companyDateInco", 8192L);

		columnBitmasks.put("companyTypeOfCo", 16384L);

		columnBitmasks.put("companyCore", 32768L);

		columnBitmasks.put("companyEmployees", 65536L);

		columnBitmasks.put("companyLastReturn", 131072L);

		columnBitmasks.put("companyTurnover", 262144L);

		columnBitmasks.put("companyShares", 524288L);

		columnBitmasks.put("osiInsolvencyId", 1048576L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private CompanyDetails _escapedModel;

}