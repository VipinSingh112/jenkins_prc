/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.osi.insolvency.application.form.services.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the DirectorsForm service. Represents a row in the &quot;nbp_osi_directors_form&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.nbp.osi.insolvency.application.form.services.model.impl.DirectorsFormModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.nbp.osi.insolvency.application.form.services.model.impl.DirectorsFormImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DirectorsForm
 * @generated
 */
@ProviderType
public interface DirectorsFormModel
	extends BaseModel<DirectorsForm>, GroupedModel, ShardedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a directors form model instance should use the {@link DirectorsForm} interface instead.
	 */

	/**
	 * Returns the primary key of this directors form.
	 *
	 * @return the primary key of this directors form
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this directors form.
	 *
	 * @param primaryKey the primary key of this directors form
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the directors form ID of this directors form.
	 *
	 * @return the directors form ID of this directors form
	 */
	public long getDirectorsFormId();

	/**
	 * Sets the directors form ID of this directors form.
	 *
	 * @param directorsFormId the directors form ID of this directors form
	 */
	public void setDirectorsFormId(long directorsFormId);

	/**
	 * Returns the group ID of this directors form.
	 *
	 * @return the group ID of this directors form
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this directors form.
	 *
	 * @param groupId the group ID of this directors form
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this directors form.
	 *
	 * @return the company ID of this directors form
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this directors form.
	 *
	 * @param companyId the company ID of this directors form
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this directors form.
	 *
	 * @return the user ID of this directors form
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this directors form.
	 *
	 * @param userId the user ID of this directors form
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this directors form.
	 *
	 * @return the user uuid of this directors form
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this directors form.
	 *
	 * @param userUuid the user uuid of this directors form
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this directors form.
	 *
	 * @return the user name of this directors form
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this directors form.
	 *
	 * @param userName the user name of this directors form
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this directors form.
	 *
	 * @return the create date of this directors form
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this directors form.
	 *
	 * @param createDate the create date of this directors form
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this directors form.
	 *
	 * @return the modified date of this directors form
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this directors form.
	 *
	 * @param modifiedDate the modified date of this directors form
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the directors name of this directors form.
	 *
	 * @return the directors name of this directors form
	 */
	@AutoEscape
	public String getDirectorsName();

	/**
	 * Sets the directors name of this directors form.
	 *
	 * @param directorsName the directors name of this directors form
	 */
	public void setDirectorsName(String directorsName);

	/**
	 * Returns the directors date appointed of this directors form.
	 *
	 * @return the directors date appointed of this directors form
	 */
	public Date getDirectorsDateAppointed();

	/**
	 * Sets the directors date appointed of this directors form.
	 *
	 * @param directorsDateAppointed the directors date appointed of this directors form
	 */
	public void setDirectorsDateAppointed(Date directorsDateAppointed);

	/**
	 * Returns the directors occupation of this directors form.
	 *
	 * @return the directors occupation of this directors form
	 */
	@AutoEscape
	public String getDirectorsOccupation();

	/**
	 * Sets the directors occupation of this directors form.
	 *
	 * @param directorsOccupation the directors occupation of this directors form
	 */
	public void setDirectorsOccupation(String directorsOccupation);

	/**
	 * Returns the directors contact num of this directors form.
	 *
	 * @return the directors contact num of this directors form
	 */
	@AutoEscape
	public String getDirectorsContactNum();

	/**
	 * Sets the directors contact num of this directors form.
	 *
	 * @param directorsContactNum the directors contact num of this directors form
	 */
	public void setDirectorsContactNum(String directorsContactNum);

	/**
	 * Returns the directors address of this directors form.
	 *
	 * @return the directors address of this directors form
	 */
	@AutoEscape
	public String getDirectorsAddress();

	/**
	 * Sets the directors address of this directors form.
	 *
	 * @param directorsAddress the directors address of this directors form
	 */
	public void setDirectorsAddress(String directorsAddress);

	/**
	 * Returns the directors counter of this directors form.
	 *
	 * @return the directors counter of this directors form
	 */
	@AutoEscape
	public String getDirectorsCounter();

	/**
	 * Sets the directors counter of this directors form.
	 *
	 * @param directorsCounter the directors counter of this directors form
	 */
	public void setDirectorsCounter(String directorsCounter);

	/**
	 * Returns the osi insolvency ID of this directors form.
	 *
	 * @return the osi insolvency ID of this directors form
	 */
	public long getOsiInsolvencyId();

	/**
	 * Sets the osi insolvency ID of this directors form.
	 *
	 * @param osiInsolvencyId the osi insolvency ID of this directors form
	 */
	public void setOsiInsolvencyId(long osiInsolvencyId);

	@Override
	public DirectorsForm cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}