/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.osi.insolvency.application.form.services.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the SecuredCreditor service. Represents a row in the &quot;nbp_osi_liability_detail&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.nbp.osi.insolvency.application.form.services.model.impl.SecuredCreditorModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.nbp.osi.insolvency.application.form.services.model.impl.SecuredCreditorImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SecuredCreditor
 * @generated
 */
@ProviderType
public interface SecuredCreditorModel
	extends BaseModel<SecuredCreditor>, GroupedModel, ShardedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a secured creditor model instance should use the {@link SecuredCreditor} interface instead.
	 */

	/**
	 * Returns the primary key of this secured creditor.
	 *
	 * @return the primary key of this secured creditor
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this secured creditor.
	 *
	 * @param primaryKey the primary key of this secured creditor
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the secured creditor ID of this secured creditor.
	 *
	 * @return the secured creditor ID of this secured creditor
	 */
	public long getSecuredCreditorId();

	/**
	 * Sets the secured creditor ID of this secured creditor.
	 *
	 * @param securedCreditorId the secured creditor ID of this secured creditor
	 */
	public void setSecuredCreditorId(long securedCreditorId);

	/**
	 * Returns the group ID of this secured creditor.
	 *
	 * @return the group ID of this secured creditor
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this secured creditor.
	 *
	 * @param groupId the group ID of this secured creditor
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this secured creditor.
	 *
	 * @return the company ID of this secured creditor
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this secured creditor.
	 *
	 * @param companyId the company ID of this secured creditor
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this secured creditor.
	 *
	 * @return the user ID of this secured creditor
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this secured creditor.
	 *
	 * @param userId the user ID of this secured creditor
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this secured creditor.
	 *
	 * @return the user uuid of this secured creditor
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this secured creditor.
	 *
	 * @param userUuid the user uuid of this secured creditor
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this secured creditor.
	 *
	 * @return the user name of this secured creditor
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this secured creditor.
	 *
	 * @param userName the user name of this secured creditor
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this secured creditor.
	 *
	 * @return the create date of this secured creditor
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this secured creditor.
	 *
	 * @param createDate the create date of this secured creditor
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this secured creditor.
	 *
	 * @return the modified date of this secured creditor
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this secured creditor.
	 *
	 * @param modifiedDate the modified date of this secured creditor
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the secured creditor name of this secured creditor.
	 *
	 * @return the secured creditor name of this secured creditor
	 */
	@AutoEscape
	public String getSecuredCreditorName();

	/**
	 * Sets the secured creditor name of this secured creditor.
	 *
	 * @param securedCreditorName the secured creditor name of this secured creditor
	 */
	public void setSecuredCreditorName(String securedCreditorName);

	/**
	 * Returns the secured creditor asset of this secured creditor.
	 *
	 * @return the secured creditor asset of this secured creditor
	 */
	@AutoEscape
	public String getSecuredCreditorAsset();

	/**
	 * Sets the secured creditor asset of this secured creditor.
	 *
	 * @param securedCreditorAsset the secured creditor asset of this secured creditor
	 */
	public void setSecuredCreditorAsset(String securedCreditorAsset);

	/**
	 * Returns the secured creditor liability of this secured creditor.
	 *
	 * @return the secured creditor liability of this secured creditor
	 */
	@AutoEscape
	public String getSecuredCreditorLiability();

	/**
	 * Sets the secured creditor liability of this secured creditor.
	 *
	 * @param securedCreditorLiability the secured creditor liability of this secured creditor
	 */
	public void setSecuredCreditorLiability(String securedCreditorLiability);

	/**
	 * Returns the secured creditor payment of this secured creditor.
	 *
	 * @return the secured creditor payment of this secured creditor
	 */
	@AutoEscape
	public String getSecuredCreditorPayment();

	/**
	 * Sets the secured creditor payment of this secured creditor.
	 *
	 * @param securedCreditorPayment the secured creditor payment of this secured creditor
	 */
	public void setSecuredCreditorPayment(String securedCreditorPayment);

	/**
	 * Returns the secured creditor counter of this secured creditor.
	 *
	 * @return the secured creditor counter of this secured creditor
	 */
	@AutoEscape
	public String getSecuredCreditorCounter();

	/**
	 * Sets the secured creditor counter of this secured creditor.
	 *
	 * @param securedCreditorCounter the secured creditor counter of this secured creditor
	 */
	public void setSecuredCreditorCounter(String securedCreditorCounter);

	/**
	 * Returns the secured creditor date of this secured creditor.
	 *
	 * @return the secured creditor date of this secured creditor
	 */
	public Date getSecuredCreditorDate();

	/**
	 * Sets the secured creditor date of this secured creditor.
	 *
	 * @param securedCreditorDate the secured creditor date of this secured creditor
	 */
	public void setSecuredCreditorDate(Date securedCreditorDate);

	/**
	 * Returns the osi insolvency ID of this secured creditor.
	 *
	 * @return the osi insolvency ID of this secured creditor
	 */
	public long getOsiInsolvencyId();

	/**
	 * Sets the osi insolvency ID of this secured creditor.
	 *
	 * @param osiInsolvencyId the osi insolvency ID of this secured creditor
	 */
	public void setOsiInsolvencyId(long osiInsolvencyId);

	@Override
	public SecuredCreditor cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}