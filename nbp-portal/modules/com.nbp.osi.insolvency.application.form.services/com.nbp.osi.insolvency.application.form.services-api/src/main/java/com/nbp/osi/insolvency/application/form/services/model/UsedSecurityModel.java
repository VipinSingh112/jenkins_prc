/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.osi.insolvency.application.form.services.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the UsedSecurity service. Represents a row in the &quot;nbp_osi_used_security&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.nbp.osi.insolvency.application.form.services.model.impl.UsedSecurityModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.nbp.osi.insolvency.application.form.services.model.impl.UsedSecurityImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see UsedSecurity
 * @generated
 */
@ProviderType
public interface UsedSecurityModel
	extends BaseModel<UsedSecurity>, GroupedModel, ShardedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a used security model instance should use the {@link UsedSecurity} interface instead.
	 */

	/**
	 * Returns the primary key of this used security.
	 *
	 * @return the primary key of this used security
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this used security.
	 *
	 * @param primaryKey the primary key of this used security
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the used security ID of this used security.
	 *
	 * @return the used security ID of this used security
	 */
	public long getUsedSecurityId();

	/**
	 * Sets the used security ID of this used security.
	 *
	 * @param usedSecurityId the used security ID of this used security
	 */
	public void setUsedSecurityId(long usedSecurityId);

	/**
	 * Returns the group ID of this used security.
	 *
	 * @return the group ID of this used security
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this used security.
	 *
	 * @param groupId the group ID of this used security
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this used security.
	 *
	 * @return the company ID of this used security
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this used security.
	 *
	 * @param companyId the company ID of this used security
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this used security.
	 *
	 * @return the user ID of this used security
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this used security.
	 *
	 * @param userId the user ID of this used security
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this used security.
	 *
	 * @return the user uuid of this used security
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this used security.
	 *
	 * @param userUuid the user uuid of this used security
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this used security.
	 *
	 * @return the user name of this used security
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this used security.
	 *
	 * @param userName the user name of this used security
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this used security.
	 *
	 * @return the create date of this used security
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this used security.
	 *
	 * @param createDate the create date of this used security
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this used security.
	 *
	 * @return the modified date of this used security
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this used security.
	 *
	 * @param modifiedDate the modified date of this used security
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the asset type of this used security.
	 *
	 * @return the asset type of this used security
	 */
	@AutoEscape
	public String getAssetType();

	/**
	 * Sets the asset type of this used security.
	 *
	 * @param assetType the asset type of this used security
	 */
	public void setAssetType(String assetType);

	/**
	 * Returns the security holder of this used security.
	 *
	 * @return the security holder of this used security
	 */
	@AutoEscape
	public String getSecurityHolder();

	/**
	 * Sets the security holder of this used security.
	 *
	 * @param securityHolder the security holder of this used security
	 */
	public void setSecurityHolder(String securityHolder);

	/**
	 * Returns the security detail of this used security.
	 *
	 * @return the security detail of this used security
	 */
	@AutoEscape
	public String getSecurityDetail();

	/**
	 * Sets the security detail of this used security.
	 *
	 * @param securityDetail the security detail of this used security
	 */
	public void setSecurityDetail(String securityDetail);

	/**
	 * Returns the security value of this used security.
	 *
	 * @return the security value of this used security
	 */
	@AutoEscape
	public String getSecurityValue();

	/**
	 * Sets the security value of this used security.
	 *
	 * @param securityValue the security value of this used security
	 */
	public void setSecurityValue(String securityValue);

	/**
	 * Returns the security liability of this used security.
	 *
	 * @return the security liability of this used security
	 */
	@AutoEscape
	public String getSecurityLiability();

	/**
	 * Sets the security liability of this used security.
	 *
	 * @param securityLiability the security liability of this used security
	 */
	public void setSecurityLiability(String securityLiability);

	/**
	 * Returns the security net value of this used security.
	 *
	 * @return the security net value of this used security
	 */
	@AutoEscape
	public String getSecurityNetValue();

	/**
	 * Sets the security net value of this used security.
	 *
	 * @param securityNetValue the security net value of this used security
	 */
	public void setSecurityNetValue(String securityNetValue);

	/**
	 * Returns the security counter of this used security.
	 *
	 * @return the security counter of this used security
	 */
	@AutoEscape
	public String getSecurityCounter();

	/**
	 * Sets the security counter of this used security.
	 *
	 * @param securityCounter the security counter of this used security
	 */
	public void setSecurityCounter(String securityCounter);

	/**
	 * Returns the osi insolvency ID of this used security.
	 *
	 * @return the osi insolvency ID of this used security
	 */
	public long getOsiInsolvencyId();

	/**
	 * Sets the osi insolvency ID of this used security.
	 *
	 * @param osiInsolvencyId the osi insolvency ID of this used security
	 */
	public void setOsiInsolvencyId(long osiInsolvencyId);

	@Override
	public UsedSecurity cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}