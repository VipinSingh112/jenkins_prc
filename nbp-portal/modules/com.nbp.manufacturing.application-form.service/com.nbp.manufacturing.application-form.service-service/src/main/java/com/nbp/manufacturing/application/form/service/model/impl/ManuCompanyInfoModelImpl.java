/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.manufacturing.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.manufacturing.application.form.service.model.ManuCompanyInfo;
import com.nbp.manufacturing.application.form.service.model.ManuCompanyInfoModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the ManuCompanyInfo service. Represents a row in the &quot;nbp_manufacture_company_info&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>ManuCompanyInfoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ManuCompanyInfoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ManuCompanyInfoImpl
 * @generated
 */
@JSON(strict = true)
public class ManuCompanyInfoModelImpl
	extends BaseModelImpl<ManuCompanyInfo> implements ManuCompanyInfoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a manu company info model instance should use the <code>ManuCompanyInfo</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_manufacture_company_info";

	public static final Object[][] TABLE_COLUMNS = {
		{"manuCompanyInfoId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"companyName", Types.VARCHAR},
		{"directorName", Types.VARCHAR}, {"businessAddress", Types.VARCHAR},
		{"tccNumber", Types.VARCHAR}, {"incorporationDate", Types.TIMESTAMP},
		{"factoryAddress", Types.VARCHAR}, {"telephoneNumber", Types.VARCHAR},
		{"emailAddress", Types.VARCHAR}, {"companyWebsite", Types.VARCHAR},
		{"applicantTRN", Types.VARCHAR}, {"beneficieryTRN", Types.VARCHAR},
		{"parish", Types.VARCHAR}, {"manufacturingApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("manuCompanyInfoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("companyName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("directorName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tccNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("incorporationDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("factoryAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("telephoneNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("emailAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyWebsite", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantTRN", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("beneficieryTRN", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("parish", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("manufacturingApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_manufacture_company_info (manuCompanyInfoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,companyName VARCHAR(75) null,directorName VARCHAR(500) null,businessAddress VARCHAR(500) null,tccNumber VARCHAR(75) null,incorporationDate DATE null,factoryAddress VARCHAR(500) null,telephoneNumber VARCHAR(75) null,emailAddress VARCHAR(75) null,companyWebsite VARCHAR(75) null,applicantTRN VARCHAR(75) null,beneficieryTRN VARCHAR(75) null,parish VARCHAR(75) null,manufacturingApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_manufacture_company_info";

	public static final String ORDER_BY_JPQL =
		" ORDER BY manuCompanyInfo.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_manufacture_company_info.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long MANUFACTURINGAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public ManuCompanyInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _manuCompanyInfoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setManuCompanyInfoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _manuCompanyInfoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ManuCompanyInfo.class;
	}

	@Override
	public String getModelClassName() {
		return ManuCompanyInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<ManuCompanyInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<ManuCompanyInfo, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ManuCompanyInfo, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((ManuCompanyInfo)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<ManuCompanyInfo, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<ManuCompanyInfo, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(ManuCompanyInfo)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<ManuCompanyInfo, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<ManuCompanyInfo, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<ManuCompanyInfo, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<ManuCompanyInfo, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<ManuCompanyInfo, Object>>();

			attributeGetterFunctions.put(
				"manuCompanyInfoId", ManuCompanyInfo::getManuCompanyInfoId);
			attributeGetterFunctions.put(
				"groupId", ManuCompanyInfo::getGroupId);
			attributeGetterFunctions.put(
				"companyId", ManuCompanyInfo::getCompanyId);
			attributeGetterFunctions.put("userId", ManuCompanyInfo::getUserId);
			attributeGetterFunctions.put(
				"userName", ManuCompanyInfo::getUserName);
			attributeGetterFunctions.put(
				"createDate", ManuCompanyInfo::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", ManuCompanyInfo::getModifiedDate);
			attributeGetterFunctions.put(
				"companyName", ManuCompanyInfo::getCompanyName);
			attributeGetterFunctions.put(
				"directorName", ManuCompanyInfo::getDirectorName);
			attributeGetterFunctions.put(
				"businessAddress", ManuCompanyInfo::getBusinessAddress);
			attributeGetterFunctions.put(
				"tccNumber", ManuCompanyInfo::getTccNumber);
			attributeGetterFunctions.put(
				"incorporationDate", ManuCompanyInfo::getIncorporationDate);
			attributeGetterFunctions.put(
				"factoryAddress", ManuCompanyInfo::getFactoryAddress);
			attributeGetterFunctions.put(
				"telephoneNumber", ManuCompanyInfo::getTelephoneNumber);
			attributeGetterFunctions.put(
				"emailAddress", ManuCompanyInfo::getEmailAddress);
			attributeGetterFunctions.put(
				"companyWebsite", ManuCompanyInfo::getCompanyWebsite);
			attributeGetterFunctions.put(
				"applicantTRN", ManuCompanyInfo::getApplicantTRN);
			attributeGetterFunctions.put(
				"beneficieryTRN", ManuCompanyInfo::getBeneficieryTRN);
			attributeGetterFunctions.put("parish", ManuCompanyInfo::getParish);
			attributeGetterFunctions.put(
				"manufacturingApplicationId",
				ManuCompanyInfo::getManufacturingApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<ManuCompanyInfo, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<ManuCompanyInfo, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap<String, BiConsumer<ManuCompanyInfo, ?>>();

			attributeSetterBiConsumers.put(
				"manuCompanyInfoId",
				(BiConsumer<ManuCompanyInfo, Long>)
					ManuCompanyInfo::setManuCompanyInfoId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<ManuCompanyInfo, Long>)ManuCompanyInfo::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<ManuCompanyInfo, Long>)
					ManuCompanyInfo::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<ManuCompanyInfo, Long>)ManuCompanyInfo::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<ManuCompanyInfo, String>)
					ManuCompanyInfo::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<ManuCompanyInfo, Date>)
					ManuCompanyInfo::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<ManuCompanyInfo, Date>)
					ManuCompanyInfo::setModifiedDate);
			attributeSetterBiConsumers.put(
				"companyName",
				(BiConsumer<ManuCompanyInfo, String>)
					ManuCompanyInfo::setCompanyName);
			attributeSetterBiConsumers.put(
				"directorName",
				(BiConsumer<ManuCompanyInfo, String>)
					ManuCompanyInfo::setDirectorName);
			attributeSetterBiConsumers.put(
				"businessAddress",
				(BiConsumer<ManuCompanyInfo, String>)
					ManuCompanyInfo::setBusinessAddress);
			attributeSetterBiConsumers.put(
				"tccNumber",
				(BiConsumer<ManuCompanyInfo, String>)
					ManuCompanyInfo::setTccNumber);
			attributeSetterBiConsumers.put(
				"incorporationDate",
				(BiConsumer<ManuCompanyInfo, Date>)
					ManuCompanyInfo::setIncorporationDate);
			attributeSetterBiConsumers.put(
				"factoryAddress",
				(BiConsumer<ManuCompanyInfo, String>)
					ManuCompanyInfo::setFactoryAddress);
			attributeSetterBiConsumers.put(
				"telephoneNumber",
				(BiConsumer<ManuCompanyInfo, String>)
					ManuCompanyInfo::setTelephoneNumber);
			attributeSetterBiConsumers.put(
				"emailAddress",
				(BiConsumer<ManuCompanyInfo, String>)
					ManuCompanyInfo::setEmailAddress);
			attributeSetterBiConsumers.put(
				"companyWebsite",
				(BiConsumer<ManuCompanyInfo, String>)
					ManuCompanyInfo::setCompanyWebsite);
			attributeSetterBiConsumers.put(
				"applicantTRN",
				(BiConsumer<ManuCompanyInfo, String>)
					ManuCompanyInfo::setApplicantTRN);
			attributeSetterBiConsumers.put(
				"beneficieryTRN",
				(BiConsumer<ManuCompanyInfo, String>)
					ManuCompanyInfo::setBeneficieryTRN);
			attributeSetterBiConsumers.put(
				"parish",
				(BiConsumer<ManuCompanyInfo, String>)
					ManuCompanyInfo::setParish);
			attributeSetterBiConsumers.put(
				"manufacturingApplicationId",
				(BiConsumer<ManuCompanyInfo, Long>)
					ManuCompanyInfo::setManufacturingApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getManuCompanyInfoId() {
		return _manuCompanyInfoId;
	}

	@Override
	public void setManuCompanyInfoId(long manuCompanyInfoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_manuCompanyInfoId = manuCompanyInfoId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getCompanyName() {
		if (_companyName == null) {
			return "";
		}
		else {
			return _companyName;
		}
	}

	@Override
	public void setCompanyName(String companyName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyName = companyName;
	}

	@JSON
	@Override
	public String getDirectorName() {
		if (_directorName == null) {
			return "";
		}
		else {
			return _directorName;
		}
	}

	@Override
	public void setDirectorName(String directorName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_directorName = directorName;
	}

	@JSON
	@Override
	public String getBusinessAddress() {
		if (_businessAddress == null) {
			return "";
		}
		else {
			return _businessAddress;
		}
	}

	@Override
	public void setBusinessAddress(String businessAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessAddress = businessAddress;
	}

	@JSON
	@Override
	public String getTccNumber() {
		if (_tccNumber == null) {
			return "";
		}
		else {
			return _tccNumber;
		}
	}

	@Override
	public void setTccNumber(String tccNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tccNumber = tccNumber;
	}

	@JSON
	@Override
	public Date getIncorporationDate() {
		return _incorporationDate;
	}

	@Override
	public void setIncorporationDate(Date incorporationDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_incorporationDate = incorporationDate;
	}

	@JSON
	@Override
	public String getFactoryAddress() {
		if (_factoryAddress == null) {
			return "";
		}
		else {
			return _factoryAddress;
		}
	}

	@Override
	public void setFactoryAddress(String factoryAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_factoryAddress = factoryAddress;
	}

	@JSON
	@Override
	public String getTelephoneNumber() {
		if (_telephoneNumber == null) {
			return "";
		}
		else {
			return _telephoneNumber;
		}
	}

	@Override
	public void setTelephoneNumber(String telephoneNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_telephoneNumber = telephoneNumber;
	}

	@JSON
	@Override
	public String getEmailAddress() {
		if (_emailAddress == null) {
			return "";
		}
		else {
			return _emailAddress;
		}
	}

	@Override
	public void setEmailAddress(String emailAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_emailAddress = emailAddress;
	}

	@JSON
	@Override
	public String getCompanyWebsite() {
		if (_companyWebsite == null) {
			return "";
		}
		else {
			return _companyWebsite;
		}
	}

	@Override
	public void setCompanyWebsite(String companyWebsite) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyWebsite = companyWebsite;
	}

	@JSON
	@Override
	public String getApplicantTRN() {
		if (_applicantTRN == null) {
			return "";
		}
		else {
			return _applicantTRN;
		}
	}

	@Override
	public void setApplicantTRN(String applicantTRN) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicantTRN = applicantTRN;
	}

	@JSON
	@Override
	public String getBeneficieryTRN() {
		if (_beneficieryTRN == null) {
			return "";
		}
		else {
			return _beneficieryTRN;
		}
	}

	@Override
	public void setBeneficieryTRN(String beneficieryTRN) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_beneficieryTRN = beneficieryTRN;
	}

	@JSON
	@Override
	public String getParish() {
		if (_parish == null) {
			return "";
		}
		else {
			return _parish;
		}
	}

	@Override
	public void setParish(String parish) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_parish = parish;
	}

	@JSON
	@Override
	public long getManufacturingApplicationId() {
		return _manufacturingApplicationId;
	}

	@Override
	public void setManufacturingApplicationId(long manufacturingApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_manufacturingApplicationId = manufacturingApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalManufacturingApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("manufacturingApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), ManuCompanyInfo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ManuCompanyInfo toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, ManuCompanyInfo>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ManuCompanyInfoImpl manuCompanyInfoImpl = new ManuCompanyInfoImpl();

		manuCompanyInfoImpl.setManuCompanyInfoId(getManuCompanyInfoId());
		manuCompanyInfoImpl.setGroupId(getGroupId());
		manuCompanyInfoImpl.setCompanyId(getCompanyId());
		manuCompanyInfoImpl.setUserId(getUserId());
		manuCompanyInfoImpl.setUserName(getUserName());
		manuCompanyInfoImpl.setCreateDate(getCreateDate());
		manuCompanyInfoImpl.setModifiedDate(getModifiedDate());
		manuCompanyInfoImpl.setCompanyName(getCompanyName());
		manuCompanyInfoImpl.setDirectorName(getDirectorName());
		manuCompanyInfoImpl.setBusinessAddress(getBusinessAddress());
		manuCompanyInfoImpl.setTccNumber(getTccNumber());
		manuCompanyInfoImpl.setIncorporationDate(getIncorporationDate());
		manuCompanyInfoImpl.setFactoryAddress(getFactoryAddress());
		manuCompanyInfoImpl.setTelephoneNumber(getTelephoneNumber());
		manuCompanyInfoImpl.setEmailAddress(getEmailAddress());
		manuCompanyInfoImpl.setCompanyWebsite(getCompanyWebsite());
		manuCompanyInfoImpl.setApplicantTRN(getApplicantTRN());
		manuCompanyInfoImpl.setBeneficieryTRN(getBeneficieryTRN());
		manuCompanyInfoImpl.setParish(getParish());
		manuCompanyInfoImpl.setManufacturingApplicationId(
			getManufacturingApplicationId());

		manuCompanyInfoImpl.resetOriginalValues();

		return manuCompanyInfoImpl;
	}

	@Override
	public ManuCompanyInfo cloneWithOriginalValues() {
		ManuCompanyInfoImpl manuCompanyInfoImpl = new ManuCompanyInfoImpl();

		manuCompanyInfoImpl.setManuCompanyInfoId(
			this.<Long>getColumnOriginalValue("manuCompanyInfoId"));
		manuCompanyInfoImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		manuCompanyInfoImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		manuCompanyInfoImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		manuCompanyInfoImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		manuCompanyInfoImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		manuCompanyInfoImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		manuCompanyInfoImpl.setCompanyName(
			this.<String>getColumnOriginalValue("companyName"));
		manuCompanyInfoImpl.setDirectorName(
			this.<String>getColumnOriginalValue("directorName"));
		manuCompanyInfoImpl.setBusinessAddress(
			this.<String>getColumnOriginalValue("businessAddress"));
		manuCompanyInfoImpl.setTccNumber(
			this.<String>getColumnOriginalValue("tccNumber"));
		manuCompanyInfoImpl.setIncorporationDate(
			this.<Date>getColumnOriginalValue("incorporationDate"));
		manuCompanyInfoImpl.setFactoryAddress(
			this.<String>getColumnOriginalValue("factoryAddress"));
		manuCompanyInfoImpl.setTelephoneNumber(
			this.<String>getColumnOriginalValue("telephoneNumber"));
		manuCompanyInfoImpl.setEmailAddress(
			this.<String>getColumnOriginalValue("emailAddress"));
		manuCompanyInfoImpl.setCompanyWebsite(
			this.<String>getColumnOriginalValue("companyWebsite"));
		manuCompanyInfoImpl.setApplicantTRN(
			this.<String>getColumnOriginalValue("applicantTRN"));
		manuCompanyInfoImpl.setBeneficieryTRN(
			this.<String>getColumnOriginalValue("beneficieryTRN"));
		manuCompanyInfoImpl.setParish(
			this.<String>getColumnOriginalValue("parish"));
		manuCompanyInfoImpl.setManufacturingApplicationId(
			this.<Long>getColumnOriginalValue("manufacturingApplicationId"));

		return manuCompanyInfoImpl;
	}

	@Override
	public int compareTo(ManuCompanyInfo manuCompanyInfo) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), manuCompanyInfo.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof ManuCompanyInfo)) {
			return false;
		}

		ManuCompanyInfo manuCompanyInfo = (ManuCompanyInfo)object;

		long primaryKey = manuCompanyInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<ManuCompanyInfo> toCacheModel() {
		ManuCompanyInfoCacheModel manuCompanyInfoCacheModel =
			new ManuCompanyInfoCacheModel();

		manuCompanyInfoCacheModel.manuCompanyInfoId = getManuCompanyInfoId();

		manuCompanyInfoCacheModel.groupId = getGroupId();

		manuCompanyInfoCacheModel.companyId = getCompanyId();

		manuCompanyInfoCacheModel.userId = getUserId();

		manuCompanyInfoCacheModel.userName = getUserName();

		String userName = manuCompanyInfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			manuCompanyInfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			manuCompanyInfoCacheModel.createDate = createDate.getTime();
		}
		else {
			manuCompanyInfoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			manuCompanyInfoCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			manuCompanyInfoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		manuCompanyInfoCacheModel.companyName = getCompanyName();

		String companyName = manuCompanyInfoCacheModel.companyName;

		if ((companyName != null) && (companyName.length() == 0)) {
			manuCompanyInfoCacheModel.companyName = null;
		}

		manuCompanyInfoCacheModel.directorName = getDirectorName();

		String directorName = manuCompanyInfoCacheModel.directorName;

		if ((directorName != null) && (directorName.length() == 0)) {
			manuCompanyInfoCacheModel.directorName = null;
		}

		manuCompanyInfoCacheModel.businessAddress = getBusinessAddress();

		String businessAddress = manuCompanyInfoCacheModel.businessAddress;

		if ((businessAddress != null) && (businessAddress.length() == 0)) {
			manuCompanyInfoCacheModel.businessAddress = null;
		}

		manuCompanyInfoCacheModel.tccNumber = getTccNumber();

		String tccNumber = manuCompanyInfoCacheModel.tccNumber;

		if ((tccNumber != null) && (tccNumber.length() == 0)) {
			manuCompanyInfoCacheModel.tccNumber = null;
		}

		Date incorporationDate = getIncorporationDate();

		if (incorporationDate != null) {
			manuCompanyInfoCacheModel.incorporationDate =
				incorporationDate.getTime();
		}
		else {
			manuCompanyInfoCacheModel.incorporationDate = Long.MIN_VALUE;
		}

		manuCompanyInfoCacheModel.factoryAddress = getFactoryAddress();

		String factoryAddress = manuCompanyInfoCacheModel.factoryAddress;

		if ((factoryAddress != null) && (factoryAddress.length() == 0)) {
			manuCompanyInfoCacheModel.factoryAddress = null;
		}

		manuCompanyInfoCacheModel.telephoneNumber = getTelephoneNumber();

		String telephoneNumber = manuCompanyInfoCacheModel.telephoneNumber;

		if ((telephoneNumber != null) && (telephoneNumber.length() == 0)) {
			manuCompanyInfoCacheModel.telephoneNumber = null;
		}

		manuCompanyInfoCacheModel.emailAddress = getEmailAddress();

		String emailAddress = manuCompanyInfoCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			manuCompanyInfoCacheModel.emailAddress = null;
		}

		manuCompanyInfoCacheModel.companyWebsite = getCompanyWebsite();

		String companyWebsite = manuCompanyInfoCacheModel.companyWebsite;

		if ((companyWebsite != null) && (companyWebsite.length() == 0)) {
			manuCompanyInfoCacheModel.companyWebsite = null;
		}

		manuCompanyInfoCacheModel.applicantTRN = getApplicantTRN();

		String applicantTRN = manuCompanyInfoCacheModel.applicantTRN;

		if ((applicantTRN != null) && (applicantTRN.length() == 0)) {
			manuCompanyInfoCacheModel.applicantTRN = null;
		}

		manuCompanyInfoCacheModel.beneficieryTRN = getBeneficieryTRN();

		String beneficieryTRN = manuCompanyInfoCacheModel.beneficieryTRN;

		if ((beneficieryTRN != null) && (beneficieryTRN.length() == 0)) {
			manuCompanyInfoCacheModel.beneficieryTRN = null;
		}

		manuCompanyInfoCacheModel.parish = getParish();

		String parish = manuCompanyInfoCacheModel.parish;

		if ((parish != null) && (parish.length() == 0)) {
			manuCompanyInfoCacheModel.parish = null;
		}

		manuCompanyInfoCacheModel.manufacturingApplicationId =
			getManufacturingApplicationId();

		return manuCompanyInfoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<ManuCompanyInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<ManuCompanyInfo, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ManuCompanyInfo, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((ManuCompanyInfo)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, ManuCompanyInfo>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					ManuCompanyInfo.class, ModelWrapper.class);

	}

	private long _manuCompanyInfoId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _companyName;
	private String _directorName;
	private String _businessAddress;
	private String _tccNumber;
	private Date _incorporationDate;
	private String _factoryAddress;
	private String _telephoneNumber;
	private String _emailAddress;
	private String _companyWebsite;
	private String _applicantTRN;
	private String _beneficieryTRN;
	private String _parish;
	private long _manufacturingApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<ManuCompanyInfo, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((ManuCompanyInfo)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("manuCompanyInfoId", _manuCompanyInfoId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("companyName", _companyName);
		_columnOriginalValues.put("directorName", _directorName);
		_columnOriginalValues.put("businessAddress", _businessAddress);
		_columnOriginalValues.put("tccNumber", _tccNumber);
		_columnOriginalValues.put("incorporationDate", _incorporationDate);
		_columnOriginalValues.put("factoryAddress", _factoryAddress);
		_columnOriginalValues.put("telephoneNumber", _telephoneNumber);
		_columnOriginalValues.put("emailAddress", _emailAddress);
		_columnOriginalValues.put("companyWebsite", _companyWebsite);
		_columnOriginalValues.put("applicantTRN", _applicantTRN);
		_columnOriginalValues.put("beneficieryTRN", _beneficieryTRN);
		_columnOriginalValues.put("parish", _parish);
		_columnOriginalValues.put(
			"manufacturingApplicationId", _manufacturingApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("manuCompanyInfoId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("companyName", 128L);

		columnBitmasks.put("directorName", 256L);

		columnBitmasks.put("businessAddress", 512L);

		columnBitmasks.put("tccNumber", 1024L);

		columnBitmasks.put("incorporationDate", 2048L);

		columnBitmasks.put("factoryAddress", 4096L);

		columnBitmasks.put("telephoneNumber", 8192L);

		columnBitmasks.put("emailAddress", 16384L);

		columnBitmasks.put("companyWebsite", 32768L);

		columnBitmasks.put("applicantTRN", 65536L);

		columnBitmasks.put("beneficieryTRN", 131072L);

		columnBitmasks.put("parish", 262144L);

		columnBitmasks.put("manufacturingApplicationId", 524288L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private ManuCompanyInfo _escapedModel;

}