/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.nbp.manufacturing.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.manufacturing.application.form.service.model.ManuAdditionalComapnyInfo;
import com.nbp.manufacturing.application.form.service.model.ManuAdditionalComapnyInfoModel;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the ManuAdditionalComapnyInfo service. Represents a row in the &quot;ManuAdditionalCompanyInfo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>ManuAdditionalComapnyInfoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ManuAdditionalComapnyInfoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ManuAdditionalComapnyInfoImpl
 * @generated
 */
@JSON(strict = true)
public class ManuAdditionalComapnyInfoModelImpl
	extends BaseModelImpl<ManuAdditionalComapnyInfo>
	implements ManuAdditionalComapnyInfoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a manu additional comapny info model instance should use the <code>ManuAdditionalComapnyInfo</code> interface instead.
	 */
	public static final String TABLE_NAME = "ManuAdditionalCompanyInfo";

	public static final Object[][] TABLE_COLUMNS = {
		{"manuAdditionalComapnyInfoId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"companyNameRepresentative", Types.VARCHAR},
		{"companySignatureRepresentative", Types.VARCHAR},
		{"signatureDate", Types.VARCHAR}, {"customBrokerName", Types.VARCHAR},
		{"customBrokerAddress", Types.VARCHAR},
		{"telephoneNumber", Types.VARCHAR}, {"brokerId", Types.VARCHAR},
		{"manufacturingApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("manuAdditionalComapnyInfoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("companyNameRepresentative", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companySignatureRepresentative", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("signatureDate", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("customBrokerName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("customBrokerAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("telephoneNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("brokerId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("manufacturingApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table ManuAdditionalCompanyInfo (manuAdditionalComapnyInfoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,companyNameRepresentative VARCHAR(75) null,companySignatureRepresentative VARCHAR(75) null,signatureDate VARCHAR(75) null,customBrokerName VARCHAR(75) null,customBrokerAddress VARCHAR(75) null,telephoneNumber VARCHAR(75) null,brokerId VARCHAR(75) null,manufacturingApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table ManuAdditionalCompanyInfo";

	public static final String ORDER_BY_JPQL =
		" ORDER BY manuAdditionalComapnyInfo.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY ManuAdditionalCompanyInfo.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long MANUFACTURINGAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public ManuAdditionalComapnyInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _manuAdditionalComapnyInfoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setManuAdditionalComapnyInfoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _manuAdditionalComapnyInfoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ManuAdditionalComapnyInfo.class;
	}

	@Override
	public String getModelClassName() {
		return ManuAdditionalComapnyInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<ManuAdditionalComapnyInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<ManuAdditionalComapnyInfo, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ManuAdditionalComapnyInfo, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((ManuAdditionalComapnyInfo)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<ManuAdditionalComapnyInfo, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<ManuAdditionalComapnyInfo, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(ManuAdditionalComapnyInfo)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<ManuAdditionalComapnyInfo, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<ManuAdditionalComapnyInfo, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, ManuAdditionalComapnyInfo>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			ManuAdditionalComapnyInfo.class.getClassLoader(),
			ManuAdditionalComapnyInfo.class, ModelWrapper.class);

		try {
			Constructor<ManuAdditionalComapnyInfo> constructor =
				(Constructor<ManuAdditionalComapnyInfo>)
					proxyClass.getConstructor(InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map
		<String, Function<ManuAdditionalComapnyInfo, Object>>
			_attributeGetterFunctions;
	private static final Map
		<String, BiConsumer<ManuAdditionalComapnyInfo, Object>>
			_attributeSetterBiConsumers;

	static {
		Map<String, Function<ManuAdditionalComapnyInfo, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<ManuAdditionalComapnyInfo, Object>>();
		Map<String, BiConsumer<ManuAdditionalComapnyInfo, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap
					<String, BiConsumer<ManuAdditionalComapnyInfo, ?>>();

		attributeGetterFunctions.put(
			"manuAdditionalComapnyInfoId",
			ManuAdditionalComapnyInfo::getManuAdditionalComapnyInfoId);
		attributeSetterBiConsumers.put(
			"manuAdditionalComapnyInfoId",
			(BiConsumer<ManuAdditionalComapnyInfo, Long>)
				ManuAdditionalComapnyInfo::setManuAdditionalComapnyInfoId);
		attributeGetterFunctions.put(
			"groupId", ManuAdditionalComapnyInfo::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<ManuAdditionalComapnyInfo, Long>)
				ManuAdditionalComapnyInfo::setGroupId);
		attributeGetterFunctions.put(
			"companyId", ManuAdditionalComapnyInfo::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<ManuAdditionalComapnyInfo, Long>)
				ManuAdditionalComapnyInfo::setCompanyId);
		attributeGetterFunctions.put(
			"userId", ManuAdditionalComapnyInfo::getUserId);
		attributeSetterBiConsumers.put(
			"userId",
			(BiConsumer<ManuAdditionalComapnyInfo, Long>)
				ManuAdditionalComapnyInfo::setUserId);
		attributeGetterFunctions.put(
			"userName", ManuAdditionalComapnyInfo::getUserName);
		attributeSetterBiConsumers.put(
			"userName",
			(BiConsumer<ManuAdditionalComapnyInfo, String>)
				ManuAdditionalComapnyInfo::setUserName);
		attributeGetterFunctions.put(
			"createDate", ManuAdditionalComapnyInfo::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<ManuAdditionalComapnyInfo, Date>)
				ManuAdditionalComapnyInfo::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", ManuAdditionalComapnyInfo::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<ManuAdditionalComapnyInfo, Date>)
				ManuAdditionalComapnyInfo::setModifiedDate);
		attributeGetterFunctions.put(
			"companyNameRepresentative",
			ManuAdditionalComapnyInfo::getCompanyNameRepresentative);
		attributeSetterBiConsumers.put(
			"companyNameRepresentative",
			(BiConsumer<ManuAdditionalComapnyInfo, String>)
				ManuAdditionalComapnyInfo::setCompanyNameRepresentative);
		attributeGetterFunctions.put(
			"companySignatureRepresentative",
			ManuAdditionalComapnyInfo::getCompanySignatureRepresentative);
		attributeSetterBiConsumers.put(
			"companySignatureRepresentative",
			(BiConsumer<ManuAdditionalComapnyInfo, String>)
				ManuAdditionalComapnyInfo::setCompanySignatureRepresentative);
		attributeGetterFunctions.put(
			"signatureDate", ManuAdditionalComapnyInfo::getSignatureDate);
		attributeSetterBiConsumers.put(
			"signatureDate",
			(BiConsumer<ManuAdditionalComapnyInfo, String>)
				ManuAdditionalComapnyInfo::setSignatureDate);
		attributeGetterFunctions.put(
			"customBrokerName", ManuAdditionalComapnyInfo::getCustomBrokerName);
		attributeSetterBiConsumers.put(
			"customBrokerName",
			(BiConsumer<ManuAdditionalComapnyInfo, String>)
				ManuAdditionalComapnyInfo::setCustomBrokerName);
		attributeGetterFunctions.put(
			"customBrokerAddress",
			ManuAdditionalComapnyInfo::getCustomBrokerAddress);
		attributeSetterBiConsumers.put(
			"customBrokerAddress",
			(BiConsumer<ManuAdditionalComapnyInfo, String>)
				ManuAdditionalComapnyInfo::setCustomBrokerAddress);
		attributeGetterFunctions.put(
			"telephoneNumber", ManuAdditionalComapnyInfo::getTelephoneNumber);
		attributeSetterBiConsumers.put(
			"telephoneNumber",
			(BiConsumer<ManuAdditionalComapnyInfo, String>)
				ManuAdditionalComapnyInfo::setTelephoneNumber);
		attributeGetterFunctions.put(
			"brokerId", ManuAdditionalComapnyInfo::getBrokerId);
		attributeSetterBiConsumers.put(
			"brokerId",
			(BiConsumer<ManuAdditionalComapnyInfo, String>)
				ManuAdditionalComapnyInfo::setBrokerId);
		attributeGetterFunctions.put(
			"manufacturingApplicationId",
			ManuAdditionalComapnyInfo::getManufacturingApplicationId);
		attributeSetterBiConsumers.put(
			"manufacturingApplicationId",
			(BiConsumer<ManuAdditionalComapnyInfo, Long>)
				ManuAdditionalComapnyInfo::setManufacturingApplicationId);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getManuAdditionalComapnyInfoId() {
		return _manuAdditionalComapnyInfoId;
	}

	@Override
	public void setManuAdditionalComapnyInfoId(
		long manuAdditionalComapnyInfoId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_manuAdditionalComapnyInfoId = manuAdditionalComapnyInfoId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getCompanyNameRepresentative() {
		if (_companyNameRepresentative == null) {
			return "";
		}
		else {
			return _companyNameRepresentative;
		}
	}

	@Override
	public void setCompanyNameRepresentative(String companyNameRepresentative) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyNameRepresentative = companyNameRepresentative;
	}

	@JSON
	@Override
	public String getCompanySignatureRepresentative() {
		if (_companySignatureRepresentative == null) {
			return "";
		}
		else {
			return _companySignatureRepresentative;
		}
	}

	@Override
	public void setCompanySignatureRepresentative(
		String companySignatureRepresentative) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companySignatureRepresentative = companySignatureRepresentative;
	}

	@JSON
	@Override
	public String getSignatureDate() {
		if (_signatureDate == null) {
			return "";
		}
		else {
			return _signatureDate;
		}
	}

	@Override
	public void setSignatureDate(String signatureDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_signatureDate = signatureDate;
	}

	@JSON
	@Override
	public String getCustomBrokerName() {
		if (_customBrokerName == null) {
			return "";
		}
		else {
			return _customBrokerName;
		}
	}

	@Override
	public void setCustomBrokerName(String customBrokerName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_customBrokerName = customBrokerName;
	}

	@JSON
	@Override
	public String getCustomBrokerAddress() {
		if (_customBrokerAddress == null) {
			return "";
		}
		else {
			return _customBrokerAddress;
		}
	}

	@Override
	public void setCustomBrokerAddress(String customBrokerAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_customBrokerAddress = customBrokerAddress;
	}

	@JSON
	@Override
	public String getTelephoneNumber() {
		if (_telephoneNumber == null) {
			return "";
		}
		else {
			return _telephoneNumber;
		}
	}

	@Override
	public void setTelephoneNumber(String telephoneNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_telephoneNumber = telephoneNumber;
	}

	@JSON
	@Override
	public String getBrokerId() {
		if (_brokerId == null) {
			return "";
		}
		else {
			return _brokerId;
		}
	}

	@Override
	public void setBrokerId(String brokerId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_brokerId = brokerId;
	}

	@JSON
	@Override
	public long getManufacturingApplicationId() {
		return _manufacturingApplicationId;
	}

	@Override
	public void setManufacturingApplicationId(long manufacturingApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_manufacturingApplicationId = manufacturingApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalManufacturingApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("manufacturingApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), ManuAdditionalComapnyInfo.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ManuAdditionalComapnyInfo toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, ManuAdditionalComapnyInfo>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ManuAdditionalComapnyInfoImpl manuAdditionalComapnyInfoImpl =
			new ManuAdditionalComapnyInfoImpl();

		manuAdditionalComapnyInfoImpl.setManuAdditionalComapnyInfoId(
			getManuAdditionalComapnyInfoId());
		manuAdditionalComapnyInfoImpl.setGroupId(getGroupId());
		manuAdditionalComapnyInfoImpl.setCompanyId(getCompanyId());
		manuAdditionalComapnyInfoImpl.setUserId(getUserId());
		manuAdditionalComapnyInfoImpl.setUserName(getUserName());
		manuAdditionalComapnyInfoImpl.setCreateDate(getCreateDate());
		manuAdditionalComapnyInfoImpl.setModifiedDate(getModifiedDate());
		manuAdditionalComapnyInfoImpl.setCompanyNameRepresentative(
			getCompanyNameRepresentative());
		manuAdditionalComapnyInfoImpl.setCompanySignatureRepresentative(
			getCompanySignatureRepresentative());
		manuAdditionalComapnyInfoImpl.setSignatureDate(getSignatureDate());
		manuAdditionalComapnyInfoImpl.setCustomBrokerName(
			getCustomBrokerName());
		manuAdditionalComapnyInfoImpl.setCustomBrokerAddress(
			getCustomBrokerAddress());
		manuAdditionalComapnyInfoImpl.setTelephoneNumber(getTelephoneNumber());
		manuAdditionalComapnyInfoImpl.setBrokerId(getBrokerId());
		manuAdditionalComapnyInfoImpl.setManufacturingApplicationId(
			getManufacturingApplicationId());

		manuAdditionalComapnyInfoImpl.resetOriginalValues();

		return manuAdditionalComapnyInfoImpl;
	}

	@Override
	public ManuAdditionalComapnyInfo cloneWithOriginalValues() {
		ManuAdditionalComapnyInfoImpl manuAdditionalComapnyInfoImpl =
			new ManuAdditionalComapnyInfoImpl();

		manuAdditionalComapnyInfoImpl.setManuAdditionalComapnyInfoId(
			this.<Long>getColumnOriginalValue("manuAdditionalComapnyInfoId"));
		manuAdditionalComapnyInfoImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		manuAdditionalComapnyInfoImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		manuAdditionalComapnyInfoImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		manuAdditionalComapnyInfoImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		manuAdditionalComapnyInfoImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		manuAdditionalComapnyInfoImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		manuAdditionalComapnyInfoImpl.setCompanyNameRepresentative(
			this.<String>getColumnOriginalValue("companyNameRepresentative"));
		manuAdditionalComapnyInfoImpl.setCompanySignatureRepresentative(
			this.<String>getColumnOriginalValue(
				"companySignatureRepresentative"));
		manuAdditionalComapnyInfoImpl.setSignatureDate(
			this.<String>getColumnOriginalValue("signatureDate"));
		manuAdditionalComapnyInfoImpl.setCustomBrokerName(
			this.<String>getColumnOriginalValue("customBrokerName"));
		manuAdditionalComapnyInfoImpl.setCustomBrokerAddress(
			this.<String>getColumnOriginalValue("customBrokerAddress"));
		manuAdditionalComapnyInfoImpl.setTelephoneNumber(
			this.<String>getColumnOriginalValue("telephoneNumber"));
		manuAdditionalComapnyInfoImpl.setBrokerId(
			this.<String>getColumnOriginalValue("brokerId"));
		manuAdditionalComapnyInfoImpl.setManufacturingApplicationId(
			this.<Long>getColumnOriginalValue("manufacturingApplicationId"));

		return manuAdditionalComapnyInfoImpl;
	}

	@Override
	public int compareTo(ManuAdditionalComapnyInfo manuAdditionalComapnyInfo) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), manuAdditionalComapnyInfo.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof ManuAdditionalComapnyInfo)) {
			return false;
		}

		ManuAdditionalComapnyInfo manuAdditionalComapnyInfo =
			(ManuAdditionalComapnyInfo)object;

		long primaryKey = manuAdditionalComapnyInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<ManuAdditionalComapnyInfo> toCacheModel() {
		ManuAdditionalComapnyInfoCacheModel
			manuAdditionalComapnyInfoCacheModel =
				new ManuAdditionalComapnyInfoCacheModel();

		manuAdditionalComapnyInfoCacheModel.manuAdditionalComapnyInfoId =
			getManuAdditionalComapnyInfoId();

		manuAdditionalComapnyInfoCacheModel.groupId = getGroupId();

		manuAdditionalComapnyInfoCacheModel.companyId = getCompanyId();

		manuAdditionalComapnyInfoCacheModel.userId = getUserId();

		manuAdditionalComapnyInfoCacheModel.userName = getUserName();

		String userName = manuAdditionalComapnyInfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			manuAdditionalComapnyInfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			manuAdditionalComapnyInfoCacheModel.createDate =
				createDate.getTime();
		}
		else {
			manuAdditionalComapnyInfoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			manuAdditionalComapnyInfoCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			manuAdditionalComapnyInfoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		manuAdditionalComapnyInfoCacheModel.companyNameRepresentative =
			getCompanyNameRepresentative();

		String companyNameRepresentative =
			manuAdditionalComapnyInfoCacheModel.companyNameRepresentative;

		if ((companyNameRepresentative != null) &&
			(companyNameRepresentative.length() == 0)) {

			manuAdditionalComapnyInfoCacheModel.companyNameRepresentative =
				null;
		}

		manuAdditionalComapnyInfoCacheModel.companySignatureRepresentative =
			getCompanySignatureRepresentative();

		String companySignatureRepresentative =
			manuAdditionalComapnyInfoCacheModel.companySignatureRepresentative;

		if ((companySignatureRepresentative != null) &&
			(companySignatureRepresentative.length() == 0)) {

			manuAdditionalComapnyInfoCacheModel.companySignatureRepresentative =
				null;
		}

		manuAdditionalComapnyInfoCacheModel.signatureDate = getSignatureDate();

		String signatureDate =
			manuAdditionalComapnyInfoCacheModel.signatureDate;

		if ((signatureDate != null) && (signatureDate.length() == 0)) {
			manuAdditionalComapnyInfoCacheModel.signatureDate = null;
		}

		manuAdditionalComapnyInfoCacheModel.customBrokerName =
			getCustomBrokerName();

		String customBrokerName =
			manuAdditionalComapnyInfoCacheModel.customBrokerName;

		if ((customBrokerName != null) && (customBrokerName.length() == 0)) {
			manuAdditionalComapnyInfoCacheModel.customBrokerName = null;
		}

		manuAdditionalComapnyInfoCacheModel.customBrokerAddress =
			getCustomBrokerAddress();

		String customBrokerAddress =
			manuAdditionalComapnyInfoCacheModel.customBrokerAddress;

		if ((customBrokerAddress != null) &&
			(customBrokerAddress.length() == 0)) {

			manuAdditionalComapnyInfoCacheModel.customBrokerAddress = null;
		}

		manuAdditionalComapnyInfoCacheModel.telephoneNumber =
			getTelephoneNumber();

		String telephoneNumber =
			manuAdditionalComapnyInfoCacheModel.telephoneNumber;

		if ((telephoneNumber != null) && (telephoneNumber.length() == 0)) {
			manuAdditionalComapnyInfoCacheModel.telephoneNumber = null;
		}

		manuAdditionalComapnyInfoCacheModel.brokerId = getBrokerId();

		String brokerId = manuAdditionalComapnyInfoCacheModel.brokerId;

		if ((brokerId != null) && (brokerId.length() == 0)) {
			manuAdditionalComapnyInfoCacheModel.brokerId = null;
		}

		manuAdditionalComapnyInfoCacheModel.manufacturingApplicationId =
			getManufacturingApplicationId();

		return manuAdditionalComapnyInfoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<ManuAdditionalComapnyInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<ManuAdditionalComapnyInfo, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ManuAdditionalComapnyInfo, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(ManuAdditionalComapnyInfo)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	
	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, ManuAdditionalComapnyInfo>
				_escapedModelProxyProviderFunction =
					_getProxyProviderFunction();

	}

	private long _manuAdditionalComapnyInfoId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _companyNameRepresentative;
	private String _companySignatureRepresentative;
	private String _signatureDate;
	private String _customBrokerName;
	private String _customBrokerAddress;
	private String _telephoneNumber;
	private String _brokerId;
	private long _manufacturingApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<ManuAdditionalComapnyInfo, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((ManuAdditionalComapnyInfo)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"manuAdditionalComapnyInfoId", _manuAdditionalComapnyInfoId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"companyNameRepresentative", _companyNameRepresentative);
		_columnOriginalValues.put(
			"companySignatureRepresentative", _companySignatureRepresentative);
		_columnOriginalValues.put("signatureDate", _signatureDate);
		_columnOriginalValues.put("customBrokerName", _customBrokerName);
		_columnOriginalValues.put("customBrokerAddress", _customBrokerAddress);
		_columnOriginalValues.put("telephoneNumber", _telephoneNumber);
		_columnOriginalValues.put("brokerId", _brokerId);
		_columnOriginalValues.put(
			"manufacturingApplicationId", _manufacturingApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("manuAdditionalComapnyInfoId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("companyNameRepresentative", 128L);

		columnBitmasks.put("companySignatureRepresentative", 256L);

		columnBitmasks.put("signatureDate", 512L);

		columnBitmasks.put("customBrokerName", 1024L);

		columnBitmasks.put("customBrokerAddress", 2048L);

		columnBitmasks.put("telephoneNumber", 4096L);

		columnBitmasks.put("brokerId", 8192L);

		columnBitmasks.put("manufacturingApplicationId", 16384L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private ManuAdditionalComapnyInfo _escapedModel;

}