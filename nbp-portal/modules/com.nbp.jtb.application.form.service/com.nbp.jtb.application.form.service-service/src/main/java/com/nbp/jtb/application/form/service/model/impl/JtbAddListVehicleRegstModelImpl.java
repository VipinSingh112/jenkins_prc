/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.jtb.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.jtb.application.form.service.model.JtbAddListVehicleRegst;
import com.nbp.jtb.application.form.service.model.JtbAddListVehicleRegstModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the JtbAddListVehicleRegst service. Represents a row in the &quot;nbp_jtb_list_value_regst&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>JtbAddListVehicleRegstModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link JtbAddListVehicleRegstImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see JtbAddListVehicleRegstImpl
 * @generated
 */
@JSON(strict = true)
public class JtbAddListVehicleRegstModelImpl
	extends BaseModelImpl<JtbAddListVehicleRegst>
	implements JtbAddListVehicleRegstModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a jtb add list vehicle regst model instance should use the <code>JtbAddListVehicleRegst</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_jtb_list_value_regst";

	public static final Object[][] TABLE_COLUMNS = {
		{"jtbAddListVehicleRegstId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"counter", Types.VARCHAR},
		{"vehicleRegstYear", Types.VARCHAR},
		{"vehicleRegstModel", Types.VARCHAR},
		{"vehicleRegstPlate", Types.VARCHAR},
		{"vehicleRegstExpDate", Types.TIMESTAMP},
		{"vehicleRegstFitnessDate", Types.TIMESTAMP},
		{"vehicleRegstChassis", Types.VARCHAR},
		{"vehicleRegstBased", Types.VARCHAR},
		{"vehicleRegstInsuranceCom", Types.VARCHAR},
		{"vehicleRegstPolicyNum", Types.VARCHAR},
		{"vehicleRegstExpiryDate", Types.TIMESTAMP},
		{"vehicleRegstPlateNum", Types.VARCHAR},
		{"jtbApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("jtbAddListVehicleRegstId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("counter", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("vehicleRegstYear", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("vehicleRegstModel", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("vehicleRegstPlate", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("vehicleRegstExpDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("vehicleRegstFitnessDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("vehicleRegstChassis", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("vehicleRegstBased", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("vehicleRegstInsuranceCom", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("vehicleRegstPolicyNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("vehicleRegstExpiryDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("vehicleRegstPlateNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("jtbApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_jtb_list_value_regst (jtbAddListVehicleRegstId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,counter VARCHAR(75) null,vehicleRegstYear VARCHAR(75) null,vehicleRegstModel VARCHAR(75) null,vehicleRegstPlate VARCHAR(75) null,vehicleRegstExpDate DATE null,vehicleRegstFitnessDate DATE null,vehicleRegstChassis VARCHAR(75) null,vehicleRegstBased VARCHAR(75) null,vehicleRegstInsuranceCom VARCHAR(75) null,vehicleRegstPolicyNum VARCHAR(75) null,vehicleRegstExpiryDate DATE null,vehicleRegstPlateNum VARCHAR(75) null,jtbApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_jtb_list_value_regst";

	public static final String ORDER_BY_JPQL =
		" ORDER BY jtbAddListVehicleRegst.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_jtb_list_value_regst.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long JTBAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public JtbAddListVehicleRegstModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _jtbAddListVehicleRegstId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setJtbAddListVehicleRegstId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _jtbAddListVehicleRegstId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return JtbAddListVehicleRegst.class;
	}

	@Override
	public String getModelClassName() {
		return JtbAddListVehicleRegst.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<JtbAddListVehicleRegst, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<JtbAddListVehicleRegst, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<JtbAddListVehicleRegst, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((JtbAddListVehicleRegst)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<JtbAddListVehicleRegst, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<JtbAddListVehicleRegst, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(JtbAddListVehicleRegst)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<JtbAddListVehicleRegst, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<JtbAddListVehicleRegst, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<JtbAddListVehicleRegst, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<JtbAddListVehicleRegst, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<JtbAddListVehicleRegst, Object>>();

			attributeGetterFunctions.put(
				"jtbAddListVehicleRegstId",
				JtbAddListVehicleRegst::getJtbAddListVehicleRegstId);
			attributeGetterFunctions.put(
				"groupId", JtbAddListVehicleRegst::getGroupId);
			attributeGetterFunctions.put(
				"companyId", JtbAddListVehicleRegst::getCompanyId);
			attributeGetterFunctions.put(
				"userId", JtbAddListVehicleRegst::getUserId);
			attributeGetterFunctions.put(
				"userName", JtbAddListVehicleRegst::getUserName);
			attributeGetterFunctions.put(
				"createDate", JtbAddListVehicleRegst::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", JtbAddListVehicleRegst::getModifiedDate);
			attributeGetterFunctions.put(
				"counter", JtbAddListVehicleRegst::getCounter);
			attributeGetterFunctions.put(
				"vehicleRegstYear",
				JtbAddListVehicleRegst::getVehicleRegstYear);
			attributeGetterFunctions.put(
				"vehicleRegstModel",
				JtbAddListVehicleRegst::getVehicleRegstModel);
			attributeGetterFunctions.put(
				"vehicleRegstPlate",
				JtbAddListVehicleRegst::getVehicleRegstPlate);
			attributeGetterFunctions.put(
				"vehicleRegstExpDate",
				JtbAddListVehicleRegst::getVehicleRegstExpDate);
			attributeGetterFunctions.put(
				"vehicleRegstFitnessDate",
				JtbAddListVehicleRegst::getVehicleRegstFitnessDate);
			attributeGetterFunctions.put(
				"vehicleRegstChassis",
				JtbAddListVehicleRegst::getVehicleRegstChassis);
			attributeGetterFunctions.put(
				"vehicleRegstBased",
				JtbAddListVehicleRegst::getVehicleRegstBased);
			attributeGetterFunctions.put(
				"vehicleRegstInsuranceCom",
				JtbAddListVehicleRegst::getVehicleRegstInsuranceCom);
			attributeGetterFunctions.put(
				"vehicleRegstPolicyNum",
				JtbAddListVehicleRegst::getVehicleRegstPolicyNum);
			attributeGetterFunctions.put(
				"vehicleRegstExpiryDate",
				JtbAddListVehicleRegst::getVehicleRegstExpiryDate);
			attributeGetterFunctions.put(
				"vehicleRegstPlateNum",
				JtbAddListVehicleRegst::getVehicleRegstPlateNum);
			attributeGetterFunctions.put(
				"jtbApplicationId",
				JtbAddListVehicleRegst::getJtbApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<JtbAddListVehicleRegst, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<JtbAddListVehicleRegst, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<JtbAddListVehicleRegst, ?>>();

			attributeSetterBiConsumers.put(
				"jtbAddListVehicleRegstId",
				(BiConsumer<JtbAddListVehicleRegst, Long>)
					JtbAddListVehicleRegst::setJtbAddListVehicleRegstId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<JtbAddListVehicleRegst, Long>)
					JtbAddListVehicleRegst::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<JtbAddListVehicleRegst, Long>)
					JtbAddListVehicleRegst::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<JtbAddListVehicleRegst, Long>)
					JtbAddListVehicleRegst::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<JtbAddListVehicleRegst, String>)
					JtbAddListVehicleRegst::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<JtbAddListVehicleRegst, Date>)
					JtbAddListVehicleRegst::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<JtbAddListVehicleRegst, Date>)
					JtbAddListVehicleRegst::setModifiedDate);
			attributeSetterBiConsumers.put(
				"counter",
				(BiConsumer<JtbAddListVehicleRegst, String>)
					JtbAddListVehicleRegst::setCounter);
			attributeSetterBiConsumers.put(
				"vehicleRegstYear",
				(BiConsumer<JtbAddListVehicleRegst, String>)
					JtbAddListVehicleRegst::setVehicleRegstYear);
			attributeSetterBiConsumers.put(
				"vehicleRegstModel",
				(BiConsumer<JtbAddListVehicleRegst, String>)
					JtbAddListVehicleRegst::setVehicleRegstModel);
			attributeSetterBiConsumers.put(
				"vehicleRegstPlate",
				(BiConsumer<JtbAddListVehicleRegst, String>)
					JtbAddListVehicleRegst::setVehicleRegstPlate);
			attributeSetterBiConsumers.put(
				"vehicleRegstExpDate",
				(BiConsumer<JtbAddListVehicleRegst, Date>)
					JtbAddListVehicleRegst::setVehicleRegstExpDate);
			attributeSetterBiConsumers.put(
				"vehicleRegstFitnessDate",
				(BiConsumer<JtbAddListVehicleRegst, Date>)
					JtbAddListVehicleRegst::setVehicleRegstFitnessDate);
			attributeSetterBiConsumers.put(
				"vehicleRegstChassis",
				(BiConsumer<JtbAddListVehicleRegst, String>)
					JtbAddListVehicleRegst::setVehicleRegstChassis);
			attributeSetterBiConsumers.put(
				"vehicleRegstBased",
				(BiConsumer<JtbAddListVehicleRegst, String>)
					JtbAddListVehicleRegst::setVehicleRegstBased);
			attributeSetterBiConsumers.put(
				"vehicleRegstInsuranceCom",
				(BiConsumer<JtbAddListVehicleRegst, String>)
					JtbAddListVehicleRegst::setVehicleRegstInsuranceCom);
			attributeSetterBiConsumers.put(
				"vehicleRegstPolicyNum",
				(BiConsumer<JtbAddListVehicleRegst, String>)
					JtbAddListVehicleRegst::setVehicleRegstPolicyNum);
			attributeSetterBiConsumers.put(
				"vehicleRegstExpiryDate",
				(BiConsumer<JtbAddListVehicleRegst, Date>)
					JtbAddListVehicleRegst::setVehicleRegstExpiryDate);
			attributeSetterBiConsumers.put(
				"vehicleRegstPlateNum",
				(BiConsumer<JtbAddListVehicleRegst, String>)
					JtbAddListVehicleRegst::setVehicleRegstPlateNum);
			attributeSetterBiConsumers.put(
				"jtbApplicationId",
				(BiConsumer<JtbAddListVehicleRegst, Long>)
					JtbAddListVehicleRegst::setJtbApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getJtbAddListVehicleRegstId() {
		return _jtbAddListVehicleRegstId;
	}

	@Override
	public void setJtbAddListVehicleRegstId(long jtbAddListVehicleRegstId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_jtbAddListVehicleRegstId = jtbAddListVehicleRegstId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getCounter() {
		if (_counter == null) {
			return "";
		}
		else {
			return _counter;
		}
	}

	@Override
	public void setCounter(String counter) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_counter = counter;
	}

	@JSON
	@Override
	public String getVehicleRegstYear() {
		if (_vehicleRegstYear == null) {
			return "";
		}
		else {
			return _vehicleRegstYear;
		}
	}

	@Override
	public void setVehicleRegstYear(String vehicleRegstYear) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehicleRegstYear = vehicleRegstYear;
	}

	@JSON
	@Override
	public String getVehicleRegstModel() {
		if (_vehicleRegstModel == null) {
			return "";
		}
		else {
			return _vehicleRegstModel;
		}
	}

	@Override
	public void setVehicleRegstModel(String vehicleRegstModel) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehicleRegstModel = vehicleRegstModel;
	}

	@JSON
	@Override
	public String getVehicleRegstPlate() {
		if (_vehicleRegstPlate == null) {
			return "";
		}
		else {
			return _vehicleRegstPlate;
		}
	}

	@Override
	public void setVehicleRegstPlate(String vehicleRegstPlate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehicleRegstPlate = vehicleRegstPlate;
	}

	@JSON
	@Override
	public Date getVehicleRegstExpDate() {
		return _vehicleRegstExpDate;
	}

	@Override
	public void setVehicleRegstExpDate(Date vehicleRegstExpDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehicleRegstExpDate = vehicleRegstExpDate;
	}

	@JSON
	@Override
	public Date getVehicleRegstFitnessDate() {
		return _vehicleRegstFitnessDate;
	}

	@Override
	public void setVehicleRegstFitnessDate(Date vehicleRegstFitnessDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehicleRegstFitnessDate = vehicleRegstFitnessDate;
	}

	@JSON
	@Override
	public String getVehicleRegstChassis() {
		if (_vehicleRegstChassis == null) {
			return "";
		}
		else {
			return _vehicleRegstChassis;
		}
	}

	@Override
	public void setVehicleRegstChassis(String vehicleRegstChassis) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehicleRegstChassis = vehicleRegstChassis;
	}

	@JSON
	@Override
	public String getVehicleRegstBased() {
		if (_vehicleRegstBased == null) {
			return "";
		}
		else {
			return _vehicleRegstBased;
		}
	}

	@Override
	public void setVehicleRegstBased(String vehicleRegstBased) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehicleRegstBased = vehicleRegstBased;
	}

	@JSON
	@Override
	public String getVehicleRegstInsuranceCom() {
		if (_vehicleRegstInsuranceCom == null) {
			return "";
		}
		else {
			return _vehicleRegstInsuranceCom;
		}
	}

	@Override
	public void setVehicleRegstInsuranceCom(String vehicleRegstInsuranceCom) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehicleRegstInsuranceCom = vehicleRegstInsuranceCom;
	}

	@JSON
	@Override
	public String getVehicleRegstPolicyNum() {
		if (_vehicleRegstPolicyNum == null) {
			return "";
		}
		else {
			return _vehicleRegstPolicyNum;
		}
	}

	@Override
	public void setVehicleRegstPolicyNum(String vehicleRegstPolicyNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehicleRegstPolicyNum = vehicleRegstPolicyNum;
	}

	@JSON
	@Override
	public Date getVehicleRegstExpiryDate() {
		return _vehicleRegstExpiryDate;
	}

	@Override
	public void setVehicleRegstExpiryDate(Date vehicleRegstExpiryDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehicleRegstExpiryDate = vehicleRegstExpiryDate;
	}

	@JSON
	@Override
	public String getVehicleRegstPlateNum() {
		if (_vehicleRegstPlateNum == null) {
			return "";
		}
		else {
			return _vehicleRegstPlateNum;
		}
	}

	@Override
	public void setVehicleRegstPlateNum(String vehicleRegstPlateNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vehicleRegstPlateNum = vehicleRegstPlateNum;
	}

	@JSON
	@Override
	public long getJtbApplicationId() {
		return _jtbApplicationId;
	}

	@Override
	public void setJtbApplicationId(long jtbApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_jtbApplicationId = jtbApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalJtbApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("jtbApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), JtbAddListVehicleRegst.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public JtbAddListVehicleRegst toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, JtbAddListVehicleRegst>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		JtbAddListVehicleRegstImpl jtbAddListVehicleRegstImpl =
			new JtbAddListVehicleRegstImpl();

		jtbAddListVehicleRegstImpl.setJtbAddListVehicleRegstId(
			getJtbAddListVehicleRegstId());
		jtbAddListVehicleRegstImpl.setGroupId(getGroupId());
		jtbAddListVehicleRegstImpl.setCompanyId(getCompanyId());
		jtbAddListVehicleRegstImpl.setUserId(getUserId());
		jtbAddListVehicleRegstImpl.setUserName(getUserName());
		jtbAddListVehicleRegstImpl.setCreateDate(getCreateDate());
		jtbAddListVehicleRegstImpl.setModifiedDate(getModifiedDate());
		jtbAddListVehicleRegstImpl.setCounter(getCounter());
		jtbAddListVehicleRegstImpl.setVehicleRegstYear(getVehicleRegstYear());
		jtbAddListVehicleRegstImpl.setVehicleRegstModel(getVehicleRegstModel());
		jtbAddListVehicleRegstImpl.setVehicleRegstPlate(getVehicleRegstPlate());
		jtbAddListVehicleRegstImpl.setVehicleRegstExpDate(
			getVehicleRegstExpDate());
		jtbAddListVehicleRegstImpl.setVehicleRegstFitnessDate(
			getVehicleRegstFitnessDate());
		jtbAddListVehicleRegstImpl.setVehicleRegstChassis(
			getVehicleRegstChassis());
		jtbAddListVehicleRegstImpl.setVehicleRegstBased(getVehicleRegstBased());
		jtbAddListVehicleRegstImpl.setVehicleRegstInsuranceCom(
			getVehicleRegstInsuranceCom());
		jtbAddListVehicleRegstImpl.setVehicleRegstPolicyNum(
			getVehicleRegstPolicyNum());
		jtbAddListVehicleRegstImpl.setVehicleRegstExpiryDate(
			getVehicleRegstExpiryDate());
		jtbAddListVehicleRegstImpl.setVehicleRegstPlateNum(
			getVehicleRegstPlateNum());
		jtbAddListVehicleRegstImpl.setJtbApplicationId(getJtbApplicationId());

		jtbAddListVehicleRegstImpl.resetOriginalValues();

		return jtbAddListVehicleRegstImpl;
	}

	@Override
	public JtbAddListVehicleRegst cloneWithOriginalValues() {
		JtbAddListVehicleRegstImpl jtbAddListVehicleRegstImpl =
			new JtbAddListVehicleRegstImpl();

		jtbAddListVehicleRegstImpl.setJtbAddListVehicleRegstId(
			this.<Long>getColumnOriginalValue("jtbAddListVehicleRegstId"));
		jtbAddListVehicleRegstImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		jtbAddListVehicleRegstImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		jtbAddListVehicleRegstImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		jtbAddListVehicleRegstImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		jtbAddListVehicleRegstImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		jtbAddListVehicleRegstImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		jtbAddListVehicleRegstImpl.setCounter(
			this.<String>getColumnOriginalValue("counter"));
		jtbAddListVehicleRegstImpl.setVehicleRegstYear(
			this.<String>getColumnOriginalValue("vehicleRegstYear"));
		jtbAddListVehicleRegstImpl.setVehicleRegstModel(
			this.<String>getColumnOriginalValue("vehicleRegstModel"));
		jtbAddListVehicleRegstImpl.setVehicleRegstPlate(
			this.<String>getColumnOriginalValue("vehicleRegstPlate"));
		jtbAddListVehicleRegstImpl.setVehicleRegstExpDate(
			this.<Date>getColumnOriginalValue("vehicleRegstExpDate"));
		jtbAddListVehicleRegstImpl.setVehicleRegstFitnessDate(
			this.<Date>getColumnOriginalValue("vehicleRegstFitnessDate"));
		jtbAddListVehicleRegstImpl.setVehicleRegstChassis(
			this.<String>getColumnOriginalValue("vehicleRegstChassis"));
		jtbAddListVehicleRegstImpl.setVehicleRegstBased(
			this.<String>getColumnOriginalValue("vehicleRegstBased"));
		jtbAddListVehicleRegstImpl.setVehicleRegstInsuranceCom(
			this.<String>getColumnOriginalValue("vehicleRegstInsuranceCom"));
		jtbAddListVehicleRegstImpl.setVehicleRegstPolicyNum(
			this.<String>getColumnOriginalValue("vehicleRegstPolicyNum"));
		jtbAddListVehicleRegstImpl.setVehicleRegstExpiryDate(
			this.<Date>getColumnOriginalValue("vehicleRegstExpiryDate"));
		jtbAddListVehicleRegstImpl.setVehicleRegstPlateNum(
			this.<String>getColumnOriginalValue("vehicleRegstPlateNum"));
		jtbAddListVehicleRegstImpl.setJtbApplicationId(
			this.<Long>getColumnOriginalValue("jtbApplicationId"));

		return jtbAddListVehicleRegstImpl;
	}

	@Override
	public int compareTo(JtbAddListVehicleRegst jtbAddListVehicleRegst) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), jtbAddListVehicleRegst.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof JtbAddListVehicleRegst)) {
			return false;
		}

		JtbAddListVehicleRegst jtbAddListVehicleRegst =
			(JtbAddListVehicleRegst)object;

		long primaryKey = jtbAddListVehicleRegst.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<JtbAddListVehicleRegst> toCacheModel() {
		JtbAddListVehicleRegstCacheModel jtbAddListVehicleRegstCacheModel =
			new JtbAddListVehicleRegstCacheModel();

		jtbAddListVehicleRegstCacheModel.jtbAddListVehicleRegstId =
			getJtbAddListVehicleRegstId();

		jtbAddListVehicleRegstCacheModel.groupId = getGroupId();

		jtbAddListVehicleRegstCacheModel.companyId = getCompanyId();

		jtbAddListVehicleRegstCacheModel.userId = getUserId();

		jtbAddListVehicleRegstCacheModel.userName = getUserName();

		String userName = jtbAddListVehicleRegstCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			jtbAddListVehicleRegstCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			jtbAddListVehicleRegstCacheModel.createDate = createDate.getTime();
		}
		else {
			jtbAddListVehicleRegstCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			jtbAddListVehicleRegstCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			jtbAddListVehicleRegstCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		jtbAddListVehicleRegstCacheModel.counter = getCounter();

		String counter = jtbAddListVehicleRegstCacheModel.counter;

		if ((counter != null) && (counter.length() == 0)) {
			jtbAddListVehicleRegstCacheModel.counter = null;
		}

		jtbAddListVehicleRegstCacheModel.vehicleRegstYear =
			getVehicleRegstYear();

		String vehicleRegstYear =
			jtbAddListVehicleRegstCacheModel.vehicleRegstYear;

		if ((vehicleRegstYear != null) && (vehicleRegstYear.length() == 0)) {
			jtbAddListVehicleRegstCacheModel.vehicleRegstYear = null;
		}

		jtbAddListVehicleRegstCacheModel.vehicleRegstModel =
			getVehicleRegstModel();

		String vehicleRegstModel =
			jtbAddListVehicleRegstCacheModel.vehicleRegstModel;

		if ((vehicleRegstModel != null) && (vehicleRegstModel.length() == 0)) {
			jtbAddListVehicleRegstCacheModel.vehicleRegstModel = null;
		}

		jtbAddListVehicleRegstCacheModel.vehicleRegstPlate =
			getVehicleRegstPlate();

		String vehicleRegstPlate =
			jtbAddListVehicleRegstCacheModel.vehicleRegstPlate;

		if ((vehicleRegstPlate != null) && (vehicleRegstPlate.length() == 0)) {
			jtbAddListVehicleRegstCacheModel.vehicleRegstPlate = null;
		}

		Date vehicleRegstExpDate = getVehicleRegstExpDate();

		if (vehicleRegstExpDate != null) {
			jtbAddListVehicleRegstCacheModel.vehicleRegstExpDate =
				vehicleRegstExpDate.getTime();
		}
		else {
			jtbAddListVehicleRegstCacheModel.vehicleRegstExpDate =
				Long.MIN_VALUE;
		}

		Date vehicleRegstFitnessDate = getVehicleRegstFitnessDate();

		if (vehicleRegstFitnessDate != null) {
			jtbAddListVehicleRegstCacheModel.vehicleRegstFitnessDate =
				vehicleRegstFitnessDate.getTime();
		}
		else {
			jtbAddListVehicleRegstCacheModel.vehicleRegstFitnessDate =
				Long.MIN_VALUE;
		}

		jtbAddListVehicleRegstCacheModel.vehicleRegstChassis =
			getVehicleRegstChassis();

		String vehicleRegstChassis =
			jtbAddListVehicleRegstCacheModel.vehicleRegstChassis;

		if ((vehicleRegstChassis != null) &&
			(vehicleRegstChassis.length() == 0)) {

			jtbAddListVehicleRegstCacheModel.vehicleRegstChassis = null;
		}

		jtbAddListVehicleRegstCacheModel.vehicleRegstBased =
			getVehicleRegstBased();

		String vehicleRegstBased =
			jtbAddListVehicleRegstCacheModel.vehicleRegstBased;

		if ((vehicleRegstBased != null) && (vehicleRegstBased.length() == 0)) {
			jtbAddListVehicleRegstCacheModel.vehicleRegstBased = null;
		}

		jtbAddListVehicleRegstCacheModel.vehicleRegstInsuranceCom =
			getVehicleRegstInsuranceCom();

		String vehicleRegstInsuranceCom =
			jtbAddListVehicleRegstCacheModel.vehicleRegstInsuranceCom;

		if ((vehicleRegstInsuranceCom != null) &&
			(vehicleRegstInsuranceCom.length() == 0)) {

			jtbAddListVehicleRegstCacheModel.vehicleRegstInsuranceCom = null;
		}

		jtbAddListVehicleRegstCacheModel.vehicleRegstPolicyNum =
			getVehicleRegstPolicyNum();

		String vehicleRegstPolicyNum =
			jtbAddListVehicleRegstCacheModel.vehicleRegstPolicyNum;

		if ((vehicleRegstPolicyNum != null) &&
			(vehicleRegstPolicyNum.length() == 0)) {

			jtbAddListVehicleRegstCacheModel.vehicleRegstPolicyNum = null;
		}

		Date vehicleRegstExpiryDate = getVehicleRegstExpiryDate();

		if (vehicleRegstExpiryDate != null) {
			jtbAddListVehicleRegstCacheModel.vehicleRegstExpiryDate =
				vehicleRegstExpiryDate.getTime();
		}
		else {
			jtbAddListVehicleRegstCacheModel.vehicleRegstExpiryDate =
				Long.MIN_VALUE;
		}

		jtbAddListVehicleRegstCacheModel.vehicleRegstPlateNum =
			getVehicleRegstPlateNum();

		String vehicleRegstPlateNum =
			jtbAddListVehicleRegstCacheModel.vehicleRegstPlateNum;

		if ((vehicleRegstPlateNum != null) &&
			(vehicleRegstPlateNum.length() == 0)) {

			jtbAddListVehicleRegstCacheModel.vehicleRegstPlateNum = null;
		}

		jtbAddListVehicleRegstCacheModel.jtbApplicationId =
			getJtbApplicationId();

		return jtbAddListVehicleRegstCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<JtbAddListVehicleRegst, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<JtbAddListVehicleRegst, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<JtbAddListVehicleRegst, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(JtbAddListVehicleRegst)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, JtbAddListVehicleRegst>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					JtbAddListVehicleRegst.class, ModelWrapper.class);

	}

	private long _jtbAddListVehicleRegstId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _counter;
	private String _vehicleRegstYear;
	private String _vehicleRegstModel;
	private String _vehicleRegstPlate;
	private Date _vehicleRegstExpDate;
	private Date _vehicleRegstFitnessDate;
	private String _vehicleRegstChassis;
	private String _vehicleRegstBased;
	private String _vehicleRegstInsuranceCom;
	private String _vehicleRegstPolicyNum;
	private Date _vehicleRegstExpiryDate;
	private String _vehicleRegstPlateNum;
	private long _jtbApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<JtbAddListVehicleRegst, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((JtbAddListVehicleRegst)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"jtbAddListVehicleRegstId", _jtbAddListVehicleRegstId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("counter", _counter);
		_columnOriginalValues.put("vehicleRegstYear", _vehicleRegstYear);
		_columnOriginalValues.put("vehicleRegstModel", _vehicleRegstModel);
		_columnOriginalValues.put("vehicleRegstPlate", _vehicleRegstPlate);
		_columnOriginalValues.put("vehicleRegstExpDate", _vehicleRegstExpDate);
		_columnOriginalValues.put(
			"vehicleRegstFitnessDate", _vehicleRegstFitnessDate);
		_columnOriginalValues.put("vehicleRegstChassis", _vehicleRegstChassis);
		_columnOriginalValues.put("vehicleRegstBased", _vehicleRegstBased);
		_columnOriginalValues.put(
			"vehicleRegstInsuranceCom", _vehicleRegstInsuranceCom);
		_columnOriginalValues.put(
			"vehicleRegstPolicyNum", _vehicleRegstPolicyNum);
		_columnOriginalValues.put(
			"vehicleRegstExpiryDate", _vehicleRegstExpiryDate);
		_columnOriginalValues.put(
			"vehicleRegstPlateNum", _vehicleRegstPlateNum);
		_columnOriginalValues.put("jtbApplicationId", _jtbApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("jtbAddListVehicleRegstId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("counter", 128L);

		columnBitmasks.put("vehicleRegstYear", 256L);

		columnBitmasks.put("vehicleRegstModel", 512L);

		columnBitmasks.put("vehicleRegstPlate", 1024L);

		columnBitmasks.put("vehicleRegstExpDate", 2048L);

		columnBitmasks.put("vehicleRegstFitnessDate", 4096L);

		columnBitmasks.put("vehicleRegstChassis", 8192L);

		columnBitmasks.put("vehicleRegstBased", 16384L);

		columnBitmasks.put("vehicleRegstInsuranceCom", 32768L);

		columnBitmasks.put("vehicleRegstPolicyNum", 65536L);

		columnBitmasks.put("vehicleRegstExpiryDate", 131072L);

		columnBitmasks.put("vehicleRegstPlateNum", 262144L);

		columnBitmasks.put("jtbApplicationId", 524288L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private JtbAddListVehicleRegst _escapedModel;

}