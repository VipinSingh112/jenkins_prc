/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.jtb.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.jtb.application.form.service.model.AttractionTravelHaltApp;
import com.nbp.jtb.application.form.service.model.AttractionTravelHaltAppModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the AttractionTravelHaltApp service. Represents a row in the &quot;nbp_jtb_travel_halt_app&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>AttractionTravelHaltAppModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AttractionTravelHaltAppImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AttractionTravelHaltAppImpl
 * @generated
 */
@JSON(strict = true)
public class AttractionTravelHaltAppModelImpl
	extends BaseModelImpl<AttractionTravelHaltApp>
	implements AttractionTravelHaltAppModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a attraction travel halt app model instance should use the <code>AttractionTravelHaltApp</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_jtb_travel_halt_app";

	public static final Object[][] TABLE_COLUMNS = {
		{"attractionTravelHaltAppId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP},
		{"travelHaltApplicantName", Types.VARCHAR},
		{"travelHaltAddress", Types.VARCHAR},
		{"travelHaltTelephone", Types.VARCHAR},
		{"travelHaltEmail", Types.VARCHAR}, {"travelHaltName", Types.VARCHAR},
		{"travelHaltLocation", Types.VARCHAR},
		{"travelHaltTelephoneNum", Types.VARCHAR},
		{"travelHaltEmployeesNo", Types.VARCHAR},
		{"travelHaltSignDate", Types.TIMESTAMP}, {"gasStation", Types.VARCHAR},
		{"refreshment", Types.VARCHAR}, {"drinks", Types.VARCHAR},
		{"restaurant", Types.VARCHAR}, {"wirelessinternet", Types.VARCHAR},
		{"restrooms", Types.VARCHAR}, {"jtbApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("attractionTravelHaltAppId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("travelHaltApplicantName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("travelHaltAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("travelHaltTelephone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("travelHaltEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("travelHaltName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("travelHaltLocation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("travelHaltTelephoneNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("travelHaltEmployeesNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("travelHaltSignDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("gasStation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("refreshment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("drinks", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("restaurant", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("wirelessinternet", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("restrooms", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("jtbApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_jtb_travel_halt_app (attractionTravelHaltAppId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,travelHaltApplicantName VARCHAR(75) null,travelHaltAddress VARCHAR(500) null,travelHaltTelephone VARCHAR(75) null,travelHaltEmail VARCHAR(75) null,travelHaltName VARCHAR(75) null,travelHaltLocation VARCHAR(500) null,travelHaltTelephoneNum VARCHAR(75) null,travelHaltEmployeesNo VARCHAR(75) null,travelHaltSignDate DATE null,gasStation VARCHAR(75) null,refreshment VARCHAR(75) null,drinks VARCHAR(75) null,restaurant VARCHAR(75) null,wirelessinternet VARCHAR(75) null,restrooms VARCHAR(75) null,jtbApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_jtb_travel_halt_app";

	public static final String ORDER_BY_JPQL =
		" ORDER BY attractionTravelHaltApp.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_jtb_travel_halt_app.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long JTBAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public AttractionTravelHaltAppModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _attractionTravelHaltAppId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAttractionTravelHaltAppId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _attractionTravelHaltAppId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AttractionTravelHaltApp.class;
	}

	@Override
	public String getModelClassName() {
		return AttractionTravelHaltApp.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<AttractionTravelHaltApp, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<AttractionTravelHaltApp, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AttractionTravelHaltApp, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((AttractionTravelHaltApp)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<AttractionTravelHaltApp, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<AttractionTravelHaltApp, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(AttractionTravelHaltApp)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<AttractionTravelHaltApp, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<AttractionTravelHaltApp, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<AttractionTravelHaltApp, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<AttractionTravelHaltApp, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<AttractionTravelHaltApp, Object>>();

			attributeGetterFunctions.put(
				"attractionTravelHaltAppId",
				AttractionTravelHaltApp::getAttractionTravelHaltAppId);
			attributeGetterFunctions.put(
				"groupId", AttractionTravelHaltApp::getGroupId);
			attributeGetterFunctions.put(
				"companyId", AttractionTravelHaltApp::getCompanyId);
			attributeGetterFunctions.put(
				"userId", AttractionTravelHaltApp::getUserId);
			attributeGetterFunctions.put(
				"userName", AttractionTravelHaltApp::getUserName);
			attributeGetterFunctions.put(
				"createDate", AttractionTravelHaltApp::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", AttractionTravelHaltApp::getModifiedDate);
			attributeGetterFunctions.put(
				"travelHaltApplicantName",
				AttractionTravelHaltApp::getTravelHaltApplicantName);
			attributeGetterFunctions.put(
				"travelHaltAddress",
				AttractionTravelHaltApp::getTravelHaltAddress);
			attributeGetterFunctions.put(
				"travelHaltTelephone",
				AttractionTravelHaltApp::getTravelHaltTelephone);
			attributeGetterFunctions.put(
				"travelHaltEmail", AttractionTravelHaltApp::getTravelHaltEmail);
			attributeGetterFunctions.put(
				"travelHaltName", AttractionTravelHaltApp::getTravelHaltName);
			attributeGetterFunctions.put(
				"travelHaltLocation",
				AttractionTravelHaltApp::getTravelHaltLocation);
			attributeGetterFunctions.put(
				"travelHaltTelephoneNum",
				AttractionTravelHaltApp::getTravelHaltTelephoneNum);
			attributeGetterFunctions.put(
				"travelHaltEmployeesNo",
				AttractionTravelHaltApp::getTravelHaltEmployeesNo);
			attributeGetterFunctions.put(
				"travelHaltSignDate",
				AttractionTravelHaltApp::getTravelHaltSignDate);
			attributeGetterFunctions.put(
				"gasStation", AttractionTravelHaltApp::getGasStation);
			attributeGetterFunctions.put(
				"refreshment", AttractionTravelHaltApp::getRefreshment);
			attributeGetterFunctions.put(
				"drinks", AttractionTravelHaltApp::getDrinks);
			attributeGetterFunctions.put(
				"restaurant", AttractionTravelHaltApp::getRestaurant);
			attributeGetterFunctions.put(
				"wirelessinternet",
				AttractionTravelHaltApp::getWirelessinternet);
			attributeGetterFunctions.put(
				"restrooms", AttractionTravelHaltApp::getRestrooms);
			attributeGetterFunctions.put(
				"jtbApplicationId",
				AttractionTravelHaltApp::getJtbApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<AttractionTravelHaltApp, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<AttractionTravelHaltApp, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<AttractionTravelHaltApp, ?>>();

			attributeSetterBiConsumers.put(
				"attractionTravelHaltAppId",
				(BiConsumer<AttractionTravelHaltApp, Long>)
					AttractionTravelHaltApp::setAttractionTravelHaltAppId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<AttractionTravelHaltApp, Long>)
					AttractionTravelHaltApp::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<AttractionTravelHaltApp, Long>)
					AttractionTravelHaltApp::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<AttractionTravelHaltApp, Long>)
					AttractionTravelHaltApp::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<AttractionTravelHaltApp, String>)
					AttractionTravelHaltApp::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<AttractionTravelHaltApp, Date>)
					AttractionTravelHaltApp::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<AttractionTravelHaltApp, Date>)
					AttractionTravelHaltApp::setModifiedDate);
			attributeSetterBiConsumers.put(
				"travelHaltApplicantName",
				(BiConsumer<AttractionTravelHaltApp, String>)
					AttractionTravelHaltApp::setTravelHaltApplicantName);
			attributeSetterBiConsumers.put(
				"travelHaltAddress",
				(BiConsumer<AttractionTravelHaltApp, String>)
					AttractionTravelHaltApp::setTravelHaltAddress);
			attributeSetterBiConsumers.put(
				"travelHaltTelephone",
				(BiConsumer<AttractionTravelHaltApp, String>)
					AttractionTravelHaltApp::setTravelHaltTelephone);
			attributeSetterBiConsumers.put(
				"travelHaltEmail",
				(BiConsumer<AttractionTravelHaltApp, String>)
					AttractionTravelHaltApp::setTravelHaltEmail);
			attributeSetterBiConsumers.put(
				"travelHaltName",
				(BiConsumer<AttractionTravelHaltApp, String>)
					AttractionTravelHaltApp::setTravelHaltName);
			attributeSetterBiConsumers.put(
				"travelHaltLocation",
				(BiConsumer<AttractionTravelHaltApp, String>)
					AttractionTravelHaltApp::setTravelHaltLocation);
			attributeSetterBiConsumers.put(
				"travelHaltTelephoneNum",
				(BiConsumer<AttractionTravelHaltApp, String>)
					AttractionTravelHaltApp::setTravelHaltTelephoneNum);
			attributeSetterBiConsumers.put(
				"travelHaltEmployeesNo",
				(BiConsumer<AttractionTravelHaltApp, String>)
					AttractionTravelHaltApp::setTravelHaltEmployeesNo);
			attributeSetterBiConsumers.put(
				"travelHaltSignDate",
				(BiConsumer<AttractionTravelHaltApp, Date>)
					AttractionTravelHaltApp::setTravelHaltSignDate);
			attributeSetterBiConsumers.put(
				"gasStation",
				(BiConsumer<AttractionTravelHaltApp, String>)
					AttractionTravelHaltApp::setGasStation);
			attributeSetterBiConsumers.put(
				"refreshment",
				(BiConsumer<AttractionTravelHaltApp, String>)
					AttractionTravelHaltApp::setRefreshment);
			attributeSetterBiConsumers.put(
				"drinks",
				(BiConsumer<AttractionTravelHaltApp, String>)
					AttractionTravelHaltApp::setDrinks);
			attributeSetterBiConsumers.put(
				"restaurant",
				(BiConsumer<AttractionTravelHaltApp, String>)
					AttractionTravelHaltApp::setRestaurant);
			attributeSetterBiConsumers.put(
				"wirelessinternet",
				(BiConsumer<AttractionTravelHaltApp, String>)
					AttractionTravelHaltApp::setWirelessinternet);
			attributeSetterBiConsumers.put(
				"restrooms",
				(BiConsumer<AttractionTravelHaltApp, String>)
					AttractionTravelHaltApp::setRestrooms);
			attributeSetterBiConsumers.put(
				"jtbApplicationId",
				(BiConsumer<AttractionTravelHaltApp, Long>)
					AttractionTravelHaltApp::setJtbApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getAttractionTravelHaltAppId() {
		return _attractionTravelHaltAppId;
	}

	@Override
	public void setAttractionTravelHaltAppId(long attractionTravelHaltAppId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_attractionTravelHaltAppId = attractionTravelHaltAppId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getTravelHaltApplicantName() {
		if (_travelHaltApplicantName == null) {
			return "";
		}
		else {
			return _travelHaltApplicantName;
		}
	}

	@Override
	public void setTravelHaltApplicantName(String travelHaltApplicantName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_travelHaltApplicantName = travelHaltApplicantName;
	}

	@JSON
	@Override
	public String getTravelHaltAddress() {
		if (_travelHaltAddress == null) {
			return "";
		}
		else {
			return _travelHaltAddress;
		}
	}

	@Override
	public void setTravelHaltAddress(String travelHaltAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_travelHaltAddress = travelHaltAddress;
	}

	@JSON
	@Override
	public String getTravelHaltTelephone() {
		if (_travelHaltTelephone == null) {
			return "";
		}
		else {
			return _travelHaltTelephone;
		}
	}

	@Override
	public void setTravelHaltTelephone(String travelHaltTelephone) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_travelHaltTelephone = travelHaltTelephone;
	}

	@JSON
	@Override
	public String getTravelHaltEmail() {
		if (_travelHaltEmail == null) {
			return "";
		}
		else {
			return _travelHaltEmail;
		}
	}

	@Override
	public void setTravelHaltEmail(String travelHaltEmail) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_travelHaltEmail = travelHaltEmail;
	}

	@JSON
	@Override
	public String getTravelHaltName() {
		if (_travelHaltName == null) {
			return "";
		}
		else {
			return _travelHaltName;
		}
	}

	@Override
	public void setTravelHaltName(String travelHaltName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_travelHaltName = travelHaltName;
	}

	@JSON
	@Override
	public String getTravelHaltLocation() {
		if (_travelHaltLocation == null) {
			return "";
		}
		else {
			return _travelHaltLocation;
		}
	}

	@Override
	public void setTravelHaltLocation(String travelHaltLocation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_travelHaltLocation = travelHaltLocation;
	}

	@JSON
	@Override
	public String getTravelHaltTelephoneNum() {
		if (_travelHaltTelephoneNum == null) {
			return "";
		}
		else {
			return _travelHaltTelephoneNum;
		}
	}

	@Override
	public void setTravelHaltTelephoneNum(String travelHaltTelephoneNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_travelHaltTelephoneNum = travelHaltTelephoneNum;
	}

	@JSON
	@Override
	public String getTravelHaltEmployeesNo() {
		if (_travelHaltEmployeesNo == null) {
			return "";
		}
		else {
			return _travelHaltEmployeesNo;
		}
	}

	@Override
	public void setTravelHaltEmployeesNo(String travelHaltEmployeesNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_travelHaltEmployeesNo = travelHaltEmployeesNo;
	}

	@JSON
	@Override
	public Date getTravelHaltSignDate() {
		return _travelHaltSignDate;
	}

	@Override
	public void setTravelHaltSignDate(Date travelHaltSignDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_travelHaltSignDate = travelHaltSignDate;
	}

	@JSON
	@Override
	public String getGasStation() {
		if (_gasStation == null) {
			return "";
		}
		else {
			return _gasStation;
		}
	}

	@Override
	public void setGasStation(String gasStation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_gasStation = gasStation;
	}

	@JSON
	@Override
	public String getRefreshment() {
		if (_refreshment == null) {
			return "";
		}
		else {
			return _refreshment;
		}
	}

	@Override
	public void setRefreshment(String refreshment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_refreshment = refreshment;
	}

	@JSON
	@Override
	public String getDrinks() {
		if (_drinks == null) {
			return "";
		}
		else {
			return _drinks;
		}
	}

	@Override
	public void setDrinks(String drinks) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_drinks = drinks;
	}

	@JSON
	@Override
	public String getRestaurant() {
		if (_restaurant == null) {
			return "";
		}
		else {
			return _restaurant;
		}
	}

	@Override
	public void setRestaurant(String restaurant) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_restaurant = restaurant;
	}

	@JSON
	@Override
	public String getWirelessinternet() {
		if (_wirelessinternet == null) {
			return "";
		}
		else {
			return _wirelessinternet;
		}
	}

	@Override
	public void setWirelessinternet(String wirelessinternet) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_wirelessinternet = wirelessinternet;
	}

	@JSON
	@Override
	public String getRestrooms() {
		if (_restrooms == null) {
			return "";
		}
		else {
			return _restrooms;
		}
	}

	@Override
	public void setRestrooms(String restrooms) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_restrooms = restrooms;
	}

	@JSON
	@Override
	public long getJtbApplicationId() {
		return _jtbApplicationId;
	}

	@Override
	public void setJtbApplicationId(long jtbApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_jtbApplicationId = jtbApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalJtbApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("jtbApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), AttractionTravelHaltApp.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AttractionTravelHaltApp toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, AttractionTravelHaltApp>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AttractionTravelHaltAppImpl attractionTravelHaltAppImpl =
			new AttractionTravelHaltAppImpl();

		attractionTravelHaltAppImpl.setAttractionTravelHaltAppId(
			getAttractionTravelHaltAppId());
		attractionTravelHaltAppImpl.setGroupId(getGroupId());
		attractionTravelHaltAppImpl.setCompanyId(getCompanyId());
		attractionTravelHaltAppImpl.setUserId(getUserId());
		attractionTravelHaltAppImpl.setUserName(getUserName());
		attractionTravelHaltAppImpl.setCreateDate(getCreateDate());
		attractionTravelHaltAppImpl.setModifiedDate(getModifiedDate());
		attractionTravelHaltAppImpl.setTravelHaltApplicantName(
			getTravelHaltApplicantName());
		attractionTravelHaltAppImpl.setTravelHaltAddress(
			getTravelHaltAddress());
		attractionTravelHaltAppImpl.setTravelHaltTelephone(
			getTravelHaltTelephone());
		attractionTravelHaltAppImpl.setTravelHaltEmail(getTravelHaltEmail());
		attractionTravelHaltAppImpl.setTravelHaltName(getTravelHaltName());
		attractionTravelHaltAppImpl.setTravelHaltLocation(
			getTravelHaltLocation());
		attractionTravelHaltAppImpl.setTravelHaltTelephoneNum(
			getTravelHaltTelephoneNum());
		attractionTravelHaltAppImpl.setTravelHaltEmployeesNo(
			getTravelHaltEmployeesNo());
		attractionTravelHaltAppImpl.setTravelHaltSignDate(
			getTravelHaltSignDate());
		attractionTravelHaltAppImpl.setGasStation(getGasStation());
		attractionTravelHaltAppImpl.setRefreshment(getRefreshment());
		attractionTravelHaltAppImpl.setDrinks(getDrinks());
		attractionTravelHaltAppImpl.setRestaurant(getRestaurant());
		attractionTravelHaltAppImpl.setWirelessinternet(getWirelessinternet());
		attractionTravelHaltAppImpl.setRestrooms(getRestrooms());
		attractionTravelHaltAppImpl.setJtbApplicationId(getJtbApplicationId());

		attractionTravelHaltAppImpl.resetOriginalValues();

		return attractionTravelHaltAppImpl;
	}

	@Override
	public AttractionTravelHaltApp cloneWithOriginalValues() {
		AttractionTravelHaltAppImpl attractionTravelHaltAppImpl =
			new AttractionTravelHaltAppImpl();

		attractionTravelHaltAppImpl.setAttractionTravelHaltAppId(
			this.<Long>getColumnOriginalValue("attractionTravelHaltAppId"));
		attractionTravelHaltAppImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		attractionTravelHaltAppImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		attractionTravelHaltAppImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		attractionTravelHaltAppImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		attractionTravelHaltAppImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		attractionTravelHaltAppImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		attractionTravelHaltAppImpl.setTravelHaltApplicantName(
			this.<String>getColumnOriginalValue("travelHaltApplicantName"));
		attractionTravelHaltAppImpl.setTravelHaltAddress(
			this.<String>getColumnOriginalValue("travelHaltAddress"));
		attractionTravelHaltAppImpl.setTravelHaltTelephone(
			this.<String>getColumnOriginalValue("travelHaltTelephone"));
		attractionTravelHaltAppImpl.setTravelHaltEmail(
			this.<String>getColumnOriginalValue("travelHaltEmail"));
		attractionTravelHaltAppImpl.setTravelHaltName(
			this.<String>getColumnOriginalValue("travelHaltName"));
		attractionTravelHaltAppImpl.setTravelHaltLocation(
			this.<String>getColumnOriginalValue("travelHaltLocation"));
		attractionTravelHaltAppImpl.setTravelHaltTelephoneNum(
			this.<String>getColumnOriginalValue("travelHaltTelephoneNum"));
		attractionTravelHaltAppImpl.setTravelHaltEmployeesNo(
			this.<String>getColumnOriginalValue("travelHaltEmployeesNo"));
		attractionTravelHaltAppImpl.setTravelHaltSignDate(
			this.<Date>getColumnOriginalValue("travelHaltSignDate"));
		attractionTravelHaltAppImpl.setGasStation(
			this.<String>getColumnOriginalValue("gasStation"));
		attractionTravelHaltAppImpl.setRefreshment(
			this.<String>getColumnOriginalValue("refreshment"));
		attractionTravelHaltAppImpl.setDrinks(
			this.<String>getColumnOriginalValue("drinks"));
		attractionTravelHaltAppImpl.setRestaurant(
			this.<String>getColumnOriginalValue("restaurant"));
		attractionTravelHaltAppImpl.setWirelessinternet(
			this.<String>getColumnOriginalValue("wirelessinternet"));
		attractionTravelHaltAppImpl.setRestrooms(
			this.<String>getColumnOriginalValue("restrooms"));
		attractionTravelHaltAppImpl.setJtbApplicationId(
			this.<Long>getColumnOriginalValue("jtbApplicationId"));

		return attractionTravelHaltAppImpl;
	}

	@Override
	public int compareTo(AttractionTravelHaltApp attractionTravelHaltApp) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), attractionTravelHaltApp.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof AttractionTravelHaltApp)) {
			return false;
		}

		AttractionTravelHaltApp attractionTravelHaltApp =
			(AttractionTravelHaltApp)object;

		long primaryKey = attractionTravelHaltApp.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<AttractionTravelHaltApp> toCacheModel() {
		AttractionTravelHaltAppCacheModel attractionTravelHaltAppCacheModel =
			new AttractionTravelHaltAppCacheModel();

		attractionTravelHaltAppCacheModel.attractionTravelHaltAppId =
			getAttractionTravelHaltAppId();

		attractionTravelHaltAppCacheModel.groupId = getGroupId();

		attractionTravelHaltAppCacheModel.companyId = getCompanyId();

		attractionTravelHaltAppCacheModel.userId = getUserId();

		attractionTravelHaltAppCacheModel.userName = getUserName();

		String userName = attractionTravelHaltAppCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			attractionTravelHaltAppCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			attractionTravelHaltAppCacheModel.createDate = createDate.getTime();
		}
		else {
			attractionTravelHaltAppCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			attractionTravelHaltAppCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			attractionTravelHaltAppCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		attractionTravelHaltAppCacheModel.travelHaltApplicantName =
			getTravelHaltApplicantName();

		String travelHaltApplicantName =
			attractionTravelHaltAppCacheModel.travelHaltApplicantName;

		if ((travelHaltApplicantName != null) &&
			(travelHaltApplicantName.length() == 0)) {

			attractionTravelHaltAppCacheModel.travelHaltApplicantName = null;
		}

		attractionTravelHaltAppCacheModel.travelHaltAddress =
			getTravelHaltAddress();

		String travelHaltAddress =
			attractionTravelHaltAppCacheModel.travelHaltAddress;

		if ((travelHaltAddress != null) && (travelHaltAddress.length() == 0)) {
			attractionTravelHaltAppCacheModel.travelHaltAddress = null;
		}

		attractionTravelHaltAppCacheModel.travelHaltTelephone =
			getTravelHaltTelephone();

		String travelHaltTelephone =
			attractionTravelHaltAppCacheModel.travelHaltTelephone;

		if ((travelHaltTelephone != null) &&
			(travelHaltTelephone.length() == 0)) {

			attractionTravelHaltAppCacheModel.travelHaltTelephone = null;
		}

		attractionTravelHaltAppCacheModel.travelHaltEmail =
			getTravelHaltEmail();

		String travelHaltEmail =
			attractionTravelHaltAppCacheModel.travelHaltEmail;

		if ((travelHaltEmail != null) && (travelHaltEmail.length() == 0)) {
			attractionTravelHaltAppCacheModel.travelHaltEmail = null;
		}

		attractionTravelHaltAppCacheModel.travelHaltName = getTravelHaltName();

		String travelHaltName =
			attractionTravelHaltAppCacheModel.travelHaltName;

		if ((travelHaltName != null) && (travelHaltName.length() == 0)) {
			attractionTravelHaltAppCacheModel.travelHaltName = null;
		}

		attractionTravelHaltAppCacheModel.travelHaltLocation =
			getTravelHaltLocation();

		String travelHaltLocation =
			attractionTravelHaltAppCacheModel.travelHaltLocation;

		if ((travelHaltLocation != null) &&
			(travelHaltLocation.length() == 0)) {

			attractionTravelHaltAppCacheModel.travelHaltLocation = null;
		}

		attractionTravelHaltAppCacheModel.travelHaltTelephoneNum =
			getTravelHaltTelephoneNum();

		String travelHaltTelephoneNum =
			attractionTravelHaltAppCacheModel.travelHaltTelephoneNum;

		if ((travelHaltTelephoneNum != null) &&
			(travelHaltTelephoneNum.length() == 0)) {

			attractionTravelHaltAppCacheModel.travelHaltTelephoneNum = null;
		}

		attractionTravelHaltAppCacheModel.travelHaltEmployeesNo =
			getTravelHaltEmployeesNo();

		String travelHaltEmployeesNo =
			attractionTravelHaltAppCacheModel.travelHaltEmployeesNo;

		if ((travelHaltEmployeesNo != null) &&
			(travelHaltEmployeesNo.length() == 0)) {

			attractionTravelHaltAppCacheModel.travelHaltEmployeesNo = null;
		}

		Date travelHaltSignDate = getTravelHaltSignDate();

		if (travelHaltSignDate != null) {
			attractionTravelHaltAppCacheModel.travelHaltSignDate =
				travelHaltSignDate.getTime();
		}
		else {
			attractionTravelHaltAppCacheModel.travelHaltSignDate =
				Long.MIN_VALUE;
		}

		attractionTravelHaltAppCacheModel.gasStation = getGasStation();

		String gasStation = attractionTravelHaltAppCacheModel.gasStation;

		if ((gasStation != null) && (gasStation.length() == 0)) {
			attractionTravelHaltAppCacheModel.gasStation = null;
		}

		attractionTravelHaltAppCacheModel.refreshment = getRefreshment();

		String refreshment = attractionTravelHaltAppCacheModel.refreshment;

		if ((refreshment != null) && (refreshment.length() == 0)) {
			attractionTravelHaltAppCacheModel.refreshment = null;
		}

		attractionTravelHaltAppCacheModel.drinks = getDrinks();

		String drinks = attractionTravelHaltAppCacheModel.drinks;

		if ((drinks != null) && (drinks.length() == 0)) {
			attractionTravelHaltAppCacheModel.drinks = null;
		}

		attractionTravelHaltAppCacheModel.restaurant = getRestaurant();

		String restaurant = attractionTravelHaltAppCacheModel.restaurant;

		if ((restaurant != null) && (restaurant.length() == 0)) {
			attractionTravelHaltAppCacheModel.restaurant = null;
		}

		attractionTravelHaltAppCacheModel.wirelessinternet =
			getWirelessinternet();

		String wirelessinternet =
			attractionTravelHaltAppCacheModel.wirelessinternet;

		if ((wirelessinternet != null) && (wirelessinternet.length() == 0)) {
			attractionTravelHaltAppCacheModel.wirelessinternet = null;
		}

		attractionTravelHaltAppCacheModel.restrooms = getRestrooms();

		String restrooms = attractionTravelHaltAppCacheModel.restrooms;

		if ((restrooms != null) && (restrooms.length() == 0)) {
			attractionTravelHaltAppCacheModel.restrooms = null;
		}

		attractionTravelHaltAppCacheModel.jtbApplicationId =
			getJtbApplicationId();

		return attractionTravelHaltAppCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<AttractionTravelHaltApp, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<AttractionTravelHaltApp, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AttractionTravelHaltApp, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(AttractionTravelHaltApp)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, AttractionTravelHaltApp>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						AttractionTravelHaltApp.class, ModelWrapper.class);

	}

	private long _attractionTravelHaltAppId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _travelHaltApplicantName;
	private String _travelHaltAddress;
	private String _travelHaltTelephone;
	private String _travelHaltEmail;
	private String _travelHaltName;
	private String _travelHaltLocation;
	private String _travelHaltTelephoneNum;
	private String _travelHaltEmployeesNo;
	private Date _travelHaltSignDate;
	private String _gasStation;
	private String _refreshment;
	private String _drinks;
	private String _restaurant;
	private String _wirelessinternet;
	private String _restrooms;
	private long _jtbApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<AttractionTravelHaltApp, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((AttractionTravelHaltApp)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"attractionTravelHaltAppId", _attractionTravelHaltAppId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"travelHaltApplicantName", _travelHaltApplicantName);
		_columnOriginalValues.put("travelHaltAddress", _travelHaltAddress);
		_columnOriginalValues.put("travelHaltTelephone", _travelHaltTelephone);
		_columnOriginalValues.put("travelHaltEmail", _travelHaltEmail);
		_columnOriginalValues.put("travelHaltName", _travelHaltName);
		_columnOriginalValues.put("travelHaltLocation", _travelHaltLocation);
		_columnOriginalValues.put(
			"travelHaltTelephoneNum", _travelHaltTelephoneNum);
		_columnOriginalValues.put(
			"travelHaltEmployeesNo", _travelHaltEmployeesNo);
		_columnOriginalValues.put("travelHaltSignDate", _travelHaltSignDate);
		_columnOriginalValues.put("gasStation", _gasStation);
		_columnOriginalValues.put("refreshment", _refreshment);
		_columnOriginalValues.put("drinks", _drinks);
		_columnOriginalValues.put("restaurant", _restaurant);
		_columnOriginalValues.put("wirelessinternet", _wirelessinternet);
		_columnOriginalValues.put("restrooms", _restrooms);
		_columnOriginalValues.put("jtbApplicationId", _jtbApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("attractionTravelHaltAppId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("travelHaltApplicantName", 128L);

		columnBitmasks.put("travelHaltAddress", 256L);

		columnBitmasks.put("travelHaltTelephone", 512L);

		columnBitmasks.put("travelHaltEmail", 1024L);

		columnBitmasks.put("travelHaltName", 2048L);

		columnBitmasks.put("travelHaltLocation", 4096L);

		columnBitmasks.put("travelHaltTelephoneNum", 8192L);

		columnBitmasks.put("travelHaltEmployeesNo", 16384L);

		columnBitmasks.put("travelHaltSignDate", 32768L);

		columnBitmasks.put("gasStation", 65536L);

		columnBitmasks.put("refreshment", 131072L);

		columnBitmasks.put("drinks", 262144L);

		columnBitmasks.put("restaurant", 524288L);

		columnBitmasks.put("wirelessinternet", 1048576L);

		columnBitmasks.put("restrooms", 2097152L);

		columnBitmasks.put("jtbApplicationId", 4194304L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private AttractionTravelHaltApp _escapedModel;

}