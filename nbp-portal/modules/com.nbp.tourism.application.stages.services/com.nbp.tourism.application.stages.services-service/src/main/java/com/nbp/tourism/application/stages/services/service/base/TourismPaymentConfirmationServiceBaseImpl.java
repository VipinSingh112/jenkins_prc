/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.tourism.application.stages.services.service.base;

import com.liferay.portal.aop.AopService;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.log.Log;
import com.liferay.portal.kernel.log.LogFactoryUtil;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.util.PortalUtil;

import com.nbp.tourism.application.stages.services.model.TourismPaymentConfirmation;
import com.nbp.tourism.application.stages.services.service.TourismPaymentConfirmationService;
import com.nbp.tourism.application.stages.services.service.persistence.TourismApplicationStagesPersistence;
import com.nbp.tourism.application.stages.services.service.persistence.TourismDeskVerificationPersistence;
import com.nbp.tourism.application.stages.services.service.persistence.TourismPaymentConfirmationPersistence;
import com.nbp.tourism.application.stages.services.service.persistence.TourismPermitPersistence;

import javax.sql.DataSource;

import org.osgi.service.component.annotations.Deactivate;
import org.osgi.service.component.annotations.Reference;

/**
 * Provides the base implementation for the tourism payment confirmation remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.nbp.tourism.application.stages.services.service.impl.TourismPaymentConfirmationServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.nbp.tourism.application.stages.services.service.impl.TourismPaymentConfirmationServiceImpl
 * @generated
 */
public abstract class TourismPaymentConfirmationServiceBaseImpl
	extends BaseServiceImpl
	implements AopService, IdentifiableOSGiService,
			   TourismPaymentConfirmationService {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Use <code>TourismPaymentConfirmationService</code> via injection or a <code>org.osgi.util.tracker.ServiceTracker</code> or use <code>com.nbp.tourism.application.stages.services.service.TourismPaymentConfirmationServiceUtil</code>.
	 */
	@Deactivate
	protected void deactivate() {
	}

	@Override
	public Class<?>[] getAopInterfaces() {
		return new Class<?>[] {
			TourismPaymentConfirmationService.class,
			IdentifiableOSGiService.class
		};
	}

	@Override
	public void setAopProxy(Object aopProxy) {
		tourismPaymentConfirmationService =
			(TourismPaymentConfirmationService)aopProxy;
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return TourismPaymentConfirmationService.class.getName();
	}

	protected Class<?> getModelClass() {
		return TourismPaymentConfirmation.class;
	}

	protected String getModelClassName() {
		return TourismPaymentConfirmation.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource =
				tourismPaymentConfirmationPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(
				dataSource, sql);

			sqlUpdate.update();
		}
		catch (Exception exception) {
			throw new SystemException(exception);
		}
	}

	@Reference
	protected TourismApplicationStagesPersistence
		tourismApplicationStagesPersistence;

	@Reference
	protected TourismDeskVerificationPersistence
		tourismDeskVerificationPersistence;

	@Reference
	protected com.nbp.tourism.application.stages.services.service.
		TourismPaymentConfirmationLocalService
			tourismPaymentConfirmationLocalService;

	protected TourismPaymentConfirmationService
		tourismPaymentConfirmationService;

	@Reference
	protected TourismPaymentConfirmationPersistence
		tourismPaymentConfirmationPersistence;

	@Reference
	protected TourismPermitPersistence tourismPermitPersistence;

	@Reference
	protected com.liferay.counter.kernel.service.CounterLocalService
		counterLocalService;

	@Reference
	protected com.liferay.portal.kernel.service.ClassNameLocalService
		classNameLocalService;

	@Reference
	protected com.liferay.portal.kernel.service.ClassNameService
		classNameService;

	@Reference
	protected com.liferay.portal.kernel.service.ResourceLocalService
		resourceLocalService;

	@Reference
	protected com.liferay.portal.kernel.service.UserLocalService
		userLocalService;

	@Reference
	protected com.liferay.portal.kernel.service.UserService userService;

	private static final Log _log = LogFactoryUtil.getLog(
		TourismPaymentConfirmationServiceBaseImpl.class);

}