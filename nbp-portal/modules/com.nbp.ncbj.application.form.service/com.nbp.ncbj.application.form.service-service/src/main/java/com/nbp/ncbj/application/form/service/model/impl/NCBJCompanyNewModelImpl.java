/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.ncbj.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.ncbj.application.form.service.model.NCBJCompanyNew;
import com.nbp.ncbj.application.form.service.model.NCBJCompanyNewModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the NCBJCompanyNew service. Represents a row in the &quot;nbp_ncbj_new_company&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>NCBJCompanyNewModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link NCBJCompanyNewImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see NCBJCompanyNewImpl
 * @generated
 */
@JSON(strict = true)
public class NCBJCompanyNewModelImpl
	extends BaseModelImpl<NCBJCompanyNew> implements NCBJCompanyNewModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ncbj company new model instance should use the <code>NCBJCompanyNew</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_ncbj_new_company";

	public static final Object[][] TABLE_COLUMNS = {
		{"nCBJCompanyNewId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"companyName", Types.VARCHAR},
		{"companyAddress", Types.VARCHAR}, {"headOfCompany", Types.VARCHAR},
		{"jobTitleOne", Types.VARCHAR}, {"companyEmailOne", Types.VARCHAR},
		{"companyNumOne", Types.VARCHAR}, {"contactName", Types.VARCHAR},
		{"jobTitleTwo", Types.VARCHAR}, {"companyEmailTwo", Types.VARCHAR},
		{"companyNumTwo", Types.VARCHAR}, {"ncbjApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("nCBJCompanyNewId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("companyName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("headOfCompany", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("jobTitleOne", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyEmailOne", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyNumOne", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("jobTitleTwo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyEmailTwo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyNumTwo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ncbjApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_ncbj_new_company (nCBJCompanyNewId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,companyName VARCHAR(75) null,companyAddress VARCHAR(75) null,headOfCompany VARCHAR(75) null,jobTitleOne VARCHAR(75) null,companyEmailOne VARCHAR(75) null,companyNumOne VARCHAR(75) null,contactName VARCHAR(75) null,jobTitleTwo VARCHAR(75) null,companyEmailTwo VARCHAR(75) null,companyNumTwo VARCHAR(75) null,ncbjApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_ncbj_new_company";

	public static final String ORDER_BY_JPQL =
		" ORDER BY ncbjCompanyNew.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_ncbj_new_company.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long NCBJAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public NCBJCompanyNewModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _nCBJCompanyNewId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setNCBJCompanyNewId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _nCBJCompanyNewId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return NCBJCompanyNew.class;
	}

	@Override
	public String getModelClassName() {
		return NCBJCompanyNew.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<NCBJCompanyNew, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<NCBJCompanyNew, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<NCBJCompanyNew, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((NCBJCompanyNew)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<NCBJCompanyNew, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<NCBJCompanyNew, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(NCBJCompanyNew)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<NCBJCompanyNew, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<NCBJCompanyNew, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<NCBJCompanyNew, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<NCBJCompanyNew, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<NCBJCompanyNew, Object>>();

			attributeGetterFunctions.put(
				"nCBJCompanyNewId", NCBJCompanyNew::getNCBJCompanyNewId);
			attributeGetterFunctions.put("groupId", NCBJCompanyNew::getGroupId);
			attributeGetterFunctions.put(
				"companyId", NCBJCompanyNew::getCompanyId);
			attributeGetterFunctions.put("userId", NCBJCompanyNew::getUserId);
			attributeGetterFunctions.put(
				"userName", NCBJCompanyNew::getUserName);
			attributeGetterFunctions.put(
				"createDate", NCBJCompanyNew::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", NCBJCompanyNew::getModifiedDate);
			attributeGetterFunctions.put(
				"companyName", NCBJCompanyNew::getCompanyName);
			attributeGetterFunctions.put(
				"companyAddress", NCBJCompanyNew::getCompanyAddress);
			attributeGetterFunctions.put(
				"headOfCompany", NCBJCompanyNew::getHeadOfCompany);
			attributeGetterFunctions.put(
				"jobTitleOne", NCBJCompanyNew::getJobTitleOne);
			attributeGetterFunctions.put(
				"companyEmailOne", NCBJCompanyNew::getCompanyEmailOne);
			attributeGetterFunctions.put(
				"companyNumOne", NCBJCompanyNew::getCompanyNumOne);
			attributeGetterFunctions.put(
				"contactName", NCBJCompanyNew::getContactName);
			attributeGetterFunctions.put(
				"jobTitleTwo", NCBJCompanyNew::getJobTitleTwo);
			attributeGetterFunctions.put(
				"companyEmailTwo", NCBJCompanyNew::getCompanyEmailTwo);
			attributeGetterFunctions.put(
				"companyNumTwo", NCBJCompanyNew::getCompanyNumTwo);
			attributeGetterFunctions.put(
				"ncbjApplicationId", NCBJCompanyNew::getNcbjApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<NCBJCompanyNew, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<NCBJCompanyNew, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap<String, BiConsumer<NCBJCompanyNew, ?>>();

			attributeSetterBiConsumers.put(
				"nCBJCompanyNewId",
				(BiConsumer<NCBJCompanyNew, Long>)
					NCBJCompanyNew::setNCBJCompanyNewId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<NCBJCompanyNew, Long>)NCBJCompanyNew::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<NCBJCompanyNew, Long>)NCBJCompanyNew::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<NCBJCompanyNew, Long>)NCBJCompanyNew::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<NCBJCompanyNew, String>)
					NCBJCompanyNew::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<NCBJCompanyNew, Date>)
					NCBJCompanyNew::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<NCBJCompanyNew, Date>)
					NCBJCompanyNew::setModifiedDate);
			attributeSetterBiConsumers.put(
				"companyName",
				(BiConsumer<NCBJCompanyNew, String>)
					NCBJCompanyNew::setCompanyName);
			attributeSetterBiConsumers.put(
				"companyAddress",
				(BiConsumer<NCBJCompanyNew, String>)
					NCBJCompanyNew::setCompanyAddress);
			attributeSetterBiConsumers.put(
				"headOfCompany",
				(BiConsumer<NCBJCompanyNew, String>)
					NCBJCompanyNew::setHeadOfCompany);
			attributeSetterBiConsumers.put(
				"jobTitleOne",
				(BiConsumer<NCBJCompanyNew, String>)
					NCBJCompanyNew::setJobTitleOne);
			attributeSetterBiConsumers.put(
				"companyEmailOne",
				(BiConsumer<NCBJCompanyNew, String>)
					NCBJCompanyNew::setCompanyEmailOne);
			attributeSetterBiConsumers.put(
				"companyNumOne",
				(BiConsumer<NCBJCompanyNew, String>)
					NCBJCompanyNew::setCompanyNumOne);
			attributeSetterBiConsumers.put(
				"contactName",
				(BiConsumer<NCBJCompanyNew, String>)
					NCBJCompanyNew::setContactName);
			attributeSetterBiConsumers.put(
				"jobTitleTwo",
				(BiConsumer<NCBJCompanyNew, String>)
					NCBJCompanyNew::setJobTitleTwo);
			attributeSetterBiConsumers.put(
				"companyEmailTwo",
				(BiConsumer<NCBJCompanyNew, String>)
					NCBJCompanyNew::setCompanyEmailTwo);
			attributeSetterBiConsumers.put(
				"companyNumTwo",
				(BiConsumer<NCBJCompanyNew, String>)
					NCBJCompanyNew::setCompanyNumTwo);
			attributeSetterBiConsumers.put(
				"ncbjApplicationId",
				(BiConsumer<NCBJCompanyNew, Long>)
					NCBJCompanyNew::setNcbjApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getNCBJCompanyNewId() {
		return _nCBJCompanyNewId;
	}

	@Override
	public void setNCBJCompanyNewId(long nCBJCompanyNewId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nCBJCompanyNewId = nCBJCompanyNewId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getCompanyName() {
		if (_companyName == null) {
			return "";
		}
		else {
			return _companyName;
		}
	}

	@Override
	public void setCompanyName(String companyName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyName = companyName;
	}

	@JSON
	@Override
	public String getCompanyAddress() {
		if (_companyAddress == null) {
			return "";
		}
		else {
			return _companyAddress;
		}
	}

	@Override
	public void setCompanyAddress(String companyAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyAddress = companyAddress;
	}

	@JSON
	@Override
	public String getHeadOfCompany() {
		if (_headOfCompany == null) {
			return "";
		}
		else {
			return _headOfCompany;
		}
	}

	@Override
	public void setHeadOfCompany(String headOfCompany) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_headOfCompany = headOfCompany;
	}

	@JSON
	@Override
	public String getJobTitleOne() {
		if (_jobTitleOne == null) {
			return "";
		}
		else {
			return _jobTitleOne;
		}
	}

	@Override
	public void setJobTitleOne(String jobTitleOne) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_jobTitleOne = jobTitleOne;
	}

	@JSON
	@Override
	public String getCompanyEmailOne() {
		if (_companyEmailOne == null) {
			return "";
		}
		else {
			return _companyEmailOne;
		}
	}

	@Override
	public void setCompanyEmailOne(String companyEmailOne) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyEmailOne = companyEmailOne;
	}

	@JSON
	@Override
	public String getCompanyNumOne() {
		if (_companyNumOne == null) {
			return "";
		}
		else {
			return _companyNumOne;
		}
	}

	@Override
	public void setCompanyNumOne(String companyNumOne) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyNumOne = companyNumOne;
	}

	@JSON
	@Override
	public String getContactName() {
		if (_contactName == null) {
			return "";
		}
		else {
			return _contactName;
		}
	}

	@Override
	public void setContactName(String contactName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactName = contactName;
	}

	@JSON
	@Override
	public String getJobTitleTwo() {
		if (_jobTitleTwo == null) {
			return "";
		}
		else {
			return _jobTitleTwo;
		}
	}

	@Override
	public void setJobTitleTwo(String jobTitleTwo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_jobTitleTwo = jobTitleTwo;
	}

	@JSON
	@Override
	public String getCompanyEmailTwo() {
		if (_companyEmailTwo == null) {
			return "";
		}
		else {
			return _companyEmailTwo;
		}
	}

	@Override
	public void setCompanyEmailTwo(String companyEmailTwo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyEmailTwo = companyEmailTwo;
	}

	@JSON
	@Override
	public String getCompanyNumTwo() {
		if (_companyNumTwo == null) {
			return "";
		}
		else {
			return _companyNumTwo;
		}
	}

	@Override
	public void setCompanyNumTwo(String companyNumTwo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyNumTwo = companyNumTwo;
	}

	@JSON
	@Override
	public long getNcbjApplicationId() {
		return _ncbjApplicationId;
	}

	@Override
	public void setNcbjApplicationId(long ncbjApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ncbjApplicationId = ncbjApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalNcbjApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("ncbjApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), NCBJCompanyNew.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public NCBJCompanyNew toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, NCBJCompanyNew>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		NCBJCompanyNewImpl ncbjCompanyNewImpl = new NCBJCompanyNewImpl();

		ncbjCompanyNewImpl.setNCBJCompanyNewId(getNCBJCompanyNewId());
		ncbjCompanyNewImpl.setGroupId(getGroupId());
		ncbjCompanyNewImpl.setCompanyId(getCompanyId());
		ncbjCompanyNewImpl.setUserId(getUserId());
		ncbjCompanyNewImpl.setUserName(getUserName());
		ncbjCompanyNewImpl.setCreateDate(getCreateDate());
		ncbjCompanyNewImpl.setModifiedDate(getModifiedDate());
		ncbjCompanyNewImpl.setCompanyName(getCompanyName());
		ncbjCompanyNewImpl.setCompanyAddress(getCompanyAddress());
		ncbjCompanyNewImpl.setHeadOfCompany(getHeadOfCompany());
		ncbjCompanyNewImpl.setJobTitleOne(getJobTitleOne());
		ncbjCompanyNewImpl.setCompanyEmailOne(getCompanyEmailOne());
		ncbjCompanyNewImpl.setCompanyNumOne(getCompanyNumOne());
		ncbjCompanyNewImpl.setContactName(getContactName());
		ncbjCompanyNewImpl.setJobTitleTwo(getJobTitleTwo());
		ncbjCompanyNewImpl.setCompanyEmailTwo(getCompanyEmailTwo());
		ncbjCompanyNewImpl.setCompanyNumTwo(getCompanyNumTwo());
		ncbjCompanyNewImpl.setNcbjApplicationId(getNcbjApplicationId());

		ncbjCompanyNewImpl.resetOriginalValues();

		return ncbjCompanyNewImpl;
	}

	@Override
	public NCBJCompanyNew cloneWithOriginalValues() {
		NCBJCompanyNewImpl ncbjCompanyNewImpl = new NCBJCompanyNewImpl();

		ncbjCompanyNewImpl.setNCBJCompanyNewId(
			this.<Long>getColumnOriginalValue("nCBJCompanyNewId"));
		ncbjCompanyNewImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		ncbjCompanyNewImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		ncbjCompanyNewImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		ncbjCompanyNewImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		ncbjCompanyNewImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		ncbjCompanyNewImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		ncbjCompanyNewImpl.setCompanyName(
			this.<String>getColumnOriginalValue("companyName"));
		ncbjCompanyNewImpl.setCompanyAddress(
			this.<String>getColumnOriginalValue("companyAddress"));
		ncbjCompanyNewImpl.setHeadOfCompany(
			this.<String>getColumnOriginalValue("headOfCompany"));
		ncbjCompanyNewImpl.setJobTitleOne(
			this.<String>getColumnOriginalValue("jobTitleOne"));
		ncbjCompanyNewImpl.setCompanyEmailOne(
			this.<String>getColumnOriginalValue("companyEmailOne"));
		ncbjCompanyNewImpl.setCompanyNumOne(
			this.<String>getColumnOriginalValue("companyNumOne"));
		ncbjCompanyNewImpl.setContactName(
			this.<String>getColumnOriginalValue("contactName"));
		ncbjCompanyNewImpl.setJobTitleTwo(
			this.<String>getColumnOriginalValue("jobTitleTwo"));
		ncbjCompanyNewImpl.setCompanyEmailTwo(
			this.<String>getColumnOriginalValue("companyEmailTwo"));
		ncbjCompanyNewImpl.setCompanyNumTwo(
			this.<String>getColumnOriginalValue("companyNumTwo"));
		ncbjCompanyNewImpl.setNcbjApplicationId(
			this.<Long>getColumnOriginalValue("ncbjApplicationId"));

		return ncbjCompanyNewImpl;
	}

	@Override
	public int compareTo(NCBJCompanyNew ncbjCompanyNew) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), ncbjCompanyNew.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof NCBJCompanyNew)) {
			return false;
		}

		NCBJCompanyNew ncbjCompanyNew = (NCBJCompanyNew)object;

		long primaryKey = ncbjCompanyNew.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<NCBJCompanyNew> toCacheModel() {
		NCBJCompanyNewCacheModel ncbjCompanyNewCacheModel =
			new NCBJCompanyNewCacheModel();

		ncbjCompanyNewCacheModel.nCBJCompanyNewId = getNCBJCompanyNewId();

		ncbjCompanyNewCacheModel.groupId = getGroupId();

		ncbjCompanyNewCacheModel.companyId = getCompanyId();

		ncbjCompanyNewCacheModel.userId = getUserId();

		ncbjCompanyNewCacheModel.userName = getUserName();

		String userName = ncbjCompanyNewCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			ncbjCompanyNewCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			ncbjCompanyNewCacheModel.createDate = createDate.getTime();
		}
		else {
			ncbjCompanyNewCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			ncbjCompanyNewCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			ncbjCompanyNewCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		ncbjCompanyNewCacheModel.companyName = getCompanyName();

		String companyName = ncbjCompanyNewCacheModel.companyName;

		if ((companyName != null) && (companyName.length() == 0)) {
			ncbjCompanyNewCacheModel.companyName = null;
		}

		ncbjCompanyNewCacheModel.companyAddress = getCompanyAddress();

		String companyAddress = ncbjCompanyNewCacheModel.companyAddress;

		if ((companyAddress != null) && (companyAddress.length() == 0)) {
			ncbjCompanyNewCacheModel.companyAddress = null;
		}

		ncbjCompanyNewCacheModel.headOfCompany = getHeadOfCompany();

		String headOfCompany = ncbjCompanyNewCacheModel.headOfCompany;

		if ((headOfCompany != null) && (headOfCompany.length() == 0)) {
			ncbjCompanyNewCacheModel.headOfCompany = null;
		}

		ncbjCompanyNewCacheModel.jobTitleOne = getJobTitleOne();

		String jobTitleOne = ncbjCompanyNewCacheModel.jobTitleOne;

		if ((jobTitleOne != null) && (jobTitleOne.length() == 0)) {
			ncbjCompanyNewCacheModel.jobTitleOne = null;
		}

		ncbjCompanyNewCacheModel.companyEmailOne = getCompanyEmailOne();

		String companyEmailOne = ncbjCompanyNewCacheModel.companyEmailOne;

		if ((companyEmailOne != null) && (companyEmailOne.length() == 0)) {
			ncbjCompanyNewCacheModel.companyEmailOne = null;
		}

		ncbjCompanyNewCacheModel.companyNumOne = getCompanyNumOne();

		String companyNumOne = ncbjCompanyNewCacheModel.companyNumOne;

		if ((companyNumOne != null) && (companyNumOne.length() == 0)) {
			ncbjCompanyNewCacheModel.companyNumOne = null;
		}

		ncbjCompanyNewCacheModel.contactName = getContactName();

		String contactName = ncbjCompanyNewCacheModel.contactName;

		if ((contactName != null) && (contactName.length() == 0)) {
			ncbjCompanyNewCacheModel.contactName = null;
		}

		ncbjCompanyNewCacheModel.jobTitleTwo = getJobTitleTwo();

		String jobTitleTwo = ncbjCompanyNewCacheModel.jobTitleTwo;

		if ((jobTitleTwo != null) && (jobTitleTwo.length() == 0)) {
			ncbjCompanyNewCacheModel.jobTitleTwo = null;
		}

		ncbjCompanyNewCacheModel.companyEmailTwo = getCompanyEmailTwo();

		String companyEmailTwo = ncbjCompanyNewCacheModel.companyEmailTwo;

		if ((companyEmailTwo != null) && (companyEmailTwo.length() == 0)) {
			ncbjCompanyNewCacheModel.companyEmailTwo = null;
		}

		ncbjCompanyNewCacheModel.companyNumTwo = getCompanyNumTwo();

		String companyNumTwo = ncbjCompanyNewCacheModel.companyNumTwo;

		if ((companyNumTwo != null) && (companyNumTwo.length() == 0)) {
			ncbjCompanyNewCacheModel.companyNumTwo = null;
		}

		ncbjCompanyNewCacheModel.ncbjApplicationId = getNcbjApplicationId();

		return ncbjCompanyNewCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<NCBJCompanyNew, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<NCBJCompanyNew, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<NCBJCompanyNew, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((NCBJCompanyNew)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, NCBJCompanyNew>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					NCBJCompanyNew.class, ModelWrapper.class);

	}

	private long _nCBJCompanyNewId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _companyName;
	private String _companyAddress;
	private String _headOfCompany;
	private String _jobTitleOne;
	private String _companyEmailOne;
	private String _companyNumOne;
	private String _contactName;
	private String _jobTitleTwo;
	private String _companyEmailTwo;
	private String _companyNumTwo;
	private long _ncbjApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<NCBJCompanyNew, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((NCBJCompanyNew)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("nCBJCompanyNewId", _nCBJCompanyNewId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("companyName", _companyName);
		_columnOriginalValues.put("companyAddress", _companyAddress);
		_columnOriginalValues.put("headOfCompany", _headOfCompany);
		_columnOriginalValues.put("jobTitleOne", _jobTitleOne);
		_columnOriginalValues.put("companyEmailOne", _companyEmailOne);
		_columnOriginalValues.put("companyNumOne", _companyNumOne);
		_columnOriginalValues.put("contactName", _contactName);
		_columnOriginalValues.put("jobTitleTwo", _jobTitleTwo);
		_columnOriginalValues.put("companyEmailTwo", _companyEmailTwo);
		_columnOriginalValues.put("companyNumTwo", _companyNumTwo);
		_columnOriginalValues.put("ncbjApplicationId", _ncbjApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("nCBJCompanyNewId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("companyName", 128L);

		columnBitmasks.put("companyAddress", 256L);

		columnBitmasks.put("headOfCompany", 512L);

		columnBitmasks.put("jobTitleOne", 1024L);

		columnBitmasks.put("companyEmailOne", 2048L);

		columnBitmasks.put("companyNumOne", 4096L);

		columnBitmasks.put("contactName", 8192L);

		columnBitmasks.put("jobTitleTwo", 16384L);

		columnBitmasks.put("companyEmailTwo", 32768L);

		columnBitmasks.put("companyNumTwo", 65536L);

		columnBitmasks.put("ncbjApplicationId", 131072L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private NCBJCompanyNew _escapedModel;

}