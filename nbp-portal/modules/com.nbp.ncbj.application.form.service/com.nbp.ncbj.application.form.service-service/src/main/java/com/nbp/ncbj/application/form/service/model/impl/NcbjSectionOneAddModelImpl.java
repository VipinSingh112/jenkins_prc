/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.ncbj.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.ncbj.application.form.service.model.NcbjSectionOneAdd;
import com.nbp.ncbj.application.form.service.model.NcbjSectionOneAddModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the NcbjSectionOneAdd service. Represents a row in the &quot;nbp_ncbj_section_one_add&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>NcbjSectionOneAddModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link NcbjSectionOneAddImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see NcbjSectionOneAddImpl
 * @generated
 */
@JSON(strict = true)
public class NcbjSectionOneAddModelImpl
	extends BaseModelImpl<NcbjSectionOneAdd> implements NcbjSectionOneAddModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ncbj section one add model instance should use the <code>NcbjSectionOneAdd</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_ncbj_section_one_add";

	public static final Object[][] TABLE_COLUMNS = {
		{"ncbjSectionOneAddId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"headOfCompanyName", Types.VARCHAR},
		{"JobTitle", Types.VARCHAR}, {"eMeilAddress", Types.TIMESTAMP},
		{"telephoneNumber", Types.TIMESTAMP}, {"contactName", Types.TIMESTAMP},
		{"contactNameJobTitle", Types.TIMESTAMP},
		{"contactNameEmailAddress", Types.TIMESTAMP},
		{"contactNameTelephoneNum ", Types.TIMESTAMP},
		{"ncbjApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ncbjSectionOneAddId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("headOfCompanyName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("JobTitle", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("eMeilAddress", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("telephoneNumber", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("contactName", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("contactNameJobTitle", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("contactNameEmailAddress", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("contactNameTelephoneNum ", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ncbjApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_ncbj_section_one_add (ncbjSectionOneAddId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,headOfCompanyName VARCHAR(75) null,JobTitle VARCHAR(75) null,eMeilAddress DATE null,telephoneNumber DATE null,contactName DATE null,contactNameJobTitle DATE null,contactNameEmailAddress DATE null,contactNameTelephoneNum  DATE null,ncbjApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_ncbj_section_one_add";

	public static final String ORDER_BY_JPQL =
		" ORDER BY ncbjSectionOneAdd.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_ncbj_section_one_add.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long NCBJAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public NcbjSectionOneAddModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _ncbjSectionOneAddId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setNcbjSectionOneAddId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ncbjSectionOneAddId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return NcbjSectionOneAdd.class;
	}

	@Override
	public String getModelClassName() {
		return NcbjSectionOneAdd.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<NcbjSectionOneAdd, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<NcbjSectionOneAdd, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<NcbjSectionOneAdd, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((NcbjSectionOneAdd)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<NcbjSectionOneAdd, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<NcbjSectionOneAdd, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(NcbjSectionOneAdd)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<NcbjSectionOneAdd, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<NcbjSectionOneAdd, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<NcbjSectionOneAdd, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<NcbjSectionOneAdd, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<NcbjSectionOneAdd, Object>>();

			attributeGetterFunctions.put(
				"ncbjSectionOneAddId",
				NcbjSectionOneAdd::getNcbjSectionOneAddId);
			attributeGetterFunctions.put(
				"groupId", NcbjSectionOneAdd::getGroupId);
			attributeGetterFunctions.put(
				"companyId", NcbjSectionOneAdd::getCompanyId);
			attributeGetterFunctions.put(
				"userId", NcbjSectionOneAdd::getUserId);
			attributeGetterFunctions.put(
				"userName", NcbjSectionOneAdd::getUserName);
			attributeGetterFunctions.put(
				"createDate", NcbjSectionOneAdd::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", NcbjSectionOneAdd::getModifiedDate);
			attributeGetterFunctions.put(
				"headOfCompanyName", NcbjSectionOneAdd::getHeadOfCompanyName);
			attributeGetterFunctions.put(
				"JobTitle", NcbjSectionOneAdd::getJobTitle);
			attributeGetterFunctions.put(
				"eMeilAddress", NcbjSectionOneAdd::getEMeilAddress);
			attributeGetterFunctions.put(
				"telephoneNumber", NcbjSectionOneAdd::getTelephoneNumber);
			attributeGetterFunctions.put(
				"contactName", NcbjSectionOneAdd::getContactName);
			attributeGetterFunctions.put(
				"contactNameJobTitle",
				NcbjSectionOneAdd::getContactNameJobTitle);
			attributeGetterFunctions.put(
				"contactNameEmailAddress",
				NcbjSectionOneAdd::getContactNameEmailAddress);
			attributeGetterFunctions.put(
				"contactNameTelephoneNum ",
				NcbjSectionOneAdd::getContactNameTelephoneNum);
			attributeGetterFunctions.put(
				"ncbjApplicationId", NcbjSectionOneAdd::getNcbjApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<NcbjSectionOneAdd, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<NcbjSectionOneAdd, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<NcbjSectionOneAdd, ?>>();

			attributeSetterBiConsumers.put(
				"ncbjSectionOneAddId",
				(BiConsumer<NcbjSectionOneAdd, Long>)
					NcbjSectionOneAdd::setNcbjSectionOneAddId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<NcbjSectionOneAdd, Long>)
					NcbjSectionOneAdd::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<NcbjSectionOneAdd, Long>)
					NcbjSectionOneAdd::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<NcbjSectionOneAdd, Long>)
					NcbjSectionOneAdd::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<NcbjSectionOneAdd, String>)
					NcbjSectionOneAdd::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<NcbjSectionOneAdd, Date>)
					NcbjSectionOneAdd::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<NcbjSectionOneAdd, Date>)
					NcbjSectionOneAdd::setModifiedDate);
			attributeSetterBiConsumers.put(
				"headOfCompanyName",
				(BiConsumer<NcbjSectionOneAdd, String>)
					NcbjSectionOneAdd::setHeadOfCompanyName);
			attributeSetterBiConsumers.put(
				"JobTitle",
				(BiConsumer<NcbjSectionOneAdd, String>)
					NcbjSectionOneAdd::setJobTitle);
			attributeSetterBiConsumers.put(
				"eMeilAddress",
				(BiConsumer<NcbjSectionOneAdd, Date>)
					NcbjSectionOneAdd::setEMeilAddress);
			attributeSetterBiConsumers.put(
				"telephoneNumber",
				(BiConsumer<NcbjSectionOneAdd, Date>)
					NcbjSectionOneAdd::setTelephoneNumber);
			attributeSetterBiConsumers.put(
				"contactName",
				(BiConsumer<NcbjSectionOneAdd, Date>)
					NcbjSectionOneAdd::setContactName);
			attributeSetterBiConsumers.put(
				"contactNameJobTitle",
				(BiConsumer<NcbjSectionOneAdd, Date>)
					NcbjSectionOneAdd::setContactNameJobTitle);
			attributeSetterBiConsumers.put(
				"contactNameEmailAddress",
				(BiConsumer<NcbjSectionOneAdd, Date>)
					NcbjSectionOneAdd::setContactNameEmailAddress);
			attributeSetterBiConsumers.put(
				"contactNameTelephoneNum ",
				(BiConsumer<NcbjSectionOneAdd, Date>)
					NcbjSectionOneAdd::setContactNameTelephoneNum);
			attributeSetterBiConsumers.put(
				"ncbjApplicationId",
				(BiConsumer<NcbjSectionOneAdd, Long>)
					NcbjSectionOneAdd::setNcbjApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getNcbjSectionOneAddId() {
		return _ncbjSectionOneAddId;
	}

	@Override
	public void setNcbjSectionOneAddId(long ncbjSectionOneAddId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ncbjSectionOneAddId = ncbjSectionOneAddId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getHeadOfCompanyName() {
		if (_headOfCompanyName == null) {
			return "";
		}
		else {
			return _headOfCompanyName;
		}
	}

	@Override
	public void setHeadOfCompanyName(String headOfCompanyName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_headOfCompanyName = headOfCompanyName;
	}

	@JSON
	@Override
	public String getJobTitle() {
		if (_JobTitle == null) {
			return "";
		}
		else {
			return _JobTitle;
		}
	}

	@Override
	public void setJobTitle(String JobTitle) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_JobTitle = JobTitle;
	}

	@JSON
	@Override
	public Date getEMeilAddress() {
		return _eMeilAddress;
	}

	@Override
	public void setEMeilAddress(Date eMeilAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_eMeilAddress = eMeilAddress;
	}

	@JSON
	@Override
	public Date getTelephoneNumber() {
		return _telephoneNumber;
	}

	@Override
	public void setTelephoneNumber(Date telephoneNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_telephoneNumber = telephoneNumber;
	}

	@JSON
	@Override
	public Date getContactName() {
		return _contactName;
	}

	@Override
	public void setContactName(Date contactName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactName = contactName;
	}

	@JSON
	@Override
	public Date getContactNameJobTitle() {
		return _contactNameJobTitle;
	}

	@Override
	public void setContactNameJobTitle(Date contactNameJobTitle) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactNameJobTitle = contactNameJobTitle;
	}

	@JSON
	@Override
	public Date getContactNameEmailAddress() {
		return _contactNameEmailAddress;
	}

	@Override
	public void setContactNameEmailAddress(Date contactNameEmailAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactNameEmailAddress = contactNameEmailAddress;
	}

	@JSON
	@Override
	public Date getContactNameTelephoneNum() {
		return _contactNameTelephoneNum;
	}

	@Override
	public void setContactNameTelephoneNum(Date contactNameTelephoneNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactNameTelephoneNum = contactNameTelephoneNum;
	}

	@JSON
	@Override
	public long getNcbjApplicationId() {
		return _ncbjApplicationId;
	}

	@Override
	public void setNcbjApplicationId(long ncbjApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ncbjApplicationId = ncbjApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalNcbjApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("ncbjApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), NcbjSectionOneAdd.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public NcbjSectionOneAdd toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, NcbjSectionOneAdd>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		NcbjSectionOneAddImpl ncbjSectionOneAddImpl =
			new NcbjSectionOneAddImpl();

		ncbjSectionOneAddImpl.setNcbjSectionOneAddId(getNcbjSectionOneAddId());
		ncbjSectionOneAddImpl.setGroupId(getGroupId());
		ncbjSectionOneAddImpl.setCompanyId(getCompanyId());
		ncbjSectionOneAddImpl.setUserId(getUserId());
		ncbjSectionOneAddImpl.setUserName(getUserName());
		ncbjSectionOneAddImpl.setCreateDate(getCreateDate());
		ncbjSectionOneAddImpl.setModifiedDate(getModifiedDate());
		ncbjSectionOneAddImpl.setHeadOfCompanyName(getHeadOfCompanyName());
		ncbjSectionOneAddImpl.setJobTitle(getJobTitle());
		ncbjSectionOneAddImpl.setEMeilAddress(getEMeilAddress());
		ncbjSectionOneAddImpl.setTelephoneNumber(getTelephoneNumber());
		ncbjSectionOneAddImpl.setContactName(getContactName());
		ncbjSectionOneAddImpl.setContactNameJobTitle(getContactNameJobTitle());
		ncbjSectionOneAddImpl.setContactNameEmailAddress(
			getContactNameEmailAddress());
		ncbjSectionOneAddImpl.setContactNameTelephoneNum(
			getContactNameTelephoneNum());
		ncbjSectionOneAddImpl.setNcbjApplicationId(getNcbjApplicationId());

		ncbjSectionOneAddImpl.resetOriginalValues();

		return ncbjSectionOneAddImpl;
	}

	@Override
	public NcbjSectionOneAdd cloneWithOriginalValues() {
		NcbjSectionOneAddImpl ncbjSectionOneAddImpl =
			new NcbjSectionOneAddImpl();

		ncbjSectionOneAddImpl.setNcbjSectionOneAddId(
			this.<Long>getColumnOriginalValue("ncbjSectionOneAddId"));
		ncbjSectionOneAddImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		ncbjSectionOneAddImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		ncbjSectionOneAddImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		ncbjSectionOneAddImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		ncbjSectionOneAddImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		ncbjSectionOneAddImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		ncbjSectionOneAddImpl.setHeadOfCompanyName(
			this.<String>getColumnOriginalValue("headOfCompanyName"));
		ncbjSectionOneAddImpl.setJobTitle(
			this.<String>getColumnOriginalValue("JobTitle"));
		ncbjSectionOneAddImpl.setEMeilAddress(
			this.<Date>getColumnOriginalValue("eMeilAddress"));
		ncbjSectionOneAddImpl.setTelephoneNumber(
			this.<Date>getColumnOriginalValue("telephoneNumber"));
		ncbjSectionOneAddImpl.setContactName(
			this.<Date>getColumnOriginalValue("contactName"));
		ncbjSectionOneAddImpl.setContactNameJobTitle(
			this.<Date>getColumnOriginalValue("contactNameJobTitle"));
		ncbjSectionOneAddImpl.setContactNameEmailAddress(
			this.<Date>getColumnOriginalValue("contactNameEmailAddress"));
		ncbjSectionOneAddImpl.setContactNameTelephoneNum(
			this.<Date>getColumnOriginalValue("contactNameTelephoneNum "));
		ncbjSectionOneAddImpl.setNcbjApplicationId(
			this.<Long>getColumnOriginalValue("ncbjApplicationId"));

		return ncbjSectionOneAddImpl;
	}

	@Override
	public int compareTo(NcbjSectionOneAdd ncbjSectionOneAdd) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), ncbjSectionOneAdd.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof NcbjSectionOneAdd)) {
			return false;
		}

		NcbjSectionOneAdd ncbjSectionOneAdd = (NcbjSectionOneAdd)object;

		long primaryKey = ncbjSectionOneAdd.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<NcbjSectionOneAdd> toCacheModel() {
		NcbjSectionOneAddCacheModel ncbjSectionOneAddCacheModel =
			new NcbjSectionOneAddCacheModel();

		ncbjSectionOneAddCacheModel.ncbjSectionOneAddId =
			getNcbjSectionOneAddId();

		ncbjSectionOneAddCacheModel.groupId = getGroupId();

		ncbjSectionOneAddCacheModel.companyId = getCompanyId();

		ncbjSectionOneAddCacheModel.userId = getUserId();

		ncbjSectionOneAddCacheModel.userName = getUserName();

		String userName = ncbjSectionOneAddCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			ncbjSectionOneAddCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			ncbjSectionOneAddCacheModel.createDate = createDate.getTime();
		}
		else {
			ncbjSectionOneAddCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			ncbjSectionOneAddCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			ncbjSectionOneAddCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		ncbjSectionOneAddCacheModel.headOfCompanyName = getHeadOfCompanyName();

		String headOfCompanyName =
			ncbjSectionOneAddCacheModel.headOfCompanyName;

		if ((headOfCompanyName != null) && (headOfCompanyName.length() == 0)) {
			ncbjSectionOneAddCacheModel.headOfCompanyName = null;
		}

		ncbjSectionOneAddCacheModel.JobTitle = getJobTitle();

		String JobTitle = ncbjSectionOneAddCacheModel.JobTitle;

		if ((JobTitle != null) && (JobTitle.length() == 0)) {
			ncbjSectionOneAddCacheModel.JobTitle = null;
		}

		Date eMeilAddress = getEMeilAddress();

		if (eMeilAddress != null) {
			ncbjSectionOneAddCacheModel.eMeilAddress = eMeilAddress.getTime();
		}
		else {
			ncbjSectionOneAddCacheModel.eMeilAddress = Long.MIN_VALUE;
		}

		Date telephoneNumber = getTelephoneNumber();

		if (telephoneNumber != null) {
			ncbjSectionOneAddCacheModel.telephoneNumber =
				telephoneNumber.getTime();
		}
		else {
			ncbjSectionOneAddCacheModel.telephoneNumber = Long.MIN_VALUE;
		}

		Date contactName = getContactName();

		if (contactName != null) {
			ncbjSectionOneAddCacheModel.contactName = contactName.getTime();
		}
		else {
			ncbjSectionOneAddCacheModel.contactName = Long.MIN_VALUE;
		}

		Date contactNameJobTitle = getContactNameJobTitle();

		if (contactNameJobTitle != null) {
			ncbjSectionOneAddCacheModel.contactNameJobTitle =
				contactNameJobTitle.getTime();
		}
		else {
			ncbjSectionOneAddCacheModel.contactNameJobTitle = Long.MIN_VALUE;
		}

		Date contactNameEmailAddress = getContactNameEmailAddress();

		if (contactNameEmailAddress != null) {
			ncbjSectionOneAddCacheModel.contactNameEmailAddress =
				contactNameEmailAddress.getTime();
		}
		else {
			ncbjSectionOneAddCacheModel.contactNameEmailAddress =
				Long.MIN_VALUE;
		}

		Date contactNameTelephoneNum = getContactNameTelephoneNum();

		if (contactNameTelephoneNum != null) {
			ncbjSectionOneAddCacheModel.contactNameTelephoneNum =
				contactNameTelephoneNum.getTime();
		}
		else {
			ncbjSectionOneAddCacheModel.contactNameTelephoneNum =
				Long.MIN_VALUE;
		}

		ncbjSectionOneAddCacheModel.ncbjApplicationId = getNcbjApplicationId();

		return ncbjSectionOneAddCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<NcbjSectionOneAdd, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<NcbjSectionOneAdd, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<NcbjSectionOneAdd, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(NcbjSectionOneAdd)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, NcbjSectionOneAdd>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					NcbjSectionOneAdd.class, ModelWrapper.class);

	}

	private long _ncbjSectionOneAddId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _headOfCompanyName;
	private String _JobTitle;
	private Date _eMeilAddress;
	private Date _telephoneNumber;
	private Date _contactName;
	private Date _contactNameJobTitle;
	private Date _contactNameEmailAddress;
	private Date _contactNameTelephoneNum;
	private long _ncbjApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<NcbjSectionOneAdd, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((NcbjSectionOneAdd)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("ncbjSectionOneAddId", _ncbjSectionOneAddId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("headOfCompanyName", _headOfCompanyName);
		_columnOriginalValues.put("JobTitle", _JobTitle);
		_columnOriginalValues.put("eMeilAddress", _eMeilAddress);
		_columnOriginalValues.put("telephoneNumber", _telephoneNumber);
		_columnOriginalValues.put("contactName", _contactName);
		_columnOriginalValues.put("contactNameJobTitle", _contactNameJobTitle);
		_columnOriginalValues.put(
			"contactNameEmailAddress", _contactNameEmailAddress);
		_columnOriginalValues.put(
			"contactNameTelephoneNum ", _contactNameTelephoneNum);
		_columnOriginalValues.put("ncbjApplicationId", _ncbjApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("ncbjSectionOneAddId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("headOfCompanyName", 128L);

		columnBitmasks.put("JobTitle", 256L);

		columnBitmasks.put("eMeilAddress", 512L);

		columnBitmasks.put("telephoneNumber", 1024L);

		columnBitmasks.put("contactName", 2048L);

		columnBitmasks.put("contactNameJobTitle", 4096L);

		columnBitmasks.put("contactNameEmailAddress", 8192L);

		columnBitmasks.put("contactNameTelephoneNum ", 16384L);

		columnBitmasks.put("ncbjApplicationId", 32768L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private NcbjSectionOneAdd _escapedModel;

}