/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.ncbj.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.ncbj.application.form.service.model.NcbjCompanyDetail;
import com.nbp.ncbj.application.form.service.model.NcbjCompanyDetailModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the NcbjCompanyDetail service. Represents a row in the &quot;nbp_ncbj_company_detail&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>NcbjCompanyDetailModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link NcbjCompanyDetailImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see NcbjCompanyDetailImpl
 * @generated
 */
@JSON(strict = true)
public class NcbjCompanyDetailModelImpl
	extends BaseModelImpl<NcbjCompanyDetail> implements NcbjCompanyDetailModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ncbj company detail model instance should use the <code>NcbjCompanyDetail</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_ncbj_company_detail";

	public static final Object[][] TABLE_COLUMNS = {
		{"ncbjCompanyDetailId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP},
		{"companyNameOrHeadOffice", Types.VARCHAR},
		{"companyAddress", Types.VARCHAR}, {"stageOne", Types.TIMESTAMP},
		{"stageTwo", Types.TIMESTAMP}, {"surveillanceAudit", Types.TIMESTAMP},
		{"recertificationAudit", Types.TIMESTAMP},
		{"preAassessmentAudit", Types.TIMESTAMP},
		{"anyOtherService ", Types.TIMESTAMP},
		{"ncbjApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ncbjCompanyDetailId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("companyNameOrHeadOffice", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("stageOne", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("stageTwo", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("surveillanceAudit", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("recertificationAudit", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("preAassessmentAudit", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("anyOtherService ", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ncbjApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_ncbj_company_detail (ncbjCompanyDetailId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,companyNameOrHeadOffice VARCHAR(75) null,companyAddress VARCHAR(500) null,stageOne DATE null,stageTwo DATE null,surveillanceAudit DATE null,recertificationAudit DATE null,preAassessmentAudit DATE null,anyOtherService  DATE null,ncbjApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_ncbj_company_detail";

	public static final String ORDER_BY_JPQL =
		" ORDER BY ncbjCompanyDetail.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_ncbj_company_detail.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long NCBJAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public NcbjCompanyDetailModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _ncbjCompanyDetailId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setNcbjCompanyDetailId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ncbjCompanyDetailId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return NcbjCompanyDetail.class;
	}

	@Override
	public String getModelClassName() {
		return NcbjCompanyDetail.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<NcbjCompanyDetail, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<NcbjCompanyDetail, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<NcbjCompanyDetail, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((NcbjCompanyDetail)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<NcbjCompanyDetail, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<NcbjCompanyDetail, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(NcbjCompanyDetail)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<NcbjCompanyDetail, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<NcbjCompanyDetail, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<NcbjCompanyDetail, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<NcbjCompanyDetail, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<NcbjCompanyDetail, Object>>();

			attributeGetterFunctions.put(
				"ncbjCompanyDetailId",
				NcbjCompanyDetail::getNcbjCompanyDetailId);
			attributeGetterFunctions.put(
				"groupId", NcbjCompanyDetail::getGroupId);
			attributeGetterFunctions.put(
				"companyId", NcbjCompanyDetail::getCompanyId);
			attributeGetterFunctions.put(
				"userId", NcbjCompanyDetail::getUserId);
			attributeGetterFunctions.put(
				"userName", NcbjCompanyDetail::getUserName);
			attributeGetterFunctions.put(
				"createDate", NcbjCompanyDetail::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", NcbjCompanyDetail::getModifiedDate);
			attributeGetterFunctions.put(
				"companyNameOrHeadOffice",
				NcbjCompanyDetail::getCompanyNameOrHeadOffice);
			attributeGetterFunctions.put(
				"companyAddress", NcbjCompanyDetail::getCompanyAddress);
			attributeGetterFunctions.put(
				"stageOne", NcbjCompanyDetail::getStageOne);
			attributeGetterFunctions.put(
				"stageTwo", NcbjCompanyDetail::getStageTwo);
			attributeGetterFunctions.put(
				"surveillanceAudit", NcbjCompanyDetail::getSurveillanceAudit);
			attributeGetterFunctions.put(
				"recertificationAudit",
				NcbjCompanyDetail::getRecertificationAudit);
			attributeGetterFunctions.put(
				"preAassessmentAudit",
				NcbjCompanyDetail::getPreAassessmentAudit);
			attributeGetterFunctions.put(
				"anyOtherService ", NcbjCompanyDetail::getAnyOtherService);
			attributeGetterFunctions.put(
				"ncbjApplicationId", NcbjCompanyDetail::getNcbjApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<NcbjCompanyDetail, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<NcbjCompanyDetail, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<NcbjCompanyDetail, ?>>();

			attributeSetterBiConsumers.put(
				"ncbjCompanyDetailId",
				(BiConsumer<NcbjCompanyDetail, Long>)
					NcbjCompanyDetail::setNcbjCompanyDetailId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<NcbjCompanyDetail, Long>)
					NcbjCompanyDetail::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<NcbjCompanyDetail, Long>)
					NcbjCompanyDetail::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<NcbjCompanyDetail, Long>)
					NcbjCompanyDetail::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<NcbjCompanyDetail, String>)
					NcbjCompanyDetail::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<NcbjCompanyDetail, Date>)
					NcbjCompanyDetail::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<NcbjCompanyDetail, Date>)
					NcbjCompanyDetail::setModifiedDate);
			attributeSetterBiConsumers.put(
				"companyNameOrHeadOffice",
				(BiConsumer<NcbjCompanyDetail, String>)
					NcbjCompanyDetail::setCompanyNameOrHeadOffice);
			attributeSetterBiConsumers.put(
				"companyAddress",
				(BiConsumer<NcbjCompanyDetail, String>)
					NcbjCompanyDetail::setCompanyAddress);
			attributeSetterBiConsumers.put(
				"stageOne",
				(BiConsumer<NcbjCompanyDetail, Date>)
					NcbjCompanyDetail::setStageOne);
			attributeSetterBiConsumers.put(
				"stageTwo",
				(BiConsumer<NcbjCompanyDetail, Date>)
					NcbjCompanyDetail::setStageTwo);
			attributeSetterBiConsumers.put(
				"surveillanceAudit",
				(BiConsumer<NcbjCompanyDetail, Date>)
					NcbjCompanyDetail::setSurveillanceAudit);
			attributeSetterBiConsumers.put(
				"recertificationAudit",
				(BiConsumer<NcbjCompanyDetail, Date>)
					NcbjCompanyDetail::setRecertificationAudit);
			attributeSetterBiConsumers.put(
				"preAassessmentAudit",
				(BiConsumer<NcbjCompanyDetail, Date>)
					NcbjCompanyDetail::setPreAassessmentAudit);
			attributeSetterBiConsumers.put(
				"anyOtherService ",
				(BiConsumer<NcbjCompanyDetail, Date>)
					NcbjCompanyDetail::setAnyOtherService);
			attributeSetterBiConsumers.put(
				"ncbjApplicationId",
				(BiConsumer<NcbjCompanyDetail, Long>)
					NcbjCompanyDetail::setNcbjApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getNcbjCompanyDetailId() {
		return _ncbjCompanyDetailId;
	}

	@Override
	public void setNcbjCompanyDetailId(long ncbjCompanyDetailId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ncbjCompanyDetailId = ncbjCompanyDetailId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getCompanyNameOrHeadOffice() {
		if (_companyNameOrHeadOffice == null) {
			return "";
		}
		else {
			return _companyNameOrHeadOffice;
		}
	}

	@Override
	public void setCompanyNameOrHeadOffice(String companyNameOrHeadOffice) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyNameOrHeadOffice = companyNameOrHeadOffice;
	}

	@JSON
	@Override
	public String getCompanyAddress() {
		if (_companyAddress == null) {
			return "";
		}
		else {
			return _companyAddress;
		}
	}

	@Override
	public void setCompanyAddress(String companyAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyAddress = companyAddress;
	}

	@JSON
	@Override
	public Date getStageOne() {
		return _stageOne;
	}

	@Override
	public void setStageOne(Date stageOne) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_stageOne = stageOne;
	}

	@JSON
	@Override
	public Date getStageTwo() {
		return _stageTwo;
	}

	@Override
	public void setStageTwo(Date stageTwo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_stageTwo = stageTwo;
	}

	@JSON
	@Override
	public Date getSurveillanceAudit() {
		return _surveillanceAudit;
	}

	@Override
	public void setSurveillanceAudit(Date surveillanceAudit) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_surveillanceAudit = surveillanceAudit;
	}

	@JSON
	@Override
	public Date getRecertificationAudit() {
		return _recertificationAudit;
	}

	@Override
	public void setRecertificationAudit(Date recertificationAudit) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_recertificationAudit = recertificationAudit;
	}

	@JSON
	@Override
	public Date getPreAassessmentAudit() {
		return _preAassessmentAudit;
	}

	@Override
	public void setPreAassessmentAudit(Date preAassessmentAudit) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_preAassessmentAudit = preAassessmentAudit;
	}

	@JSON
	@Override
	public Date getAnyOtherService() {
		return _anyOtherService;
	}

	@Override
	public void setAnyOtherService(Date anyOtherService) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_anyOtherService = anyOtherService;
	}

	@JSON
	@Override
	public long getNcbjApplicationId() {
		return _ncbjApplicationId;
	}

	@Override
	public void setNcbjApplicationId(long ncbjApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ncbjApplicationId = ncbjApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalNcbjApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("ncbjApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), NcbjCompanyDetail.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public NcbjCompanyDetail toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, NcbjCompanyDetail>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		NcbjCompanyDetailImpl ncbjCompanyDetailImpl =
			new NcbjCompanyDetailImpl();

		ncbjCompanyDetailImpl.setNcbjCompanyDetailId(getNcbjCompanyDetailId());
		ncbjCompanyDetailImpl.setGroupId(getGroupId());
		ncbjCompanyDetailImpl.setCompanyId(getCompanyId());
		ncbjCompanyDetailImpl.setUserId(getUserId());
		ncbjCompanyDetailImpl.setUserName(getUserName());
		ncbjCompanyDetailImpl.setCreateDate(getCreateDate());
		ncbjCompanyDetailImpl.setModifiedDate(getModifiedDate());
		ncbjCompanyDetailImpl.setCompanyNameOrHeadOffice(
			getCompanyNameOrHeadOffice());
		ncbjCompanyDetailImpl.setCompanyAddress(getCompanyAddress());
		ncbjCompanyDetailImpl.setStageOne(getStageOne());
		ncbjCompanyDetailImpl.setStageTwo(getStageTwo());
		ncbjCompanyDetailImpl.setSurveillanceAudit(getSurveillanceAudit());
		ncbjCompanyDetailImpl.setRecertificationAudit(
			getRecertificationAudit());
		ncbjCompanyDetailImpl.setPreAassessmentAudit(getPreAassessmentAudit());
		ncbjCompanyDetailImpl.setAnyOtherService(getAnyOtherService());
		ncbjCompanyDetailImpl.setNcbjApplicationId(getNcbjApplicationId());

		ncbjCompanyDetailImpl.resetOriginalValues();

		return ncbjCompanyDetailImpl;
	}

	@Override
	public NcbjCompanyDetail cloneWithOriginalValues() {
		NcbjCompanyDetailImpl ncbjCompanyDetailImpl =
			new NcbjCompanyDetailImpl();

		ncbjCompanyDetailImpl.setNcbjCompanyDetailId(
			this.<Long>getColumnOriginalValue("ncbjCompanyDetailId"));
		ncbjCompanyDetailImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		ncbjCompanyDetailImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		ncbjCompanyDetailImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		ncbjCompanyDetailImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		ncbjCompanyDetailImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		ncbjCompanyDetailImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		ncbjCompanyDetailImpl.setCompanyNameOrHeadOffice(
			this.<String>getColumnOriginalValue("companyNameOrHeadOffice"));
		ncbjCompanyDetailImpl.setCompanyAddress(
			this.<String>getColumnOriginalValue("companyAddress"));
		ncbjCompanyDetailImpl.setStageOne(
			this.<Date>getColumnOriginalValue("stageOne"));
		ncbjCompanyDetailImpl.setStageTwo(
			this.<Date>getColumnOriginalValue("stageTwo"));
		ncbjCompanyDetailImpl.setSurveillanceAudit(
			this.<Date>getColumnOriginalValue("surveillanceAudit"));
		ncbjCompanyDetailImpl.setRecertificationAudit(
			this.<Date>getColumnOriginalValue("recertificationAudit"));
		ncbjCompanyDetailImpl.setPreAassessmentAudit(
			this.<Date>getColumnOriginalValue("preAassessmentAudit"));
		ncbjCompanyDetailImpl.setAnyOtherService(
			this.<Date>getColumnOriginalValue("anyOtherService "));
		ncbjCompanyDetailImpl.setNcbjApplicationId(
			this.<Long>getColumnOriginalValue("ncbjApplicationId"));

		return ncbjCompanyDetailImpl;
	}

	@Override
	public int compareTo(NcbjCompanyDetail ncbjCompanyDetail) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), ncbjCompanyDetail.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof NcbjCompanyDetail)) {
			return false;
		}

		NcbjCompanyDetail ncbjCompanyDetail = (NcbjCompanyDetail)object;

		long primaryKey = ncbjCompanyDetail.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<NcbjCompanyDetail> toCacheModel() {
		NcbjCompanyDetailCacheModel ncbjCompanyDetailCacheModel =
			new NcbjCompanyDetailCacheModel();

		ncbjCompanyDetailCacheModel.ncbjCompanyDetailId =
			getNcbjCompanyDetailId();

		ncbjCompanyDetailCacheModel.groupId = getGroupId();

		ncbjCompanyDetailCacheModel.companyId = getCompanyId();

		ncbjCompanyDetailCacheModel.userId = getUserId();

		ncbjCompanyDetailCacheModel.userName = getUserName();

		String userName = ncbjCompanyDetailCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			ncbjCompanyDetailCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			ncbjCompanyDetailCacheModel.createDate = createDate.getTime();
		}
		else {
			ncbjCompanyDetailCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			ncbjCompanyDetailCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			ncbjCompanyDetailCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		ncbjCompanyDetailCacheModel.companyNameOrHeadOffice =
			getCompanyNameOrHeadOffice();

		String companyNameOrHeadOffice =
			ncbjCompanyDetailCacheModel.companyNameOrHeadOffice;

		if ((companyNameOrHeadOffice != null) &&
			(companyNameOrHeadOffice.length() == 0)) {

			ncbjCompanyDetailCacheModel.companyNameOrHeadOffice = null;
		}

		ncbjCompanyDetailCacheModel.companyAddress = getCompanyAddress();

		String companyAddress = ncbjCompanyDetailCacheModel.companyAddress;

		if ((companyAddress != null) && (companyAddress.length() == 0)) {
			ncbjCompanyDetailCacheModel.companyAddress = null;
		}

		Date stageOne = getStageOne();

		if (stageOne != null) {
			ncbjCompanyDetailCacheModel.stageOne = stageOne.getTime();
		}
		else {
			ncbjCompanyDetailCacheModel.stageOne = Long.MIN_VALUE;
		}

		Date stageTwo = getStageTwo();

		if (stageTwo != null) {
			ncbjCompanyDetailCacheModel.stageTwo = stageTwo.getTime();
		}
		else {
			ncbjCompanyDetailCacheModel.stageTwo = Long.MIN_VALUE;
		}

		Date surveillanceAudit = getSurveillanceAudit();

		if (surveillanceAudit != null) {
			ncbjCompanyDetailCacheModel.surveillanceAudit =
				surveillanceAudit.getTime();
		}
		else {
			ncbjCompanyDetailCacheModel.surveillanceAudit = Long.MIN_VALUE;
		}

		Date recertificationAudit = getRecertificationAudit();

		if (recertificationAudit != null) {
			ncbjCompanyDetailCacheModel.recertificationAudit =
				recertificationAudit.getTime();
		}
		else {
			ncbjCompanyDetailCacheModel.recertificationAudit = Long.MIN_VALUE;
		}

		Date preAassessmentAudit = getPreAassessmentAudit();

		if (preAassessmentAudit != null) {
			ncbjCompanyDetailCacheModel.preAassessmentAudit =
				preAassessmentAudit.getTime();
		}
		else {
			ncbjCompanyDetailCacheModel.preAassessmentAudit = Long.MIN_VALUE;
		}

		Date anyOtherService = getAnyOtherService();

		if (anyOtherService != null) {
			ncbjCompanyDetailCacheModel.anyOtherService =
				anyOtherService.getTime();
		}
		else {
			ncbjCompanyDetailCacheModel.anyOtherService = Long.MIN_VALUE;
		}

		ncbjCompanyDetailCacheModel.ncbjApplicationId = getNcbjApplicationId();

		return ncbjCompanyDetailCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<NcbjCompanyDetail, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<NcbjCompanyDetail, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<NcbjCompanyDetail, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(NcbjCompanyDetail)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, NcbjCompanyDetail>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					NcbjCompanyDetail.class, ModelWrapper.class);

	}

	private long _ncbjCompanyDetailId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _companyNameOrHeadOffice;
	private String _companyAddress;
	private Date _stageOne;
	private Date _stageTwo;
	private Date _surveillanceAudit;
	private Date _recertificationAudit;
	private Date _preAassessmentAudit;
	private Date _anyOtherService;
	private long _ncbjApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<NcbjCompanyDetail, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((NcbjCompanyDetail)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("ncbjCompanyDetailId", _ncbjCompanyDetailId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"companyNameOrHeadOffice", _companyNameOrHeadOffice);
		_columnOriginalValues.put("companyAddress", _companyAddress);
		_columnOriginalValues.put("stageOne", _stageOne);
		_columnOriginalValues.put("stageTwo", _stageTwo);
		_columnOriginalValues.put("surveillanceAudit", _surveillanceAudit);
		_columnOriginalValues.put(
			"recertificationAudit", _recertificationAudit);
		_columnOriginalValues.put("preAassessmentAudit", _preAassessmentAudit);
		_columnOriginalValues.put("anyOtherService ", _anyOtherService);
		_columnOriginalValues.put("ncbjApplicationId", _ncbjApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("ncbjCompanyDetailId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("companyNameOrHeadOffice", 128L);

		columnBitmasks.put("companyAddress", 256L);

		columnBitmasks.put("stageOne", 512L);

		columnBitmasks.put("stageTwo", 1024L);

		columnBitmasks.put("surveillanceAudit", 2048L);

		columnBitmasks.put("recertificationAudit", 4096L);

		columnBitmasks.put("preAassessmentAudit", 8192L);

		columnBitmasks.put("anyOtherService ", 16384L);

		columnBitmasks.put("ncbjApplicationId", 32768L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private NcbjCompanyDetail _escapedModel;

}