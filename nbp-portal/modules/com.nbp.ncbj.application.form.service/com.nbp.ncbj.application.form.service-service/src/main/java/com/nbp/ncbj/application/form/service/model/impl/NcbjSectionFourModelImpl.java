/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.ncbj.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.ncbj.application.form.service.model.NcbjSectionFour;
import com.nbp.ncbj.application.form.service.model.NcbjSectionFourModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the NcbjSectionFour service. Represents a row in the &quot;nbp_ncbj_section_four&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>NcbjSectionFourModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link NcbjSectionFourImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see NcbjSectionFourImpl
 * @generated
 */
@JSON(strict = true)
public class NcbjSectionFourModelImpl
	extends BaseModelImpl<NcbjSectionFour> implements NcbjSectionFourModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ncbj section four model instance should use the <code>NcbjSectionFour</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_ncbj_section_four";

	public static final Object[][] TABLE_COLUMNS = {
		{"ncbjSectionFourId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"consultService", Types.VARCHAR},
		{"consultTelephone", Types.VARCHAR}, {"consultEmail", Types.VARCHAR},
		{"consultStageOne", Types.TIMESTAMP},
		{"consultStageTwo", Types.TIMESTAMP},
		{"consultSurveillanceAudit", Types.TIMESTAMP},
		{"consultRecertificationAudit", Types.TIMESTAMP},
		{"consultPreassessmentAudit", Types.TIMESTAMP},
		{"consultOtherService", Types.TIMESTAMP},
		{"consultName", Types.VARCHAR}, {"consultPosition", Types.VARCHAR},
		{"consultDate", Types.TIMESTAMP}, {"ncbjApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ncbjSectionFourId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("consultService", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("consultTelephone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("consultEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("consultStageOne", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("consultStageTwo", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("consultSurveillanceAudit", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("consultRecertificationAudit", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("consultPreassessmentAudit", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("consultOtherService", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("consultName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("consultPosition", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("consultDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ncbjApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_ncbj_section_four (ncbjSectionFourId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,consultService VARCHAR(75) null,consultTelephone VARCHAR(75) null,consultEmail VARCHAR(75) null,consultStageOne DATE null,consultStageTwo DATE null,consultSurveillanceAudit DATE null,consultRecertificationAudit DATE null,consultPreassessmentAudit DATE null,consultOtherService DATE null,consultName VARCHAR(75) null,consultPosition VARCHAR(75) null,consultDate DATE null,ncbjApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_ncbj_section_four";

	public static final String ORDER_BY_JPQL =
		" ORDER BY ncbjSectionFour.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_ncbj_section_four.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long NCBJAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public NcbjSectionFourModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _ncbjSectionFourId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setNcbjSectionFourId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ncbjSectionFourId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return NcbjSectionFour.class;
	}

	@Override
	public String getModelClassName() {
		return NcbjSectionFour.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<NcbjSectionFour, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<NcbjSectionFour, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<NcbjSectionFour, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((NcbjSectionFour)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<NcbjSectionFour, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<NcbjSectionFour, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(NcbjSectionFour)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<NcbjSectionFour, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<NcbjSectionFour, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<NcbjSectionFour, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<NcbjSectionFour, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<NcbjSectionFour, Object>>();

			attributeGetterFunctions.put(
				"ncbjSectionFourId", NcbjSectionFour::getNcbjSectionFourId);
			attributeGetterFunctions.put(
				"groupId", NcbjSectionFour::getGroupId);
			attributeGetterFunctions.put(
				"companyId", NcbjSectionFour::getCompanyId);
			attributeGetterFunctions.put("userId", NcbjSectionFour::getUserId);
			attributeGetterFunctions.put(
				"userName", NcbjSectionFour::getUserName);
			attributeGetterFunctions.put(
				"createDate", NcbjSectionFour::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", NcbjSectionFour::getModifiedDate);
			attributeGetterFunctions.put(
				"consultService", NcbjSectionFour::getConsultService);
			attributeGetterFunctions.put(
				"consultTelephone", NcbjSectionFour::getConsultTelephone);
			attributeGetterFunctions.put(
				"consultEmail", NcbjSectionFour::getConsultEmail);
			attributeGetterFunctions.put(
				"consultStageOne", NcbjSectionFour::getConsultStageOne);
			attributeGetterFunctions.put(
				"consultStageTwo", NcbjSectionFour::getConsultStageTwo);
			attributeGetterFunctions.put(
				"consultSurveillanceAudit",
				NcbjSectionFour::getConsultSurveillanceAudit);
			attributeGetterFunctions.put(
				"consultRecertificationAudit",
				NcbjSectionFour::getConsultRecertificationAudit);
			attributeGetterFunctions.put(
				"consultPreassessmentAudit",
				NcbjSectionFour::getConsultPreassessmentAudit);
			attributeGetterFunctions.put(
				"consultOtherService", NcbjSectionFour::getConsultOtherService);
			attributeGetterFunctions.put(
				"consultName", NcbjSectionFour::getConsultName);
			attributeGetterFunctions.put(
				"consultPosition", NcbjSectionFour::getConsultPosition);
			attributeGetterFunctions.put(
				"consultDate", NcbjSectionFour::getConsultDate);
			attributeGetterFunctions.put(
				"ncbjApplicationId", NcbjSectionFour::getNcbjApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<NcbjSectionFour, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<NcbjSectionFour, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap<String, BiConsumer<NcbjSectionFour, ?>>();

			attributeSetterBiConsumers.put(
				"ncbjSectionFourId",
				(BiConsumer<NcbjSectionFour, Long>)
					NcbjSectionFour::setNcbjSectionFourId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<NcbjSectionFour, Long>)NcbjSectionFour::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<NcbjSectionFour, Long>)
					NcbjSectionFour::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<NcbjSectionFour, Long>)NcbjSectionFour::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<NcbjSectionFour, String>)
					NcbjSectionFour::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<NcbjSectionFour, Date>)
					NcbjSectionFour::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<NcbjSectionFour, Date>)
					NcbjSectionFour::setModifiedDate);
			attributeSetterBiConsumers.put(
				"consultService",
				(BiConsumer<NcbjSectionFour, String>)
					NcbjSectionFour::setConsultService);
			attributeSetterBiConsumers.put(
				"consultTelephone",
				(BiConsumer<NcbjSectionFour, String>)
					NcbjSectionFour::setConsultTelephone);
			attributeSetterBiConsumers.put(
				"consultEmail",
				(BiConsumer<NcbjSectionFour, String>)
					NcbjSectionFour::setConsultEmail);
			attributeSetterBiConsumers.put(
				"consultStageOne",
				(BiConsumer<NcbjSectionFour, Date>)
					NcbjSectionFour::setConsultStageOne);
			attributeSetterBiConsumers.put(
				"consultStageTwo",
				(BiConsumer<NcbjSectionFour, Date>)
					NcbjSectionFour::setConsultStageTwo);
			attributeSetterBiConsumers.put(
				"consultSurveillanceAudit",
				(BiConsumer<NcbjSectionFour, Date>)
					NcbjSectionFour::setConsultSurveillanceAudit);
			attributeSetterBiConsumers.put(
				"consultRecertificationAudit",
				(BiConsumer<NcbjSectionFour, Date>)
					NcbjSectionFour::setConsultRecertificationAudit);
			attributeSetterBiConsumers.put(
				"consultPreassessmentAudit",
				(BiConsumer<NcbjSectionFour, Date>)
					NcbjSectionFour::setConsultPreassessmentAudit);
			attributeSetterBiConsumers.put(
				"consultOtherService",
				(BiConsumer<NcbjSectionFour, Date>)
					NcbjSectionFour::setConsultOtherService);
			attributeSetterBiConsumers.put(
				"consultName",
				(BiConsumer<NcbjSectionFour, String>)
					NcbjSectionFour::setConsultName);
			attributeSetterBiConsumers.put(
				"consultPosition",
				(BiConsumer<NcbjSectionFour, String>)
					NcbjSectionFour::setConsultPosition);
			attributeSetterBiConsumers.put(
				"consultDate",
				(BiConsumer<NcbjSectionFour, Date>)
					NcbjSectionFour::setConsultDate);
			attributeSetterBiConsumers.put(
				"ncbjApplicationId",
				(BiConsumer<NcbjSectionFour, Long>)
					NcbjSectionFour::setNcbjApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getNcbjSectionFourId() {
		return _ncbjSectionFourId;
	}

	@Override
	public void setNcbjSectionFourId(long ncbjSectionFourId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ncbjSectionFourId = ncbjSectionFourId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getConsultService() {
		if (_consultService == null) {
			return "";
		}
		else {
			return _consultService;
		}
	}

	@Override
	public void setConsultService(String consultService) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_consultService = consultService;
	}

	@JSON
	@Override
	public String getConsultTelephone() {
		if (_consultTelephone == null) {
			return "";
		}
		else {
			return _consultTelephone;
		}
	}

	@Override
	public void setConsultTelephone(String consultTelephone) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_consultTelephone = consultTelephone;
	}

	@JSON
	@Override
	public String getConsultEmail() {
		if (_consultEmail == null) {
			return "";
		}
		else {
			return _consultEmail;
		}
	}

	@Override
	public void setConsultEmail(String consultEmail) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_consultEmail = consultEmail;
	}

	@JSON
	@Override
	public Date getConsultStageOne() {
		return _consultStageOne;
	}

	@Override
	public void setConsultStageOne(Date consultStageOne) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_consultStageOne = consultStageOne;
	}

	@JSON
	@Override
	public Date getConsultStageTwo() {
		return _consultStageTwo;
	}

	@Override
	public void setConsultStageTwo(Date consultStageTwo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_consultStageTwo = consultStageTwo;
	}

	@JSON
	@Override
	public Date getConsultSurveillanceAudit() {
		return _consultSurveillanceAudit;
	}

	@Override
	public void setConsultSurveillanceAudit(Date consultSurveillanceAudit) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_consultSurveillanceAudit = consultSurveillanceAudit;
	}

	@JSON
	@Override
	public Date getConsultRecertificationAudit() {
		return _consultRecertificationAudit;
	}

	@Override
	public void setConsultRecertificationAudit(
		Date consultRecertificationAudit) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_consultRecertificationAudit = consultRecertificationAudit;
	}

	@JSON
	@Override
	public Date getConsultPreassessmentAudit() {
		return _consultPreassessmentAudit;
	}

	@Override
	public void setConsultPreassessmentAudit(Date consultPreassessmentAudit) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_consultPreassessmentAudit = consultPreassessmentAudit;
	}

	@JSON
	@Override
	public Date getConsultOtherService() {
		return _consultOtherService;
	}

	@Override
	public void setConsultOtherService(Date consultOtherService) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_consultOtherService = consultOtherService;
	}

	@JSON
	@Override
	public String getConsultName() {
		if (_consultName == null) {
			return "";
		}
		else {
			return _consultName;
		}
	}

	@Override
	public void setConsultName(String consultName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_consultName = consultName;
	}

	@JSON
	@Override
	public String getConsultPosition() {
		if (_consultPosition == null) {
			return "";
		}
		else {
			return _consultPosition;
		}
	}

	@Override
	public void setConsultPosition(String consultPosition) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_consultPosition = consultPosition;
	}

	@JSON
	@Override
	public Date getConsultDate() {
		return _consultDate;
	}

	@Override
	public void setConsultDate(Date consultDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_consultDate = consultDate;
	}

	@JSON
	@Override
	public long getNcbjApplicationId() {
		return _ncbjApplicationId;
	}

	@Override
	public void setNcbjApplicationId(long ncbjApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ncbjApplicationId = ncbjApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalNcbjApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("ncbjApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), NcbjSectionFour.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public NcbjSectionFour toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, NcbjSectionFour>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		NcbjSectionFourImpl ncbjSectionFourImpl = new NcbjSectionFourImpl();

		ncbjSectionFourImpl.setNcbjSectionFourId(getNcbjSectionFourId());
		ncbjSectionFourImpl.setGroupId(getGroupId());
		ncbjSectionFourImpl.setCompanyId(getCompanyId());
		ncbjSectionFourImpl.setUserId(getUserId());
		ncbjSectionFourImpl.setUserName(getUserName());
		ncbjSectionFourImpl.setCreateDate(getCreateDate());
		ncbjSectionFourImpl.setModifiedDate(getModifiedDate());
		ncbjSectionFourImpl.setConsultService(getConsultService());
		ncbjSectionFourImpl.setConsultTelephone(getConsultTelephone());
		ncbjSectionFourImpl.setConsultEmail(getConsultEmail());
		ncbjSectionFourImpl.setConsultStageOne(getConsultStageOne());
		ncbjSectionFourImpl.setConsultStageTwo(getConsultStageTwo());
		ncbjSectionFourImpl.setConsultSurveillanceAudit(
			getConsultSurveillanceAudit());
		ncbjSectionFourImpl.setConsultRecertificationAudit(
			getConsultRecertificationAudit());
		ncbjSectionFourImpl.setConsultPreassessmentAudit(
			getConsultPreassessmentAudit());
		ncbjSectionFourImpl.setConsultOtherService(getConsultOtherService());
		ncbjSectionFourImpl.setConsultName(getConsultName());
		ncbjSectionFourImpl.setConsultPosition(getConsultPosition());
		ncbjSectionFourImpl.setConsultDate(getConsultDate());
		ncbjSectionFourImpl.setNcbjApplicationId(getNcbjApplicationId());

		ncbjSectionFourImpl.resetOriginalValues();

		return ncbjSectionFourImpl;
	}

	@Override
	public NcbjSectionFour cloneWithOriginalValues() {
		NcbjSectionFourImpl ncbjSectionFourImpl = new NcbjSectionFourImpl();

		ncbjSectionFourImpl.setNcbjSectionFourId(
			this.<Long>getColumnOriginalValue("ncbjSectionFourId"));
		ncbjSectionFourImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		ncbjSectionFourImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		ncbjSectionFourImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		ncbjSectionFourImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		ncbjSectionFourImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		ncbjSectionFourImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		ncbjSectionFourImpl.setConsultService(
			this.<String>getColumnOriginalValue("consultService"));
		ncbjSectionFourImpl.setConsultTelephone(
			this.<String>getColumnOriginalValue("consultTelephone"));
		ncbjSectionFourImpl.setConsultEmail(
			this.<String>getColumnOriginalValue("consultEmail"));
		ncbjSectionFourImpl.setConsultStageOne(
			this.<Date>getColumnOriginalValue("consultStageOne"));
		ncbjSectionFourImpl.setConsultStageTwo(
			this.<Date>getColumnOriginalValue("consultStageTwo"));
		ncbjSectionFourImpl.setConsultSurveillanceAudit(
			this.<Date>getColumnOriginalValue("consultSurveillanceAudit"));
		ncbjSectionFourImpl.setConsultRecertificationAudit(
			this.<Date>getColumnOriginalValue("consultRecertificationAudit"));
		ncbjSectionFourImpl.setConsultPreassessmentAudit(
			this.<Date>getColumnOriginalValue("consultPreassessmentAudit"));
		ncbjSectionFourImpl.setConsultOtherService(
			this.<Date>getColumnOriginalValue("consultOtherService"));
		ncbjSectionFourImpl.setConsultName(
			this.<String>getColumnOriginalValue("consultName"));
		ncbjSectionFourImpl.setConsultPosition(
			this.<String>getColumnOriginalValue("consultPosition"));
		ncbjSectionFourImpl.setConsultDate(
			this.<Date>getColumnOriginalValue("consultDate"));
		ncbjSectionFourImpl.setNcbjApplicationId(
			this.<Long>getColumnOriginalValue("ncbjApplicationId"));

		return ncbjSectionFourImpl;
	}

	@Override
	public int compareTo(NcbjSectionFour ncbjSectionFour) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), ncbjSectionFour.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof NcbjSectionFour)) {
			return false;
		}

		NcbjSectionFour ncbjSectionFour = (NcbjSectionFour)object;

		long primaryKey = ncbjSectionFour.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<NcbjSectionFour> toCacheModel() {
		NcbjSectionFourCacheModel ncbjSectionFourCacheModel =
			new NcbjSectionFourCacheModel();

		ncbjSectionFourCacheModel.ncbjSectionFourId = getNcbjSectionFourId();

		ncbjSectionFourCacheModel.groupId = getGroupId();

		ncbjSectionFourCacheModel.companyId = getCompanyId();

		ncbjSectionFourCacheModel.userId = getUserId();

		ncbjSectionFourCacheModel.userName = getUserName();

		String userName = ncbjSectionFourCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			ncbjSectionFourCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			ncbjSectionFourCacheModel.createDate = createDate.getTime();
		}
		else {
			ncbjSectionFourCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			ncbjSectionFourCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			ncbjSectionFourCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		ncbjSectionFourCacheModel.consultService = getConsultService();

		String consultService = ncbjSectionFourCacheModel.consultService;

		if ((consultService != null) && (consultService.length() == 0)) {
			ncbjSectionFourCacheModel.consultService = null;
		}

		ncbjSectionFourCacheModel.consultTelephone = getConsultTelephone();

		String consultTelephone = ncbjSectionFourCacheModel.consultTelephone;

		if ((consultTelephone != null) && (consultTelephone.length() == 0)) {
			ncbjSectionFourCacheModel.consultTelephone = null;
		}

		ncbjSectionFourCacheModel.consultEmail = getConsultEmail();

		String consultEmail = ncbjSectionFourCacheModel.consultEmail;

		if ((consultEmail != null) && (consultEmail.length() == 0)) {
			ncbjSectionFourCacheModel.consultEmail = null;
		}

		Date consultStageOne = getConsultStageOne();

		if (consultStageOne != null) {
			ncbjSectionFourCacheModel.consultStageOne =
				consultStageOne.getTime();
		}
		else {
			ncbjSectionFourCacheModel.consultStageOne = Long.MIN_VALUE;
		}

		Date consultStageTwo = getConsultStageTwo();

		if (consultStageTwo != null) {
			ncbjSectionFourCacheModel.consultStageTwo =
				consultStageTwo.getTime();
		}
		else {
			ncbjSectionFourCacheModel.consultStageTwo = Long.MIN_VALUE;
		}

		Date consultSurveillanceAudit = getConsultSurveillanceAudit();

		if (consultSurveillanceAudit != null) {
			ncbjSectionFourCacheModel.consultSurveillanceAudit =
				consultSurveillanceAudit.getTime();
		}
		else {
			ncbjSectionFourCacheModel.consultSurveillanceAudit = Long.MIN_VALUE;
		}

		Date consultRecertificationAudit = getConsultRecertificationAudit();

		if (consultRecertificationAudit != null) {
			ncbjSectionFourCacheModel.consultRecertificationAudit =
				consultRecertificationAudit.getTime();
		}
		else {
			ncbjSectionFourCacheModel.consultRecertificationAudit =
				Long.MIN_VALUE;
		}

		Date consultPreassessmentAudit = getConsultPreassessmentAudit();

		if (consultPreassessmentAudit != null) {
			ncbjSectionFourCacheModel.consultPreassessmentAudit =
				consultPreassessmentAudit.getTime();
		}
		else {
			ncbjSectionFourCacheModel.consultPreassessmentAudit =
				Long.MIN_VALUE;
		}

		Date consultOtherService = getConsultOtherService();

		if (consultOtherService != null) {
			ncbjSectionFourCacheModel.consultOtherService =
				consultOtherService.getTime();
		}
		else {
			ncbjSectionFourCacheModel.consultOtherService = Long.MIN_VALUE;
		}

		ncbjSectionFourCacheModel.consultName = getConsultName();

		String consultName = ncbjSectionFourCacheModel.consultName;

		if ((consultName != null) && (consultName.length() == 0)) {
			ncbjSectionFourCacheModel.consultName = null;
		}

		ncbjSectionFourCacheModel.consultPosition = getConsultPosition();

		String consultPosition = ncbjSectionFourCacheModel.consultPosition;

		if ((consultPosition != null) && (consultPosition.length() == 0)) {
			ncbjSectionFourCacheModel.consultPosition = null;
		}

		Date consultDate = getConsultDate();

		if (consultDate != null) {
			ncbjSectionFourCacheModel.consultDate = consultDate.getTime();
		}
		else {
			ncbjSectionFourCacheModel.consultDate = Long.MIN_VALUE;
		}

		ncbjSectionFourCacheModel.ncbjApplicationId = getNcbjApplicationId();

		return ncbjSectionFourCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<NcbjSectionFour, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<NcbjSectionFour, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<NcbjSectionFour, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((NcbjSectionFour)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, NcbjSectionFour>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					NcbjSectionFour.class, ModelWrapper.class);

	}

	private long _ncbjSectionFourId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _consultService;
	private String _consultTelephone;
	private String _consultEmail;
	private Date _consultStageOne;
	private Date _consultStageTwo;
	private Date _consultSurveillanceAudit;
	private Date _consultRecertificationAudit;
	private Date _consultPreassessmentAudit;
	private Date _consultOtherService;
	private String _consultName;
	private String _consultPosition;
	private Date _consultDate;
	private long _ncbjApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<NcbjSectionFour, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((NcbjSectionFour)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("ncbjSectionFourId", _ncbjSectionFourId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("consultService", _consultService);
		_columnOriginalValues.put("consultTelephone", _consultTelephone);
		_columnOriginalValues.put("consultEmail", _consultEmail);
		_columnOriginalValues.put("consultStageOne", _consultStageOne);
		_columnOriginalValues.put("consultStageTwo", _consultStageTwo);
		_columnOriginalValues.put(
			"consultSurveillanceAudit", _consultSurveillanceAudit);
		_columnOriginalValues.put(
			"consultRecertificationAudit", _consultRecertificationAudit);
		_columnOriginalValues.put(
			"consultPreassessmentAudit", _consultPreassessmentAudit);
		_columnOriginalValues.put("consultOtherService", _consultOtherService);
		_columnOriginalValues.put("consultName", _consultName);
		_columnOriginalValues.put("consultPosition", _consultPosition);
		_columnOriginalValues.put("consultDate", _consultDate);
		_columnOriginalValues.put("ncbjApplicationId", _ncbjApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("ncbjSectionFourId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("consultService", 128L);

		columnBitmasks.put("consultTelephone", 256L);

		columnBitmasks.put("consultEmail", 512L);

		columnBitmasks.put("consultStageOne", 1024L);

		columnBitmasks.put("consultStageTwo", 2048L);

		columnBitmasks.put("consultSurveillanceAudit", 4096L);

		columnBitmasks.put("consultRecertificationAudit", 8192L);

		columnBitmasks.put("consultPreassessmentAudit", 16384L);

		columnBitmasks.put("consultOtherService", 32768L);

		columnBitmasks.put("consultName", 65536L);

		columnBitmasks.put("consultPosition", 131072L);

		columnBitmasks.put("consultDate", 262144L);

		columnBitmasks.put("ncbjApplicationId", 524288L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private NcbjSectionFour _escapedModel;

}