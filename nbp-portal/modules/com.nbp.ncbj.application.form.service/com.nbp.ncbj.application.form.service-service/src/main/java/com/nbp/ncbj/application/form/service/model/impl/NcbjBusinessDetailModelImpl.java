/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.ncbj.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.ncbj.application.form.service.model.NcbjBusinessDetail;
import com.nbp.ncbj.application.form.service.model.NcbjBusinessDetailModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the NcbjBusinessDetail service. Represents a row in the &quot;nbp_ncbj_business_detail&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>NcbjBusinessDetailModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link NcbjBusinessDetailImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see NcbjBusinessDetailImpl
 * @generated
 */
@JSON(strict = true)
public class NcbjBusinessDetailModelImpl
	extends BaseModelImpl<NcbjBusinessDetail>
	implements NcbjBusinessDetailModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ncbj business detail model instance should use the <code>NcbjBusinessDetail</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_ncbj_business_detail";

	public static final Object[][] TABLE_COLUMNS = {
		{"ncbjBusinessDetailId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"counter", Types.VARCHAR},
		{"quotationAddressOne", Types.VARCHAR},
		{"quotationProductTypes", Types.VARCHAR},
		{"quotationApplicantShifts", Types.VARCHAR},
		{"quotationEmpNum", Types.VARCHAR},
		{"quotationHeadOffices", Types.VARCHAR},
		{"quotationFullTimeEmploy", Types.VARCHAR},
		{"quotationPartTimeEmploy", Types.VARCHAR},
		{"quotationContractors", Types.VARCHAR},
		{"quotationContractedWorker", Types.VARCHAR},
		{"ncbjApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ncbjBusinessDetailId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("counter", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("quotationAddressOne", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("quotationProductTypes", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("quotationApplicantShifts", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("quotationEmpNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("quotationHeadOffices", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("quotationFullTimeEmploy", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("quotationPartTimeEmploy", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("quotationContractors", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("quotationContractedWorker", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ncbjApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_ncbj_business_detail (ncbjBusinessDetailId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,counter VARCHAR(75) null,quotationAddressOne VARCHAR(75) null,quotationProductTypes VARCHAR(75) null,quotationApplicantShifts VARCHAR(75) null,quotationEmpNum VARCHAR(75) null,quotationHeadOffices VARCHAR(75) null,quotationFullTimeEmploy VARCHAR(75) null,quotationPartTimeEmploy VARCHAR(75) null,quotationContractors VARCHAR(75) null,quotationContractedWorker VARCHAR(75) null,ncbjApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_ncbj_business_detail";

	public static final String ORDER_BY_JPQL =
		" ORDER BY ncbjBusinessDetail.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_ncbj_business_detail.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long NCBJAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public NcbjBusinessDetailModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _ncbjBusinessDetailId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setNcbjBusinessDetailId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ncbjBusinessDetailId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return NcbjBusinessDetail.class;
	}

	@Override
	public String getModelClassName() {
		return NcbjBusinessDetail.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<NcbjBusinessDetail, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<NcbjBusinessDetail, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<NcbjBusinessDetail, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((NcbjBusinessDetail)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<NcbjBusinessDetail, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<NcbjBusinessDetail, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(NcbjBusinessDetail)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<NcbjBusinessDetail, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<NcbjBusinessDetail, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<NcbjBusinessDetail, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<NcbjBusinessDetail, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<NcbjBusinessDetail, Object>>();

			attributeGetterFunctions.put(
				"ncbjBusinessDetailId",
				NcbjBusinessDetail::getNcbjBusinessDetailId);
			attributeGetterFunctions.put(
				"groupId", NcbjBusinessDetail::getGroupId);
			attributeGetterFunctions.put(
				"companyId", NcbjBusinessDetail::getCompanyId);
			attributeGetterFunctions.put(
				"userId", NcbjBusinessDetail::getUserId);
			attributeGetterFunctions.put(
				"userName", NcbjBusinessDetail::getUserName);
			attributeGetterFunctions.put(
				"createDate", NcbjBusinessDetail::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", NcbjBusinessDetail::getModifiedDate);
			attributeGetterFunctions.put(
				"counter", NcbjBusinessDetail::getCounter);
			attributeGetterFunctions.put(
				"quotationAddressOne",
				NcbjBusinessDetail::getQuotationAddressOne);
			attributeGetterFunctions.put(
				"quotationProductTypes",
				NcbjBusinessDetail::getQuotationProductTypes);
			attributeGetterFunctions.put(
				"quotationApplicantShifts",
				NcbjBusinessDetail::getQuotationApplicantShifts);
			attributeGetterFunctions.put(
				"quotationEmpNum", NcbjBusinessDetail::getQuotationEmpNum);
			attributeGetterFunctions.put(
				"quotationHeadOffices",
				NcbjBusinessDetail::getQuotationHeadOffices);
			attributeGetterFunctions.put(
				"quotationFullTimeEmploy",
				NcbjBusinessDetail::getQuotationFullTimeEmploy);
			attributeGetterFunctions.put(
				"quotationPartTimeEmploy",
				NcbjBusinessDetail::getQuotationPartTimeEmploy);
			attributeGetterFunctions.put(
				"quotationContractors",
				NcbjBusinessDetail::getQuotationContractors);
			attributeGetterFunctions.put(
				"quotationContractedWorker",
				NcbjBusinessDetail::getQuotationContractedWorker);
			attributeGetterFunctions.put(
				"ncbjApplicationId", NcbjBusinessDetail::getNcbjApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<NcbjBusinessDetail, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<NcbjBusinessDetail, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<NcbjBusinessDetail, ?>>();

			attributeSetterBiConsumers.put(
				"ncbjBusinessDetailId",
				(BiConsumer<NcbjBusinessDetail, Long>)
					NcbjBusinessDetail::setNcbjBusinessDetailId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<NcbjBusinessDetail, Long>)
					NcbjBusinessDetail::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<NcbjBusinessDetail, Long>)
					NcbjBusinessDetail::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<NcbjBusinessDetail, Long>)
					NcbjBusinessDetail::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<NcbjBusinessDetail, String>)
					NcbjBusinessDetail::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<NcbjBusinessDetail, Date>)
					NcbjBusinessDetail::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<NcbjBusinessDetail, Date>)
					NcbjBusinessDetail::setModifiedDate);
			attributeSetterBiConsumers.put(
				"counter",
				(BiConsumer<NcbjBusinessDetail, String>)
					NcbjBusinessDetail::setCounter);
			attributeSetterBiConsumers.put(
				"quotationAddressOne",
				(BiConsumer<NcbjBusinessDetail, String>)
					NcbjBusinessDetail::setQuotationAddressOne);
			attributeSetterBiConsumers.put(
				"quotationProductTypes",
				(BiConsumer<NcbjBusinessDetail, String>)
					NcbjBusinessDetail::setQuotationProductTypes);
			attributeSetterBiConsumers.put(
				"quotationApplicantShifts",
				(BiConsumer<NcbjBusinessDetail, String>)
					NcbjBusinessDetail::setQuotationApplicantShifts);
			attributeSetterBiConsumers.put(
				"quotationEmpNum",
				(BiConsumer<NcbjBusinessDetail, String>)
					NcbjBusinessDetail::setQuotationEmpNum);
			attributeSetterBiConsumers.put(
				"quotationHeadOffices",
				(BiConsumer<NcbjBusinessDetail, String>)
					NcbjBusinessDetail::setQuotationHeadOffices);
			attributeSetterBiConsumers.put(
				"quotationFullTimeEmploy",
				(BiConsumer<NcbjBusinessDetail, String>)
					NcbjBusinessDetail::setQuotationFullTimeEmploy);
			attributeSetterBiConsumers.put(
				"quotationPartTimeEmploy",
				(BiConsumer<NcbjBusinessDetail, String>)
					NcbjBusinessDetail::setQuotationPartTimeEmploy);
			attributeSetterBiConsumers.put(
				"quotationContractors",
				(BiConsumer<NcbjBusinessDetail, String>)
					NcbjBusinessDetail::setQuotationContractors);
			attributeSetterBiConsumers.put(
				"quotationContractedWorker",
				(BiConsumer<NcbjBusinessDetail, String>)
					NcbjBusinessDetail::setQuotationContractedWorker);
			attributeSetterBiConsumers.put(
				"ncbjApplicationId",
				(BiConsumer<NcbjBusinessDetail, Long>)
					NcbjBusinessDetail::setNcbjApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getNcbjBusinessDetailId() {
		return _ncbjBusinessDetailId;
	}

	@Override
	public void setNcbjBusinessDetailId(long ncbjBusinessDetailId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ncbjBusinessDetailId = ncbjBusinessDetailId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getCounter() {
		if (_counter == null) {
			return "";
		}
		else {
			return _counter;
		}
	}

	@Override
	public void setCounter(String counter) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_counter = counter;
	}

	@JSON
	@Override
	public String getQuotationAddressOne() {
		if (_quotationAddressOne == null) {
			return "";
		}
		else {
			return _quotationAddressOne;
		}
	}

	@Override
	public void setQuotationAddressOne(String quotationAddressOne) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_quotationAddressOne = quotationAddressOne;
	}

	@JSON
	@Override
	public String getQuotationProductTypes() {
		if (_quotationProductTypes == null) {
			return "";
		}
		else {
			return _quotationProductTypes;
		}
	}

	@Override
	public void setQuotationProductTypes(String quotationProductTypes) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_quotationProductTypes = quotationProductTypes;
	}

	@JSON
	@Override
	public String getQuotationApplicantShifts() {
		if (_quotationApplicantShifts == null) {
			return "";
		}
		else {
			return _quotationApplicantShifts;
		}
	}

	@Override
	public void setQuotationApplicantShifts(String quotationApplicantShifts) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_quotationApplicantShifts = quotationApplicantShifts;
	}

	@JSON
	@Override
	public String getQuotationEmpNum() {
		if (_quotationEmpNum == null) {
			return "";
		}
		else {
			return _quotationEmpNum;
		}
	}

	@Override
	public void setQuotationEmpNum(String quotationEmpNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_quotationEmpNum = quotationEmpNum;
	}

	@JSON
	@Override
	public String getQuotationHeadOffices() {
		if (_quotationHeadOffices == null) {
			return "";
		}
		else {
			return _quotationHeadOffices;
		}
	}

	@Override
	public void setQuotationHeadOffices(String quotationHeadOffices) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_quotationHeadOffices = quotationHeadOffices;
	}

	@JSON
	@Override
	public String getQuotationFullTimeEmploy() {
		if (_quotationFullTimeEmploy == null) {
			return "";
		}
		else {
			return _quotationFullTimeEmploy;
		}
	}

	@Override
	public void setQuotationFullTimeEmploy(String quotationFullTimeEmploy) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_quotationFullTimeEmploy = quotationFullTimeEmploy;
	}

	@JSON
	@Override
	public String getQuotationPartTimeEmploy() {
		if (_quotationPartTimeEmploy == null) {
			return "";
		}
		else {
			return _quotationPartTimeEmploy;
		}
	}

	@Override
	public void setQuotationPartTimeEmploy(String quotationPartTimeEmploy) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_quotationPartTimeEmploy = quotationPartTimeEmploy;
	}

	@JSON
	@Override
	public String getQuotationContractors() {
		if (_quotationContractors == null) {
			return "";
		}
		else {
			return _quotationContractors;
		}
	}

	@Override
	public void setQuotationContractors(String quotationContractors) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_quotationContractors = quotationContractors;
	}

	@JSON
	@Override
	public String getQuotationContractedWorker() {
		if (_quotationContractedWorker == null) {
			return "";
		}
		else {
			return _quotationContractedWorker;
		}
	}

	@Override
	public void setQuotationContractedWorker(String quotationContractedWorker) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_quotationContractedWorker = quotationContractedWorker;
	}

	@JSON
	@Override
	public long getNcbjApplicationId() {
		return _ncbjApplicationId;
	}

	@Override
	public void setNcbjApplicationId(long ncbjApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ncbjApplicationId = ncbjApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalNcbjApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("ncbjApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), NcbjBusinessDetail.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public NcbjBusinessDetail toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, NcbjBusinessDetail>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		NcbjBusinessDetailImpl ncbjBusinessDetailImpl =
			new NcbjBusinessDetailImpl();

		ncbjBusinessDetailImpl.setNcbjBusinessDetailId(
			getNcbjBusinessDetailId());
		ncbjBusinessDetailImpl.setGroupId(getGroupId());
		ncbjBusinessDetailImpl.setCompanyId(getCompanyId());
		ncbjBusinessDetailImpl.setUserId(getUserId());
		ncbjBusinessDetailImpl.setUserName(getUserName());
		ncbjBusinessDetailImpl.setCreateDate(getCreateDate());
		ncbjBusinessDetailImpl.setModifiedDate(getModifiedDate());
		ncbjBusinessDetailImpl.setCounter(getCounter());
		ncbjBusinessDetailImpl.setQuotationAddressOne(getQuotationAddressOne());
		ncbjBusinessDetailImpl.setQuotationProductTypes(
			getQuotationProductTypes());
		ncbjBusinessDetailImpl.setQuotationApplicantShifts(
			getQuotationApplicantShifts());
		ncbjBusinessDetailImpl.setQuotationEmpNum(getQuotationEmpNum());
		ncbjBusinessDetailImpl.setQuotationHeadOffices(
			getQuotationHeadOffices());
		ncbjBusinessDetailImpl.setQuotationFullTimeEmploy(
			getQuotationFullTimeEmploy());
		ncbjBusinessDetailImpl.setQuotationPartTimeEmploy(
			getQuotationPartTimeEmploy());
		ncbjBusinessDetailImpl.setQuotationContractors(
			getQuotationContractors());
		ncbjBusinessDetailImpl.setQuotationContractedWorker(
			getQuotationContractedWorker());
		ncbjBusinessDetailImpl.setNcbjApplicationId(getNcbjApplicationId());

		ncbjBusinessDetailImpl.resetOriginalValues();

		return ncbjBusinessDetailImpl;
	}

	@Override
	public NcbjBusinessDetail cloneWithOriginalValues() {
		NcbjBusinessDetailImpl ncbjBusinessDetailImpl =
			new NcbjBusinessDetailImpl();

		ncbjBusinessDetailImpl.setNcbjBusinessDetailId(
			this.<Long>getColumnOriginalValue("ncbjBusinessDetailId"));
		ncbjBusinessDetailImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		ncbjBusinessDetailImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		ncbjBusinessDetailImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		ncbjBusinessDetailImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		ncbjBusinessDetailImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		ncbjBusinessDetailImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		ncbjBusinessDetailImpl.setCounter(
			this.<String>getColumnOriginalValue("counter"));
		ncbjBusinessDetailImpl.setQuotationAddressOne(
			this.<String>getColumnOriginalValue("quotationAddressOne"));
		ncbjBusinessDetailImpl.setQuotationProductTypes(
			this.<String>getColumnOriginalValue("quotationProductTypes"));
		ncbjBusinessDetailImpl.setQuotationApplicantShifts(
			this.<String>getColumnOriginalValue("quotationApplicantShifts"));
		ncbjBusinessDetailImpl.setQuotationEmpNum(
			this.<String>getColumnOriginalValue("quotationEmpNum"));
		ncbjBusinessDetailImpl.setQuotationHeadOffices(
			this.<String>getColumnOriginalValue("quotationHeadOffices"));
		ncbjBusinessDetailImpl.setQuotationFullTimeEmploy(
			this.<String>getColumnOriginalValue("quotationFullTimeEmploy"));
		ncbjBusinessDetailImpl.setQuotationPartTimeEmploy(
			this.<String>getColumnOriginalValue("quotationPartTimeEmploy"));
		ncbjBusinessDetailImpl.setQuotationContractors(
			this.<String>getColumnOriginalValue("quotationContractors"));
		ncbjBusinessDetailImpl.setQuotationContractedWorker(
			this.<String>getColumnOriginalValue("quotationContractedWorker"));
		ncbjBusinessDetailImpl.setNcbjApplicationId(
			this.<Long>getColumnOriginalValue("ncbjApplicationId"));

		return ncbjBusinessDetailImpl;
	}

	@Override
	public int compareTo(NcbjBusinessDetail ncbjBusinessDetail) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), ncbjBusinessDetail.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof NcbjBusinessDetail)) {
			return false;
		}

		NcbjBusinessDetail ncbjBusinessDetail = (NcbjBusinessDetail)object;

		long primaryKey = ncbjBusinessDetail.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<NcbjBusinessDetail> toCacheModel() {
		NcbjBusinessDetailCacheModel ncbjBusinessDetailCacheModel =
			new NcbjBusinessDetailCacheModel();

		ncbjBusinessDetailCacheModel.ncbjBusinessDetailId =
			getNcbjBusinessDetailId();

		ncbjBusinessDetailCacheModel.groupId = getGroupId();

		ncbjBusinessDetailCacheModel.companyId = getCompanyId();

		ncbjBusinessDetailCacheModel.userId = getUserId();

		ncbjBusinessDetailCacheModel.userName = getUserName();

		String userName = ncbjBusinessDetailCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			ncbjBusinessDetailCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			ncbjBusinessDetailCacheModel.createDate = createDate.getTime();
		}
		else {
			ncbjBusinessDetailCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			ncbjBusinessDetailCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			ncbjBusinessDetailCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		ncbjBusinessDetailCacheModel.counter = getCounter();

		String counter = ncbjBusinessDetailCacheModel.counter;

		if ((counter != null) && (counter.length() == 0)) {
			ncbjBusinessDetailCacheModel.counter = null;
		}

		ncbjBusinessDetailCacheModel.quotationAddressOne =
			getQuotationAddressOne();

		String quotationAddressOne =
			ncbjBusinessDetailCacheModel.quotationAddressOne;

		if ((quotationAddressOne != null) &&
			(quotationAddressOne.length() == 0)) {

			ncbjBusinessDetailCacheModel.quotationAddressOne = null;
		}

		ncbjBusinessDetailCacheModel.quotationProductTypes =
			getQuotationProductTypes();

		String quotationProductTypes =
			ncbjBusinessDetailCacheModel.quotationProductTypes;

		if ((quotationProductTypes != null) &&
			(quotationProductTypes.length() == 0)) {

			ncbjBusinessDetailCacheModel.quotationProductTypes = null;
		}

		ncbjBusinessDetailCacheModel.quotationApplicantShifts =
			getQuotationApplicantShifts();

		String quotationApplicantShifts =
			ncbjBusinessDetailCacheModel.quotationApplicantShifts;

		if ((quotationApplicantShifts != null) &&
			(quotationApplicantShifts.length() == 0)) {

			ncbjBusinessDetailCacheModel.quotationApplicantShifts = null;
		}

		ncbjBusinessDetailCacheModel.quotationEmpNum = getQuotationEmpNum();

		String quotationEmpNum = ncbjBusinessDetailCacheModel.quotationEmpNum;

		if ((quotationEmpNum != null) && (quotationEmpNum.length() == 0)) {
			ncbjBusinessDetailCacheModel.quotationEmpNum = null;
		}

		ncbjBusinessDetailCacheModel.quotationHeadOffices =
			getQuotationHeadOffices();

		String quotationHeadOffices =
			ncbjBusinessDetailCacheModel.quotationHeadOffices;

		if ((quotationHeadOffices != null) &&
			(quotationHeadOffices.length() == 0)) {

			ncbjBusinessDetailCacheModel.quotationHeadOffices = null;
		}

		ncbjBusinessDetailCacheModel.quotationFullTimeEmploy =
			getQuotationFullTimeEmploy();

		String quotationFullTimeEmploy =
			ncbjBusinessDetailCacheModel.quotationFullTimeEmploy;

		if ((quotationFullTimeEmploy != null) &&
			(quotationFullTimeEmploy.length() == 0)) {

			ncbjBusinessDetailCacheModel.quotationFullTimeEmploy = null;
		}

		ncbjBusinessDetailCacheModel.quotationPartTimeEmploy =
			getQuotationPartTimeEmploy();

		String quotationPartTimeEmploy =
			ncbjBusinessDetailCacheModel.quotationPartTimeEmploy;

		if ((quotationPartTimeEmploy != null) &&
			(quotationPartTimeEmploy.length() == 0)) {

			ncbjBusinessDetailCacheModel.quotationPartTimeEmploy = null;
		}

		ncbjBusinessDetailCacheModel.quotationContractors =
			getQuotationContractors();

		String quotationContractors =
			ncbjBusinessDetailCacheModel.quotationContractors;

		if ((quotationContractors != null) &&
			(quotationContractors.length() == 0)) {

			ncbjBusinessDetailCacheModel.quotationContractors = null;
		}

		ncbjBusinessDetailCacheModel.quotationContractedWorker =
			getQuotationContractedWorker();

		String quotationContractedWorker =
			ncbjBusinessDetailCacheModel.quotationContractedWorker;

		if ((quotationContractedWorker != null) &&
			(quotationContractedWorker.length() == 0)) {

			ncbjBusinessDetailCacheModel.quotationContractedWorker = null;
		}

		ncbjBusinessDetailCacheModel.ncbjApplicationId = getNcbjApplicationId();

		return ncbjBusinessDetailCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<NcbjBusinessDetail, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<NcbjBusinessDetail, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<NcbjBusinessDetail, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(NcbjBusinessDetail)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, NcbjBusinessDetail>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					NcbjBusinessDetail.class, ModelWrapper.class);

	}

	private long _ncbjBusinessDetailId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _counter;
	private String _quotationAddressOne;
	private String _quotationProductTypes;
	private String _quotationApplicantShifts;
	private String _quotationEmpNum;
	private String _quotationHeadOffices;
	private String _quotationFullTimeEmploy;
	private String _quotationPartTimeEmploy;
	private String _quotationContractors;
	private String _quotationContractedWorker;
	private long _ncbjApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<NcbjBusinessDetail, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((NcbjBusinessDetail)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"ncbjBusinessDetailId", _ncbjBusinessDetailId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("counter", _counter);
		_columnOriginalValues.put("quotationAddressOne", _quotationAddressOne);
		_columnOriginalValues.put(
			"quotationProductTypes", _quotationProductTypes);
		_columnOriginalValues.put(
			"quotationApplicantShifts", _quotationApplicantShifts);
		_columnOriginalValues.put("quotationEmpNum", _quotationEmpNum);
		_columnOriginalValues.put(
			"quotationHeadOffices", _quotationHeadOffices);
		_columnOriginalValues.put(
			"quotationFullTimeEmploy", _quotationFullTimeEmploy);
		_columnOriginalValues.put(
			"quotationPartTimeEmploy", _quotationPartTimeEmploy);
		_columnOriginalValues.put(
			"quotationContractors", _quotationContractors);
		_columnOriginalValues.put(
			"quotationContractedWorker", _quotationContractedWorker);
		_columnOriginalValues.put("ncbjApplicationId", _ncbjApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("ncbjBusinessDetailId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("counter", 128L);

		columnBitmasks.put("quotationAddressOne", 256L);

		columnBitmasks.put("quotationProductTypes", 512L);

		columnBitmasks.put("quotationApplicantShifts", 1024L);

		columnBitmasks.put("quotationEmpNum", 2048L);

		columnBitmasks.put("quotationHeadOffices", 4096L);

		columnBitmasks.put("quotationFullTimeEmploy", 8192L);

		columnBitmasks.put("quotationPartTimeEmploy", 16384L);

		columnBitmasks.put("quotationContractors", 32768L);

		columnBitmasks.put("quotationContractedWorker", 65536L);

		columnBitmasks.put("ncbjApplicationId", 131072L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private NcbjBusinessDetail _escapedModel;

}