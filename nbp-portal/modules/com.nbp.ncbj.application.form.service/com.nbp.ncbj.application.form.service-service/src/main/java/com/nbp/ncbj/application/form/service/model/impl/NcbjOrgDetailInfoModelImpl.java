/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.ncbj.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.ncbj.application.form.service.model.NcbjOrgDetailInfo;
import com.nbp.ncbj.application.form.service.model.NcbjOrgDetailInfoModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the NcbjOrgDetailInfo service. Represents a row in the &quot;nbp_ncbj_org_detail&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>NcbjOrgDetailInfoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link NcbjOrgDetailInfoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see NcbjOrgDetailInfoImpl
 * @generated
 */
@JSON(strict = true)
public class NcbjOrgDetailInfoModelImpl
	extends BaseModelImpl<NcbjOrgDetailInfo> implements NcbjOrgDetailInfoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ncbj org detail info model instance should use the <code>NcbjOrgDetailInfo</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_ncbj_org_detail";

	public static final Object[][] TABLE_COLUMNS = {
		{"ncbjOrgDetailInfoId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"newCompanyName", Types.VARCHAR},
		{"companyEmail", Types.VARCHAR}, {"mailingAddress", Types.VARCHAR},
		{"city", Types.VARCHAR}, {"postalCode", Types.VARCHAR},
		{"country", Types.VARCHAR}, {"physicalAddress", Types.VARCHAR},
		{"physicalCity", Types.VARCHAR}, {"physicalPostalCode", Types.VARCHAR},
		{"physicalCountry", Types.VARCHAR}, {"companyHead", Types.VARCHAR},
		{"companyTitle", Types.VARCHAR}, {"companyContact", Types.VARCHAR},
		{"companyContactTitle", Types.VARCHAR},
		{"companyTelephone", Types.VARCHAR}, {"companyFax", Types.VARCHAR},
		{"companyWebsite", Types.VARCHAR},
		{"certificationScope", Types.VARCHAR},
		{"manageAccessToAuditDet", Types.VARCHAR},
		{"keyActivity", Types.VARCHAR}, {"transferReason", Types.VARCHAR},
		{"indicateStandard", Types.VARCHAR},
		{"ceritificationBodyName", Types.VARCHAR},
		{"consultingFirm", Types.VARCHAR}, {"consultant", Types.VARCHAR},
		{"telephone", Types.VARCHAR}, {"email", Types.VARCHAR},
		{"certificationScopeRadio", Types.VARCHAR},
		{"outsourceProcess", Types.VARCHAR},
		{"relevantRequirement", Types.VARCHAR},
		{"relevantRequirementList", Types.VARCHAR},
		{"managementAccessToAudit", Types.VARCHAR},
		{"pleaseManageDetail", Types.VARCHAR},
		{"desiredCertification", Types.VARCHAR},
		{"surveillanceSchedule", Types.VARCHAR},
		{"certifiedManagement", Types.VARCHAR},
		{"certifiedAccreditedCerti", Types.VARCHAR},
		{"companyUsedConsulting", Types.VARCHAR},
		{"ncbjApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ncbjOrgDetailInfoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("newCompanyName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mailingAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("city", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("postalCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("country", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("physicalAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("physicalCity", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("physicalPostalCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("physicalCountry", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyHead", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyTitle", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyContact", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyContactTitle", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyTelephone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyFax", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyWebsite", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("certificationScope", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("manageAccessToAuditDet", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("keyActivity", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("transferReason", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("indicateStandard", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ceritificationBodyName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("consultingFirm", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("consultant", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("telephone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("email", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("certificationScopeRadio", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("outsourceProcess", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("relevantRequirement", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("relevantRequirementList", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("managementAccessToAudit", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pleaseManageDetail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("desiredCertification", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("surveillanceSchedule", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("certifiedManagement", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("certifiedAccreditedCerti", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyUsedConsulting", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ncbjApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_ncbj_org_detail (ncbjOrgDetailInfoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,newCompanyName VARCHAR(75) null,companyEmail VARCHAR(75) null,mailingAddress VARCHAR(500) null,city VARCHAR(75) null,postalCode VARCHAR(75) null,country VARCHAR(75) null,physicalAddress VARCHAR(75) null,physicalCity VARCHAR(75) null,physicalPostalCode VARCHAR(75) null,physicalCountry VARCHAR(75) null,companyHead VARCHAR(75) null,companyTitle VARCHAR(75) null,companyContact VARCHAR(75) null,companyContactTitle VARCHAR(75) null,companyTelephone VARCHAR(75) null,companyFax VARCHAR(75) null,companyWebsite VARCHAR(75) null,certificationScope VARCHAR(75) null,manageAccessToAuditDet VARCHAR(75) null,keyActivity VARCHAR(75) null,transferReason VARCHAR(75) null,indicateStandard VARCHAR(75) null,ceritificationBodyName VARCHAR(75) null,consultingFirm VARCHAR(75) null,consultant VARCHAR(75) null,telephone VARCHAR(75) null,email VARCHAR(75) null,certificationScopeRadio VARCHAR(75) null,outsourceProcess VARCHAR(75) null,relevantRequirement VARCHAR(75) null,relevantRequirementList VARCHAR(75) null,managementAccessToAudit VARCHAR(75) null,pleaseManageDetail VARCHAR(75) null,desiredCertification VARCHAR(75) null,surveillanceSchedule VARCHAR(75) null,certifiedManagement VARCHAR(75) null,certifiedAccreditedCerti VARCHAR(75) null,companyUsedConsulting VARCHAR(75) null,ncbjApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_ncbj_org_detail";

	public static final String ORDER_BY_JPQL =
		" ORDER BY ncbjOrgDetailInfo.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_ncbj_org_detail.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long NCBJAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public NcbjOrgDetailInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _ncbjOrgDetailInfoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setNcbjOrgDetailInfoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ncbjOrgDetailInfoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return NcbjOrgDetailInfo.class;
	}

	@Override
	public String getModelClassName() {
		return NcbjOrgDetailInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<NcbjOrgDetailInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<NcbjOrgDetailInfo, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<NcbjOrgDetailInfo, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((NcbjOrgDetailInfo)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<NcbjOrgDetailInfo, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<NcbjOrgDetailInfo, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(NcbjOrgDetailInfo)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<NcbjOrgDetailInfo, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<NcbjOrgDetailInfo, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<NcbjOrgDetailInfo, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<NcbjOrgDetailInfo, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<NcbjOrgDetailInfo, Object>>();

			attributeGetterFunctions.put(
				"ncbjOrgDetailInfoId",
				NcbjOrgDetailInfo::getNcbjOrgDetailInfoId);
			attributeGetterFunctions.put(
				"groupId", NcbjOrgDetailInfo::getGroupId);
			attributeGetterFunctions.put(
				"companyId", NcbjOrgDetailInfo::getCompanyId);
			attributeGetterFunctions.put(
				"userId", NcbjOrgDetailInfo::getUserId);
			attributeGetterFunctions.put(
				"userName", NcbjOrgDetailInfo::getUserName);
			attributeGetterFunctions.put(
				"createDate", NcbjOrgDetailInfo::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", NcbjOrgDetailInfo::getModifiedDate);
			attributeGetterFunctions.put(
				"newCompanyName", NcbjOrgDetailInfo::getNewCompanyName);
			attributeGetterFunctions.put(
				"companyEmail", NcbjOrgDetailInfo::getCompanyEmail);
			attributeGetterFunctions.put(
				"mailingAddress", NcbjOrgDetailInfo::getMailingAddress);
			attributeGetterFunctions.put("city", NcbjOrgDetailInfo::getCity);
			attributeGetterFunctions.put(
				"postalCode", NcbjOrgDetailInfo::getPostalCode);
			attributeGetterFunctions.put(
				"country", NcbjOrgDetailInfo::getCountry);
			attributeGetterFunctions.put(
				"physicalAddress", NcbjOrgDetailInfo::getPhysicalAddress);
			attributeGetterFunctions.put(
				"physicalCity", NcbjOrgDetailInfo::getPhysicalCity);
			attributeGetterFunctions.put(
				"physicalPostalCode", NcbjOrgDetailInfo::getPhysicalPostalCode);
			attributeGetterFunctions.put(
				"physicalCountry", NcbjOrgDetailInfo::getPhysicalCountry);
			attributeGetterFunctions.put(
				"companyHead", NcbjOrgDetailInfo::getCompanyHead);
			attributeGetterFunctions.put(
				"companyTitle", NcbjOrgDetailInfo::getCompanyTitle);
			attributeGetterFunctions.put(
				"companyContact", NcbjOrgDetailInfo::getCompanyContact);
			attributeGetterFunctions.put(
				"companyContactTitle",
				NcbjOrgDetailInfo::getCompanyContactTitle);
			attributeGetterFunctions.put(
				"companyTelephone", NcbjOrgDetailInfo::getCompanyTelephone);
			attributeGetterFunctions.put(
				"companyFax", NcbjOrgDetailInfo::getCompanyFax);
			attributeGetterFunctions.put(
				"companyWebsite", NcbjOrgDetailInfo::getCompanyWebsite);
			attributeGetterFunctions.put(
				"certificationScope", NcbjOrgDetailInfo::getCertificationScope);
			attributeGetterFunctions.put(
				"manageAccessToAuditDet",
				NcbjOrgDetailInfo::getManageAccessToAuditDet);
			attributeGetterFunctions.put(
				"keyActivity", NcbjOrgDetailInfo::getKeyActivity);
			attributeGetterFunctions.put(
				"transferReason", NcbjOrgDetailInfo::getTransferReason);
			attributeGetterFunctions.put(
				"indicateStandard", NcbjOrgDetailInfo::getIndicateStandard);
			attributeGetterFunctions.put(
				"ceritificationBodyName",
				NcbjOrgDetailInfo::getCeritificationBodyName);
			attributeGetterFunctions.put(
				"consultingFirm", NcbjOrgDetailInfo::getConsultingFirm);
			attributeGetterFunctions.put(
				"consultant", NcbjOrgDetailInfo::getConsultant);
			attributeGetterFunctions.put(
				"telephone", NcbjOrgDetailInfo::getTelephone);
			attributeGetterFunctions.put("email", NcbjOrgDetailInfo::getEmail);
			attributeGetterFunctions.put(
				"certificationScopeRadio",
				NcbjOrgDetailInfo::getCertificationScopeRadio);
			attributeGetterFunctions.put(
				"outsourceProcess", NcbjOrgDetailInfo::getOutsourceProcess);
			attributeGetterFunctions.put(
				"relevantRequirement",
				NcbjOrgDetailInfo::getRelevantRequirement);
			attributeGetterFunctions.put(
				"relevantRequirementList",
				NcbjOrgDetailInfo::getRelevantRequirementList);
			attributeGetterFunctions.put(
				"managementAccessToAudit",
				NcbjOrgDetailInfo::getManagementAccessToAudit);
			attributeGetterFunctions.put(
				"pleaseManageDetail", NcbjOrgDetailInfo::getPleaseManageDetail);
			attributeGetterFunctions.put(
				"desiredCertification",
				NcbjOrgDetailInfo::getDesiredCertification);
			attributeGetterFunctions.put(
				"surveillanceSchedule",
				NcbjOrgDetailInfo::getSurveillanceSchedule);
			attributeGetterFunctions.put(
				"certifiedManagement",
				NcbjOrgDetailInfo::getCertifiedManagement);
			attributeGetterFunctions.put(
				"certifiedAccreditedCerti",
				NcbjOrgDetailInfo::getCertifiedAccreditedCerti);
			attributeGetterFunctions.put(
				"companyUsedConsulting",
				NcbjOrgDetailInfo::getCompanyUsedConsulting);
			attributeGetterFunctions.put(
				"ncbjApplicationId", NcbjOrgDetailInfo::getNcbjApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<NcbjOrgDetailInfo, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<NcbjOrgDetailInfo, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<NcbjOrgDetailInfo, ?>>();

			attributeSetterBiConsumers.put(
				"ncbjOrgDetailInfoId",
				(BiConsumer<NcbjOrgDetailInfo, Long>)
					NcbjOrgDetailInfo::setNcbjOrgDetailInfoId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<NcbjOrgDetailInfo, Long>)
					NcbjOrgDetailInfo::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<NcbjOrgDetailInfo, Long>)
					NcbjOrgDetailInfo::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<NcbjOrgDetailInfo, Long>)
					NcbjOrgDetailInfo::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<NcbjOrgDetailInfo, Date>)
					NcbjOrgDetailInfo::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<NcbjOrgDetailInfo, Date>)
					NcbjOrgDetailInfo::setModifiedDate);
			attributeSetterBiConsumers.put(
				"newCompanyName",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setNewCompanyName);
			attributeSetterBiConsumers.put(
				"companyEmail",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setCompanyEmail);
			attributeSetterBiConsumers.put(
				"mailingAddress",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setMailingAddress);
			attributeSetterBiConsumers.put(
				"city",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setCity);
			attributeSetterBiConsumers.put(
				"postalCode",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setPostalCode);
			attributeSetterBiConsumers.put(
				"country",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setCountry);
			attributeSetterBiConsumers.put(
				"physicalAddress",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setPhysicalAddress);
			attributeSetterBiConsumers.put(
				"physicalCity",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setPhysicalCity);
			attributeSetterBiConsumers.put(
				"physicalPostalCode",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setPhysicalPostalCode);
			attributeSetterBiConsumers.put(
				"physicalCountry",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setPhysicalCountry);
			attributeSetterBiConsumers.put(
				"companyHead",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setCompanyHead);
			attributeSetterBiConsumers.put(
				"companyTitle",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setCompanyTitle);
			attributeSetterBiConsumers.put(
				"companyContact",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setCompanyContact);
			attributeSetterBiConsumers.put(
				"companyContactTitle",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setCompanyContactTitle);
			attributeSetterBiConsumers.put(
				"companyTelephone",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setCompanyTelephone);
			attributeSetterBiConsumers.put(
				"companyFax",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setCompanyFax);
			attributeSetterBiConsumers.put(
				"companyWebsite",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setCompanyWebsite);
			attributeSetterBiConsumers.put(
				"certificationScope",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setCertificationScope);
			attributeSetterBiConsumers.put(
				"manageAccessToAuditDet",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setManageAccessToAuditDet);
			attributeSetterBiConsumers.put(
				"keyActivity",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setKeyActivity);
			attributeSetterBiConsumers.put(
				"transferReason",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setTransferReason);
			attributeSetterBiConsumers.put(
				"indicateStandard",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setIndicateStandard);
			attributeSetterBiConsumers.put(
				"ceritificationBodyName",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setCeritificationBodyName);
			attributeSetterBiConsumers.put(
				"consultingFirm",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setConsultingFirm);
			attributeSetterBiConsumers.put(
				"consultant",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setConsultant);
			attributeSetterBiConsumers.put(
				"telephone",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setTelephone);
			attributeSetterBiConsumers.put(
				"email",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setEmail);
			attributeSetterBiConsumers.put(
				"certificationScopeRadio",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setCertificationScopeRadio);
			attributeSetterBiConsumers.put(
				"outsourceProcess",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setOutsourceProcess);
			attributeSetterBiConsumers.put(
				"relevantRequirement",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setRelevantRequirement);
			attributeSetterBiConsumers.put(
				"relevantRequirementList",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setRelevantRequirementList);
			attributeSetterBiConsumers.put(
				"managementAccessToAudit",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setManagementAccessToAudit);
			attributeSetterBiConsumers.put(
				"pleaseManageDetail",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setPleaseManageDetail);
			attributeSetterBiConsumers.put(
				"desiredCertification",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setDesiredCertification);
			attributeSetterBiConsumers.put(
				"surveillanceSchedule",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setSurveillanceSchedule);
			attributeSetterBiConsumers.put(
				"certifiedManagement",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setCertifiedManagement);
			attributeSetterBiConsumers.put(
				"certifiedAccreditedCerti",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setCertifiedAccreditedCerti);
			attributeSetterBiConsumers.put(
				"companyUsedConsulting",
				(BiConsumer<NcbjOrgDetailInfo, String>)
					NcbjOrgDetailInfo::setCompanyUsedConsulting);
			attributeSetterBiConsumers.put(
				"ncbjApplicationId",
				(BiConsumer<NcbjOrgDetailInfo, Long>)
					NcbjOrgDetailInfo::setNcbjApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getNcbjOrgDetailInfoId() {
		return _ncbjOrgDetailInfoId;
	}

	@Override
	public void setNcbjOrgDetailInfoId(long ncbjOrgDetailInfoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ncbjOrgDetailInfoId = ncbjOrgDetailInfoId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getNewCompanyName() {
		if (_newCompanyName == null) {
			return "";
		}
		else {
			return _newCompanyName;
		}
	}

	@Override
	public void setNewCompanyName(String newCompanyName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_newCompanyName = newCompanyName;
	}

	@JSON
	@Override
	public String getCompanyEmail() {
		if (_companyEmail == null) {
			return "";
		}
		else {
			return _companyEmail;
		}
	}

	@Override
	public void setCompanyEmail(String companyEmail) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyEmail = companyEmail;
	}

	@JSON
	@Override
	public String getMailingAddress() {
		if (_mailingAddress == null) {
			return "";
		}
		else {
			return _mailingAddress;
		}
	}

	@Override
	public void setMailingAddress(String mailingAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mailingAddress = mailingAddress;
	}

	@JSON
	@Override
	public String getCity() {
		if (_city == null) {
			return "";
		}
		else {
			return _city;
		}
	}

	@Override
	public void setCity(String city) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_city = city;
	}

	@JSON
	@Override
	public String getPostalCode() {
		if (_postalCode == null) {
			return "";
		}
		else {
			return _postalCode;
		}
	}

	@Override
	public void setPostalCode(String postalCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_postalCode = postalCode;
	}

	@JSON
	@Override
	public String getCountry() {
		if (_country == null) {
			return "";
		}
		else {
			return _country;
		}
	}

	@Override
	public void setCountry(String country) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_country = country;
	}

	@JSON
	@Override
	public String getPhysicalAddress() {
		if (_physicalAddress == null) {
			return "";
		}
		else {
			return _physicalAddress;
		}
	}

	@Override
	public void setPhysicalAddress(String physicalAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_physicalAddress = physicalAddress;
	}

	@JSON
	@Override
	public String getPhysicalCity() {
		if (_physicalCity == null) {
			return "";
		}
		else {
			return _physicalCity;
		}
	}

	@Override
	public void setPhysicalCity(String physicalCity) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_physicalCity = physicalCity;
	}

	@JSON
	@Override
	public String getPhysicalPostalCode() {
		if (_physicalPostalCode == null) {
			return "";
		}
		else {
			return _physicalPostalCode;
		}
	}

	@Override
	public void setPhysicalPostalCode(String physicalPostalCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_physicalPostalCode = physicalPostalCode;
	}

	@JSON
	@Override
	public String getPhysicalCountry() {
		if (_physicalCountry == null) {
			return "";
		}
		else {
			return _physicalCountry;
		}
	}

	@Override
	public void setPhysicalCountry(String physicalCountry) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_physicalCountry = physicalCountry;
	}

	@JSON
	@Override
	public String getCompanyHead() {
		if (_companyHead == null) {
			return "";
		}
		else {
			return _companyHead;
		}
	}

	@Override
	public void setCompanyHead(String companyHead) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyHead = companyHead;
	}

	@JSON
	@Override
	public String getCompanyTitle() {
		if (_companyTitle == null) {
			return "";
		}
		else {
			return _companyTitle;
		}
	}

	@Override
	public void setCompanyTitle(String companyTitle) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyTitle = companyTitle;
	}

	@JSON
	@Override
	public String getCompanyContact() {
		if (_companyContact == null) {
			return "";
		}
		else {
			return _companyContact;
		}
	}

	@Override
	public void setCompanyContact(String companyContact) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyContact = companyContact;
	}

	@JSON
	@Override
	public String getCompanyContactTitle() {
		if (_companyContactTitle == null) {
			return "";
		}
		else {
			return _companyContactTitle;
		}
	}

	@Override
	public void setCompanyContactTitle(String companyContactTitle) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyContactTitle = companyContactTitle;
	}

	@JSON
	@Override
	public String getCompanyTelephone() {
		if (_companyTelephone == null) {
			return "";
		}
		else {
			return _companyTelephone;
		}
	}

	@Override
	public void setCompanyTelephone(String companyTelephone) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyTelephone = companyTelephone;
	}

	@JSON
	@Override
	public String getCompanyFax() {
		if (_companyFax == null) {
			return "";
		}
		else {
			return _companyFax;
		}
	}

	@Override
	public void setCompanyFax(String companyFax) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyFax = companyFax;
	}

	@JSON
	@Override
	public String getCompanyWebsite() {
		if (_companyWebsite == null) {
			return "";
		}
		else {
			return _companyWebsite;
		}
	}

	@Override
	public void setCompanyWebsite(String companyWebsite) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyWebsite = companyWebsite;
	}

	@JSON
	@Override
	public String getCertificationScope() {
		if (_certificationScope == null) {
			return "";
		}
		else {
			return _certificationScope;
		}
	}

	@Override
	public void setCertificationScope(String certificationScope) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_certificationScope = certificationScope;
	}

	@JSON
	@Override
	public String getManageAccessToAuditDet() {
		if (_manageAccessToAuditDet == null) {
			return "";
		}
		else {
			return _manageAccessToAuditDet;
		}
	}

	@Override
	public void setManageAccessToAuditDet(String manageAccessToAuditDet) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_manageAccessToAuditDet = manageAccessToAuditDet;
	}

	@JSON
	@Override
	public String getKeyActivity() {
		if (_keyActivity == null) {
			return "";
		}
		else {
			return _keyActivity;
		}
	}

	@Override
	public void setKeyActivity(String keyActivity) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_keyActivity = keyActivity;
	}

	@JSON
	@Override
	public String getTransferReason() {
		if (_transferReason == null) {
			return "";
		}
		else {
			return _transferReason;
		}
	}

	@Override
	public void setTransferReason(String transferReason) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_transferReason = transferReason;
	}

	@JSON
	@Override
	public String getIndicateStandard() {
		if (_indicateStandard == null) {
			return "";
		}
		else {
			return _indicateStandard;
		}
	}

	@Override
	public void setIndicateStandard(String indicateStandard) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_indicateStandard = indicateStandard;
	}

	@JSON
	@Override
	public String getCeritificationBodyName() {
		if (_ceritificationBodyName == null) {
			return "";
		}
		else {
			return _ceritificationBodyName;
		}
	}

	@Override
	public void setCeritificationBodyName(String ceritificationBodyName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ceritificationBodyName = ceritificationBodyName;
	}

	@JSON
	@Override
	public String getConsultingFirm() {
		if (_consultingFirm == null) {
			return "";
		}
		else {
			return _consultingFirm;
		}
	}

	@Override
	public void setConsultingFirm(String consultingFirm) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_consultingFirm = consultingFirm;
	}

	@JSON
	@Override
	public String getConsultant() {
		if (_consultant == null) {
			return "";
		}
		else {
			return _consultant;
		}
	}

	@Override
	public void setConsultant(String consultant) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_consultant = consultant;
	}

	@JSON
	@Override
	public String getTelephone() {
		if (_telephone == null) {
			return "";
		}
		else {
			return _telephone;
		}
	}

	@Override
	public void setTelephone(String telephone) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_telephone = telephone;
	}

	@JSON
	@Override
	public String getEmail() {
		if (_email == null) {
			return "";
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_email = email;
	}

	@JSON
	@Override
	public String getCertificationScopeRadio() {
		if (_certificationScopeRadio == null) {
			return "";
		}
		else {
			return _certificationScopeRadio;
		}
	}

	@Override
	public void setCertificationScopeRadio(String certificationScopeRadio) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_certificationScopeRadio = certificationScopeRadio;
	}

	@JSON
	@Override
	public String getOutsourceProcess() {
		if (_outsourceProcess == null) {
			return "";
		}
		else {
			return _outsourceProcess;
		}
	}

	@Override
	public void setOutsourceProcess(String outsourceProcess) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_outsourceProcess = outsourceProcess;
	}

	@JSON
	@Override
	public String getRelevantRequirement() {
		if (_relevantRequirement == null) {
			return "";
		}
		else {
			return _relevantRequirement;
		}
	}

	@Override
	public void setRelevantRequirement(String relevantRequirement) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_relevantRequirement = relevantRequirement;
	}

	@JSON
	@Override
	public String getRelevantRequirementList() {
		if (_relevantRequirementList == null) {
			return "";
		}
		else {
			return _relevantRequirementList;
		}
	}

	@Override
	public void setRelevantRequirementList(String relevantRequirementList) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_relevantRequirementList = relevantRequirementList;
	}

	@JSON
	@Override
	public String getManagementAccessToAudit() {
		if (_managementAccessToAudit == null) {
			return "";
		}
		else {
			return _managementAccessToAudit;
		}
	}

	@Override
	public void setManagementAccessToAudit(String managementAccessToAudit) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_managementAccessToAudit = managementAccessToAudit;
	}

	@JSON
	@Override
	public String getPleaseManageDetail() {
		if (_pleaseManageDetail == null) {
			return "";
		}
		else {
			return _pleaseManageDetail;
		}
	}

	@Override
	public void setPleaseManageDetail(String pleaseManageDetail) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pleaseManageDetail = pleaseManageDetail;
	}

	@JSON
	@Override
	public String getDesiredCertification() {
		if (_desiredCertification == null) {
			return "";
		}
		else {
			return _desiredCertification;
		}
	}

	@Override
	public void setDesiredCertification(String desiredCertification) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_desiredCertification = desiredCertification;
	}

	@JSON
	@Override
	public String getSurveillanceSchedule() {
		if (_surveillanceSchedule == null) {
			return "";
		}
		else {
			return _surveillanceSchedule;
		}
	}

	@Override
	public void setSurveillanceSchedule(String surveillanceSchedule) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_surveillanceSchedule = surveillanceSchedule;
	}

	@JSON
	@Override
	public String getCertifiedManagement() {
		if (_certifiedManagement == null) {
			return "";
		}
		else {
			return _certifiedManagement;
		}
	}

	@Override
	public void setCertifiedManagement(String certifiedManagement) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_certifiedManagement = certifiedManagement;
	}

	@JSON
	@Override
	public String getCertifiedAccreditedCerti() {
		if (_certifiedAccreditedCerti == null) {
			return "";
		}
		else {
			return _certifiedAccreditedCerti;
		}
	}

	@Override
	public void setCertifiedAccreditedCerti(String certifiedAccreditedCerti) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_certifiedAccreditedCerti = certifiedAccreditedCerti;
	}

	@JSON
	@Override
	public String getCompanyUsedConsulting() {
		if (_companyUsedConsulting == null) {
			return "";
		}
		else {
			return _companyUsedConsulting;
		}
	}

	@Override
	public void setCompanyUsedConsulting(String companyUsedConsulting) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyUsedConsulting = companyUsedConsulting;
	}

	@JSON
	@Override
	public long getNcbjApplicationId() {
		return _ncbjApplicationId;
	}

	@Override
	public void setNcbjApplicationId(long ncbjApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ncbjApplicationId = ncbjApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalNcbjApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("ncbjApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), NcbjOrgDetailInfo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public NcbjOrgDetailInfo toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, NcbjOrgDetailInfo>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		NcbjOrgDetailInfoImpl ncbjOrgDetailInfoImpl =
			new NcbjOrgDetailInfoImpl();

		ncbjOrgDetailInfoImpl.setNcbjOrgDetailInfoId(getNcbjOrgDetailInfoId());
		ncbjOrgDetailInfoImpl.setGroupId(getGroupId());
		ncbjOrgDetailInfoImpl.setCompanyId(getCompanyId());
		ncbjOrgDetailInfoImpl.setUserId(getUserId());
		ncbjOrgDetailInfoImpl.setUserName(getUserName());
		ncbjOrgDetailInfoImpl.setCreateDate(getCreateDate());
		ncbjOrgDetailInfoImpl.setModifiedDate(getModifiedDate());
		ncbjOrgDetailInfoImpl.setNewCompanyName(getNewCompanyName());
		ncbjOrgDetailInfoImpl.setCompanyEmail(getCompanyEmail());
		ncbjOrgDetailInfoImpl.setMailingAddress(getMailingAddress());
		ncbjOrgDetailInfoImpl.setCity(getCity());
		ncbjOrgDetailInfoImpl.setPostalCode(getPostalCode());
		ncbjOrgDetailInfoImpl.setCountry(getCountry());
		ncbjOrgDetailInfoImpl.setPhysicalAddress(getPhysicalAddress());
		ncbjOrgDetailInfoImpl.setPhysicalCity(getPhysicalCity());
		ncbjOrgDetailInfoImpl.setPhysicalPostalCode(getPhysicalPostalCode());
		ncbjOrgDetailInfoImpl.setPhysicalCountry(getPhysicalCountry());
		ncbjOrgDetailInfoImpl.setCompanyHead(getCompanyHead());
		ncbjOrgDetailInfoImpl.setCompanyTitle(getCompanyTitle());
		ncbjOrgDetailInfoImpl.setCompanyContact(getCompanyContact());
		ncbjOrgDetailInfoImpl.setCompanyContactTitle(getCompanyContactTitle());
		ncbjOrgDetailInfoImpl.setCompanyTelephone(getCompanyTelephone());
		ncbjOrgDetailInfoImpl.setCompanyFax(getCompanyFax());
		ncbjOrgDetailInfoImpl.setCompanyWebsite(getCompanyWebsite());
		ncbjOrgDetailInfoImpl.setCertificationScope(getCertificationScope());
		ncbjOrgDetailInfoImpl.setManageAccessToAuditDet(
			getManageAccessToAuditDet());
		ncbjOrgDetailInfoImpl.setKeyActivity(getKeyActivity());
		ncbjOrgDetailInfoImpl.setTransferReason(getTransferReason());
		ncbjOrgDetailInfoImpl.setIndicateStandard(getIndicateStandard());
		ncbjOrgDetailInfoImpl.setCeritificationBodyName(
			getCeritificationBodyName());
		ncbjOrgDetailInfoImpl.setConsultingFirm(getConsultingFirm());
		ncbjOrgDetailInfoImpl.setConsultant(getConsultant());
		ncbjOrgDetailInfoImpl.setTelephone(getTelephone());
		ncbjOrgDetailInfoImpl.setEmail(getEmail());
		ncbjOrgDetailInfoImpl.setCertificationScopeRadio(
			getCertificationScopeRadio());
		ncbjOrgDetailInfoImpl.setOutsourceProcess(getOutsourceProcess());
		ncbjOrgDetailInfoImpl.setRelevantRequirement(getRelevantRequirement());
		ncbjOrgDetailInfoImpl.setRelevantRequirementList(
			getRelevantRequirementList());
		ncbjOrgDetailInfoImpl.setManagementAccessToAudit(
			getManagementAccessToAudit());
		ncbjOrgDetailInfoImpl.setPleaseManageDetail(getPleaseManageDetail());
		ncbjOrgDetailInfoImpl.setDesiredCertification(
			getDesiredCertification());
		ncbjOrgDetailInfoImpl.setSurveillanceSchedule(
			getSurveillanceSchedule());
		ncbjOrgDetailInfoImpl.setCertifiedManagement(getCertifiedManagement());
		ncbjOrgDetailInfoImpl.setCertifiedAccreditedCerti(
			getCertifiedAccreditedCerti());
		ncbjOrgDetailInfoImpl.setCompanyUsedConsulting(
			getCompanyUsedConsulting());
		ncbjOrgDetailInfoImpl.setNcbjApplicationId(getNcbjApplicationId());

		ncbjOrgDetailInfoImpl.resetOriginalValues();

		return ncbjOrgDetailInfoImpl;
	}

	@Override
	public NcbjOrgDetailInfo cloneWithOriginalValues() {
		NcbjOrgDetailInfoImpl ncbjOrgDetailInfoImpl =
			new NcbjOrgDetailInfoImpl();

		ncbjOrgDetailInfoImpl.setNcbjOrgDetailInfoId(
			this.<Long>getColumnOriginalValue("ncbjOrgDetailInfoId"));
		ncbjOrgDetailInfoImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		ncbjOrgDetailInfoImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		ncbjOrgDetailInfoImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		ncbjOrgDetailInfoImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		ncbjOrgDetailInfoImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		ncbjOrgDetailInfoImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		ncbjOrgDetailInfoImpl.setNewCompanyName(
			this.<String>getColumnOriginalValue("newCompanyName"));
		ncbjOrgDetailInfoImpl.setCompanyEmail(
			this.<String>getColumnOriginalValue("companyEmail"));
		ncbjOrgDetailInfoImpl.setMailingAddress(
			this.<String>getColumnOriginalValue("mailingAddress"));
		ncbjOrgDetailInfoImpl.setCity(
			this.<String>getColumnOriginalValue("city"));
		ncbjOrgDetailInfoImpl.setPostalCode(
			this.<String>getColumnOriginalValue("postalCode"));
		ncbjOrgDetailInfoImpl.setCountry(
			this.<String>getColumnOriginalValue("country"));
		ncbjOrgDetailInfoImpl.setPhysicalAddress(
			this.<String>getColumnOriginalValue("physicalAddress"));
		ncbjOrgDetailInfoImpl.setPhysicalCity(
			this.<String>getColumnOriginalValue("physicalCity"));
		ncbjOrgDetailInfoImpl.setPhysicalPostalCode(
			this.<String>getColumnOriginalValue("physicalPostalCode"));
		ncbjOrgDetailInfoImpl.setPhysicalCountry(
			this.<String>getColumnOriginalValue("physicalCountry"));
		ncbjOrgDetailInfoImpl.setCompanyHead(
			this.<String>getColumnOriginalValue("companyHead"));
		ncbjOrgDetailInfoImpl.setCompanyTitle(
			this.<String>getColumnOriginalValue("companyTitle"));
		ncbjOrgDetailInfoImpl.setCompanyContact(
			this.<String>getColumnOriginalValue("companyContact"));
		ncbjOrgDetailInfoImpl.setCompanyContactTitle(
			this.<String>getColumnOriginalValue("companyContactTitle"));
		ncbjOrgDetailInfoImpl.setCompanyTelephone(
			this.<String>getColumnOriginalValue("companyTelephone"));
		ncbjOrgDetailInfoImpl.setCompanyFax(
			this.<String>getColumnOriginalValue("companyFax"));
		ncbjOrgDetailInfoImpl.setCompanyWebsite(
			this.<String>getColumnOriginalValue("companyWebsite"));
		ncbjOrgDetailInfoImpl.setCertificationScope(
			this.<String>getColumnOriginalValue("certificationScope"));
		ncbjOrgDetailInfoImpl.setManageAccessToAuditDet(
			this.<String>getColumnOriginalValue("manageAccessToAuditDet"));
		ncbjOrgDetailInfoImpl.setKeyActivity(
			this.<String>getColumnOriginalValue("keyActivity"));
		ncbjOrgDetailInfoImpl.setTransferReason(
			this.<String>getColumnOriginalValue("transferReason"));
		ncbjOrgDetailInfoImpl.setIndicateStandard(
			this.<String>getColumnOriginalValue("indicateStandard"));
		ncbjOrgDetailInfoImpl.setCeritificationBodyName(
			this.<String>getColumnOriginalValue("ceritificationBodyName"));
		ncbjOrgDetailInfoImpl.setConsultingFirm(
			this.<String>getColumnOriginalValue("consultingFirm"));
		ncbjOrgDetailInfoImpl.setConsultant(
			this.<String>getColumnOriginalValue("consultant"));
		ncbjOrgDetailInfoImpl.setTelephone(
			this.<String>getColumnOriginalValue("telephone"));
		ncbjOrgDetailInfoImpl.setEmail(
			this.<String>getColumnOriginalValue("email"));
		ncbjOrgDetailInfoImpl.setCertificationScopeRadio(
			this.<String>getColumnOriginalValue("certificationScopeRadio"));
		ncbjOrgDetailInfoImpl.setOutsourceProcess(
			this.<String>getColumnOriginalValue("outsourceProcess"));
		ncbjOrgDetailInfoImpl.setRelevantRequirement(
			this.<String>getColumnOriginalValue("relevantRequirement"));
		ncbjOrgDetailInfoImpl.setRelevantRequirementList(
			this.<String>getColumnOriginalValue("relevantRequirementList"));
		ncbjOrgDetailInfoImpl.setManagementAccessToAudit(
			this.<String>getColumnOriginalValue("managementAccessToAudit"));
		ncbjOrgDetailInfoImpl.setPleaseManageDetail(
			this.<String>getColumnOriginalValue("pleaseManageDetail"));
		ncbjOrgDetailInfoImpl.setDesiredCertification(
			this.<String>getColumnOriginalValue("desiredCertification"));
		ncbjOrgDetailInfoImpl.setSurveillanceSchedule(
			this.<String>getColumnOriginalValue("surveillanceSchedule"));
		ncbjOrgDetailInfoImpl.setCertifiedManagement(
			this.<String>getColumnOriginalValue("certifiedManagement"));
		ncbjOrgDetailInfoImpl.setCertifiedAccreditedCerti(
			this.<String>getColumnOriginalValue("certifiedAccreditedCerti"));
		ncbjOrgDetailInfoImpl.setCompanyUsedConsulting(
			this.<String>getColumnOriginalValue("companyUsedConsulting"));
		ncbjOrgDetailInfoImpl.setNcbjApplicationId(
			this.<Long>getColumnOriginalValue("ncbjApplicationId"));

		return ncbjOrgDetailInfoImpl;
	}

	@Override
	public int compareTo(NcbjOrgDetailInfo ncbjOrgDetailInfo) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), ncbjOrgDetailInfo.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof NcbjOrgDetailInfo)) {
			return false;
		}

		NcbjOrgDetailInfo ncbjOrgDetailInfo = (NcbjOrgDetailInfo)object;

		long primaryKey = ncbjOrgDetailInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<NcbjOrgDetailInfo> toCacheModel() {
		NcbjOrgDetailInfoCacheModel ncbjOrgDetailInfoCacheModel =
			new NcbjOrgDetailInfoCacheModel();

		ncbjOrgDetailInfoCacheModel.ncbjOrgDetailInfoId =
			getNcbjOrgDetailInfoId();

		ncbjOrgDetailInfoCacheModel.groupId = getGroupId();

		ncbjOrgDetailInfoCacheModel.companyId = getCompanyId();

		ncbjOrgDetailInfoCacheModel.userId = getUserId();

		ncbjOrgDetailInfoCacheModel.userName = getUserName();

		String userName = ncbjOrgDetailInfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			ncbjOrgDetailInfoCacheModel.createDate = createDate.getTime();
		}
		else {
			ncbjOrgDetailInfoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			ncbjOrgDetailInfoCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			ncbjOrgDetailInfoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		ncbjOrgDetailInfoCacheModel.newCompanyName = getNewCompanyName();

		String newCompanyName = ncbjOrgDetailInfoCacheModel.newCompanyName;

		if ((newCompanyName != null) && (newCompanyName.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.newCompanyName = null;
		}

		ncbjOrgDetailInfoCacheModel.companyEmail = getCompanyEmail();

		String companyEmail = ncbjOrgDetailInfoCacheModel.companyEmail;

		if ((companyEmail != null) && (companyEmail.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.companyEmail = null;
		}

		ncbjOrgDetailInfoCacheModel.mailingAddress = getMailingAddress();

		String mailingAddress = ncbjOrgDetailInfoCacheModel.mailingAddress;

		if ((mailingAddress != null) && (mailingAddress.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.mailingAddress = null;
		}

		ncbjOrgDetailInfoCacheModel.city = getCity();

		String city = ncbjOrgDetailInfoCacheModel.city;

		if ((city != null) && (city.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.city = null;
		}

		ncbjOrgDetailInfoCacheModel.postalCode = getPostalCode();

		String postalCode = ncbjOrgDetailInfoCacheModel.postalCode;

		if ((postalCode != null) && (postalCode.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.postalCode = null;
		}

		ncbjOrgDetailInfoCacheModel.country = getCountry();

		String country = ncbjOrgDetailInfoCacheModel.country;

		if ((country != null) && (country.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.country = null;
		}

		ncbjOrgDetailInfoCacheModel.physicalAddress = getPhysicalAddress();

		String physicalAddress = ncbjOrgDetailInfoCacheModel.physicalAddress;

		if ((physicalAddress != null) && (physicalAddress.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.physicalAddress = null;
		}

		ncbjOrgDetailInfoCacheModel.physicalCity = getPhysicalCity();

		String physicalCity = ncbjOrgDetailInfoCacheModel.physicalCity;

		if ((physicalCity != null) && (physicalCity.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.physicalCity = null;
		}

		ncbjOrgDetailInfoCacheModel.physicalPostalCode =
			getPhysicalPostalCode();

		String physicalPostalCode =
			ncbjOrgDetailInfoCacheModel.physicalPostalCode;

		if ((physicalPostalCode != null) &&
			(physicalPostalCode.length() == 0)) {

			ncbjOrgDetailInfoCacheModel.physicalPostalCode = null;
		}

		ncbjOrgDetailInfoCacheModel.physicalCountry = getPhysicalCountry();

		String physicalCountry = ncbjOrgDetailInfoCacheModel.physicalCountry;

		if ((physicalCountry != null) && (physicalCountry.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.physicalCountry = null;
		}

		ncbjOrgDetailInfoCacheModel.companyHead = getCompanyHead();

		String companyHead = ncbjOrgDetailInfoCacheModel.companyHead;

		if ((companyHead != null) && (companyHead.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.companyHead = null;
		}

		ncbjOrgDetailInfoCacheModel.companyTitle = getCompanyTitle();

		String companyTitle = ncbjOrgDetailInfoCacheModel.companyTitle;

		if ((companyTitle != null) && (companyTitle.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.companyTitle = null;
		}

		ncbjOrgDetailInfoCacheModel.companyContact = getCompanyContact();

		String companyContact = ncbjOrgDetailInfoCacheModel.companyContact;

		if ((companyContact != null) && (companyContact.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.companyContact = null;
		}

		ncbjOrgDetailInfoCacheModel.companyContactTitle =
			getCompanyContactTitle();

		String companyContactTitle =
			ncbjOrgDetailInfoCacheModel.companyContactTitle;

		if ((companyContactTitle != null) &&
			(companyContactTitle.length() == 0)) {

			ncbjOrgDetailInfoCacheModel.companyContactTitle = null;
		}

		ncbjOrgDetailInfoCacheModel.companyTelephone = getCompanyTelephone();

		String companyTelephone = ncbjOrgDetailInfoCacheModel.companyTelephone;

		if ((companyTelephone != null) && (companyTelephone.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.companyTelephone = null;
		}

		ncbjOrgDetailInfoCacheModel.companyFax = getCompanyFax();

		String companyFax = ncbjOrgDetailInfoCacheModel.companyFax;

		if ((companyFax != null) && (companyFax.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.companyFax = null;
		}

		ncbjOrgDetailInfoCacheModel.companyWebsite = getCompanyWebsite();

		String companyWebsite = ncbjOrgDetailInfoCacheModel.companyWebsite;

		if ((companyWebsite != null) && (companyWebsite.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.companyWebsite = null;
		}

		ncbjOrgDetailInfoCacheModel.certificationScope =
			getCertificationScope();

		String certificationScope =
			ncbjOrgDetailInfoCacheModel.certificationScope;

		if ((certificationScope != null) &&
			(certificationScope.length() == 0)) {

			ncbjOrgDetailInfoCacheModel.certificationScope = null;
		}

		ncbjOrgDetailInfoCacheModel.manageAccessToAuditDet =
			getManageAccessToAuditDet();

		String manageAccessToAuditDet =
			ncbjOrgDetailInfoCacheModel.manageAccessToAuditDet;

		if ((manageAccessToAuditDet != null) &&
			(manageAccessToAuditDet.length() == 0)) {

			ncbjOrgDetailInfoCacheModel.manageAccessToAuditDet = null;
		}

		ncbjOrgDetailInfoCacheModel.keyActivity = getKeyActivity();

		String keyActivity = ncbjOrgDetailInfoCacheModel.keyActivity;

		if ((keyActivity != null) && (keyActivity.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.keyActivity = null;
		}

		ncbjOrgDetailInfoCacheModel.transferReason = getTransferReason();

		String transferReason = ncbjOrgDetailInfoCacheModel.transferReason;

		if ((transferReason != null) && (transferReason.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.transferReason = null;
		}

		ncbjOrgDetailInfoCacheModel.indicateStandard = getIndicateStandard();

		String indicateStandard = ncbjOrgDetailInfoCacheModel.indicateStandard;

		if ((indicateStandard != null) && (indicateStandard.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.indicateStandard = null;
		}

		ncbjOrgDetailInfoCacheModel.ceritificationBodyName =
			getCeritificationBodyName();

		String ceritificationBodyName =
			ncbjOrgDetailInfoCacheModel.ceritificationBodyName;

		if ((ceritificationBodyName != null) &&
			(ceritificationBodyName.length() == 0)) {

			ncbjOrgDetailInfoCacheModel.ceritificationBodyName = null;
		}

		ncbjOrgDetailInfoCacheModel.consultingFirm = getConsultingFirm();

		String consultingFirm = ncbjOrgDetailInfoCacheModel.consultingFirm;

		if ((consultingFirm != null) && (consultingFirm.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.consultingFirm = null;
		}

		ncbjOrgDetailInfoCacheModel.consultant = getConsultant();

		String consultant = ncbjOrgDetailInfoCacheModel.consultant;

		if ((consultant != null) && (consultant.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.consultant = null;
		}

		ncbjOrgDetailInfoCacheModel.telephone = getTelephone();

		String telephone = ncbjOrgDetailInfoCacheModel.telephone;

		if ((telephone != null) && (telephone.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.telephone = null;
		}

		ncbjOrgDetailInfoCacheModel.email = getEmail();

		String email = ncbjOrgDetailInfoCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.email = null;
		}

		ncbjOrgDetailInfoCacheModel.certificationScopeRadio =
			getCertificationScopeRadio();

		String certificationScopeRadio =
			ncbjOrgDetailInfoCacheModel.certificationScopeRadio;

		if ((certificationScopeRadio != null) &&
			(certificationScopeRadio.length() == 0)) {

			ncbjOrgDetailInfoCacheModel.certificationScopeRadio = null;
		}

		ncbjOrgDetailInfoCacheModel.outsourceProcess = getOutsourceProcess();

		String outsourceProcess = ncbjOrgDetailInfoCacheModel.outsourceProcess;

		if ((outsourceProcess != null) && (outsourceProcess.length() == 0)) {
			ncbjOrgDetailInfoCacheModel.outsourceProcess = null;
		}

		ncbjOrgDetailInfoCacheModel.relevantRequirement =
			getRelevantRequirement();

		String relevantRequirement =
			ncbjOrgDetailInfoCacheModel.relevantRequirement;

		if ((relevantRequirement != null) &&
			(relevantRequirement.length() == 0)) {

			ncbjOrgDetailInfoCacheModel.relevantRequirement = null;
		}

		ncbjOrgDetailInfoCacheModel.relevantRequirementList =
			getRelevantRequirementList();

		String relevantRequirementList =
			ncbjOrgDetailInfoCacheModel.relevantRequirementList;

		if ((relevantRequirementList != null) &&
			(relevantRequirementList.length() == 0)) {

			ncbjOrgDetailInfoCacheModel.relevantRequirementList = null;
		}

		ncbjOrgDetailInfoCacheModel.managementAccessToAudit =
			getManagementAccessToAudit();

		String managementAccessToAudit =
			ncbjOrgDetailInfoCacheModel.managementAccessToAudit;

		if ((managementAccessToAudit != null) &&
			(managementAccessToAudit.length() == 0)) {

			ncbjOrgDetailInfoCacheModel.managementAccessToAudit = null;
		}

		ncbjOrgDetailInfoCacheModel.pleaseManageDetail =
			getPleaseManageDetail();

		String pleaseManageDetail =
			ncbjOrgDetailInfoCacheModel.pleaseManageDetail;

		if ((pleaseManageDetail != null) &&
			(pleaseManageDetail.length() == 0)) {

			ncbjOrgDetailInfoCacheModel.pleaseManageDetail = null;
		}

		ncbjOrgDetailInfoCacheModel.desiredCertification =
			getDesiredCertification();

		String desiredCertification =
			ncbjOrgDetailInfoCacheModel.desiredCertification;

		if ((desiredCertification != null) &&
			(desiredCertification.length() == 0)) {

			ncbjOrgDetailInfoCacheModel.desiredCertification = null;
		}

		ncbjOrgDetailInfoCacheModel.surveillanceSchedule =
			getSurveillanceSchedule();

		String surveillanceSchedule =
			ncbjOrgDetailInfoCacheModel.surveillanceSchedule;

		if ((surveillanceSchedule != null) &&
			(surveillanceSchedule.length() == 0)) {

			ncbjOrgDetailInfoCacheModel.surveillanceSchedule = null;
		}

		ncbjOrgDetailInfoCacheModel.certifiedManagement =
			getCertifiedManagement();

		String certifiedManagement =
			ncbjOrgDetailInfoCacheModel.certifiedManagement;

		if ((certifiedManagement != null) &&
			(certifiedManagement.length() == 0)) {

			ncbjOrgDetailInfoCacheModel.certifiedManagement = null;
		}

		ncbjOrgDetailInfoCacheModel.certifiedAccreditedCerti =
			getCertifiedAccreditedCerti();

		String certifiedAccreditedCerti =
			ncbjOrgDetailInfoCacheModel.certifiedAccreditedCerti;

		if ((certifiedAccreditedCerti != null) &&
			(certifiedAccreditedCerti.length() == 0)) {

			ncbjOrgDetailInfoCacheModel.certifiedAccreditedCerti = null;
		}

		ncbjOrgDetailInfoCacheModel.companyUsedConsulting =
			getCompanyUsedConsulting();

		String companyUsedConsulting =
			ncbjOrgDetailInfoCacheModel.companyUsedConsulting;

		if ((companyUsedConsulting != null) &&
			(companyUsedConsulting.length() == 0)) {

			ncbjOrgDetailInfoCacheModel.companyUsedConsulting = null;
		}

		ncbjOrgDetailInfoCacheModel.ncbjApplicationId = getNcbjApplicationId();

		return ncbjOrgDetailInfoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<NcbjOrgDetailInfo, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<NcbjOrgDetailInfo, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<NcbjOrgDetailInfo, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(NcbjOrgDetailInfo)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, NcbjOrgDetailInfo>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					NcbjOrgDetailInfo.class, ModelWrapper.class);

	}

	private long _ncbjOrgDetailInfoId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _newCompanyName;
	private String _companyEmail;
	private String _mailingAddress;
	private String _city;
	private String _postalCode;
	private String _country;
	private String _physicalAddress;
	private String _physicalCity;
	private String _physicalPostalCode;
	private String _physicalCountry;
	private String _companyHead;
	private String _companyTitle;
	private String _companyContact;
	private String _companyContactTitle;
	private String _companyTelephone;
	private String _companyFax;
	private String _companyWebsite;
	private String _certificationScope;
	private String _manageAccessToAuditDet;
	private String _keyActivity;
	private String _transferReason;
	private String _indicateStandard;
	private String _ceritificationBodyName;
	private String _consultingFirm;
	private String _consultant;
	private String _telephone;
	private String _email;
	private String _certificationScopeRadio;
	private String _outsourceProcess;
	private String _relevantRequirement;
	private String _relevantRequirementList;
	private String _managementAccessToAudit;
	private String _pleaseManageDetail;
	private String _desiredCertification;
	private String _surveillanceSchedule;
	private String _certifiedManagement;
	private String _certifiedAccreditedCerti;
	private String _companyUsedConsulting;
	private long _ncbjApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<NcbjOrgDetailInfo, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((NcbjOrgDetailInfo)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("ncbjOrgDetailInfoId", _ncbjOrgDetailInfoId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("newCompanyName", _newCompanyName);
		_columnOriginalValues.put("companyEmail", _companyEmail);
		_columnOriginalValues.put("mailingAddress", _mailingAddress);
		_columnOriginalValues.put("city", _city);
		_columnOriginalValues.put("postalCode", _postalCode);
		_columnOriginalValues.put("country", _country);
		_columnOriginalValues.put("physicalAddress", _physicalAddress);
		_columnOriginalValues.put("physicalCity", _physicalCity);
		_columnOriginalValues.put("physicalPostalCode", _physicalPostalCode);
		_columnOriginalValues.put("physicalCountry", _physicalCountry);
		_columnOriginalValues.put("companyHead", _companyHead);
		_columnOriginalValues.put("companyTitle", _companyTitle);
		_columnOriginalValues.put("companyContact", _companyContact);
		_columnOriginalValues.put("companyContactTitle", _companyContactTitle);
		_columnOriginalValues.put("companyTelephone", _companyTelephone);
		_columnOriginalValues.put("companyFax", _companyFax);
		_columnOriginalValues.put("companyWebsite", _companyWebsite);
		_columnOriginalValues.put("certificationScope", _certificationScope);
		_columnOriginalValues.put(
			"manageAccessToAuditDet", _manageAccessToAuditDet);
		_columnOriginalValues.put("keyActivity", _keyActivity);
		_columnOriginalValues.put("transferReason", _transferReason);
		_columnOriginalValues.put("indicateStandard", _indicateStandard);
		_columnOriginalValues.put(
			"ceritificationBodyName", _ceritificationBodyName);
		_columnOriginalValues.put("consultingFirm", _consultingFirm);
		_columnOriginalValues.put("consultant", _consultant);
		_columnOriginalValues.put("telephone", _telephone);
		_columnOriginalValues.put("email", _email);
		_columnOriginalValues.put(
			"certificationScopeRadio", _certificationScopeRadio);
		_columnOriginalValues.put("outsourceProcess", _outsourceProcess);
		_columnOriginalValues.put("relevantRequirement", _relevantRequirement);
		_columnOriginalValues.put(
			"relevantRequirementList", _relevantRequirementList);
		_columnOriginalValues.put(
			"managementAccessToAudit", _managementAccessToAudit);
		_columnOriginalValues.put("pleaseManageDetail", _pleaseManageDetail);
		_columnOriginalValues.put(
			"desiredCertification", _desiredCertification);
		_columnOriginalValues.put(
			"surveillanceSchedule", _surveillanceSchedule);
		_columnOriginalValues.put("certifiedManagement", _certifiedManagement);
		_columnOriginalValues.put(
			"certifiedAccreditedCerti", _certifiedAccreditedCerti);
		_columnOriginalValues.put(
			"companyUsedConsulting", _companyUsedConsulting);
		_columnOriginalValues.put("ncbjApplicationId", _ncbjApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("ncbjOrgDetailInfoId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("newCompanyName", 128L);

		columnBitmasks.put("companyEmail", 256L);

		columnBitmasks.put("mailingAddress", 512L);

		columnBitmasks.put("city", 1024L);

		columnBitmasks.put("postalCode", 2048L);

		columnBitmasks.put("country", 4096L);

		columnBitmasks.put("physicalAddress", 8192L);

		columnBitmasks.put("physicalCity", 16384L);

		columnBitmasks.put("physicalPostalCode", 32768L);

		columnBitmasks.put("physicalCountry", 65536L);

		columnBitmasks.put("companyHead", 131072L);

		columnBitmasks.put("companyTitle", 262144L);

		columnBitmasks.put("companyContact", 524288L);

		columnBitmasks.put("companyContactTitle", 1048576L);

		columnBitmasks.put("companyTelephone", 2097152L);

		columnBitmasks.put("companyFax", 4194304L);

		columnBitmasks.put("companyWebsite", 8388608L);

		columnBitmasks.put("certificationScope", 16777216L);

		columnBitmasks.put("manageAccessToAuditDet", 33554432L);

		columnBitmasks.put("keyActivity", 67108864L);

		columnBitmasks.put("transferReason", 134217728L);

		columnBitmasks.put("indicateStandard", 268435456L);

		columnBitmasks.put("ceritificationBodyName", 536870912L);

		columnBitmasks.put("consultingFirm", 1073741824L);

		columnBitmasks.put("consultant", 2147483648L);

		columnBitmasks.put("telephone", 4294967296L);

		columnBitmasks.put("email", 8589934592L);

		columnBitmasks.put("certificationScopeRadio", 17179869184L);

		columnBitmasks.put("outsourceProcess", 34359738368L);

		columnBitmasks.put("relevantRequirement", 68719476736L);

		columnBitmasks.put("relevantRequirementList", 137438953472L);

		columnBitmasks.put("managementAccessToAudit", 274877906944L);

		columnBitmasks.put("pleaseManageDetail", 549755813888L);

		columnBitmasks.put("desiredCertification", 1099511627776L);

		columnBitmasks.put("surveillanceSchedule", 2199023255552L);

		columnBitmasks.put("certifiedManagement", 4398046511104L);

		columnBitmasks.put("certifiedAccreditedCerti", 8796093022208L);

		columnBitmasks.put("companyUsedConsulting", 17592186044416L);

		columnBitmasks.put("ncbjApplicationId", 35184372088832L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private NcbjOrgDetailInfo _escapedModel;

}