/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.ncbj.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.ncbj.application.form.service.model.NcbjBusinessDetailAdd;
import com.nbp.ncbj.application.form.service.model.NcbjBusinessDetailAddModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the NcbjBusinessDetailAdd service. Represents a row in the &quot;nbp_ncbj_business_detail_add&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>NcbjBusinessDetailAddModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link NcbjBusinessDetailAddImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see NcbjBusinessDetailAddImpl
 * @generated
 */
@JSON(strict = true)
public class NcbjBusinessDetailAddModelImpl
	extends BaseModelImpl<NcbjBusinessDetailAdd>
	implements NcbjBusinessDetailAddModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ncbj business detail add model instance should use the <code>NcbjBusinessDetailAdd</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_ncbj_business_detail_add";

	public static final Object[][] TABLE_COLUMNS = {
		{"ncbjBusinessDetailAddId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP},
		{"numberAndTimeOfShift", Types.VARCHAR},
		{"typeOfProduct", Types.VARCHAR}, {"businessAddress", Types.VARCHAR},
		{"headOffices", Types.VARCHAR},
		{"noOfFullTimeEmployees", Types.VARCHAR},
		{"noOfPartTimeEmployees", Types.VARCHAR},
		{"noOfContractors", Types.VARCHAR},
		{"noOfContractedWorkers", Types.VARCHAR}, {"counter", Types.VARCHAR},
		{"ncbjApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ncbjBusinessDetailAddId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("numberAndTimeOfShift", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("typeOfProduct", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("headOffices", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("noOfFullTimeEmployees", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("noOfPartTimeEmployees", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("noOfContractors", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("noOfContractedWorkers", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("counter", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ncbjApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_ncbj_business_detail_add (ncbjBusinessDetailAddId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,numberAndTimeOfShift VARCHAR(75) null,typeOfProduct VARCHAR(75) null,businessAddress VARCHAR(500) null,headOffices VARCHAR(75) null,noOfFullTimeEmployees VARCHAR(75) null,noOfPartTimeEmployees VARCHAR(75) null,noOfContractors VARCHAR(75) null,noOfContractedWorkers VARCHAR(75) null,counter VARCHAR(75) null,ncbjApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_ncbj_business_detail_add";

	public static final String ORDER_BY_JPQL =
		" ORDER BY ncbjBusinessDetailAdd.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_ncbj_business_detail_add.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long NCBJAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public NcbjBusinessDetailAddModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _ncbjBusinessDetailAddId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setNcbjBusinessDetailAddId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ncbjBusinessDetailAddId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return NcbjBusinessDetailAdd.class;
	}

	@Override
	public String getModelClassName() {
		return NcbjBusinessDetailAdd.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<NcbjBusinessDetailAdd, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<NcbjBusinessDetailAdd, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<NcbjBusinessDetailAdd, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((NcbjBusinessDetailAdd)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<NcbjBusinessDetailAdd, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<NcbjBusinessDetailAdd, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(NcbjBusinessDetailAdd)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<NcbjBusinessDetailAdd, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<NcbjBusinessDetailAdd, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<NcbjBusinessDetailAdd, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<NcbjBusinessDetailAdd, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<NcbjBusinessDetailAdd, Object>>();

			attributeGetterFunctions.put(
				"ncbjBusinessDetailAddId",
				NcbjBusinessDetailAdd::getNcbjBusinessDetailAddId);
			attributeGetterFunctions.put(
				"groupId", NcbjBusinessDetailAdd::getGroupId);
			attributeGetterFunctions.put(
				"companyId", NcbjBusinessDetailAdd::getCompanyId);
			attributeGetterFunctions.put(
				"userId", NcbjBusinessDetailAdd::getUserId);
			attributeGetterFunctions.put(
				"userName", NcbjBusinessDetailAdd::getUserName);
			attributeGetterFunctions.put(
				"createDate", NcbjBusinessDetailAdd::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", NcbjBusinessDetailAdd::getModifiedDate);
			attributeGetterFunctions.put(
				"numberAndTimeOfShift",
				NcbjBusinessDetailAdd::getNumberAndTimeOfShift);
			attributeGetterFunctions.put(
				"typeOfProduct", NcbjBusinessDetailAdd::getTypeOfProduct);
			attributeGetterFunctions.put(
				"businessAddress", NcbjBusinessDetailAdd::getBusinessAddress);
			attributeGetterFunctions.put(
				"headOffices", NcbjBusinessDetailAdd::getHeadOffices);
			attributeGetterFunctions.put(
				"noOfFullTimeEmployees",
				NcbjBusinessDetailAdd::getNoOfFullTimeEmployees);
			attributeGetterFunctions.put(
				"noOfPartTimeEmployees",
				NcbjBusinessDetailAdd::getNoOfPartTimeEmployees);
			attributeGetterFunctions.put(
				"noOfContractors", NcbjBusinessDetailAdd::getNoOfContractors);
			attributeGetterFunctions.put(
				"noOfContractedWorkers",
				NcbjBusinessDetailAdd::getNoOfContractedWorkers);
			attributeGetterFunctions.put(
				"counter", NcbjBusinessDetailAdd::getCounter);
			attributeGetterFunctions.put(
				"ncbjApplicationId",
				NcbjBusinessDetailAdd::getNcbjApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<NcbjBusinessDetailAdd, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<NcbjBusinessDetailAdd, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<NcbjBusinessDetailAdd, ?>>();

			attributeSetterBiConsumers.put(
				"ncbjBusinessDetailAddId",
				(BiConsumer<NcbjBusinessDetailAdd, Long>)
					NcbjBusinessDetailAdd::setNcbjBusinessDetailAddId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<NcbjBusinessDetailAdd, Long>)
					NcbjBusinessDetailAdd::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<NcbjBusinessDetailAdd, Long>)
					NcbjBusinessDetailAdd::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<NcbjBusinessDetailAdd, Long>)
					NcbjBusinessDetailAdd::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<NcbjBusinessDetailAdd, String>)
					NcbjBusinessDetailAdd::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<NcbjBusinessDetailAdd, Date>)
					NcbjBusinessDetailAdd::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<NcbjBusinessDetailAdd, Date>)
					NcbjBusinessDetailAdd::setModifiedDate);
			attributeSetterBiConsumers.put(
				"numberAndTimeOfShift",
				(BiConsumer<NcbjBusinessDetailAdd, String>)
					NcbjBusinessDetailAdd::setNumberAndTimeOfShift);
			attributeSetterBiConsumers.put(
				"typeOfProduct",
				(BiConsumer<NcbjBusinessDetailAdd, String>)
					NcbjBusinessDetailAdd::setTypeOfProduct);
			attributeSetterBiConsumers.put(
				"businessAddress",
				(BiConsumer<NcbjBusinessDetailAdd, String>)
					NcbjBusinessDetailAdd::setBusinessAddress);
			attributeSetterBiConsumers.put(
				"headOffices",
				(BiConsumer<NcbjBusinessDetailAdd, String>)
					NcbjBusinessDetailAdd::setHeadOffices);
			attributeSetterBiConsumers.put(
				"noOfFullTimeEmployees",
				(BiConsumer<NcbjBusinessDetailAdd, String>)
					NcbjBusinessDetailAdd::setNoOfFullTimeEmployees);
			attributeSetterBiConsumers.put(
				"noOfPartTimeEmployees",
				(BiConsumer<NcbjBusinessDetailAdd, String>)
					NcbjBusinessDetailAdd::setNoOfPartTimeEmployees);
			attributeSetterBiConsumers.put(
				"noOfContractors",
				(BiConsumer<NcbjBusinessDetailAdd, String>)
					NcbjBusinessDetailAdd::setNoOfContractors);
			attributeSetterBiConsumers.put(
				"noOfContractedWorkers",
				(BiConsumer<NcbjBusinessDetailAdd, String>)
					NcbjBusinessDetailAdd::setNoOfContractedWorkers);
			attributeSetterBiConsumers.put(
				"counter",
				(BiConsumer<NcbjBusinessDetailAdd, String>)
					NcbjBusinessDetailAdd::setCounter);
			attributeSetterBiConsumers.put(
				"ncbjApplicationId",
				(BiConsumer<NcbjBusinessDetailAdd, Long>)
					NcbjBusinessDetailAdd::setNcbjApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getNcbjBusinessDetailAddId() {
		return _ncbjBusinessDetailAddId;
	}

	@Override
	public void setNcbjBusinessDetailAddId(long ncbjBusinessDetailAddId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ncbjBusinessDetailAddId = ncbjBusinessDetailAddId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getNumberAndTimeOfShift() {
		if (_numberAndTimeOfShift == null) {
			return "";
		}
		else {
			return _numberAndTimeOfShift;
		}
	}

	@Override
	public void setNumberAndTimeOfShift(String numberAndTimeOfShift) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_numberAndTimeOfShift = numberAndTimeOfShift;
	}

	@JSON
	@Override
	public String getTypeOfProduct() {
		if (_typeOfProduct == null) {
			return "";
		}
		else {
			return _typeOfProduct;
		}
	}

	@Override
	public void setTypeOfProduct(String typeOfProduct) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_typeOfProduct = typeOfProduct;
	}

	@JSON
	@Override
	public String getBusinessAddress() {
		if (_businessAddress == null) {
			return "";
		}
		else {
			return _businessAddress;
		}
	}

	@Override
	public void setBusinessAddress(String businessAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessAddress = businessAddress;
	}

	@JSON
	@Override
	public String getHeadOffices() {
		if (_headOffices == null) {
			return "";
		}
		else {
			return _headOffices;
		}
	}

	@Override
	public void setHeadOffices(String headOffices) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_headOffices = headOffices;
	}

	@JSON
	@Override
	public String getNoOfFullTimeEmployees() {
		if (_noOfFullTimeEmployees == null) {
			return "";
		}
		else {
			return _noOfFullTimeEmployees;
		}
	}

	@Override
	public void setNoOfFullTimeEmployees(String noOfFullTimeEmployees) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_noOfFullTimeEmployees = noOfFullTimeEmployees;
	}

	@JSON
	@Override
	public String getNoOfPartTimeEmployees() {
		if (_noOfPartTimeEmployees == null) {
			return "";
		}
		else {
			return _noOfPartTimeEmployees;
		}
	}

	@Override
	public void setNoOfPartTimeEmployees(String noOfPartTimeEmployees) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_noOfPartTimeEmployees = noOfPartTimeEmployees;
	}

	@JSON
	@Override
	public String getNoOfContractors() {
		if (_noOfContractors == null) {
			return "";
		}
		else {
			return _noOfContractors;
		}
	}

	@Override
	public void setNoOfContractors(String noOfContractors) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_noOfContractors = noOfContractors;
	}

	@JSON
	@Override
	public String getNoOfContractedWorkers() {
		if (_noOfContractedWorkers == null) {
			return "";
		}
		else {
			return _noOfContractedWorkers;
		}
	}

	@Override
	public void setNoOfContractedWorkers(String noOfContractedWorkers) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_noOfContractedWorkers = noOfContractedWorkers;
	}

	@JSON
	@Override
	public String getCounter() {
		if (_counter == null) {
			return "";
		}
		else {
			return _counter;
		}
	}

	@Override
	public void setCounter(String counter) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_counter = counter;
	}

	@JSON
	@Override
	public long getNcbjApplicationId() {
		return _ncbjApplicationId;
	}

	@Override
	public void setNcbjApplicationId(long ncbjApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ncbjApplicationId = ncbjApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalNcbjApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("ncbjApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), NcbjBusinessDetailAdd.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public NcbjBusinessDetailAdd toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, NcbjBusinessDetailAdd>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		NcbjBusinessDetailAddImpl ncbjBusinessDetailAddImpl =
			new NcbjBusinessDetailAddImpl();

		ncbjBusinessDetailAddImpl.setNcbjBusinessDetailAddId(
			getNcbjBusinessDetailAddId());
		ncbjBusinessDetailAddImpl.setGroupId(getGroupId());
		ncbjBusinessDetailAddImpl.setCompanyId(getCompanyId());
		ncbjBusinessDetailAddImpl.setUserId(getUserId());
		ncbjBusinessDetailAddImpl.setUserName(getUserName());
		ncbjBusinessDetailAddImpl.setCreateDate(getCreateDate());
		ncbjBusinessDetailAddImpl.setModifiedDate(getModifiedDate());
		ncbjBusinessDetailAddImpl.setNumberAndTimeOfShift(
			getNumberAndTimeOfShift());
		ncbjBusinessDetailAddImpl.setTypeOfProduct(getTypeOfProduct());
		ncbjBusinessDetailAddImpl.setBusinessAddress(getBusinessAddress());
		ncbjBusinessDetailAddImpl.setHeadOffices(getHeadOffices());
		ncbjBusinessDetailAddImpl.setNoOfFullTimeEmployees(
			getNoOfFullTimeEmployees());
		ncbjBusinessDetailAddImpl.setNoOfPartTimeEmployees(
			getNoOfPartTimeEmployees());
		ncbjBusinessDetailAddImpl.setNoOfContractors(getNoOfContractors());
		ncbjBusinessDetailAddImpl.setNoOfContractedWorkers(
			getNoOfContractedWorkers());
		ncbjBusinessDetailAddImpl.setCounter(getCounter());
		ncbjBusinessDetailAddImpl.setNcbjApplicationId(getNcbjApplicationId());

		ncbjBusinessDetailAddImpl.resetOriginalValues();

		return ncbjBusinessDetailAddImpl;
	}

	@Override
	public NcbjBusinessDetailAdd cloneWithOriginalValues() {
		NcbjBusinessDetailAddImpl ncbjBusinessDetailAddImpl =
			new NcbjBusinessDetailAddImpl();

		ncbjBusinessDetailAddImpl.setNcbjBusinessDetailAddId(
			this.<Long>getColumnOriginalValue("ncbjBusinessDetailAddId"));
		ncbjBusinessDetailAddImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		ncbjBusinessDetailAddImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		ncbjBusinessDetailAddImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		ncbjBusinessDetailAddImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		ncbjBusinessDetailAddImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		ncbjBusinessDetailAddImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		ncbjBusinessDetailAddImpl.setNumberAndTimeOfShift(
			this.<String>getColumnOriginalValue("numberAndTimeOfShift"));
		ncbjBusinessDetailAddImpl.setTypeOfProduct(
			this.<String>getColumnOriginalValue("typeOfProduct"));
		ncbjBusinessDetailAddImpl.setBusinessAddress(
			this.<String>getColumnOriginalValue("businessAddress"));
		ncbjBusinessDetailAddImpl.setHeadOffices(
			this.<String>getColumnOriginalValue("headOffices"));
		ncbjBusinessDetailAddImpl.setNoOfFullTimeEmployees(
			this.<String>getColumnOriginalValue("noOfFullTimeEmployees"));
		ncbjBusinessDetailAddImpl.setNoOfPartTimeEmployees(
			this.<String>getColumnOriginalValue("noOfPartTimeEmployees"));
		ncbjBusinessDetailAddImpl.setNoOfContractors(
			this.<String>getColumnOriginalValue("noOfContractors"));
		ncbjBusinessDetailAddImpl.setNoOfContractedWorkers(
			this.<String>getColumnOriginalValue("noOfContractedWorkers"));
		ncbjBusinessDetailAddImpl.setCounter(
			this.<String>getColumnOriginalValue("counter"));
		ncbjBusinessDetailAddImpl.setNcbjApplicationId(
			this.<Long>getColumnOriginalValue("ncbjApplicationId"));

		return ncbjBusinessDetailAddImpl;
	}

	@Override
	public int compareTo(NcbjBusinessDetailAdd ncbjBusinessDetailAdd) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), ncbjBusinessDetailAdd.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof NcbjBusinessDetailAdd)) {
			return false;
		}

		NcbjBusinessDetailAdd ncbjBusinessDetailAdd =
			(NcbjBusinessDetailAdd)object;

		long primaryKey = ncbjBusinessDetailAdd.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<NcbjBusinessDetailAdd> toCacheModel() {
		NcbjBusinessDetailAddCacheModel ncbjBusinessDetailAddCacheModel =
			new NcbjBusinessDetailAddCacheModel();

		ncbjBusinessDetailAddCacheModel.ncbjBusinessDetailAddId =
			getNcbjBusinessDetailAddId();

		ncbjBusinessDetailAddCacheModel.groupId = getGroupId();

		ncbjBusinessDetailAddCacheModel.companyId = getCompanyId();

		ncbjBusinessDetailAddCacheModel.userId = getUserId();

		ncbjBusinessDetailAddCacheModel.userName = getUserName();

		String userName = ncbjBusinessDetailAddCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			ncbjBusinessDetailAddCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			ncbjBusinessDetailAddCacheModel.createDate = createDate.getTime();
		}
		else {
			ncbjBusinessDetailAddCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			ncbjBusinessDetailAddCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			ncbjBusinessDetailAddCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		ncbjBusinessDetailAddCacheModel.numberAndTimeOfShift =
			getNumberAndTimeOfShift();

		String numberAndTimeOfShift =
			ncbjBusinessDetailAddCacheModel.numberAndTimeOfShift;

		if ((numberAndTimeOfShift != null) &&
			(numberAndTimeOfShift.length() == 0)) {

			ncbjBusinessDetailAddCacheModel.numberAndTimeOfShift = null;
		}

		ncbjBusinessDetailAddCacheModel.typeOfProduct = getTypeOfProduct();

		String typeOfProduct = ncbjBusinessDetailAddCacheModel.typeOfProduct;

		if ((typeOfProduct != null) && (typeOfProduct.length() == 0)) {
			ncbjBusinessDetailAddCacheModel.typeOfProduct = null;
		}

		ncbjBusinessDetailAddCacheModel.businessAddress = getBusinessAddress();

		String businessAddress =
			ncbjBusinessDetailAddCacheModel.businessAddress;

		if ((businessAddress != null) && (businessAddress.length() == 0)) {
			ncbjBusinessDetailAddCacheModel.businessAddress = null;
		}

		ncbjBusinessDetailAddCacheModel.headOffices = getHeadOffices();

		String headOffices = ncbjBusinessDetailAddCacheModel.headOffices;

		if ((headOffices != null) && (headOffices.length() == 0)) {
			ncbjBusinessDetailAddCacheModel.headOffices = null;
		}

		ncbjBusinessDetailAddCacheModel.noOfFullTimeEmployees =
			getNoOfFullTimeEmployees();

		String noOfFullTimeEmployees =
			ncbjBusinessDetailAddCacheModel.noOfFullTimeEmployees;

		if ((noOfFullTimeEmployees != null) &&
			(noOfFullTimeEmployees.length() == 0)) {

			ncbjBusinessDetailAddCacheModel.noOfFullTimeEmployees = null;
		}

		ncbjBusinessDetailAddCacheModel.noOfPartTimeEmployees =
			getNoOfPartTimeEmployees();

		String noOfPartTimeEmployees =
			ncbjBusinessDetailAddCacheModel.noOfPartTimeEmployees;

		if ((noOfPartTimeEmployees != null) &&
			(noOfPartTimeEmployees.length() == 0)) {

			ncbjBusinessDetailAddCacheModel.noOfPartTimeEmployees = null;
		}

		ncbjBusinessDetailAddCacheModel.noOfContractors = getNoOfContractors();

		String noOfContractors =
			ncbjBusinessDetailAddCacheModel.noOfContractors;

		if ((noOfContractors != null) && (noOfContractors.length() == 0)) {
			ncbjBusinessDetailAddCacheModel.noOfContractors = null;
		}

		ncbjBusinessDetailAddCacheModel.noOfContractedWorkers =
			getNoOfContractedWorkers();

		String noOfContractedWorkers =
			ncbjBusinessDetailAddCacheModel.noOfContractedWorkers;

		if ((noOfContractedWorkers != null) &&
			(noOfContractedWorkers.length() == 0)) {

			ncbjBusinessDetailAddCacheModel.noOfContractedWorkers = null;
		}

		ncbjBusinessDetailAddCacheModel.counter = getCounter();

		String counter = ncbjBusinessDetailAddCacheModel.counter;

		if ((counter != null) && (counter.length() == 0)) {
			ncbjBusinessDetailAddCacheModel.counter = null;
		}

		ncbjBusinessDetailAddCacheModel.ncbjApplicationId =
			getNcbjApplicationId();

		return ncbjBusinessDetailAddCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<NcbjBusinessDetailAdd, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<NcbjBusinessDetailAdd, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<NcbjBusinessDetailAdd, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(NcbjBusinessDetailAdd)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, NcbjBusinessDetailAdd>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					NcbjBusinessDetailAdd.class, ModelWrapper.class);

	}

	private long _ncbjBusinessDetailAddId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _numberAndTimeOfShift;
	private String _typeOfProduct;
	private String _businessAddress;
	private String _headOffices;
	private String _noOfFullTimeEmployees;
	private String _noOfPartTimeEmployees;
	private String _noOfContractors;
	private String _noOfContractedWorkers;
	private String _counter;
	private long _ncbjApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<NcbjBusinessDetailAdd, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((NcbjBusinessDetailAdd)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"ncbjBusinessDetailAddId", _ncbjBusinessDetailAddId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"numberAndTimeOfShift", _numberAndTimeOfShift);
		_columnOriginalValues.put("typeOfProduct", _typeOfProduct);
		_columnOriginalValues.put("businessAddress", _businessAddress);
		_columnOriginalValues.put("headOffices", _headOffices);
		_columnOriginalValues.put(
			"noOfFullTimeEmployees", _noOfFullTimeEmployees);
		_columnOriginalValues.put(
			"noOfPartTimeEmployees", _noOfPartTimeEmployees);
		_columnOriginalValues.put("noOfContractors", _noOfContractors);
		_columnOriginalValues.put(
			"noOfContractedWorkers", _noOfContractedWorkers);
		_columnOriginalValues.put("counter", _counter);
		_columnOriginalValues.put("ncbjApplicationId", _ncbjApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("ncbjBusinessDetailAddId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("numberAndTimeOfShift", 128L);

		columnBitmasks.put("typeOfProduct", 256L);

		columnBitmasks.put("businessAddress", 512L);

		columnBitmasks.put("headOffices", 1024L);

		columnBitmasks.put("noOfFullTimeEmployees", 2048L);

		columnBitmasks.put("noOfPartTimeEmployees", 4096L);

		columnBitmasks.put("noOfContractors", 8192L);

		columnBitmasks.put("noOfContractedWorkers", 16384L);

		columnBitmasks.put("counter", 32768L);

		columnBitmasks.put("ncbjApplicationId", 65536L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private NcbjBusinessDetailAdd _escapedModel;

}