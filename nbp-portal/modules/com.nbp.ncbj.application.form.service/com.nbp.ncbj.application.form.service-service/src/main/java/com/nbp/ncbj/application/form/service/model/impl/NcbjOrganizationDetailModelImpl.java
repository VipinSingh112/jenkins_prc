/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.ncbj.application.form.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.ncbj.application.form.service.model.NcbjOrganizationDetail;
import com.nbp.ncbj.application.form.service.model.NcbjOrganizationDetailModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the NcbjOrganizationDetail service. Represents a row in the &quot;nbp_ncbj_organization_detail&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>NcbjOrganizationDetailModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link NcbjOrganizationDetailImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see NcbjOrganizationDetailImpl
 * @generated
 */
@JSON(strict = true)
public class NcbjOrganizationDetailModelImpl
	extends BaseModelImpl<NcbjOrganizationDetail>
	implements NcbjOrganizationDetailModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ncbj organization detail model instance should use the <code>NcbjOrganizationDetail</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_ncbj_organization_detail";

	public static final Object[][] TABLE_COLUMNS = {
		{"ncbjOrganizationDetailId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP},
		{"nameOfOrganization", Types.VARCHAR}, {"address", Types.VARCHAR},
		{"telephoneNumber", Types.VARCHAR}, {"faxNumber", Types.VARCHAR},
		{"emailAddress", Types.VARCHAR}, {"headOfOrganization ", Types.VARCHAR},
		{"position", Types.VARCHAR}, {"contactPersonName", Types.VARCHAR},
		{"contactPersonEmailAddress ", Types.VARCHAR},
		{"contactPersonPosition ", Types.VARCHAR},
		{"managementSystem", Types.VARCHAR},
		{"determinedTheScope", Types.VARCHAR},
		{"pleaseStageTheScope", Types.VARCHAR},
		{"positionSecondFo", Types.VARCHAR},
		{"managementSystemFo", Types.VARCHAR}, {"productTypes", Types.VARCHAR},
		{"productLine", Types.VARCHAR}, {"haccpStudies", Types.VARCHAR},
		{"criticalControlPoints", Types.VARCHAR},
		{"operationalNumber", Types.VARCHAR}, {"productionSize", Types.VARCHAR},
		{"warehouseSize", Types.VARCHAR},
		{"warehouseDetailSize", Types.VARCHAR},
		{"seasonalProcess", Types.VARCHAR}, {"ncbjApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ncbjOrganizationDetailId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("nameOfOrganization", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("address", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("telephoneNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("faxNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("emailAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("headOfOrganization ", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("position", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactPersonName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactPersonEmailAddress ", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactPersonPosition ", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("managementSystem", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("determinedTheScope", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pleaseStageTheScope", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("positionSecondFo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("managementSystemFo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productTypes", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productLine", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("haccpStudies", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("criticalControlPoints", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("operationalNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionSize", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("warehouseSize", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("warehouseDetailSize", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("seasonalProcess", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ncbjApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_ncbj_organization_detail (ncbjOrganizationDetailId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,nameOfOrganization VARCHAR(75) null,address VARCHAR(500) null,telephoneNumber VARCHAR(75) null,faxNumber VARCHAR(75) null,emailAddress VARCHAR(75) null,headOfOrganization  VARCHAR(75) null,position VARCHAR(75) null,contactPersonName VARCHAR(75) null,contactPersonEmailAddress  VARCHAR(75) null,contactPersonPosition  VARCHAR(75) null,managementSystem VARCHAR(500) null,determinedTheScope VARCHAR(75) null,pleaseStageTheScope VARCHAR(75) null,positionSecondFo VARCHAR(75) null,managementSystemFo VARCHAR(75) null,productTypes VARCHAR(75) null,productLine VARCHAR(75) null,haccpStudies VARCHAR(75) null,criticalControlPoints VARCHAR(75) null,operationalNumber VARCHAR(75) null,productionSize VARCHAR(75) null,warehouseSize VARCHAR(75) null,warehouseDetailSize VARCHAR(75) null,seasonalProcess VARCHAR(75) null,ncbjApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_ncbj_organization_detail";

	public static final String ORDER_BY_JPQL =
		" ORDER BY ncbjOrganizationDetail.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_ncbj_organization_detail.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long NCBJAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public NcbjOrganizationDetailModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _ncbjOrganizationDetailId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setNcbjOrganizationDetailId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ncbjOrganizationDetailId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return NcbjOrganizationDetail.class;
	}

	@Override
	public String getModelClassName() {
		return NcbjOrganizationDetail.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<NcbjOrganizationDetail, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<NcbjOrganizationDetail, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<NcbjOrganizationDetail, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((NcbjOrganizationDetail)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<NcbjOrganizationDetail, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<NcbjOrganizationDetail, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(NcbjOrganizationDetail)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<NcbjOrganizationDetail, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<NcbjOrganizationDetail, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<NcbjOrganizationDetail, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<NcbjOrganizationDetail, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<NcbjOrganizationDetail, Object>>();

			attributeGetterFunctions.put(
				"ncbjOrganizationDetailId",
				NcbjOrganizationDetail::getNcbjOrganizationDetailId);
			attributeGetterFunctions.put(
				"groupId", NcbjOrganizationDetail::getGroupId);
			attributeGetterFunctions.put(
				"companyId", NcbjOrganizationDetail::getCompanyId);
			attributeGetterFunctions.put(
				"userId", NcbjOrganizationDetail::getUserId);
			attributeGetterFunctions.put(
				"userName", NcbjOrganizationDetail::getUserName);
			attributeGetterFunctions.put(
				"createDate", NcbjOrganizationDetail::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", NcbjOrganizationDetail::getModifiedDate);
			attributeGetterFunctions.put(
				"nameOfOrganization",
				NcbjOrganizationDetail::getNameOfOrganization);
			attributeGetterFunctions.put(
				"address", NcbjOrganizationDetail::getAddress);
			attributeGetterFunctions.put(
				"telephoneNumber", NcbjOrganizationDetail::getTelephoneNumber);
			attributeGetterFunctions.put(
				"faxNumber", NcbjOrganizationDetail::getFaxNumber);
			attributeGetterFunctions.put(
				"emailAddress", NcbjOrganizationDetail::getEmailAddress);
			attributeGetterFunctions.put(
				"headOfOrganization ",
				NcbjOrganizationDetail::getHeadOfOrganization);
			attributeGetterFunctions.put(
				"position", NcbjOrganizationDetail::getPosition);
			attributeGetterFunctions.put(
				"contactPersonName",
				NcbjOrganizationDetail::getContactPersonName);
			attributeGetterFunctions.put(
				"contactPersonEmailAddress ",
				NcbjOrganizationDetail::getContactPersonEmailAddress);
			attributeGetterFunctions.put(
				"contactPersonPosition ",
				NcbjOrganizationDetail::getContactPersonPosition);
			attributeGetterFunctions.put(
				"managementSystem",
				NcbjOrganizationDetail::getManagementSystem);
			attributeGetterFunctions.put(
				"determinedTheScope",
				NcbjOrganizationDetail::getDeterminedTheScope);
			attributeGetterFunctions.put(
				"pleaseStageTheScope",
				NcbjOrganizationDetail::getPleaseStageTheScope);
			attributeGetterFunctions.put(
				"positionSecondFo",
				NcbjOrganizationDetail::getPositionSecondFo);
			attributeGetterFunctions.put(
				"managementSystemFo",
				NcbjOrganizationDetail::getManagementSystemFo);
			attributeGetterFunctions.put(
				"productTypes", NcbjOrganizationDetail::getProductTypes);
			attributeGetterFunctions.put(
				"productLine", NcbjOrganizationDetail::getProductLine);
			attributeGetterFunctions.put(
				"haccpStudies", NcbjOrganizationDetail::getHaccpStudies);
			attributeGetterFunctions.put(
				"criticalControlPoints",
				NcbjOrganizationDetail::getCriticalControlPoints);
			attributeGetterFunctions.put(
				"operationalNumber",
				NcbjOrganizationDetail::getOperationalNumber);
			attributeGetterFunctions.put(
				"productionSize", NcbjOrganizationDetail::getProductionSize);
			attributeGetterFunctions.put(
				"warehouseSize", NcbjOrganizationDetail::getWarehouseSize);
			attributeGetterFunctions.put(
				"warehouseDetailSize",
				NcbjOrganizationDetail::getWarehouseDetailSize);
			attributeGetterFunctions.put(
				"seasonalProcess", NcbjOrganizationDetail::getSeasonalProcess);
			attributeGetterFunctions.put(
				"ncbjApplicationId",
				NcbjOrganizationDetail::getNcbjApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<NcbjOrganizationDetail, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<NcbjOrganizationDetail, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<NcbjOrganizationDetail, ?>>();

			attributeSetterBiConsumers.put(
				"ncbjOrganizationDetailId",
				(BiConsumer<NcbjOrganizationDetail, Long>)
					NcbjOrganizationDetail::setNcbjOrganizationDetailId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<NcbjOrganizationDetail, Long>)
					NcbjOrganizationDetail::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<NcbjOrganizationDetail, Long>)
					NcbjOrganizationDetail::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<NcbjOrganizationDetail, Long>)
					NcbjOrganizationDetail::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<NcbjOrganizationDetail, Date>)
					NcbjOrganizationDetail::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<NcbjOrganizationDetail, Date>)
					NcbjOrganizationDetail::setModifiedDate);
			attributeSetterBiConsumers.put(
				"nameOfOrganization",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setNameOfOrganization);
			attributeSetterBiConsumers.put(
				"address",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setAddress);
			attributeSetterBiConsumers.put(
				"telephoneNumber",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setTelephoneNumber);
			attributeSetterBiConsumers.put(
				"faxNumber",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setFaxNumber);
			attributeSetterBiConsumers.put(
				"emailAddress",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setEmailAddress);
			attributeSetterBiConsumers.put(
				"headOfOrganization ",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setHeadOfOrganization);
			attributeSetterBiConsumers.put(
				"position",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setPosition);
			attributeSetterBiConsumers.put(
				"contactPersonName",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setContactPersonName);
			attributeSetterBiConsumers.put(
				"contactPersonEmailAddress ",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setContactPersonEmailAddress);
			attributeSetterBiConsumers.put(
				"contactPersonPosition ",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setContactPersonPosition);
			attributeSetterBiConsumers.put(
				"managementSystem",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setManagementSystem);
			attributeSetterBiConsumers.put(
				"determinedTheScope",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setDeterminedTheScope);
			attributeSetterBiConsumers.put(
				"pleaseStageTheScope",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setPleaseStageTheScope);
			attributeSetterBiConsumers.put(
				"positionSecondFo",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setPositionSecondFo);
			attributeSetterBiConsumers.put(
				"managementSystemFo",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setManagementSystemFo);
			attributeSetterBiConsumers.put(
				"productTypes",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setProductTypes);
			attributeSetterBiConsumers.put(
				"productLine",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setProductLine);
			attributeSetterBiConsumers.put(
				"haccpStudies",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setHaccpStudies);
			attributeSetterBiConsumers.put(
				"criticalControlPoints",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setCriticalControlPoints);
			attributeSetterBiConsumers.put(
				"operationalNumber",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setOperationalNumber);
			attributeSetterBiConsumers.put(
				"productionSize",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setProductionSize);
			attributeSetterBiConsumers.put(
				"warehouseSize",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setWarehouseSize);
			attributeSetterBiConsumers.put(
				"warehouseDetailSize",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setWarehouseDetailSize);
			attributeSetterBiConsumers.put(
				"seasonalProcess",
				(BiConsumer<NcbjOrganizationDetail, String>)
					NcbjOrganizationDetail::setSeasonalProcess);
			attributeSetterBiConsumers.put(
				"ncbjApplicationId",
				(BiConsumer<NcbjOrganizationDetail, Long>)
					NcbjOrganizationDetail::setNcbjApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getNcbjOrganizationDetailId() {
		return _ncbjOrganizationDetailId;
	}

	@Override
	public void setNcbjOrganizationDetailId(long ncbjOrganizationDetailId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ncbjOrganizationDetailId = ncbjOrganizationDetailId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getNameOfOrganization() {
		if (_nameOfOrganization == null) {
			return "";
		}
		else {
			return _nameOfOrganization;
		}
	}

	@Override
	public void setNameOfOrganization(String nameOfOrganization) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nameOfOrganization = nameOfOrganization;
	}

	@JSON
	@Override
	public String getAddress() {
		if (_address == null) {
			return "";
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_address = address;
	}

	@JSON
	@Override
	public String getTelephoneNumber() {
		if (_telephoneNumber == null) {
			return "";
		}
		else {
			return _telephoneNumber;
		}
	}

	@Override
	public void setTelephoneNumber(String telephoneNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_telephoneNumber = telephoneNumber;
	}

	@JSON
	@Override
	public String getFaxNumber() {
		if (_faxNumber == null) {
			return "";
		}
		else {
			return _faxNumber;
		}
	}

	@Override
	public void setFaxNumber(String faxNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_faxNumber = faxNumber;
	}

	@JSON
	@Override
	public String getEmailAddress() {
		if (_emailAddress == null) {
			return "";
		}
		else {
			return _emailAddress;
		}
	}

	@Override
	public void setEmailAddress(String emailAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_emailAddress = emailAddress;
	}

	@JSON
	@Override
	public String getHeadOfOrganization() {
		if (_headOfOrganization == null) {
			return "";
		}
		else {
			return _headOfOrganization;
		}
	}

	@Override
	public void setHeadOfOrganization(String headOfOrganization) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_headOfOrganization = headOfOrganization;
	}

	@JSON
	@Override
	public String getPosition() {
		if (_position == null) {
			return "";
		}
		else {
			return _position;
		}
	}

	@Override
	public void setPosition(String position) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_position = position;
	}

	@JSON
	@Override
	public String getContactPersonName() {
		if (_contactPersonName == null) {
			return "";
		}
		else {
			return _contactPersonName;
		}
	}

	@Override
	public void setContactPersonName(String contactPersonName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactPersonName = contactPersonName;
	}

	@JSON
	@Override
	public String getContactPersonEmailAddress() {
		if (_contactPersonEmailAddress == null) {
			return "";
		}
		else {
			return _contactPersonEmailAddress;
		}
	}

	@Override
	public void setContactPersonEmailAddress(String contactPersonEmailAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactPersonEmailAddress = contactPersonEmailAddress;
	}

	@JSON
	@Override
	public String getContactPersonPosition() {
		if (_contactPersonPosition == null) {
			return "";
		}
		else {
			return _contactPersonPosition;
		}
	}

	@Override
	public void setContactPersonPosition(String contactPersonPosition) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactPersonPosition = contactPersonPosition;
	}

	@JSON
	@Override
	public String getManagementSystem() {
		if (_managementSystem == null) {
			return "";
		}
		else {
			return _managementSystem;
		}
	}

	@Override
	public void setManagementSystem(String managementSystem) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_managementSystem = managementSystem;
	}

	@JSON
	@Override
	public String getDeterminedTheScope() {
		if (_determinedTheScope == null) {
			return "";
		}
		else {
			return _determinedTheScope;
		}
	}

	@Override
	public void setDeterminedTheScope(String determinedTheScope) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_determinedTheScope = determinedTheScope;
	}

	@JSON
	@Override
	public String getPleaseStageTheScope() {
		if (_pleaseStageTheScope == null) {
			return "";
		}
		else {
			return _pleaseStageTheScope;
		}
	}

	@Override
	public void setPleaseStageTheScope(String pleaseStageTheScope) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pleaseStageTheScope = pleaseStageTheScope;
	}

	@JSON
	@Override
	public String getPositionSecondFo() {
		if (_positionSecondFo == null) {
			return "";
		}
		else {
			return _positionSecondFo;
		}
	}

	@Override
	public void setPositionSecondFo(String positionSecondFo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_positionSecondFo = positionSecondFo;
	}

	@JSON
	@Override
	public String getManagementSystemFo() {
		if (_managementSystemFo == null) {
			return "";
		}
		else {
			return _managementSystemFo;
		}
	}

	@Override
	public void setManagementSystemFo(String managementSystemFo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_managementSystemFo = managementSystemFo;
	}

	@JSON
	@Override
	public String getProductTypes() {
		if (_productTypes == null) {
			return "";
		}
		else {
			return _productTypes;
		}
	}

	@Override
	public void setProductTypes(String productTypes) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_productTypes = productTypes;
	}

	@JSON
	@Override
	public String getProductLine() {
		if (_productLine == null) {
			return "";
		}
		else {
			return _productLine;
		}
	}

	@Override
	public void setProductLine(String productLine) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_productLine = productLine;
	}

	@JSON
	@Override
	public String getHaccpStudies() {
		if (_haccpStudies == null) {
			return "";
		}
		else {
			return _haccpStudies;
		}
	}

	@Override
	public void setHaccpStudies(String haccpStudies) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_haccpStudies = haccpStudies;
	}

	@JSON
	@Override
	public String getCriticalControlPoints() {
		if (_criticalControlPoints == null) {
			return "";
		}
		else {
			return _criticalControlPoints;
		}
	}

	@Override
	public void setCriticalControlPoints(String criticalControlPoints) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_criticalControlPoints = criticalControlPoints;
	}

	@JSON
	@Override
	public String getOperationalNumber() {
		if (_operationalNumber == null) {
			return "";
		}
		else {
			return _operationalNumber;
		}
	}

	@Override
	public void setOperationalNumber(String operationalNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_operationalNumber = operationalNumber;
	}

	@JSON
	@Override
	public String getProductionSize() {
		if (_productionSize == null) {
			return "";
		}
		else {
			return _productionSize;
		}
	}

	@Override
	public void setProductionSize(String productionSize) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_productionSize = productionSize;
	}

	@JSON
	@Override
	public String getWarehouseSize() {
		if (_warehouseSize == null) {
			return "";
		}
		else {
			return _warehouseSize;
		}
	}

	@Override
	public void setWarehouseSize(String warehouseSize) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_warehouseSize = warehouseSize;
	}

	@JSON
	@Override
	public String getWarehouseDetailSize() {
		if (_warehouseDetailSize == null) {
			return "";
		}
		else {
			return _warehouseDetailSize;
		}
	}

	@Override
	public void setWarehouseDetailSize(String warehouseDetailSize) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_warehouseDetailSize = warehouseDetailSize;
	}

	@JSON
	@Override
	public String getSeasonalProcess() {
		if (_seasonalProcess == null) {
			return "";
		}
		else {
			return _seasonalProcess;
		}
	}

	@Override
	public void setSeasonalProcess(String seasonalProcess) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_seasonalProcess = seasonalProcess;
	}

	@JSON
	@Override
	public long getNcbjApplicationId() {
		return _ncbjApplicationId;
	}

	@Override
	public void setNcbjApplicationId(long ncbjApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ncbjApplicationId = ncbjApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalNcbjApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("ncbjApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), NcbjOrganizationDetail.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public NcbjOrganizationDetail toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, NcbjOrganizationDetail>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		NcbjOrganizationDetailImpl ncbjOrganizationDetailImpl =
			new NcbjOrganizationDetailImpl();

		ncbjOrganizationDetailImpl.setNcbjOrganizationDetailId(
			getNcbjOrganizationDetailId());
		ncbjOrganizationDetailImpl.setGroupId(getGroupId());
		ncbjOrganizationDetailImpl.setCompanyId(getCompanyId());
		ncbjOrganizationDetailImpl.setUserId(getUserId());
		ncbjOrganizationDetailImpl.setUserName(getUserName());
		ncbjOrganizationDetailImpl.setCreateDate(getCreateDate());
		ncbjOrganizationDetailImpl.setModifiedDate(getModifiedDate());
		ncbjOrganizationDetailImpl.setNameOfOrganization(
			getNameOfOrganization());
		ncbjOrganizationDetailImpl.setAddress(getAddress());
		ncbjOrganizationDetailImpl.setTelephoneNumber(getTelephoneNumber());
		ncbjOrganizationDetailImpl.setFaxNumber(getFaxNumber());
		ncbjOrganizationDetailImpl.setEmailAddress(getEmailAddress());
		ncbjOrganizationDetailImpl.setHeadOfOrganization(
			getHeadOfOrganization());
		ncbjOrganizationDetailImpl.setPosition(getPosition());
		ncbjOrganizationDetailImpl.setContactPersonName(getContactPersonName());
		ncbjOrganizationDetailImpl.setContactPersonEmailAddress(
			getContactPersonEmailAddress());
		ncbjOrganizationDetailImpl.setContactPersonPosition(
			getContactPersonPosition());
		ncbjOrganizationDetailImpl.setManagementSystem(getManagementSystem());
		ncbjOrganizationDetailImpl.setDeterminedTheScope(
			getDeterminedTheScope());
		ncbjOrganizationDetailImpl.setPleaseStageTheScope(
			getPleaseStageTheScope());
		ncbjOrganizationDetailImpl.setPositionSecondFo(getPositionSecondFo());
		ncbjOrganizationDetailImpl.setManagementSystemFo(
			getManagementSystemFo());
		ncbjOrganizationDetailImpl.setProductTypes(getProductTypes());
		ncbjOrganizationDetailImpl.setProductLine(getProductLine());
		ncbjOrganizationDetailImpl.setHaccpStudies(getHaccpStudies());
		ncbjOrganizationDetailImpl.setCriticalControlPoints(
			getCriticalControlPoints());
		ncbjOrganizationDetailImpl.setOperationalNumber(getOperationalNumber());
		ncbjOrganizationDetailImpl.setProductionSize(getProductionSize());
		ncbjOrganizationDetailImpl.setWarehouseSize(getWarehouseSize());
		ncbjOrganizationDetailImpl.setWarehouseDetailSize(
			getWarehouseDetailSize());
		ncbjOrganizationDetailImpl.setSeasonalProcess(getSeasonalProcess());
		ncbjOrganizationDetailImpl.setNcbjApplicationId(getNcbjApplicationId());

		ncbjOrganizationDetailImpl.resetOriginalValues();

		return ncbjOrganizationDetailImpl;
	}

	@Override
	public NcbjOrganizationDetail cloneWithOriginalValues() {
		NcbjOrganizationDetailImpl ncbjOrganizationDetailImpl =
			new NcbjOrganizationDetailImpl();

		ncbjOrganizationDetailImpl.setNcbjOrganizationDetailId(
			this.<Long>getColumnOriginalValue("ncbjOrganizationDetailId"));
		ncbjOrganizationDetailImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		ncbjOrganizationDetailImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		ncbjOrganizationDetailImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		ncbjOrganizationDetailImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		ncbjOrganizationDetailImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		ncbjOrganizationDetailImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		ncbjOrganizationDetailImpl.setNameOfOrganization(
			this.<String>getColumnOriginalValue("nameOfOrganization"));
		ncbjOrganizationDetailImpl.setAddress(
			this.<String>getColumnOriginalValue("address"));
		ncbjOrganizationDetailImpl.setTelephoneNumber(
			this.<String>getColumnOriginalValue("telephoneNumber"));
		ncbjOrganizationDetailImpl.setFaxNumber(
			this.<String>getColumnOriginalValue("faxNumber"));
		ncbjOrganizationDetailImpl.setEmailAddress(
			this.<String>getColumnOriginalValue("emailAddress"));
		ncbjOrganizationDetailImpl.setHeadOfOrganization(
			this.<String>getColumnOriginalValue("headOfOrganization "));
		ncbjOrganizationDetailImpl.setPosition(
			this.<String>getColumnOriginalValue("position"));
		ncbjOrganizationDetailImpl.setContactPersonName(
			this.<String>getColumnOriginalValue("contactPersonName"));
		ncbjOrganizationDetailImpl.setContactPersonEmailAddress(
			this.<String>getColumnOriginalValue("contactPersonEmailAddress "));
		ncbjOrganizationDetailImpl.setContactPersonPosition(
			this.<String>getColumnOriginalValue("contactPersonPosition "));
		ncbjOrganizationDetailImpl.setManagementSystem(
			this.<String>getColumnOriginalValue("managementSystem"));
		ncbjOrganizationDetailImpl.setDeterminedTheScope(
			this.<String>getColumnOriginalValue("determinedTheScope"));
		ncbjOrganizationDetailImpl.setPleaseStageTheScope(
			this.<String>getColumnOriginalValue("pleaseStageTheScope"));
		ncbjOrganizationDetailImpl.setPositionSecondFo(
			this.<String>getColumnOriginalValue("positionSecondFo"));
		ncbjOrganizationDetailImpl.setManagementSystemFo(
			this.<String>getColumnOriginalValue("managementSystemFo"));
		ncbjOrganizationDetailImpl.setProductTypes(
			this.<String>getColumnOriginalValue("productTypes"));
		ncbjOrganizationDetailImpl.setProductLine(
			this.<String>getColumnOriginalValue("productLine"));
		ncbjOrganizationDetailImpl.setHaccpStudies(
			this.<String>getColumnOriginalValue("haccpStudies"));
		ncbjOrganizationDetailImpl.setCriticalControlPoints(
			this.<String>getColumnOriginalValue("criticalControlPoints"));
		ncbjOrganizationDetailImpl.setOperationalNumber(
			this.<String>getColumnOriginalValue("operationalNumber"));
		ncbjOrganizationDetailImpl.setProductionSize(
			this.<String>getColumnOriginalValue("productionSize"));
		ncbjOrganizationDetailImpl.setWarehouseSize(
			this.<String>getColumnOriginalValue("warehouseSize"));
		ncbjOrganizationDetailImpl.setWarehouseDetailSize(
			this.<String>getColumnOriginalValue("warehouseDetailSize"));
		ncbjOrganizationDetailImpl.setSeasonalProcess(
			this.<String>getColumnOriginalValue("seasonalProcess"));
		ncbjOrganizationDetailImpl.setNcbjApplicationId(
			this.<Long>getColumnOriginalValue("ncbjApplicationId"));

		return ncbjOrganizationDetailImpl;
	}

	@Override
	public int compareTo(NcbjOrganizationDetail ncbjOrganizationDetail) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), ncbjOrganizationDetail.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof NcbjOrganizationDetail)) {
			return false;
		}

		NcbjOrganizationDetail ncbjOrganizationDetail =
			(NcbjOrganizationDetail)object;

		long primaryKey = ncbjOrganizationDetail.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<NcbjOrganizationDetail> toCacheModel() {
		NcbjOrganizationDetailCacheModel ncbjOrganizationDetailCacheModel =
			new NcbjOrganizationDetailCacheModel();

		ncbjOrganizationDetailCacheModel.ncbjOrganizationDetailId =
			getNcbjOrganizationDetailId();

		ncbjOrganizationDetailCacheModel.groupId = getGroupId();

		ncbjOrganizationDetailCacheModel.companyId = getCompanyId();

		ncbjOrganizationDetailCacheModel.userId = getUserId();

		ncbjOrganizationDetailCacheModel.userName = getUserName();

		String userName = ncbjOrganizationDetailCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			ncbjOrganizationDetailCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			ncbjOrganizationDetailCacheModel.createDate = createDate.getTime();
		}
		else {
			ncbjOrganizationDetailCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			ncbjOrganizationDetailCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			ncbjOrganizationDetailCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		ncbjOrganizationDetailCacheModel.nameOfOrganization =
			getNameOfOrganization();

		String nameOfOrganization =
			ncbjOrganizationDetailCacheModel.nameOfOrganization;

		if ((nameOfOrganization != null) &&
			(nameOfOrganization.length() == 0)) {

			ncbjOrganizationDetailCacheModel.nameOfOrganization = null;
		}

		ncbjOrganizationDetailCacheModel.address = getAddress();

		String address = ncbjOrganizationDetailCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			ncbjOrganizationDetailCacheModel.address = null;
		}

		ncbjOrganizationDetailCacheModel.telephoneNumber = getTelephoneNumber();

		String telephoneNumber =
			ncbjOrganizationDetailCacheModel.telephoneNumber;

		if ((telephoneNumber != null) && (telephoneNumber.length() == 0)) {
			ncbjOrganizationDetailCacheModel.telephoneNumber = null;
		}

		ncbjOrganizationDetailCacheModel.faxNumber = getFaxNumber();

		String faxNumber = ncbjOrganizationDetailCacheModel.faxNumber;

		if ((faxNumber != null) && (faxNumber.length() == 0)) {
			ncbjOrganizationDetailCacheModel.faxNumber = null;
		}

		ncbjOrganizationDetailCacheModel.emailAddress = getEmailAddress();

		String emailAddress = ncbjOrganizationDetailCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			ncbjOrganizationDetailCacheModel.emailAddress = null;
		}

		ncbjOrganizationDetailCacheModel.headOfOrganization =
			getHeadOfOrganization();

		String headOfOrganization =
			ncbjOrganizationDetailCacheModel.headOfOrganization;

		if ((headOfOrganization != null) &&
			(headOfOrganization.length() == 0)) {

			ncbjOrganizationDetailCacheModel.headOfOrganization = null;
		}

		ncbjOrganizationDetailCacheModel.position = getPosition();

		String position = ncbjOrganizationDetailCacheModel.position;

		if ((position != null) && (position.length() == 0)) {
			ncbjOrganizationDetailCacheModel.position = null;
		}

		ncbjOrganizationDetailCacheModel.contactPersonName =
			getContactPersonName();

		String contactPersonName =
			ncbjOrganizationDetailCacheModel.contactPersonName;

		if ((contactPersonName != null) && (contactPersonName.length() == 0)) {
			ncbjOrganizationDetailCacheModel.contactPersonName = null;
		}

		ncbjOrganizationDetailCacheModel.contactPersonEmailAddress =
			getContactPersonEmailAddress();

		String contactPersonEmailAddress =
			ncbjOrganizationDetailCacheModel.contactPersonEmailAddress;

		if ((contactPersonEmailAddress != null) &&
			(contactPersonEmailAddress.length() == 0)) {

			ncbjOrganizationDetailCacheModel.contactPersonEmailAddress = null;
		}

		ncbjOrganizationDetailCacheModel.contactPersonPosition =
			getContactPersonPosition();

		String contactPersonPosition =
			ncbjOrganizationDetailCacheModel.contactPersonPosition;

		if ((contactPersonPosition != null) &&
			(contactPersonPosition.length() == 0)) {

			ncbjOrganizationDetailCacheModel.contactPersonPosition = null;
		}

		ncbjOrganizationDetailCacheModel.managementSystem =
			getManagementSystem();

		String managementSystem =
			ncbjOrganizationDetailCacheModel.managementSystem;

		if ((managementSystem != null) && (managementSystem.length() == 0)) {
			ncbjOrganizationDetailCacheModel.managementSystem = null;
		}

		ncbjOrganizationDetailCacheModel.determinedTheScope =
			getDeterminedTheScope();

		String determinedTheScope =
			ncbjOrganizationDetailCacheModel.determinedTheScope;

		if ((determinedTheScope != null) &&
			(determinedTheScope.length() == 0)) {

			ncbjOrganizationDetailCacheModel.determinedTheScope = null;
		}

		ncbjOrganizationDetailCacheModel.pleaseStageTheScope =
			getPleaseStageTheScope();

		String pleaseStageTheScope =
			ncbjOrganizationDetailCacheModel.pleaseStageTheScope;

		if ((pleaseStageTheScope != null) &&
			(pleaseStageTheScope.length() == 0)) {

			ncbjOrganizationDetailCacheModel.pleaseStageTheScope = null;
		}

		ncbjOrganizationDetailCacheModel.positionSecondFo =
			getPositionSecondFo();

		String positionSecondFo =
			ncbjOrganizationDetailCacheModel.positionSecondFo;

		if ((positionSecondFo != null) && (positionSecondFo.length() == 0)) {
			ncbjOrganizationDetailCacheModel.positionSecondFo = null;
		}

		ncbjOrganizationDetailCacheModel.managementSystemFo =
			getManagementSystemFo();

		String managementSystemFo =
			ncbjOrganizationDetailCacheModel.managementSystemFo;

		if ((managementSystemFo != null) &&
			(managementSystemFo.length() == 0)) {

			ncbjOrganizationDetailCacheModel.managementSystemFo = null;
		}

		ncbjOrganizationDetailCacheModel.productTypes = getProductTypes();

		String productTypes = ncbjOrganizationDetailCacheModel.productTypes;

		if ((productTypes != null) && (productTypes.length() == 0)) {
			ncbjOrganizationDetailCacheModel.productTypes = null;
		}

		ncbjOrganizationDetailCacheModel.productLine = getProductLine();

		String productLine = ncbjOrganizationDetailCacheModel.productLine;

		if ((productLine != null) && (productLine.length() == 0)) {
			ncbjOrganizationDetailCacheModel.productLine = null;
		}

		ncbjOrganizationDetailCacheModel.haccpStudies = getHaccpStudies();

		String haccpStudies = ncbjOrganizationDetailCacheModel.haccpStudies;

		if ((haccpStudies != null) && (haccpStudies.length() == 0)) {
			ncbjOrganizationDetailCacheModel.haccpStudies = null;
		}

		ncbjOrganizationDetailCacheModel.criticalControlPoints =
			getCriticalControlPoints();

		String criticalControlPoints =
			ncbjOrganizationDetailCacheModel.criticalControlPoints;

		if ((criticalControlPoints != null) &&
			(criticalControlPoints.length() == 0)) {

			ncbjOrganizationDetailCacheModel.criticalControlPoints = null;
		}

		ncbjOrganizationDetailCacheModel.operationalNumber =
			getOperationalNumber();

		String operationalNumber =
			ncbjOrganizationDetailCacheModel.operationalNumber;

		if ((operationalNumber != null) && (operationalNumber.length() == 0)) {
			ncbjOrganizationDetailCacheModel.operationalNumber = null;
		}

		ncbjOrganizationDetailCacheModel.productionSize = getProductionSize();

		String productionSize = ncbjOrganizationDetailCacheModel.productionSize;

		if ((productionSize != null) && (productionSize.length() == 0)) {
			ncbjOrganizationDetailCacheModel.productionSize = null;
		}

		ncbjOrganizationDetailCacheModel.warehouseSize = getWarehouseSize();

		String warehouseSize = ncbjOrganizationDetailCacheModel.warehouseSize;

		if ((warehouseSize != null) && (warehouseSize.length() == 0)) {
			ncbjOrganizationDetailCacheModel.warehouseSize = null;
		}

		ncbjOrganizationDetailCacheModel.warehouseDetailSize =
			getWarehouseDetailSize();

		String warehouseDetailSize =
			ncbjOrganizationDetailCacheModel.warehouseDetailSize;

		if ((warehouseDetailSize != null) &&
			(warehouseDetailSize.length() == 0)) {

			ncbjOrganizationDetailCacheModel.warehouseDetailSize = null;
		}

		ncbjOrganizationDetailCacheModel.seasonalProcess = getSeasonalProcess();

		String seasonalProcess =
			ncbjOrganizationDetailCacheModel.seasonalProcess;

		if ((seasonalProcess != null) && (seasonalProcess.length() == 0)) {
			ncbjOrganizationDetailCacheModel.seasonalProcess = null;
		}

		ncbjOrganizationDetailCacheModel.ncbjApplicationId =
			getNcbjApplicationId();

		return ncbjOrganizationDetailCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<NcbjOrganizationDetail, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<NcbjOrganizationDetail, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<NcbjOrganizationDetail, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(NcbjOrganizationDetail)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, NcbjOrganizationDetail>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					NcbjOrganizationDetail.class, ModelWrapper.class);

	}

	private long _ncbjOrganizationDetailId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _nameOfOrganization;
	private String _address;
	private String _telephoneNumber;
	private String _faxNumber;
	private String _emailAddress;
	private String _headOfOrganization;
	private String _position;
	private String _contactPersonName;
	private String _contactPersonEmailAddress;
	private String _contactPersonPosition;
	private String _managementSystem;
	private String _determinedTheScope;
	private String _pleaseStageTheScope;
	private String _positionSecondFo;
	private String _managementSystemFo;
	private String _productTypes;
	private String _productLine;
	private String _haccpStudies;
	private String _criticalControlPoints;
	private String _operationalNumber;
	private String _productionSize;
	private String _warehouseSize;
	private String _warehouseDetailSize;
	private String _seasonalProcess;
	private long _ncbjApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<NcbjOrganizationDetail, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((NcbjOrganizationDetail)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"ncbjOrganizationDetailId", _ncbjOrganizationDetailId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("nameOfOrganization", _nameOfOrganization);
		_columnOriginalValues.put("address", _address);
		_columnOriginalValues.put("telephoneNumber", _telephoneNumber);
		_columnOriginalValues.put("faxNumber", _faxNumber);
		_columnOriginalValues.put("emailAddress", _emailAddress);
		_columnOriginalValues.put("headOfOrganization ", _headOfOrganization);
		_columnOriginalValues.put("position", _position);
		_columnOriginalValues.put("contactPersonName", _contactPersonName);
		_columnOriginalValues.put(
			"contactPersonEmailAddress ", _contactPersonEmailAddress);
		_columnOriginalValues.put(
			"contactPersonPosition ", _contactPersonPosition);
		_columnOriginalValues.put("managementSystem", _managementSystem);
		_columnOriginalValues.put("determinedTheScope", _determinedTheScope);
		_columnOriginalValues.put("pleaseStageTheScope", _pleaseStageTheScope);
		_columnOriginalValues.put("positionSecondFo", _positionSecondFo);
		_columnOriginalValues.put("managementSystemFo", _managementSystemFo);
		_columnOriginalValues.put("productTypes", _productTypes);
		_columnOriginalValues.put("productLine", _productLine);
		_columnOriginalValues.put("haccpStudies", _haccpStudies);
		_columnOriginalValues.put(
			"criticalControlPoints", _criticalControlPoints);
		_columnOriginalValues.put("operationalNumber", _operationalNumber);
		_columnOriginalValues.put("productionSize", _productionSize);
		_columnOriginalValues.put("warehouseSize", _warehouseSize);
		_columnOriginalValues.put("warehouseDetailSize", _warehouseDetailSize);
		_columnOriginalValues.put("seasonalProcess", _seasonalProcess);
		_columnOriginalValues.put("ncbjApplicationId", _ncbjApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("ncbjOrganizationDetailId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("nameOfOrganization", 128L);

		columnBitmasks.put("address", 256L);

		columnBitmasks.put("telephoneNumber", 512L);

		columnBitmasks.put("faxNumber", 1024L);

		columnBitmasks.put("emailAddress", 2048L);

		columnBitmasks.put("headOfOrganization ", 4096L);

		columnBitmasks.put("position", 8192L);

		columnBitmasks.put("contactPersonName", 16384L);

		columnBitmasks.put("contactPersonEmailAddress ", 32768L);

		columnBitmasks.put("contactPersonPosition ", 65536L);

		columnBitmasks.put("managementSystem", 131072L);

		columnBitmasks.put("determinedTheScope", 262144L);

		columnBitmasks.put("pleaseStageTheScope", 524288L);

		columnBitmasks.put("positionSecondFo", 1048576L);

		columnBitmasks.put("managementSystemFo", 2097152L);

		columnBitmasks.put("productTypes", 4194304L);

		columnBitmasks.put("productLine", 8388608L);

		columnBitmasks.put("haccpStudies", 16777216L);

		columnBitmasks.put("criticalControlPoints", 33554432L);

		columnBitmasks.put("operationalNumber", 67108864L);

		columnBitmasks.put("productionSize", 134217728L);

		columnBitmasks.put("warehouseSize", 268435456L);

		columnBitmasks.put("warehouseDetailSize", 536870912L);

		columnBitmasks.put("seasonalProcess", 1073741824L);

		columnBitmasks.put("ncbjApplicationId", 2147483648L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private NcbjOrganizationDetail _escapedModel;

}