/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.miic.application.form.services.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.miic.application.form.services.model.MiicSuspensionOfCetAdd;
import com.nbp.miic.application.form.services.model.MiicSuspensionOfCetAddModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the MiicSuspensionOfCetAdd service. Represents a row in the &quot;nbp_miic_suspension_of_cet&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>MiicSuspensionOfCetAddModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MiicSuspensionOfCetAddImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see MiicSuspensionOfCetAddImpl
 * @generated
 */
@JSON(strict = true)
public class MiicSuspensionOfCetAddModelImpl
	extends BaseModelImpl<MiicSuspensionOfCetAdd>
	implements MiicSuspensionOfCetAddModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a miic suspension of cet add model instance should use the <code>MiicSuspensionOfCetAdd</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_miic_suspension_of_cet";

	public static final Object[][] TABLE_COLUMNS = {
		{"miicSuspensionOfCetAddId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"name", Types.VARCHAR},
		{"tariffHeadingNum ", Types.VARCHAR}, {"address", Types.VARCHAR},
		{"description", Types.VARCHAR}, {"amountQuantity", Types.VARCHAR},
		{"amountEstimateInUs", Types.VARCHAR},
		{"technologySpecification", Types.VARCHAR}, {"cetRate", Types.VARCHAR},
		{"rateProposed", Types.VARCHAR},
		{"periodOfRateChangeFrom", Types.TIMESTAMP},
		{"periodOfRateChangeTo", Types.TIMESTAMP},
		{"indicationOfUrgency", Types.VARCHAR},
		{"requestForSuspensionOfRate", Types.VARCHAR},
		{"evidenceOfInability", Types.VARCHAR},
		{"evidenceOfConsultation", Types.VARCHAR}, {"counter", Types.VARCHAR},
		{"miicApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("miicSuspensionOfCetAddId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tariffHeadingNum ", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("address", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("amountQuantity", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("amountEstimateInUs", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("technologySpecification", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cetRate", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("rateProposed", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("periodOfRateChangeFrom", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("periodOfRateChangeTo", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("indicationOfUrgency", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("requestForSuspensionOfRate", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("evidenceOfInability", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("evidenceOfConsultation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("counter", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("miicApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_miic_suspension_of_cet (miicSuspensionOfCetAddId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,name VARCHAR(75) null,tariffHeadingNum  VARCHAR(75) null,address VARCHAR(75) null,description VARCHAR(500) null,amountQuantity VARCHAR(75) null,amountEstimateInUs VARCHAR(75) null,technologySpecification VARCHAR(75) null,cetRate VARCHAR(75) null,rateProposed VARCHAR(75) null,periodOfRateChangeFrom DATE null,periodOfRateChangeTo DATE null,indicationOfUrgency VARCHAR(75) null,requestForSuspensionOfRate VARCHAR(75) null,evidenceOfInability VARCHAR(75) null,evidenceOfConsultation VARCHAR(75) null,counter VARCHAR(75) null,miicApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_miic_suspension_of_cet";

	public static final String ORDER_BY_JPQL =
		" ORDER BY miicSuspensionOfCetAdd.miicSuspensionOfCetAddId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_miic_suspension_of_cet.miicSuspensionOfCetAddId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long MIICAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long MIICSUSPENSIONOFCETADDID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public MiicSuspensionOfCetAddModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _miicSuspensionOfCetAddId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setMiicSuspensionOfCetAddId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _miicSuspensionOfCetAddId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return MiicSuspensionOfCetAdd.class;
	}

	@Override
	public String getModelClassName() {
		return MiicSuspensionOfCetAdd.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<MiicSuspensionOfCetAdd, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<MiicSuspensionOfCetAdd, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<MiicSuspensionOfCetAdd, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((MiicSuspensionOfCetAdd)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<MiicSuspensionOfCetAdd, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<MiicSuspensionOfCetAdd, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(MiicSuspensionOfCetAdd)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<MiicSuspensionOfCetAdd, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<MiicSuspensionOfCetAdd, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<MiicSuspensionOfCetAdd, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<MiicSuspensionOfCetAdd, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<MiicSuspensionOfCetAdd, Object>>();

			attributeGetterFunctions.put(
				"miicSuspensionOfCetAddId",
				MiicSuspensionOfCetAdd::getMiicSuspensionOfCetAddId);
			attributeGetterFunctions.put(
				"groupId", MiicSuspensionOfCetAdd::getGroupId);
			attributeGetterFunctions.put(
				"companyId", MiicSuspensionOfCetAdd::getCompanyId);
			attributeGetterFunctions.put(
				"userId", MiicSuspensionOfCetAdd::getUserId);
			attributeGetterFunctions.put(
				"userName", MiicSuspensionOfCetAdd::getUserName);
			attributeGetterFunctions.put(
				"createDate", MiicSuspensionOfCetAdd::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", MiicSuspensionOfCetAdd::getModifiedDate);
			attributeGetterFunctions.put(
				"name", MiicSuspensionOfCetAdd::getName);
			attributeGetterFunctions.put(
				"tariffHeadingNum ",
				MiicSuspensionOfCetAdd::getTariffHeadingNum);
			attributeGetterFunctions.put(
				"address", MiicSuspensionOfCetAdd::getAddress);
			attributeGetterFunctions.put(
				"description", MiicSuspensionOfCetAdd::getDescription);
			attributeGetterFunctions.put(
				"amountQuantity", MiicSuspensionOfCetAdd::getAmountQuantity);
			attributeGetterFunctions.put(
				"amountEstimateInUs",
				MiicSuspensionOfCetAdd::getAmountEstimateInUs);
			attributeGetterFunctions.put(
				"technologySpecification",
				MiicSuspensionOfCetAdd::getTechnologySpecification);
			attributeGetterFunctions.put(
				"cetRate", MiicSuspensionOfCetAdd::getCetRate);
			attributeGetterFunctions.put(
				"rateProposed", MiicSuspensionOfCetAdd::getRateProposed);
			attributeGetterFunctions.put(
				"periodOfRateChangeFrom",
				MiicSuspensionOfCetAdd::getPeriodOfRateChangeFrom);
			attributeGetterFunctions.put(
				"periodOfRateChangeTo",
				MiicSuspensionOfCetAdd::getPeriodOfRateChangeTo);
			attributeGetterFunctions.put(
				"indicationOfUrgency",
				MiicSuspensionOfCetAdd::getIndicationOfUrgency);
			attributeGetterFunctions.put(
				"requestForSuspensionOfRate",
				MiicSuspensionOfCetAdd::getRequestForSuspensionOfRate);
			attributeGetterFunctions.put(
				"evidenceOfInability",
				MiicSuspensionOfCetAdd::getEvidenceOfInability);
			attributeGetterFunctions.put(
				"evidenceOfConsultation",
				MiicSuspensionOfCetAdd::getEvidenceOfConsultation);
			attributeGetterFunctions.put(
				"counter", MiicSuspensionOfCetAdd::getCounter);
			attributeGetterFunctions.put(
				"miicApplicationId",
				MiicSuspensionOfCetAdd::getMiicApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<MiicSuspensionOfCetAdd, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<MiicSuspensionOfCetAdd, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<MiicSuspensionOfCetAdd, ?>>();

			attributeSetterBiConsumers.put(
				"miicSuspensionOfCetAddId",
				(BiConsumer<MiicSuspensionOfCetAdd, Long>)
					MiicSuspensionOfCetAdd::setMiicSuspensionOfCetAddId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<MiicSuspensionOfCetAdd, Long>)
					MiicSuspensionOfCetAdd::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<MiicSuspensionOfCetAdd, Long>)
					MiicSuspensionOfCetAdd::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<MiicSuspensionOfCetAdd, Long>)
					MiicSuspensionOfCetAdd::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<MiicSuspensionOfCetAdd, String>)
					MiicSuspensionOfCetAdd::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<MiicSuspensionOfCetAdd, Date>)
					MiicSuspensionOfCetAdd::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<MiicSuspensionOfCetAdd, Date>)
					MiicSuspensionOfCetAdd::setModifiedDate);
			attributeSetterBiConsumers.put(
				"name",
				(BiConsumer<MiicSuspensionOfCetAdd, String>)
					MiicSuspensionOfCetAdd::setName);
			attributeSetterBiConsumers.put(
				"tariffHeadingNum ",
				(BiConsumer<MiicSuspensionOfCetAdd, String>)
					MiicSuspensionOfCetAdd::setTariffHeadingNum);
			attributeSetterBiConsumers.put(
				"address",
				(BiConsumer<MiicSuspensionOfCetAdd, String>)
					MiicSuspensionOfCetAdd::setAddress);
			attributeSetterBiConsumers.put(
				"description",
				(BiConsumer<MiicSuspensionOfCetAdd, String>)
					MiicSuspensionOfCetAdd::setDescription);
			attributeSetterBiConsumers.put(
				"amountQuantity",
				(BiConsumer<MiicSuspensionOfCetAdd, String>)
					MiicSuspensionOfCetAdd::setAmountQuantity);
			attributeSetterBiConsumers.put(
				"amountEstimateInUs",
				(BiConsumer<MiicSuspensionOfCetAdd, String>)
					MiicSuspensionOfCetAdd::setAmountEstimateInUs);
			attributeSetterBiConsumers.put(
				"technologySpecification",
				(BiConsumer<MiicSuspensionOfCetAdd, String>)
					MiicSuspensionOfCetAdd::setTechnologySpecification);
			attributeSetterBiConsumers.put(
				"cetRate",
				(BiConsumer<MiicSuspensionOfCetAdd, String>)
					MiicSuspensionOfCetAdd::setCetRate);
			attributeSetterBiConsumers.put(
				"rateProposed",
				(BiConsumer<MiicSuspensionOfCetAdd, String>)
					MiicSuspensionOfCetAdd::setRateProposed);
			attributeSetterBiConsumers.put(
				"periodOfRateChangeFrom",
				(BiConsumer<MiicSuspensionOfCetAdd, Date>)
					MiicSuspensionOfCetAdd::setPeriodOfRateChangeFrom);
			attributeSetterBiConsumers.put(
				"periodOfRateChangeTo",
				(BiConsumer<MiicSuspensionOfCetAdd, Date>)
					MiicSuspensionOfCetAdd::setPeriodOfRateChangeTo);
			attributeSetterBiConsumers.put(
				"indicationOfUrgency",
				(BiConsumer<MiicSuspensionOfCetAdd, String>)
					MiicSuspensionOfCetAdd::setIndicationOfUrgency);
			attributeSetterBiConsumers.put(
				"requestForSuspensionOfRate",
				(BiConsumer<MiicSuspensionOfCetAdd, String>)
					MiicSuspensionOfCetAdd::setRequestForSuspensionOfRate);
			attributeSetterBiConsumers.put(
				"evidenceOfInability",
				(BiConsumer<MiicSuspensionOfCetAdd, String>)
					MiicSuspensionOfCetAdd::setEvidenceOfInability);
			attributeSetterBiConsumers.put(
				"evidenceOfConsultation",
				(BiConsumer<MiicSuspensionOfCetAdd, String>)
					MiicSuspensionOfCetAdd::setEvidenceOfConsultation);
			attributeSetterBiConsumers.put(
				"counter",
				(BiConsumer<MiicSuspensionOfCetAdd, String>)
					MiicSuspensionOfCetAdd::setCounter);
			attributeSetterBiConsumers.put(
				"miicApplicationId",
				(BiConsumer<MiicSuspensionOfCetAdd, Long>)
					MiicSuspensionOfCetAdd::setMiicApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getMiicSuspensionOfCetAddId() {
		return _miicSuspensionOfCetAddId;
	}

	@Override
	public void setMiicSuspensionOfCetAddId(long miicSuspensionOfCetAddId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_miicSuspensionOfCetAddId = miicSuspensionOfCetAddId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return "";
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_name = name;
	}

	@JSON
	@Override
	public String getTariffHeadingNum() {
		if (_tariffHeadingNum == null) {
			return "";
		}
		else {
			return _tariffHeadingNum;
		}
	}

	@Override
	public void setTariffHeadingNum(String tariffHeadingNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tariffHeadingNum = tariffHeadingNum;
	}

	@JSON
	@Override
	public String getAddress() {
		if (_address == null) {
			return "";
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_address = address;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return "";
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_description = description;
	}

	@JSON
	@Override
	public String getAmountQuantity() {
		if (_amountQuantity == null) {
			return "";
		}
		else {
			return _amountQuantity;
		}
	}

	@Override
	public void setAmountQuantity(String amountQuantity) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_amountQuantity = amountQuantity;
	}

	@JSON
	@Override
	public String getAmountEstimateInUs() {
		if (_amountEstimateInUs == null) {
			return "";
		}
		else {
			return _amountEstimateInUs;
		}
	}

	@Override
	public void setAmountEstimateInUs(String amountEstimateInUs) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_amountEstimateInUs = amountEstimateInUs;
	}

	@JSON
	@Override
	public String getTechnologySpecification() {
		if (_technologySpecification == null) {
			return "";
		}
		else {
			return _technologySpecification;
		}
	}

	@Override
	public void setTechnologySpecification(String technologySpecification) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_technologySpecification = technologySpecification;
	}

	@JSON
	@Override
	public String getCetRate() {
		if (_cetRate == null) {
			return "";
		}
		else {
			return _cetRate;
		}
	}

	@Override
	public void setCetRate(String cetRate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cetRate = cetRate;
	}

	@JSON
	@Override
	public String getRateProposed() {
		if (_rateProposed == null) {
			return "";
		}
		else {
			return _rateProposed;
		}
	}

	@Override
	public void setRateProposed(String rateProposed) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_rateProposed = rateProposed;
	}

	@JSON
	@Override
	public Date getPeriodOfRateChangeFrom() {
		return _periodOfRateChangeFrom;
	}

	@Override
	public void setPeriodOfRateChangeFrom(Date periodOfRateChangeFrom) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_periodOfRateChangeFrom = periodOfRateChangeFrom;
	}

	@JSON
	@Override
	public Date getPeriodOfRateChangeTo() {
		return _periodOfRateChangeTo;
	}

	@Override
	public void setPeriodOfRateChangeTo(Date periodOfRateChangeTo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_periodOfRateChangeTo = periodOfRateChangeTo;
	}

	@JSON
	@Override
	public String getIndicationOfUrgency() {
		if (_indicationOfUrgency == null) {
			return "";
		}
		else {
			return _indicationOfUrgency;
		}
	}

	@Override
	public void setIndicationOfUrgency(String indicationOfUrgency) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_indicationOfUrgency = indicationOfUrgency;
	}

	@JSON
	@Override
	public String getRequestForSuspensionOfRate() {
		if (_requestForSuspensionOfRate == null) {
			return "";
		}
		else {
			return _requestForSuspensionOfRate;
		}
	}

	@Override
	public void setRequestForSuspensionOfRate(
		String requestForSuspensionOfRate) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_requestForSuspensionOfRate = requestForSuspensionOfRate;
	}

	@JSON
	@Override
	public String getEvidenceOfInability() {
		if (_evidenceOfInability == null) {
			return "";
		}
		else {
			return _evidenceOfInability;
		}
	}

	@Override
	public void setEvidenceOfInability(String evidenceOfInability) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_evidenceOfInability = evidenceOfInability;
	}

	@JSON
	@Override
	public String getEvidenceOfConsultation() {
		if (_evidenceOfConsultation == null) {
			return "";
		}
		else {
			return _evidenceOfConsultation;
		}
	}

	@Override
	public void setEvidenceOfConsultation(String evidenceOfConsultation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_evidenceOfConsultation = evidenceOfConsultation;
	}

	@JSON
	@Override
	public String getCounter() {
		if (_counter == null) {
			return "";
		}
		else {
			return _counter;
		}
	}

	@Override
	public void setCounter(String counter) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_counter = counter;
	}

	@JSON
	@Override
	public long getMiicApplicationId() {
		return _miicApplicationId;
	}

	@Override
	public void setMiicApplicationId(long miicApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_miicApplicationId = miicApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalMiicApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("miicApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), MiicSuspensionOfCetAdd.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public MiicSuspensionOfCetAdd toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, MiicSuspensionOfCetAdd>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		MiicSuspensionOfCetAddImpl miicSuspensionOfCetAddImpl =
			new MiicSuspensionOfCetAddImpl();

		miicSuspensionOfCetAddImpl.setMiicSuspensionOfCetAddId(
			getMiicSuspensionOfCetAddId());
		miicSuspensionOfCetAddImpl.setGroupId(getGroupId());
		miicSuspensionOfCetAddImpl.setCompanyId(getCompanyId());
		miicSuspensionOfCetAddImpl.setUserId(getUserId());
		miicSuspensionOfCetAddImpl.setUserName(getUserName());
		miicSuspensionOfCetAddImpl.setCreateDate(getCreateDate());
		miicSuspensionOfCetAddImpl.setModifiedDate(getModifiedDate());
		miicSuspensionOfCetAddImpl.setName(getName());
		miicSuspensionOfCetAddImpl.setTariffHeadingNum(getTariffHeadingNum());
		miicSuspensionOfCetAddImpl.setAddress(getAddress());
		miicSuspensionOfCetAddImpl.setDescription(getDescription());
		miicSuspensionOfCetAddImpl.setAmountQuantity(getAmountQuantity());
		miicSuspensionOfCetAddImpl.setAmountEstimateInUs(
			getAmountEstimateInUs());
		miicSuspensionOfCetAddImpl.setTechnologySpecification(
			getTechnologySpecification());
		miicSuspensionOfCetAddImpl.setCetRate(getCetRate());
		miicSuspensionOfCetAddImpl.setRateProposed(getRateProposed());
		miicSuspensionOfCetAddImpl.setPeriodOfRateChangeFrom(
			getPeriodOfRateChangeFrom());
		miicSuspensionOfCetAddImpl.setPeriodOfRateChangeTo(
			getPeriodOfRateChangeTo());
		miicSuspensionOfCetAddImpl.setIndicationOfUrgency(
			getIndicationOfUrgency());
		miicSuspensionOfCetAddImpl.setRequestForSuspensionOfRate(
			getRequestForSuspensionOfRate());
		miicSuspensionOfCetAddImpl.setEvidenceOfInability(
			getEvidenceOfInability());
		miicSuspensionOfCetAddImpl.setEvidenceOfConsultation(
			getEvidenceOfConsultation());
		miicSuspensionOfCetAddImpl.setCounter(getCounter());
		miicSuspensionOfCetAddImpl.setMiicApplicationId(getMiicApplicationId());

		miicSuspensionOfCetAddImpl.resetOriginalValues();

		return miicSuspensionOfCetAddImpl;
	}

	@Override
	public MiicSuspensionOfCetAdd cloneWithOriginalValues() {
		MiicSuspensionOfCetAddImpl miicSuspensionOfCetAddImpl =
			new MiicSuspensionOfCetAddImpl();

		miicSuspensionOfCetAddImpl.setMiicSuspensionOfCetAddId(
			this.<Long>getColumnOriginalValue("miicSuspensionOfCetAddId"));
		miicSuspensionOfCetAddImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		miicSuspensionOfCetAddImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		miicSuspensionOfCetAddImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		miicSuspensionOfCetAddImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		miicSuspensionOfCetAddImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		miicSuspensionOfCetAddImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		miicSuspensionOfCetAddImpl.setName(
			this.<String>getColumnOriginalValue("name"));
		miicSuspensionOfCetAddImpl.setTariffHeadingNum(
			this.<String>getColumnOriginalValue("tariffHeadingNum "));
		miicSuspensionOfCetAddImpl.setAddress(
			this.<String>getColumnOriginalValue("address"));
		miicSuspensionOfCetAddImpl.setDescription(
			this.<String>getColumnOriginalValue("description"));
		miicSuspensionOfCetAddImpl.setAmountQuantity(
			this.<String>getColumnOriginalValue("amountQuantity"));
		miicSuspensionOfCetAddImpl.setAmountEstimateInUs(
			this.<String>getColumnOriginalValue("amountEstimateInUs"));
		miicSuspensionOfCetAddImpl.setTechnologySpecification(
			this.<String>getColumnOriginalValue("technologySpecification"));
		miicSuspensionOfCetAddImpl.setCetRate(
			this.<String>getColumnOriginalValue("cetRate"));
		miicSuspensionOfCetAddImpl.setRateProposed(
			this.<String>getColumnOriginalValue("rateProposed"));
		miicSuspensionOfCetAddImpl.setPeriodOfRateChangeFrom(
			this.<Date>getColumnOriginalValue("periodOfRateChangeFrom"));
		miicSuspensionOfCetAddImpl.setPeriodOfRateChangeTo(
			this.<Date>getColumnOriginalValue("periodOfRateChangeTo"));
		miicSuspensionOfCetAddImpl.setIndicationOfUrgency(
			this.<String>getColumnOriginalValue("indicationOfUrgency"));
		miicSuspensionOfCetAddImpl.setRequestForSuspensionOfRate(
			this.<String>getColumnOriginalValue("requestForSuspensionOfRate"));
		miicSuspensionOfCetAddImpl.setEvidenceOfInability(
			this.<String>getColumnOriginalValue("evidenceOfInability"));
		miicSuspensionOfCetAddImpl.setEvidenceOfConsultation(
			this.<String>getColumnOriginalValue("evidenceOfConsultation"));
		miicSuspensionOfCetAddImpl.setCounter(
			this.<String>getColumnOriginalValue("counter"));
		miicSuspensionOfCetAddImpl.setMiicApplicationId(
			this.<Long>getColumnOriginalValue("miicApplicationId"));

		return miicSuspensionOfCetAddImpl;
	}

	@Override
	public int compareTo(MiicSuspensionOfCetAdd miicSuspensionOfCetAdd) {
		long primaryKey = miicSuspensionOfCetAdd.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof MiicSuspensionOfCetAdd)) {
			return false;
		}

		MiicSuspensionOfCetAdd miicSuspensionOfCetAdd =
			(MiicSuspensionOfCetAdd)object;

		long primaryKey = miicSuspensionOfCetAdd.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<MiicSuspensionOfCetAdd> toCacheModel() {
		MiicSuspensionOfCetAddCacheModel miicSuspensionOfCetAddCacheModel =
			new MiicSuspensionOfCetAddCacheModel();

		miicSuspensionOfCetAddCacheModel.miicSuspensionOfCetAddId =
			getMiicSuspensionOfCetAddId();

		miicSuspensionOfCetAddCacheModel.groupId = getGroupId();

		miicSuspensionOfCetAddCacheModel.companyId = getCompanyId();

		miicSuspensionOfCetAddCacheModel.userId = getUserId();

		miicSuspensionOfCetAddCacheModel.userName = getUserName();

		String userName = miicSuspensionOfCetAddCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			miicSuspensionOfCetAddCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			miicSuspensionOfCetAddCacheModel.createDate = createDate.getTime();
		}
		else {
			miicSuspensionOfCetAddCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			miicSuspensionOfCetAddCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			miicSuspensionOfCetAddCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		miicSuspensionOfCetAddCacheModel.name = getName();

		String name = miicSuspensionOfCetAddCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			miicSuspensionOfCetAddCacheModel.name = null;
		}

		miicSuspensionOfCetAddCacheModel.tariffHeadingNum =
			getTariffHeadingNum();

		String tariffHeadingNum =
			miicSuspensionOfCetAddCacheModel.tariffHeadingNum;

		if ((tariffHeadingNum != null) && (tariffHeadingNum.length() == 0)) {
			miicSuspensionOfCetAddCacheModel.tariffHeadingNum = null;
		}

		miicSuspensionOfCetAddCacheModel.address = getAddress();

		String address = miicSuspensionOfCetAddCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			miicSuspensionOfCetAddCacheModel.address = null;
		}

		miicSuspensionOfCetAddCacheModel.description = getDescription();

		String description = miicSuspensionOfCetAddCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			miicSuspensionOfCetAddCacheModel.description = null;
		}

		miicSuspensionOfCetAddCacheModel.amountQuantity = getAmountQuantity();

		String amountQuantity = miicSuspensionOfCetAddCacheModel.amountQuantity;

		if ((amountQuantity != null) && (amountQuantity.length() == 0)) {
			miicSuspensionOfCetAddCacheModel.amountQuantity = null;
		}

		miicSuspensionOfCetAddCacheModel.amountEstimateInUs =
			getAmountEstimateInUs();

		String amountEstimateInUs =
			miicSuspensionOfCetAddCacheModel.amountEstimateInUs;

		if ((amountEstimateInUs != null) &&
			(amountEstimateInUs.length() == 0)) {

			miicSuspensionOfCetAddCacheModel.amountEstimateInUs = null;
		}

		miicSuspensionOfCetAddCacheModel.technologySpecification =
			getTechnologySpecification();

		String technologySpecification =
			miicSuspensionOfCetAddCacheModel.technologySpecification;

		if ((technologySpecification != null) &&
			(technologySpecification.length() == 0)) {

			miicSuspensionOfCetAddCacheModel.technologySpecification = null;
		}

		miicSuspensionOfCetAddCacheModel.cetRate = getCetRate();

		String cetRate = miicSuspensionOfCetAddCacheModel.cetRate;

		if ((cetRate != null) && (cetRate.length() == 0)) {
			miicSuspensionOfCetAddCacheModel.cetRate = null;
		}

		miicSuspensionOfCetAddCacheModel.rateProposed = getRateProposed();

		String rateProposed = miicSuspensionOfCetAddCacheModel.rateProposed;

		if ((rateProposed != null) && (rateProposed.length() == 0)) {
			miicSuspensionOfCetAddCacheModel.rateProposed = null;
		}

		Date periodOfRateChangeFrom = getPeriodOfRateChangeFrom();

		if (periodOfRateChangeFrom != null) {
			miicSuspensionOfCetAddCacheModel.periodOfRateChangeFrom =
				periodOfRateChangeFrom.getTime();
		}
		else {
			miicSuspensionOfCetAddCacheModel.periodOfRateChangeFrom =
				Long.MIN_VALUE;
		}

		Date periodOfRateChangeTo = getPeriodOfRateChangeTo();

		if (periodOfRateChangeTo != null) {
			miicSuspensionOfCetAddCacheModel.periodOfRateChangeTo =
				periodOfRateChangeTo.getTime();
		}
		else {
			miicSuspensionOfCetAddCacheModel.periodOfRateChangeTo =
				Long.MIN_VALUE;
		}

		miicSuspensionOfCetAddCacheModel.indicationOfUrgency =
			getIndicationOfUrgency();

		String indicationOfUrgency =
			miicSuspensionOfCetAddCacheModel.indicationOfUrgency;

		if ((indicationOfUrgency != null) &&
			(indicationOfUrgency.length() == 0)) {

			miicSuspensionOfCetAddCacheModel.indicationOfUrgency = null;
		}

		miicSuspensionOfCetAddCacheModel.requestForSuspensionOfRate =
			getRequestForSuspensionOfRate();

		String requestForSuspensionOfRate =
			miicSuspensionOfCetAddCacheModel.requestForSuspensionOfRate;

		if ((requestForSuspensionOfRate != null) &&
			(requestForSuspensionOfRate.length() == 0)) {

			miicSuspensionOfCetAddCacheModel.requestForSuspensionOfRate = null;
		}

		miicSuspensionOfCetAddCacheModel.evidenceOfInability =
			getEvidenceOfInability();

		String evidenceOfInability =
			miicSuspensionOfCetAddCacheModel.evidenceOfInability;

		if ((evidenceOfInability != null) &&
			(evidenceOfInability.length() == 0)) {

			miicSuspensionOfCetAddCacheModel.evidenceOfInability = null;
		}

		miicSuspensionOfCetAddCacheModel.evidenceOfConsultation =
			getEvidenceOfConsultation();

		String evidenceOfConsultation =
			miicSuspensionOfCetAddCacheModel.evidenceOfConsultation;

		if ((evidenceOfConsultation != null) &&
			(evidenceOfConsultation.length() == 0)) {

			miicSuspensionOfCetAddCacheModel.evidenceOfConsultation = null;
		}

		miicSuspensionOfCetAddCacheModel.counter = getCounter();

		String counter = miicSuspensionOfCetAddCacheModel.counter;

		if ((counter != null) && (counter.length() == 0)) {
			miicSuspensionOfCetAddCacheModel.counter = null;
		}

		miicSuspensionOfCetAddCacheModel.miicApplicationId =
			getMiicApplicationId();

		return miicSuspensionOfCetAddCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<MiicSuspensionOfCetAdd, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<MiicSuspensionOfCetAdd, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<MiicSuspensionOfCetAdd, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(MiicSuspensionOfCetAdd)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, MiicSuspensionOfCetAdd>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					MiicSuspensionOfCetAdd.class, ModelWrapper.class);

	}

	private long _miicSuspensionOfCetAddId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _name;
	private String _tariffHeadingNum;
	private String _address;
	private String _description;
	private String _amountQuantity;
	private String _amountEstimateInUs;
	private String _technologySpecification;
	private String _cetRate;
	private String _rateProposed;
	private Date _periodOfRateChangeFrom;
	private Date _periodOfRateChangeTo;
	private String _indicationOfUrgency;
	private String _requestForSuspensionOfRate;
	private String _evidenceOfInability;
	private String _evidenceOfConsultation;
	private String _counter;
	private long _miicApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<MiicSuspensionOfCetAdd, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((MiicSuspensionOfCetAdd)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"miicSuspensionOfCetAddId", _miicSuspensionOfCetAddId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("name", _name);
		_columnOriginalValues.put("tariffHeadingNum ", _tariffHeadingNum);
		_columnOriginalValues.put("address", _address);
		_columnOriginalValues.put("description", _description);
		_columnOriginalValues.put("amountQuantity", _amountQuantity);
		_columnOriginalValues.put("amountEstimateInUs", _amountEstimateInUs);
		_columnOriginalValues.put(
			"technologySpecification", _technologySpecification);
		_columnOriginalValues.put("cetRate", _cetRate);
		_columnOriginalValues.put("rateProposed", _rateProposed);
		_columnOriginalValues.put(
			"periodOfRateChangeFrom", _periodOfRateChangeFrom);
		_columnOriginalValues.put(
			"periodOfRateChangeTo", _periodOfRateChangeTo);
		_columnOriginalValues.put("indicationOfUrgency", _indicationOfUrgency);
		_columnOriginalValues.put(
			"requestForSuspensionOfRate", _requestForSuspensionOfRate);
		_columnOriginalValues.put("evidenceOfInability", _evidenceOfInability);
		_columnOriginalValues.put(
			"evidenceOfConsultation", _evidenceOfConsultation);
		_columnOriginalValues.put("counter", _counter);
		_columnOriginalValues.put("miicApplicationId", _miicApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("miicSuspensionOfCetAddId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("name", 128L);

		columnBitmasks.put("tariffHeadingNum ", 256L);

		columnBitmasks.put("address", 512L);

		columnBitmasks.put("description", 1024L);

		columnBitmasks.put("amountQuantity", 2048L);

		columnBitmasks.put("amountEstimateInUs", 4096L);

		columnBitmasks.put("technologySpecification", 8192L);

		columnBitmasks.put("cetRate", 16384L);

		columnBitmasks.put("rateProposed", 32768L);

		columnBitmasks.put("periodOfRateChangeFrom", 65536L);

		columnBitmasks.put("periodOfRateChangeTo", 131072L);

		columnBitmasks.put("indicationOfUrgency", 262144L);

		columnBitmasks.put("requestForSuspensionOfRate", 524288L);

		columnBitmasks.put("evidenceOfInability", 1048576L);

		columnBitmasks.put("evidenceOfConsultation", 2097152L);

		columnBitmasks.put("counter", 4194304L);

		columnBitmasks.put("miicApplicationId", 8388608L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private MiicSuspensionOfCetAdd _escapedModel;

}