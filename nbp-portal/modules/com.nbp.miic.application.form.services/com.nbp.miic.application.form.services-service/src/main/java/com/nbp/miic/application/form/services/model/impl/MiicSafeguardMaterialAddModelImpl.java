/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.nbp.miic.application.form.services.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.nbp.miic.application.form.services.model.MiicSafeguardMaterialAdd;
import com.nbp.miic.application.form.services.model.MiicSafeguardMaterialAddModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the MiicSafeguardMaterialAdd service. Represents a row in the &quot;nbp_miic_safeguard_material&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>MiicSafeguardMaterialAddModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MiicSafeguardMaterialAddImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see MiicSafeguardMaterialAddImpl
 * @generated
 */
@JSON(strict = true)
public class MiicSafeguardMaterialAddModelImpl
	extends BaseModelImpl<MiicSafeguardMaterialAdd>
	implements MiicSafeguardMaterialAddModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a miic safeguard material add model instance should use the <code>MiicSafeguardMaterialAdd</code> interface instead.
	 */
	public static final String TABLE_NAME = "nbp_miic_safeguard_material";

	public static final Object[][] TABLE_COLUMNS = {
		{"miicSafeguardMaterialAddId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"nameOfProducer", Types.VARCHAR},
		{"addressOfProducer ", Types.VARCHAR}, {"description", Types.VARCHAR},
		{"tariffHeadingNum", Types.VARCHAR}, {"amount", Types.VARCHAR},
		{"quantity", Types.VARCHAR}, {"technologySpecification", Types.VARCHAR},
		{"periodOfImportationFrom", Types.TIMESTAMP},
		{"periodOfImportationTo", Types.TIMESTAMP}, {"counter", Types.VARCHAR},
		{"miicApplicationId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("miicSafeguardMaterialAddId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("nameOfProducer", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("addressOfProducer ", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tariffHeadingNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("amount", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("quantity", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("technologySpecification", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("periodOfImportationFrom", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("periodOfImportationTo", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("counter", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("miicApplicationId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table nbp_miic_safeguard_material (miicSafeguardMaterialAddId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,nameOfProducer VARCHAR(75) null,addressOfProducer  VARCHAR(500) null,description VARCHAR(75) null,tariffHeadingNum VARCHAR(75) null,amount VARCHAR(75) null,quantity VARCHAR(75) null,technologySpecification VARCHAR(75) null,periodOfImportationFrom DATE null,periodOfImportationTo DATE null,counter VARCHAR(75) null,miicApplicationId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table nbp_miic_safeguard_material";

	public static final String ORDER_BY_JPQL =
		" ORDER BY miicSafeguardMaterialAdd.miicSafeguardMaterialAddId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY nbp_miic_safeguard_material.miicSafeguardMaterialAddId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long MIICAPPLICATIONID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long MIICSAFEGUARDMATERIALADDID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public MiicSafeguardMaterialAddModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _miicSafeguardMaterialAddId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setMiicSafeguardMaterialAddId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _miicSafeguardMaterialAddId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return MiicSafeguardMaterialAdd.class;
	}

	@Override
	public String getModelClassName() {
		return MiicSafeguardMaterialAdd.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<MiicSafeguardMaterialAdd, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<MiicSafeguardMaterialAdd, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<MiicSafeguardMaterialAdd, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((MiicSafeguardMaterialAdd)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<MiicSafeguardMaterialAdd, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<MiicSafeguardMaterialAdd, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(MiicSafeguardMaterialAdd)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<MiicSafeguardMaterialAdd, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<MiicSafeguardMaterialAdd, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map
			<String, Function<MiicSafeguardMaterialAdd, Object>>
				_attributeGetterFunctions;

		static {
			Map<String, Function<MiicSafeguardMaterialAdd, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<MiicSafeguardMaterialAdd, Object>>();

			attributeGetterFunctions.put(
				"miicSafeguardMaterialAddId",
				MiicSafeguardMaterialAdd::getMiicSafeguardMaterialAddId);
			attributeGetterFunctions.put(
				"groupId", MiicSafeguardMaterialAdd::getGroupId);
			attributeGetterFunctions.put(
				"companyId", MiicSafeguardMaterialAdd::getCompanyId);
			attributeGetterFunctions.put(
				"userId", MiicSafeguardMaterialAdd::getUserId);
			attributeGetterFunctions.put(
				"userName", MiicSafeguardMaterialAdd::getUserName);
			attributeGetterFunctions.put(
				"createDate", MiicSafeguardMaterialAdd::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", MiicSafeguardMaterialAdd::getModifiedDate);
			attributeGetterFunctions.put(
				"nameOfProducer", MiicSafeguardMaterialAdd::getNameOfProducer);
			attributeGetterFunctions.put(
				"addressOfProducer ",
				MiicSafeguardMaterialAdd::getAddressOfProducer);
			attributeGetterFunctions.put(
				"description", MiicSafeguardMaterialAdd::getDescription);
			attributeGetterFunctions.put(
				"tariffHeadingNum",
				MiicSafeguardMaterialAdd::getTariffHeadingNum);
			attributeGetterFunctions.put(
				"amount", MiicSafeguardMaterialAdd::getAmount);
			attributeGetterFunctions.put(
				"quantity", MiicSafeguardMaterialAdd::getQuantity);
			attributeGetterFunctions.put(
				"technologySpecification",
				MiicSafeguardMaterialAdd::getTechnologySpecification);
			attributeGetterFunctions.put(
				"periodOfImportationFrom",
				MiicSafeguardMaterialAdd::getPeriodOfImportationFrom);
			attributeGetterFunctions.put(
				"periodOfImportationTo",
				MiicSafeguardMaterialAdd::getPeriodOfImportationTo);
			attributeGetterFunctions.put(
				"counter", MiicSafeguardMaterialAdd::getCounter);
			attributeGetterFunctions.put(
				"miicApplicationId",
				MiicSafeguardMaterialAdd::getMiicApplicationId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<MiicSafeguardMaterialAdd, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<MiicSafeguardMaterialAdd, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<MiicSafeguardMaterialAdd, ?>>();

			attributeSetterBiConsumers.put(
				"miicSafeguardMaterialAddId",
				(BiConsumer<MiicSafeguardMaterialAdd, Long>)
					MiicSafeguardMaterialAdd::setMiicSafeguardMaterialAddId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<MiicSafeguardMaterialAdd, Long>)
					MiicSafeguardMaterialAdd::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<MiicSafeguardMaterialAdd, Long>)
					MiicSafeguardMaterialAdd::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<MiicSafeguardMaterialAdd, Long>)
					MiicSafeguardMaterialAdd::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<MiicSafeguardMaterialAdd, String>)
					MiicSafeguardMaterialAdd::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<MiicSafeguardMaterialAdd, Date>)
					MiicSafeguardMaterialAdd::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<MiicSafeguardMaterialAdd, Date>)
					MiicSafeguardMaterialAdd::setModifiedDate);
			attributeSetterBiConsumers.put(
				"nameOfProducer",
				(BiConsumer<MiicSafeguardMaterialAdd, String>)
					MiicSafeguardMaterialAdd::setNameOfProducer);
			attributeSetterBiConsumers.put(
				"addressOfProducer ",
				(BiConsumer<MiicSafeguardMaterialAdd, String>)
					MiicSafeguardMaterialAdd::setAddressOfProducer);
			attributeSetterBiConsumers.put(
				"description",
				(BiConsumer<MiicSafeguardMaterialAdd, String>)
					MiicSafeguardMaterialAdd::setDescription);
			attributeSetterBiConsumers.put(
				"tariffHeadingNum",
				(BiConsumer<MiicSafeguardMaterialAdd, String>)
					MiicSafeguardMaterialAdd::setTariffHeadingNum);
			attributeSetterBiConsumers.put(
				"amount",
				(BiConsumer<MiicSafeguardMaterialAdd, String>)
					MiicSafeguardMaterialAdd::setAmount);
			attributeSetterBiConsumers.put(
				"quantity",
				(BiConsumer<MiicSafeguardMaterialAdd, String>)
					MiicSafeguardMaterialAdd::setQuantity);
			attributeSetterBiConsumers.put(
				"technologySpecification",
				(BiConsumer<MiicSafeguardMaterialAdd, String>)
					MiicSafeguardMaterialAdd::setTechnologySpecification);
			attributeSetterBiConsumers.put(
				"periodOfImportationFrom",
				(BiConsumer<MiicSafeguardMaterialAdd, Date>)
					MiicSafeguardMaterialAdd::setPeriodOfImportationFrom);
			attributeSetterBiConsumers.put(
				"periodOfImportationTo",
				(BiConsumer<MiicSafeguardMaterialAdd, Date>)
					MiicSafeguardMaterialAdd::setPeriodOfImportationTo);
			attributeSetterBiConsumers.put(
				"counter",
				(BiConsumer<MiicSafeguardMaterialAdd, String>)
					MiicSafeguardMaterialAdd::setCounter);
			attributeSetterBiConsumers.put(
				"miicApplicationId",
				(BiConsumer<MiicSafeguardMaterialAdd, Long>)
					MiicSafeguardMaterialAdd::setMiicApplicationId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public long getMiicSafeguardMaterialAddId() {
		return _miicSafeguardMaterialAddId;
	}

	@Override
	public void setMiicSafeguardMaterialAddId(long miicSafeguardMaterialAddId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_miicSafeguardMaterialAddId = miicSafeguardMaterialAddId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getNameOfProducer() {
		if (_nameOfProducer == null) {
			return "";
		}
		else {
			return _nameOfProducer;
		}
	}

	@Override
	public void setNameOfProducer(String nameOfProducer) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nameOfProducer = nameOfProducer;
	}

	@JSON
	@Override
	public String getAddressOfProducer() {
		if (_addressOfProducer == null) {
			return "";
		}
		else {
			return _addressOfProducer;
		}
	}

	@Override
	public void setAddressOfProducer(String addressOfProducer) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_addressOfProducer = addressOfProducer;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return "";
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_description = description;
	}

	@JSON
	@Override
	public String getTariffHeadingNum() {
		if (_tariffHeadingNum == null) {
			return "";
		}
		else {
			return _tariffHeadingNum;
		}
	}

	@Override
	public void setTariffHeadingNum(String tariffHeadingNum) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tariffHeadingNum = tariffHeadingNum;
	}

	@JSON
	@Override
	public String getAmount() {
		if (_amount == null) {
			return "";
		}
		else {
			return _amount;
		}
	}

	@Override
	public void setAmount(String amount) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_amount = amount;
	}

	@JSON
	@Override
	public String getQuantity() {
		if (_quantity == null) {
			return "";
		}
		else {
			return _quantity;
		}
	}

	@Override
	public void setQuantity(String quantity) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_quantity = quantity;
	}

	@JSON
	@Override
	public String getTechnologySpecification() {
		if (_technologySpecification == null) {
			return "";
		}
		else {
			return _technologySpecification;
		}
	}

	@Override
	public void setTechnologySpecification(String technologySpecification) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_technologySpecification = technologySpecification;
	}

	@JSON
	@Override
	public Date getPeriodOfImportationFrom() {
		return _periodOfImportationFrom;
	}

	@Override
	public void setPeriodOfImportationFrom(Date periodOfImportationFrom) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_periodOfImportationFrom = periodOfImportationFrom;
	}

	@JSON
	@Override
	public Date getPeriodOfImportationTo() {
		return _periodOfImportationTo;
	}

	@Override
	public void setPeriodOfImportationTo(Date periodOfImportationTo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_periodOfImportationTo = periodOfImportationTo;
	}

	@JSON
	@Override
	public String getCounter() {
		if (_counter == null) {
			return "";
		}
		else {
			return _counter;
		}
	}

	@Override
	public void setCounter(String counter) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_counter = counter;
	}

	@JSON
	@Override
	public long getMiicApplicationId() {
		return _miicApplicationId;
	}

	@Override
	public void setMiicApplicationId(long miicApplicationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_miicApplicationId = miicApplicationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalMiicApplicationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("miicApplicationId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), MiicSafeguardMaterialAdd.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public MiicSafeguardMaterialAdd toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, MiicSafeguardMaterialAdd>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		MiicSafeguardMaterialAddImpl miicSafeguardMaterialAddImpl =
			new MiicSafeguardMaterialAddImpl();

		miicSafeguardMaterialAddImpl.setMiicSafeguardMaterialAddId(
			getMiicSafeguardMaterialAddId());
		miicSafeguardMaterialAddImpl.setGroupId(getGroupId());
		miicSafeguardMaterialAddImpl.setCompanyId(getCompanyId());
		miicSafeguardMaterialAddImpl.setUserId(getUserId());
		miicSafeguardMaterialAddImpl.setUserName(getUserName());
		miicSafeguardMaterialAddImpl.setCreateDate(getCreateDate());
		miicSafeguardMaterialAddImpl.setModifiedDate(getModifiedDate());
		miicSafeguardMaterialAddImpl.setNameOfProducer(getNameOfProducer());
		miicSafeguardMaterialAddImpl.setAddressOfProducer(
			getAddressOfProducer());
		miicSafeguardMaterialAddImpl.setDescription(getDescription());
		miicSafeguardMaterialAddImpl.setTariffHeadingNum(getTariffHeadingNum());
		miicSafeguardMaterialAddImpl.setAmount(getAmount());
		miicSafeguardMaterialAddImpl.setQuantity(getQuantity());
		miicSafeguardMaterialAddImpl.setTechnologySpecification(
			getTechnologySpecification());
		miicSafeguardMaterialAddImpl.setPeriodOfImportationFrom(
			getPeriodOfImportationFrom());
		miicSafeguardMaterialAddImpl.setPeriodOfImportationTo(
			getPeriodOfImportationTo());
		miicSafeguardMaterialAddImpl.setCounter(getCounter());
		miicSafeguardMaterialAddImpl.setMiicApplicationId(
			getMiicApplicationId());

		miicSafeguardMaterialAddImpl.resetOriginalValues();

		return miicSafeguardMaterialAddImpl;
	}

	@Override
	public MiicSafeguardMaterialAdd cloneWithOriginalValues() {
		MiicSafeguardMaterialAddImpl miicSafeguardMaterialAddImpl =
			new MiicSafeguardMaterialAddImpl();

		miicSafeguardMaterialAddImpl.setMiicSafeguardMaterialAddId(
			this.<Long>getColumnOriginalValue("miicSafeguardMaterialAddId"));
		miicSafeguardMaterialAddImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		miicSafeguardMaterialAddImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		miicSafeguardMaterialAddImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		miicSafeguardMaterialAddImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		miicSafeguardMaterialAddImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		miicSafeguardMaterialAddImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		miicSafeguardMaterialAddImpl.setNameOfProducer(
			this.<String>getColumnOriginalValue("nameOfProducer"));
		miicSafeguardMaterialAddImpl.setAddressOfProducer(
			this.<String>getColumnOriginalValue("addressOfProducer "));
		miicSafeguardMaterialAddImpl.setDescription(
			this.<String>getColumnOriginalValue("description"));
		miicSafeguardMaterialAddImpl.setTariffHeadingNum(
			this.<String>getColumnOriginalValue("tariffHeadingNum"));
		miicSafeguardMaterialAddImpl.setAmount(
			this.<String>getColumnOriginalValue("amount"));
		miicSafeguardMaterialAddImpl.setQuantity(
			this.<String>getColumnOriginalValue("quantity"));
		miicSafeguardMaterialAddImpl.setTechnologySpecification(
			this.<String>getColumnOriginalValue("technologySpecification"));
		miicSafeguardMaterialAddImpl.setPeriodOfImportationFrom(
			this.<Date>getColumnOriginalValue("periodOfImportationFrom"));
		miicSafeguardMaterialAddImpl.setPeriodOfImportationTo(
			this.<Date>getColumnOriginalValue("periodOfImportationTo"));
		miicSafeguardMaterialAddImpl.setCounter(
			this.<String>getColumnOriginalValue("counter"));
		miicSafeguardMaterialAddImpl.setMiicApplicationId(
			this.<Long>getColumnOriginalValue("miicApplicationId"));

		return miicSafeguardMaterialAddImpl;
	}

	@Override
	public int compareTo(MiicSafeguardMaterialAdd miicSafeguardMaterialAdd) {
		long primaryKey = miicSafeguardMaterialAdd.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof MiicSafeguardMaterialAdd)) {
			return false;
		}

		MiicSafeguardMaterialAdd miicSafeguardMaterialAdd =
			(MiicSafeguardMaterialAdd)object;

		long primaryKey = miicSafeguardMaterialAdd.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<MiicSafeguardMaterialAdd> toCacheModel() {
		MiicSafeguardMaterialAddCacheModel miicSafeguardMaterialAddCacheModel =
			new MiicSafeguardMaterialAddCacheModel();

		miicSafeguardMaterialAddCacheModel.miicSafeguardMaterialAddId =
			getMiicSafeguardMaterialAddId();

		miicSafeguardMaterialAddCacheModel.groupId = getGroupId();

		miicSafeguardMaterialAddCacheModel.companyId = getCompanyId();

		miicSafeguardMaterialAddCacheModel.userId = getUserId();

		miicSafeguardMaterialAddCacheModel.userName = getUserName();

		String userName = miicSafeguardMaterialAddCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			miicSafeguardMaterialAddCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			miicSafeguardMaterialAddCacheModel.createDate =
				createDate.getTime();
		}
		else {
			miicSafeguardMaterialAddCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			miicSafeguardMaterialAddCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			miicSafeguardMaterialAddCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		miicSafeguardMaterialAddCacheModel.nameOfProducer = getNameOfProducer();

		String nameOfProducer =
			miicSafeguardMaterialAddCacheModel.nameOfProducer;

		if ((nameOfProducer != null) && (nameOfProducer.length() == 0)) {
			miicSafeguardMaterialAddCacheModel.nameOfProducer = null;
		}

		miicSafeguardMaterialAddCacheModel.addressOfProducer =
			getAddressOfProducer();

		String addressOfProducer =
			miicSafeguardMaterialAddCacheModel.addressOfProducer;

		if ((addressOfProducer != null) && (addressOfProducer.length() == 0)) {
			miicSafeguardMaterialAddCacheModel.addressOfProducer = null;
		}

		miicSafeguardMaterialAddCacheModel.description = getDescription();

		String description = miicSafeguardMaterialAddCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			miicSafeguardMaterialAddCacheModel.description = null;
		}

		miicSafeguardMaterialAddCacheModel.tariffHeadingNum =
			getTariffHeadingNum();

		String tariffHeadingNum =
			miicSafeguardMaterialAddCacheModel.tariffHeadingNum;

		if ((tariffHeadingNum != null) && (tariffHeadingNum.length() == 0)) {
			miicSafeguardMaterialAddCacheModel.tariffHeadingNum = null;
		}

		miicSafeguardMaterialAddCacheModel.amount = getAmount();

		String amount = miicSafeguardMaterialAddCacheModel.amount;

		if ((amount != null) && (amount.length() == 0)) {
			miicSafeguardMaterialAddCacheModel.amount = null;
		}

		miicSafeguardMaterialAddCacheModel.quantity = getQuantity();

		String quantity = miicSafeguardMaterialAddCacheModel.quantity;

		if ((quantity != null) && (quantity.length() == 0)) {
			miicSafeguardMaterialAddCacheModel.quantity = null;
		}

		miicSafeguardMaterialAddCacheModel.technologySpecification =
			getTechnologySpecification();

		String technologySpecification =
			miicSafeguardMaterialAddCacheModel.technologySpecification;

		if ((technologySpecification != null) &&
			(technologySpecification.length() == 0)) {

			miicSafeguardMaterialAddCacheModel.technologySpecification = null;
		}

		Date periodOfImportationFrom = getPeriodOfImportationFrom();

		if (periodOfImportationFrom != null) {
			miicSafeguardMaterialAddCacheModel.periodOfImportationFrom =
				periodOfImportationFrom.getTime();
		}
		else {
			miicSafeguardMaterialAddCacheModel.periodOfImportationFrom =
				Long.MIN_VALUE;
		}

		Date periodOfImportationTo = getPeriodOfImportationTo();

		if (periodOfImportationTo != null) {
			miicSafeguardMaterialAddCacheModel.periodOfImportationTo =
				periodOfImportationTo.getTime();
		}
		else {
			miicSafeguardMaterialAddCacheModel.periodOfImportationTo =
				Long.MIN_VALUE;
		}

		miicSafeguardMaterialAddCacheModel.counter = getCounter();

		String counter = miicSafeguardMaterialAddCacheModel.counter;

		if ((counter != null) && (counter.length() == 0)) {
			miicSafeguardMaterialAddCacheModel.counter = null;
		}

		miicSafeguardMaterialAddCacheModel.miicApplicationId =
			getMiicApplicationId();

		return miicSafeguardMaterialAddCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<MiicSafeguardMaterialAdd, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<MiicSafeguardMaterialAdd, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<MiicSafeguardMaterialAdd, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(MiicSafeguardMaterialAdd)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, MiicSafeguardMaterialAdd>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						MiicSafeguardMaterialAdd.class, ModelWrapper.class);

	}

	private long _miicSafeguardMaterialAddId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _nameOfProducer;
	private String _addressOfProducer;
	private String _description;
	private String _tariffHeadingNum;
	private String _amount;
	private String _quantity;
	private String _technologySpecification;
	private Date _periodOfImportationFrom;
	private Date _periodOfImportationTo;
	private String _counter;
	private long _miicApplicationId;

	public <T> T getColumnValue(String columnName) {
		Function<MiicSafeguardMaterialAdd, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((MiicSafeguardMaterialAdd)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"miicSafeguardMaterialAddId", _miicSafeguardMaterialAddId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("nameOfProducer", _nameOfProducer);
		_columnOriginalValues.put("addressOfProducer ", _addressOfProducer);
		_columnOriginalValues.put("description", _description);
		_columnOriginalValues.put("tariffHeadingNum", _tariffHeadingNum);
		_columnOriginalValues.put("amount", _amount);
		_columnOriginalValues.put("quantity", _quantity);
		_columnOriginalValues.put(
			"technologySpecification", _technologySpecification);
		_columnOriginalValues.put(
			"periodOfImportationFrom", _periodOfImportationFrom);
		_columnOriginalValues.put(
			"periodOfImportationTo", _periodOfImportationTo);
		_columnOriginalValues.put("counter", _counter);
		_columnOriginalValues.put("miicApplicationId", _miicApplicationId);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("miicSafeguardMaterialAddId", 1L);

		columnBitmasks.put("groupId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("nameOfProducer", 128L);

		columnBitmasks.put("addressOfProducer ", 256L);

		columnBitmasks.put("description", 512L);

		columnBitmasks.put("tariffHeadingNum", 1024L);

		columnBitmasks.put("amount", 2048L);

		columnBitmasks.put("quantity", 4096L);

		columnBitmasks.put("technologySpecification", 8192L);

		columnBitmasks.put("periodOfImportationFrom", 16384L);

		columnBitmasks.put("periodOfImportationTo", 32768L);

		columnBitmasks.put("counter", 65536L);

		columnBitmasks.put("miicApplicationId", 131072L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private MiicSafeguardMaterialAdd _escapedModel;

}